(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a1179 () (Array (_ BitVec 6) (_ BitVec 32)))
(declare-fun reset_3 () (_ BitVec 1))
(declare-fun full_fq_3 () (_ BitVec 1))
(declare-fun a741 () (Array (_ BitVec 6) (_ BitVec 32)))
(declare-fun a960 () (Array (_ BitVec 6) (_ BitVec 32)))
(assert (= BAV1 (= (_ bv0 1) (bvand (bvand (ite (= a1179 a960) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a960 (ite (= (_ bv1 1) full_fq_3) a741 (store a741 (_ bv0 6) (_ bv0 32)))) (_ bv1 1) (_ bv0 1)) (bvand reset_3 (bvnot (bvand (bvnot (ite (= (_ bv0 1) full_fq_3) (_ bv1 1) (_ bv0 1))) reset_3))))) (ite (= (_ bv1 32) (select a1179 (_ bv0 6))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV2 (= a1179 a960)))
(assert (= BAV3 (= a960 (ite (= (_ bv1 1) full_fq_3) a741 (store a741 (_ bv0 6) (_ bv0 32))))))
(assert (= BAV4 (= (_ bv1 1) full_fq_3)))
(assert (= BAV5 (= (_ bv0 1) full_fq_3)))
(assert (= BAV6 (= (_ bv1 32) (select a1179 (_ bv0 6)))))
(check-sat-assuming ((not (= (_ bv0 1) (bvand (bvand (ite (= a1179 a960) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a960 (ite (= (_ bv1 1) full_fq_3) a741 (store a741 (_ bv0 6) (_ bv0 32)))) (_ bv1 1) (_ bv0 1)) (bvand reset_3 (bvnot (bvand (bvnot (ite (= (_ bv0 1) full_fq_3) (_ bv1 1) (_ bv0 1))) reset_3))))) (ite (= (_ bv1 32) (select a1179 (_ bv0 6))) (_ bv1 1) (_ bv0 1)))))))
(get-model)