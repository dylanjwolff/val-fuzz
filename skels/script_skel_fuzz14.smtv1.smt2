(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v2 () (_ BitVec 13))
(declare-fun v1 () (_ BitVec 2))
(assert (= BAV1 (=> (not (and (= v2 ((_ zero_extend 12) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))) (= (_ bv1 1) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))) (ite (ite (= (_ bv0 13) (bvshl v2 (bvashr v2 v2))) (= (bvashr v2 v2) (bvsub (_ bv1 13) v2)) (= (_ bv1 10) ((_ sign_extend 9) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))) (=> (= (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvult (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (_ bv1 1) (_ bv0 1))) (= (_ bv0 4) ((_ sign_extend 3) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))) (ite (= (_ bv0 13) (bvshl v2 (bvashr v2 v2))) (= (bvashr v2 v2) (bvsub (_ bv1 13) v2)) (= (_ bv1 10) ((_ sign_extend 9) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))))))))
(assert (= BAV2 (and (= v2 ((_ zero_extend 12) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))) (= (_ bv1 1) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV3 (= v2 ((_ zero_extend 12) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV4 (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV5 (= (_ bv1 1) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV6 (= (_ bv0 13) (bvshl v2 (bvashr v2 v2)))))
(assert (= BAV7 (= (bvashr v2 v2) (bvsub (_ bv1 13) v2))))
(assert (= BAV8 (= (_ bv1 10) ((_ sign_extend 9) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV9 (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV10 (=> (= (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvult (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (_ bv1 1) (_ bv0 1))) (= (_ bv0 4) ((_ sign_extend 3) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV11 (= (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvult (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV12 (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV13 (= (_ bv0 4) ((_ sign_extend 3) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV14 (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV15 (= (_ bv0 13) (bvshl v2 (bvashr v2 v2)))))
(assert (= BAV16 (= (bvashr v2 v2) (bvsub (_ bv1 13) v2))))
(assert (= BAV17 (= (_ bv1 10) ((_ sign_extend 9) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV18 (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1)))))
(check-sat-assuming ((=> (not (and (= v2 ((_ zero_extend 12) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))) (= (_ bv1 1) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))) (ite (ite (= (_ bv0 13) (bvshl v2 (bvashr v2 v2))) (= (bvashr v2 v2) (bvsub (_ bv1 13) v2)) (= (_ bv1 10) ((_ sign_extend 9) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))) (=> (= (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvult (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (_ bv1 1) (_ bv0 1))) (= (_ bv0 4) ((_ sign_extend 3) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1)))))) (ite (= (_ bv0 13) (bvshl v2 (bvashr v2 v2))) (= (bvashr v2 v2) (bvsub (_ bv1 13) v2)) (= (_ bv1 10) ((_ sign_extend 9) (ite (= (_ bv1 1) (ite (bvsge (_ bv0 2) v1) (_ bv1 1) (_ bv0 1))) (bvneg (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))) (ite (bvslt (_ bv0 13) v2) (_ bv1 1) (_ bv0 1))))))))))
(get-model)