(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(get-model)
(declare-const GEN12 Int)
(get-model)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Real)
(declare-const GEN8 Real)
(declare-const GEN7 Real)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Real)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
(declare-const x Real)
(declare-const y Real)
(assert (> (+ (^ x GEN1) (^ y GEN2)) GEN3))
(assert (= BAV1 (> (+ (^ x GEN1) (^ y GEN2)) GEN3)))
(assert (= BAV2 (= y (root-obj (- (^ x 2) 2) 1))))
(assert (= BAV3 (> (+ (^ x 2.0) (^ y 2.0)) 2.0)))
(assert (= BAV4 (= y (root-obj (- (^ x 2) 2) 1))))
(check-sat)
(get-model)
(reset)
(declare-const y Real)
(assert (= y (root-obj (- (^ x 2) 2) 1)))
(check-sat)
(reset)
(set-option :auto-config true)
(declare-const x Real)
(declare-const y Real)
(assert (> (+ (^ x 2.0) (^ y 2.0)) 2.0))
(check-sat)
(get-model)
(reset)
(set-option :auto-config true)
(declare-const y Real)
(assert (= y (root-obj (- (^ x 2) 2) 1)))
(check-sat)
(get-model)