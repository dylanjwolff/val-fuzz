(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(get-model)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const GEN11 Int)
(declare-const GEN12 Int)
(declare-const GEN13 Int)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-fun b () Int)
(declare-fun n () Int)
(declare-fun f (Int) Bool)
(declare-fun g (Int) Bool)
(assert (<= GEN1 n))
(push 1)
(assert (or (g (- GEN2)) (= b GEN3)))
(assert (or (= (- n b) GEN4) (not (or (= (- n b) GEN5) (f (- n GEN6))))))
(assert (= BAV14 (<= GEN1 n)))
(assert (= BAV15 (or (g (- GEN2)) (= b GEN3))))
(assert (= BAV16 (= b GEN3)))
(assert (= BAV17 (or (= (- n b) GEN4) (not (or (= (- n b) GEN5) (f (- n GEN6)))))))
(assert (= BAV18 (= (- n b) GEN4)))
(assert (= BAV19 (or (= (- n b) GEN5) (f (- n GEN6)))))
(assert (= BAV20 (= (- n b) GEN5)))
(assert (= BAV21 (or (g (- n GEN7)) (= n b))))
(assert (= BAV22 (= n b)))
(assert (= BAV23 (or (not (f n)) (not (= n b)))))
(assert (= BAV24 (= n b)))
(assert (= BAV25 (or (not (g (- n GEN9))) (not (= (- n b) GEN10)))))
(assert (= BAV26 (= (- n b) GEN10)))
(assert (= BAV27 (or (not (g (- n GEN11))) (or (= (- n b) GEN12) (f (- n GEN13))))))
(assert (= BAV28 (or (= (- n b) GEN12) (f (- n GEN13)))))
(assert (= BAV29 (= (- n b) GEN12)))
(assert (= BAV30 (or (f n) (and (not (f n)) (f n)))))
(assert (= BAV31 (and (not (f n)) (f n))))
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (or (g (- n GEN7)) (= n b)))
(assert (or (not (f n)) (not (= n b))))
(assert (not (f (- n GEN8))))
(assert (or (not (g (- n GEN9))) (not (= (- n b) GEN10))))
(assert (or (not (g (- n GEN11))) (or (= (- n b) GEN12) (f (- n GEN13)))))
(assert (or (f n) (and (not (f n)) (f n))))
(check-sat)
(pop 1)