(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN1 Int)
(declare-const A (Array (_ BitVec 32) (_ BitVec 32)))
(declare-const B (Array (_ BitVec 32) (_ BitVec 32)))
(declare-const sel Bool)
(declare-const idx (_ BitVec 32))
(declare-const val (_ BitVec 32))
(assert (=> sel (bvult idx (_ bv15 32))))
(assert (=> (= A (store B idx val)) sel))
(assert (=> (= A (store B idx val)) (not (= idx val))))
(assert (not (= A B)))
(assert (=> (not (= A (store B idx val))) (not sel)))
(assert (=> (not (= A (store B idx val))) (bvugt idx val)))
(assert (= BAV1 (=> sel (bvult idx (_ bv15 32)))))
(assert (= BAV2 (=> (= A (store B idx val)) sel)))
(assert (= BAV3 (= A (store B idx val))))
(assert (= BAV4 (=> (= A (store B idx val)) (not (= idx val)))))
(assert (= BAV5 (= A (store B idx val))))
(assert (= BAV6 (= idx val)))
(assert (= BAV7 (= A B)))
(assert (= BAV8 (=> (not (= A (store B idx val))) (not sel))))
(assert (= BAV9 (= A (store B idx val))))
(assert (= BAV10 (=> (not (= A (store B idx val))) (bvugt idx val))))
(assert (= BAV11 (= A (store B idx val))))
(check-sat)
(get-model)