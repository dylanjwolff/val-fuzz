(set-logic ALL)
(declare-const BAV1 Bool)
(get-model)
(get-model)
(declare-const BAV2 Bool)
(get-model)
(declare-const BAV3 Bool)
(get-model)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(assert (or (not (>= (+ (* GEN1 x0) (* (- GEN2) x2) (* GEN3 x2)) (- GEN4))) (not (< (+ (* GEN5 x1) (* (- GEN6) x0) (* GEN7 x1) (* GEN8 x2)) GEN9))))
(assert (or (not (<= (+ (* GEN10 x0) (* (- GEN11) x2) (* GEN12 x0)) (- GEN13))) (not (> (+ (* (- GEN14) x0) (* GEN15 x2) (* (- GEN16) x1)) GEN17)) (not (> (+ (* GEN18 x2) (* GEN19 x2) (* (- GEN20) x1) (* (- GEN21) x0)) (- GEN22)))))
(assert (or (<= (+ (* GEN23 x1) (* GEN24 x2) (* (- GEN25) x2)) (- GEN26)) (= (+ (* GEN27 x0) (* (- GEN28) x2) (* GEN29 x2) (* GEN30 x0)) GEN31)))
(assert (or (= (+ (* GEN32 x1) (* (- GEN33) x1) (* (- GEN34) x2) (* GEN35 x1)) (- GEN36)) (not (> (+ (* (- GEN37) x0) (* (- GEN38) x0) (* GEN39 x1)) (- GEN40)))))
(assert (= BAV1 (or (not (>= (+ (* GEN1 x0) (* (- GEN2) x2) (* GEN3 x2)) (- GEN4))) (not (< (+ (* GEN5 x1) (* (- GEN6) x0) (* GEN7 x1) (* GEN8 x2)) GEN9)))))
(assert (= BAV2 (>= (+ (* GEN1 x0) (* (- GEN2) x2) (* GEN3 x2)) (- GEN4))))
(assert (= BAV3 (< (+ (* GEN5 x1) (* (- GEN6) x0) (* GEN7 x1) (* GEN8 x2)) GEN9)))
(assert (= BAV4 (or (not (<= (+ (* GEN10 x0) (* (- GEN11) x2) (* GEN12 x0)) (- GEN13))) (not (> (+ (* (- GEN14) x0) (* GEN15 x2) (* (- GEN16) x1)) GEN17)) (not (> (+ (* GEN18 x2) (* GEN19 x2) (* (- GEN20) x1) (* (- GEN21) x0)) (- GEN22))))))
(assert (= BAV5 (<= (+ (* GEN10 x0) (* (- GEN11) x2) (* GEN12 x0)) (- GEN13))))
(assert (= BAV6 (> (+ (* (- GEN14) x0) (* GEN15 x2) (* (- GEN16) x1)) GEN17)))
(assert (= BAV7 (> (+ (* GEN18 x2) (* GEN19 x2) (* (- GEN20) x1) (* (- GEN21) x0)) (- GEN22))))
(assert (= BAV8 (or (<= (+ (* GEN23 x1) (* GEN24 x2) (* (- GEN25) x2)) (- GEN26)) (= (+ (* GEN27 x0) (* (- GEN28) x2) (* GEN29 x2) (* GEN30 x0)) GEN31))))
(assert (= BAV9 (<= (+ (* GEN23 x1) (* GEN24 x2) (* (- GEN25) x2)) (- GEN26))))
(assert (= BAV10 (= (+ (* GEN27 x0) (* (- GEN28) x2) (* GEN29 x2) (* GEN30 x0)) GEN31)))
(assert (= BAV11 (or (= (+ (* GEN32 x1) (* (- GEN33) x1) (* (- GEN34) x2) (* GEN35 x1)) (- GEN36)) (not (> (+ (* (- GEN37) x0) (* (- GEN38) x0) (* GEN39 x1)) (- GEN40))))))
(assert (= BAV12 (= (+ (* GEN32 x1) (* (- GEN33) x1) (* (- GEN34) x2) (* GEN35 x1)) (- GEN36))))
(assert (= BAV13 (> (+ (* (- GEN37) x0) (* (- GEN38) x0) (* GEN39 x1)) (- GEN40))))
(assert (= BAV14 (or (not (= (+ (* GEN41 x1) (* GEN42 x2) (* (- GEN43) x1) (* (- GEN44) x2)) (- GEN45))) (not (< (+ (* GEN46 x0) (* (- GEN47) x0) (* GEN48 x2)) (- GEN49))))))
(assert (= BAV15 (= (+ (* GEN41 x1) (* GEN42 x2) (* (- GEN43) x1) (* (- GEN44) x2)) (- GEN45))))
(assert (= BAV16 (< (+ (* GEN46 x0) (* (- GEN47) x0) (* GEN48 x2)) (- GEN49))))
(assert (= BAV17 (or (= (+ (* (- GEN50) x0) (* GEN51 x0) (* (- GEN52) x1) (* (- GEN53) x0)) (- GEN54)) (<= (+ (* (- GEN55) x1) (* GEN56 x0) (* GEN57 x1)) (- GEN58)) (not (= (+ (* GEN59 x2) (* 4 x0) (* 12 x1) (* (- 1) x2)) (- 40))))))
(assert (= BAV18 (= (+ (* (- GEN50) x0) (* GEN51 x0) (* (- GEN52) x1) (* (- GEN53) x0)) (- GEN54))))
(assert (= BAV19 (<= (+ (* (- GEN55) x1) (* GEN56 x0) (* GEN57 x1)) (- GEN58))))
(assert (= BAV20 (= (+ (* GEN59 x2) (* 4 x0) (* 12 x1) (* (- 1) x2)) (- 40))))
(assert (= BAV21 (<= (+ (* 24 x2) (* 9 x2) (* 38 x0) (* 9 x2)) (- 12))))
(assert (= BAV22 (> (+ (* (- 33) x1) (* 1 x0) (* (- 27) x1) (* (- 39) x1)) 30)))
(assert (= BAV23 (>= (+ (* (- 36) x1) (* 34 x0) (* 39 x0) (* 2 x2)) 16)))
(check-sat)
(get-model)
(push 1)
(assert (or (not (= (+ (* GEN41 x1) (* GEN42 x2) (* (- GEN43) x1) (* (- GEN44) x2)) (- GEN45))) (not (< (+ (* GEN46 x0) (* (- GEN47) x0) (* GEN48 x2)) (- GEN49)))))
(assert (or (= (+ (* (- GEN50) x0) (* GEN51 x0) (* (- GEN52) x1) (* (- GEN53) x0)) (- GEN54)) (<= (+ (* (- GEN55) x1) (* GEN56 x0) (* GEN57 x1)) (- GEN58)) (not (= (+ (* GEN59 x2) (* 4 x0) (* 12 x1) (* (- 1) x2)) (- 40)))))
(check-sat)
(push 1)
(assert (not (<= (+ (* 24 x2) (* 9 x2) (* 38 x0) (* 9 x2)) (- 12))))
(check-sat)
(push 1)
(check-sat)
(pop 1)
(check-sat)
(push 1)
(assert (not (> (+ (* (- 33) x1) (* 1 x0) (* (- 27) x1) (* (- 39) x1)) 30)))
(check-sat)
(pop 1)
(assert (not (>= (+ (* (- 36) x1) (* 34 x0) (* 39 x0) (* 2 x2)) 16)))
(check-sat)