(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-option :yices-ef-max-iters 2049)
(declare-fun y () (_ BitVec 12))
(assert (forall ((x0 (_ BitVec 12))) (or (not (= ((_ extract 1 0) y) ((_ extract 1 0) (bvadd x0 x0)))) (not (= ((_ extract 2 1) y) ((_ extract 2 1) (bvadd x0 x0)))) (not (= ((_ extract 3 2) y) ((_ extract 3 2) (bvadd x0 x0)))) (not (= ((_ extract 4 3) y) ((_ extract 4 3) (bvadd x0 x0)))) (not (= ((_ extract 5 4) y) ((_ extract 5 4) (bvadd x0 x0)))) (not (= ((_ extract 6 5) y) ((_ extract 6 5) (bvadd x0 x0)))) (not (= ((_ extract 7 6) y) ((_ extract 7 6) (bvadd x0 x0)))) (not (= ((_ extract 8 7) y) ((_ extract 8 7) (bvadd x0 x0)))) (not (= ((_ extract 9 8) y) ((_ extract 9 8) (bvadd x0 x0)))) (not (= ((_ extract 10 9) y) ((_ extract 10 9) (bvadd x0 x0)))))))
(assert (= BAV1 (forall ((x0 (_ BitVec 12))) (or (not (= ((_ extract 1 0) y) ((_ extract 1 0) (bvadd x0 x0)))) (not (= ((_ extract 2 1) y) ((_ extract 2 1) (bvadd x0 x0)))) (not (= ((_ extract 3 2) y) ((_ extract 3 2) (bvadd x0 x0)))) (not (= ((_ extract 4 3) y) ((_ extract 4 3) (bvadd x0 x0)))) (not (= ((_ extract 5 4) y) ((_ extract 5 4) (bvadd x0 x0)))) (not (= ((_ extract 6 5) y) ((_ extract 6 5) (bvadd x0 x0)))) (not (= ((_ extract 7 6) y) ((_ extract 7 6) (bvadd x0 x0)))) (not (= ((_ extract 8 7) y) ((_ extract 8 7) (bvadd x0 x0)))) (not (= ((_ extract 9 8) y) ((_ extract 9 8) (bvadd x0 x0)))) (not (= ((_ extract 10 9) y) ((_ extract 10 9) (bvadd x0 x0))))))))
(assert (= BAV2 (forall ((x0 (_ BitVec 12))) (= ((_ extract 1 0) y) ((_ extract 1 0) (bvadd x0 x0))))))
(assert (= BAV3 (forall ((x0 (_ BitVec 12))) (= ((_ extract 2 1) y) ((_ extract 2 1) (bvadd x0 x0))))))
(assert (= BAV4 (forall ((x0 (_ BitVec 12))) (= ((_ extract 3 2) y) ((_ extract 3 2) (bvadd x0 x0))))))
(assert (= BAV5 (forall ((x0 (_ BitVec 12))) (= ((_ extract 4 3) y) ((_ extract 4 3) (bvadd x0 x0))))))
(assert (= BAV6 (forall ((x0 (_ BitVec 12))) (= ((_ extract 5 4) y) ((_ extract 5 4) (bvadd x0 x0))))))
(assert (= BAV7 (forall ((x0 (_ BitVec 12))) (= ((_ extract 6 5) y) ((_ extract 6 5) (bvadd x0 x0))))))
(assert (= BAV8 (forall ((x0 (_ BitVec 12))) (= ((_ extract 7 6) y) ((_ extract 7 6) (bvadd x0 x0))))))
(assert (= BAV9 (forall ((x0 (_ BitVec 12))) (= ((_ extract 8 7) y) ((_ extract 8 7) (bvadd x0 x0))))))
(assert (= BAV10 (forall ((x0 (_ BitVec 12))) (= ((_ extract 9 8) y) ((_ extract 9 8) (bvadd x0 x0))))))
(assert (= BAV11 (forall ((x0 (_ BitVec 12))) (= ((_ extract 10 9) y) ((_ extract 10 9) (bvadd x0 x0))))))
(check-sat)
(get-model)