(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-sort $$unsorted 0)
(declare-fun in ($$unsorted $$unsorted) Bool)
(declare-fun powerset ($$unsorted) $$unsorted)
(declare-fun subset ($$unsorted $$unsorted) Bool)
(declare-fun empty ($$unsorted) Bool)
(declare-fun element ($$unsorted $$unsorted) Bool)
(declare-fun empty_set () $$unsorted)
(set-info :filename "SEU169+1")
(assert (forall ((A $$unsorted)(B $$unsorted)) (or (not (in A B)) (not (in B A)))))
(assert (forall ((A $$unsorted)(B $$unsorted)) (= (= B (powerset A)) (forall ((C $$unsorted)) (= (in C B) (subset C A))))))
(assert (and (forall ((A $$unsorted)(B $$unsorted)) (or (empty A) (= (element B A) (in B A)))) (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= (element B A) (empty B))))))
(assert (forall ((A $$unsorted)(B $$unsorted)) (= (subset A B) (forall ((C $$unsorted)) (or (not (in C A)) (in C B))))))
(assert (forall ((A $$unsorted)) (not (forall ((B $$unsorted)) (not (element B A))))))
(assert (forall ((A $$unsorted)) (not (empty (powerset A)))))
(assert (empty empty_set))
(assert (not (forall ((A $$unsorted)(B $$unsorted)(BOUND_VARIABLE_423 $$unsorted)) (or (not (element B (powerset A))) (not (in BOUND_VARIABLE_423 B)) (in BOUND_VARIABLE_423 A)))))
(assert (forall ((A $$unsorted)) (or (empty A) (not (forall ((B $$unsorted)) (or (not (element B (powerset A))) (empty B)))))))
(assert (not (forall ((A $$unsorted)) (not (empty A)))))
(assert (not (forall ((A $$unsorted)) (empty A))))
(assert (forall ((A $$unsorted)) (subset A A)))
(assert (forall ((A $$unsorted)) (or (not (empty A)) (= empty_set A))))
(assert (forall ((A $$unsorted)(B $$unsorted)) (or (not (in A B)) (not (empty B)))))
(assert (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= A B) (not (empty B)))))
(assert true)
(assert (and (forall ((A $$unsorted)(B $$unsorted)) (or (empty A) (= (element B A) (in B A)))) (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= (element B A) (empty B))))))
(assert (= BAV1 (forall ((A $$unsorted)(B $$unsorted)) (or (not (in A B)) (not (in B A))))))
(assert (= BAV2 (forall ((A $$unsorted)(B $$unsorted)) (= (= B (powerset A)) (forall ((C $$unsorted)) (= (in C B) (subset C A)))))))
(assert (= BAV3 (forall ((A $$unsorted)(B $$unsorted)) (= B (powerset A)))))
(assert (= BAV4 (forall ((A $$unsorted)(B $$unsorted)(C $$unsorted)) (= (in C B) (subset C A)))))
(assert (= BAV5 (and (forall ((A $$unsorted)(B $$unsorted)) (or (empty A) (= (element B A) (in B A)))) (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= (element B A) (empty B)))))))
(assert (= BAV6 (forall ((A $$unsorted)(B $$unsorted)) (or (empty A) (= (element B A) (in B A))))))
(assert (= BAV7 (forall ((A $$unsorted)(B $$unsorted)) (= (element B A) (in B A)))))
(assert (= BAV8 (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= (element B A) (empty B))))))
(assert (= BAV9 (forall ((A $$unsorted)(B $$unsorted)) (= (element B A) (empty B)))))
(assert (= BAV10 (forall ((A $$unsorted)(B $$unsorted)) (= (subset A B) (forall ((C $$unsorted)) (or (not (in C A)) (in C B)))))))
(assert (= BAV11 (forall ((A $$unsorted)(B $$unsorted)(C $$unsorted)) (or (not (in C A)) (in C B)))))
(assert (= BAV12 (forall ((A $$unsorted)(B $$unsorted)(BOUND_VARIABLE_423 $$unsorted)) (or (not (element B (powerset A))) (not (in BOUND_VARIABLE_423 B)) (in BOUND_VARIABLE_423 A)))))
(assert (= BAV13 (forall ((A $$unsorted)) (or (empty A) (not (forall ((B $$unsorted)) (or (not (element B (powerset A))) (empty B))))))))
(assert (= BAV14 (forall ((A $$unsorted)(B $$unsorted)) (or (not (element B (powerset A))) (empty B)))))
(assert (= BAV15 (forall ((A $$unsorted)) (or (not (empty A)) (= empty_set A)))))
(assert (= BAV16 (forall ((A $$unsorted)) (= empty_set A))))
(assert (= BAV17 (forall ((A $$unsorted)(B $$unsorted)) (or (not (in A B)) (not (empty B))))))
(assert (= BAV18 (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= A B) (not (empty B))))))
(assert (= BAV19 (forall ((A $$unsorted)(B $$unsorted)) (= A B))))
(assert (= BAV20 (and (forall ((A $$unsorted)(B $$unsorted)) (or (empty A) (= (element B A) (in B A)))) (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= (element B A) (empty B)))))))
(assert (= BAV21 (forall ((A $$unsorted)(B $$unsorted)) (or (empty A) (= (element B A) (in B A))))))
(assert (= BAV22 (forall ((A $$unsorted)(B $$unsorted)) (= (element B A) (in B A)))))
(assert (= BAV23 (forall ((A $$unsorted)(B $$unsorted)) (or (not (empty A)) (= (element B A) (empty B))))))
(assert (= BAV24 (forall ((A $$unsorted)(B $$unsorted)) (= (element B A) (empty B)))))
(check-sat)
(get-model)