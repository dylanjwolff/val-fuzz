(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-option :auto-config true)
(set-option :produce-models true)
(define-sort A () (Array Int Int Int))
(define-fun bag-union ((x A) (y A)) A
  ((_ map (+ (Int Int) Int)) x y))
(declare-const s1 A)
(declare-const s2 A)
(declare-const s3 A)
(assert (= s3 (bag-union s1 s2)))
(assert (= (select s1 GEN1 GEN2) GEN3))
(assert (= (select s2 GEN4 GEN5) GEN6))
(assert (= (select s2 GEN7 GEN8) GEN9))
(assert (= BAV1 (= s3 (bag-union s1 s2))))
(assert (= BAV2 (= (select s1 GEN1 GEN2) GEN3)))
(assert (= BAV3 (= (select s2 GEN4 GEN5) GEN6)))
(assert (= BAV4 (= (select s2 GEN7 GEN8) GEN9)))
(check-sat)
(get-model)