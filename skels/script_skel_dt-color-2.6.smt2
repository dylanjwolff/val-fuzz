(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-datatype Color ( ( red ) ( green ) ( blue ) ))
(declare-fun a () Color)
(declare-fun b () Color)
(declare-fun c () Color)
(declare-fun d () Color)
(assert (or (distinct a b c d) (< (match a ((red GEN1) (green GEN2) (blue GEN3))) GEN4) (< (match b ((red GEN5) (x GEN6))) GEN7)))
(assert (= BAV1 (or (distinct a b c d) (< (match a ((red GEN1) (green GEN2) (blue GEN3))) GEN4) (< (match b ((red GEN5) (x GEN6))) GEN7))))
(assert (= BAV2 (distinct a b c d)))
(assert (= BAV3 (< (match a ((red GEN1) (green GEN2) (blue GEN3))) GEN4)))
(assert (= BAV4 (< (match b ((red GEN5) (x GEN6))) GEN7)))
(check-sat)
(get-model)