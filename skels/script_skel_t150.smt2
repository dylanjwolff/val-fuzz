(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(get-model)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(define-sort A () (Array Int Int Int))
(declare-fun foo (Int Int) Int)
(assert (forall ((x Int)(y Int)) (= (foo x y) (+ x y))))
(define-fun bag-union ((x A) (y A)) A
  ((_ map foo) x y))
(declare-const s1 A)
(declare-const s2 A)
(declare-const s3 A)
(assert (= s3 (bag-union s1 s2)))
(assert (= (select s1 GEN1 GEN2) GEN3))
(assert (= (select s2 GEN4 GEN5) GEN6))
(assert (= (select s3 GEN7 GEN8) GEN9))
(assert (= BAV1 (forall ((x Int)(y Int)) (= (foo x y) (+ x y)))))
(assert (= BAV2 (= s3 (bag-union s1 s2))))
(assert (= BAV3 (= (select s1 GEN1 GEN2) GEN3)))
(assert (= BAV4 (= (select s2 GEN4 GEN5) GEN6)))
(assert (= BAV5 (= (select s3 GEN7 GEN8) GEN9)))
(assert (= BAV6 (forall ((x Int)(y Int)) (= (foo x y) (+ x y)))))
(assert (= BAV7 (= s3 (bag-union s1 s2))))
(assert (= BAV8 (= (select s1 0 0) 5)))
(assert (= BAV9 (= (select s2 0 0) 3)))
(assert (= BAV10 (= (select s3 0 0) 7)))
(check-sat)
(get-model)
(reset)
(set-option :auto-config true)
(define-sort A () (Array Int Int Int))
(declare-fun foo (Int Int) Int)
(assert (forall ((x Int)(y Int)) (= (foo x y) (+ x y))))
(define-fun bag-union ((x A) (y A)) A
  ((_ map foo) x y))
(declare-const s1 A)
(declare-const s2 A)
(declare-const s3 A)
(assert (= s3 (bag-union s1 s2)))
(assert (= (select s1 0 0) 5))
(assert (= (select s2 0 0) 3))
(assert (= (select s3 0 0) 7))
(check-sat)