(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun r () Real)
(declare-fun a () Real)
(declare-fun b () Real)
(assert (and (< (- (- (- (+ (* GEN1 (* (* a a) r)) (* GEN2 (* b b))) (* GEN3 (* a r))) (* a a)) (* b b)) GEN4) (> (+ (- (- (+ (- (+ (* GEN5 (* (* a a) r)) (* GEN6 (* (* b b) r))) (* GEN7 (* a r))) r) (* GEN8 (* a a))) (* GEN9 (* b b))) (* GEN10 a)) GEN11) (>= (- (* GEN12 a) GEN13) GEN14) (> b GEN15) (> r GEN16) (< (- r GEN17) GEN18)))
(eliminate-quantifiers (exists r))
(exit)
(assert (= BAV1 (and (< (- (- (- (+ (* GEN1 (* (* a a) r)) (* GEN2 (* b b))) (* GEN3 (* a r))) (* a a)) (* b b)) GEN4) (> (+ (- (- (+ (- (+ (* GEN5 (* (* a a) r)) (* GEN6 (* (* b b) r))) (* GEN7 (* a r))) r) (* GEN8 (* a a))) (* GEN9 (* b b))) (* GEN10 a)) GEN11) (>= (- (* GEN12 a) GEN13) GEN14) (> b GEN15) (> r GEN16) (< (- r GEN17) GEN18))))
(assert (= BAV2 (< (- (- (- (+ (* GEN1 (* (* a a) r)) (* GEN2 (* b b))) (* GEN3 (* a r))) (* a a)) (* b b)) GEN4)))
(assert (= BAV3 (> (+ (- (- (+ (- (+ (* GEN5 (* (* a a) r)) (* GEN6 (* (* b b) r))) (* GEN7 (* a r))) r) (* GEN8 (* a a))) (* GEN9 (* b b))) (* GEN10 a)) GEN11)))
(assert (= BAV4 (>= (- (* GEN12 a) GEN13) GEN14)))
(assert (= BAV5 (> b GEN15)))
(assert (= BAV6 (> r GEN16)))
(assert (= BAV7 (< (- r GEN17) GEN18)))