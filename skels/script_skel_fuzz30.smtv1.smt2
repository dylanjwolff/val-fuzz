(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () (_ BitVec 4))
(declare-fun v1 () (_ BitVec 4))
(declare-fun v2 () (_ BitVec 4))
(declare-fun v3 () (_ BitVec 4))
(assert (= BAV1 (and (or (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (not (bvugt (bvand (bvmul v2 v1) v1) (bvand (bvsub v0 v1) v1)))) (or (not (bvsge (bvneg (bvmul v2 v1)) v3)) (not (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1))) (not (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (or (not (bvugt (bvand (bvmul v2 v1) v1) (bvand (bvsub v0 v1) v1))) (not (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1))) (not (bvugt (bvsub v0 v1) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))))) (or (not (bvult v3 v0)) (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1)) (bvsle ((_ zero_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))) (_ bv4 4))) (or (not (bvule (bvand (bvmul v2 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1))))) (= (bvnand (_ bv4 4) v0) (_ bv9 4)) (not (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))))) (or (bvule (bvand (bvmul v2 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1)))) (not (bvuge (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)) (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0))) (bvsge (_ bv9 4) v1)) (or (bvult (bvnand (_ bv4 4) v0) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvuge (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)) (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0))) (or (not (bvsgt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ sign_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))))) (bvslt (bvand (bvmul v2 v1) v1) (bvmul v2 v1)) (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1))) (or (not (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge (bvand (bvsub v0 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct ((_ sign_extend 3) (ite (bvslt ((_ sign_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) v3) (_ bv1 1) (_ bv0 1))) (bvneg (bvmul v2 v1)))) (not (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1))) (not (distinct (_ bv9 4) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))))) (or (bvsle ((_ zero_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))) (_ bv4 4)) (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvneg (bvmul v2 v1)) (bvmul v2 v1)))) (or (bvslt (bvand (bvmul v2 v1) v1) (bvmul v2 v1)) (not (bvult (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) v1)) (bvsge (_ bv9 4) v1)) (or (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1)) (not (bvsge (_ bv9 4) v1)) (bvsge v3 (bvmul v2 v1))) (or (not (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (not (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvsub v0 v1)))))))
(assert (= BAV2 (or (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (not (bvugt (bvand (bvmul v2 v1) v1) (bvand (bvsub v0 v1) v1))))))
(assert (= BAV3 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV4 (or (not (bvsge (bvneg (bvmul v2 v1)) v3)) (not (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1))) (not (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV5 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV6 (or (not (bvugt (bvand (bvmul v2 v1) v1) (bvand (bvsub v0 v1) v1))) (not (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1))) (not (bvugt (bvsub v0 v1) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)))))))
(assert (= BAV7 (or (not (bvult v3 v0)) (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1)) (bvsle ((_ zero_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))) (_ bv4 4)))))
(assert (= BAV8 (distinct (_ bv4 4) (bvnand (_ bv4 4) v0))))
(assert (= BAV9 (or (not (bvule (bvand (bvmul v2 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1))))) (= (bvnand (_ bv4 4) v0) (_ bv9 4)) (not (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)))))))
(assert (= BAV10 (= (bvnand (_ bv4 4) v0) (_ bv9 4))))
(assert (= BAV11 (or (bvule (bvand (bvmul v2 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1)))) (not (bvuge (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)) (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0))) (bvsge (_ bv9 4) v1))))
(assert (= BAV12 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV13 (or (bvult (bvnand (_ bv4 4) v0) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvuge (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)) (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0)))))
(assert (= BAV14 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV15 (or (not (bvsgt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ sign_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))))) (bvslt (bvand (bvmul v2 v1) v1) (bvmul v2 v1)) (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1)))))
(assert (= BAV16 (distinct (_ bv4 4) (bvnand (_ bv4 4) v0))))
(assert (= BAV17 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV18 (or (not (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge (bvand (bvsub v0 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV19 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV20 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV21 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV22 (or (not (distinct ((_ sign_extend 3) (ite (bvslt ((_ sign_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) v3) (_ bv1 1) (_ bv0 1))) (bvneg (bvmul v2 v1)))) (not (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1))) (not (distinct (_ bv9 4) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)))))))
(assert (= BAV23 (distinct ((_ sign_extend 3) (ite (bvslt ((_ sign_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) v3) (_ bv1 1) (_ bv0 1))) (bvneg (bvmul v2 v1)))))
(assert (= BAV24 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV25 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV26 (distinct (_ bv9 4) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)))))
(assert (= BAV27 (or (bvsle ((_ zero_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))) (_ bv4 4)) (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvneg (bvmul v2 v1)) (bvmul v2 v1))))))
(assert (= BAV28 (distinct (_ bv4 4) (bvnand (_ bv4 4) v0))))
(assert (= BAV29 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV30 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV31 (distinct (bvneg (bvmul v2 v1)) (bvmul v2 v1))))
(assert (= BAV32 (or (bvslt (bvand (bvmul v2 v1) v1) (bvmul v2 v1)) (not (bvult (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) v1)) (bvsge (_ bv9 4) v1))))
(assert (= BAV33 (or (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1)) (not (bvsge (_ bv9 4) v1)) (bvsge v3 (bvmul v2 v1)))))
(assert (= BAV34 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV35 (or (not (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (not (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvsub v0 v1))))))
(assert (= BAV36 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(assert (= BAV37 (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1)))))))
(check-sat-assuming ((and (or (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (not (bvugt (bvand (bvmul v2 v1) v1) (bvand (bvsub v0 v1) v1)))) (or (not (bvsge (bvneg (bvmul v2 v1)) v3)) (not (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1))) (not (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (or (not (bvugt (bvand (bvmul v2 v1) v1) (bvand (bvsub v0 v1) v1))) (not (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1))) (not (bvugt (bvsub v0 v1) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))))) (or (not (bvult v3 v0)) (bvuge (bvand (bvmul v2 v1) v1) (bvsub v0 v1)) (bvsle ((_ zero_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))) (_ bv4 4))) (or (not (bvule (bvand (bvmul v2 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1))))) (= (bvnand (_ bv4 4) v0) (_ bv9 4)) (not (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))))) (or (bvule (bvand (bvmul v2 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1)))) (not (bvuge (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)) (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0))) (bvsge (_ bv9 4) v1)) (or (bvult (bvnand (_ bv4 4) v0) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (bvuge (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4)) (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0))) (or (not (bvsgt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ sign_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))))) (bvslt (bvand (bvmul v2 v1) v1) (bvmul v2 v1)) (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1))) (or (not (bvslt (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) ((_ zero_extend 3) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge (bvand (bvsub v0 v1) v1) ((_ sign_extend 3) (ite (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvmul v2 v1)) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct ((_ sign_extend 3) (ite (bvslt ((_ sign_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) v3) (_ bv1 1) (_ bv0 1))) (bvneg (bvmul v2 v1)))) (not (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1))) (not (distinct (_ bv9 4) (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))))) (or (bvsle ((_ zero_extend 3) (ite (distinct (_ bv4 4) (bvnand (_ bv4 4) v0)) (_ bv1 1) (_ bv0 1))) (_ bv4 4)) (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvneg (bvmul v2 v1)) (bvmul v2 v1)))) (or (bvslt (bvand (bvmul v2 v1) v1) (bvmul v2 v1)) (not (bvult (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) v1)) (bvsge (_ bv9 4) v1)) (or (bvsle ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvmul v2 v1)) (not (bvsge (_ bv9 4) v1)) (bvsge v3 (bvmul v2 v1))) (or (not (bvugt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) ((_ zero_extend 2) ((_ repeat 2) (ite (bvslt (ite (= (_ bv1 1) ((_ extract 0 0) (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))))) v1 v0) (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt v2 (bvlshr (bvand (bvmul v2 v1) v1) (_ bv9 4))) (not (bvsge (bvxor (bvand (bvmul v2 v1) v1) (bvneg (bvmul v2 v1))) (bvsub v0 v1)))))))
(get-model)