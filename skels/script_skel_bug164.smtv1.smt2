(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
(declare-fun x_34 () Real)
(declare-fun x_13 () Real)
(declare-fun x_30 () Real)
(declare-fun x_59 () Real)
(assert (= BAV1 (and (not (<= x_59 GEN1)) (= x_30 x_59) (= x_30 GEN2) (or true (= x_13 x_34)))))
(assert (= BAV2 (<= x_59 GEN1)))
(assert (= BAV3 (= x_30 x_59)))
(assert (= BAV4 (= x_30 GEN2)))
(assert (= BAV5 (or true (= x_13 x_34))))
(assert (= BAV6 (= x_13 x_34)))
(check-sat-assuming ((and (not (<= x_59 GEN1)) (= x_30 x_59) (= x_30 GEN2) (or true (= x_13 x_34)))))
(get-model)