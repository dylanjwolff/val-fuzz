(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(assert (forall ((x Int)(y Int)(a Real)(z Int)) (or (> x (+ a (* (/ GEN1 GEN2) y) (* (/ GEN3 GEN4) z))) (< x (+ GEN5 (* GEN6 a) (* (/ GEN7 GEN8) y) (* (/ GEN9 GEN10) z))))))
(assert (= BAV11 (forall ((x Int)(y Int)(a Real)(z Int)) (or (> x (+ a (* (/ GEN1 GEN2) y) (* (/ GEN3 GEN4) z))) (< x (+ GEN5 (* GEN6 a) (* (/ GEN7 GEN8) y) (* (/ GEN9 GEN10) z)))))))
(assert (= BAV12 (forall ((x Int)(y Int)(a Real)(z Int)) (> x (+ a (* (/ GEN1 GEN2) y) (* (/ GEN3 GEN4) z))))))
(assert (= BAV13 (forall ((x Int)(y Int)(a Real)(z Int)) (< x (+ GEN5 (* GEN6 a) (* (/ GEN7 GEN8) y) (* (/ GEN9 GEN10) z))))))
(check-sat)