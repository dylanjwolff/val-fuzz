(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 String)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 String)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 String)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 String)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 String)
(set-option :strings-exp true)
(declare-fun value2 () String)
(declare-fun key2 () String)
(assert (and (and (and (and (and (and (not (not (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4))) (not (not (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8)))) (not (= (ite (not (= (str.indexof value2 GEN9 GEN10) (- GEN11))) GEN12 GEN13) GEN14))) (not (not (= (ite (str.contains value2 GEN15) GEN16 GEN17) GEN18)))) (not (not (= (ite (= (str.len value2) GEN19) GEN20 GEN21) GEN22)))) (not (= (ite (= key2 GEN23) GEN24 GEN25) GEN26))) (not (= (ite (= key2 GEN27) GEN28 GEN29) GEN30))))
(assert (= BAV1 (and (and (and (and (and (and (not (not (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4))) (not (not (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8)))) (not (= (ite (not (= (str.indexof value2 GEN9 GEN10) (- GEN11))) GEN12 GEN13) GEN14))) (not (not (= (ite (str.contains value2 GEN15) GEN16 GEN17) GEN18)))) (not (not (= (ite (= (str.len value2) GEN19) GEN20 GEN21) GEN22)))) (not (= (ite (= key2 GEN23) GEN24 GEN25) GEN26))) (not (= (ite (= key2 GEN27) GEN28 GEN29) GEN30)))))
(assert (= BAV2 (and (and (and (and (and (not (not (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4))) (not (not (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8)))) (not (= (ite (not (= (str.indexof value2 GEN9 GEN10) (- GEN11))) GEN12 GEN13) GEN14))) (not (not (= (ite (str.contains value2 GEN15) GEN16 GEN17) GEN18)))) (not (not (= (ite (= (str.len value2) GEN19) GEN20 GEN21) GEN22)))) (not (= (ite (= key2 GEN23) GEN24 GEN25) GEN26)))))
(assert (= BAV3 (and (and (and (and (not (not (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4))) (not (not (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8)))) (not (= (ite (not (= (str.indexof value2 GEN9 GEN10) (- GEN11))) GEN12 GEN13) GEN14))) (not (not (= (ite (str.contains value2 GEN15) GEN16 GEN17) GEN18)))) (not (not (= (ite (= (str.len value2) GEN19) GEN20 GEN21) GEN22))))))
(assert (= BAV4 (and (and (and (not (not (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4))) (not (not (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8)))) (not (= (ite (not (= (str.indexof value2 GEN9 GEN10) (- GEN11))) GEN12 GEN13) GEN14))) (not (not (= (ite (str.contains value2 GEN15) GEN16 GEN17) GEN18))))))
(assert (= BAV5 (and (and (not (not (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4))) (not (not (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8)))) (not (= (ite (not (= (str.indexof value2 GEN9 GEN10) (- GEN11))) GEN12 GEN13) GEN14)))))
(assert (= BAV6 (and (not (not (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4))) (not (not (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8))))))
(assert (= BAV7 (= (ite (str.contains value2 GEN1) GEN2 GEN3) GEN4)))
(assert (= BAV8 (= (ite (= (str.len value2) GEN5) GEN6 GEN7) GEN8)))
(assert (= BAV9 (= (str.len value2) GEN5)))
(assert (= BAV10 (= (ite (not (= (str.indexof value2 GEN9 GEN10) (- GEN11))) GEN12 GEN13) GEN14)))
(assert (= BAV11 (= (str.indexof value2 GEN9 GEN10) (- GEN11))))
(assert (= BAV12 (= (ite (str.contains value2 GEN15) GEN16 GEN17) GEN18)))
(assert (= BAV13 (= (ite (= (str.len value2) GEN19) GEN20 GEN21) GEN22)))
(assert (= BAV14 (= (str.len value2) GEN19)))
(assert (= BAV15 (= (ite (= key2 GEN23) GEN24 GEN25) GEN26)))
(assert (= BAV16 (= key2 GEN23)))
(assert (= BAV17 (= (ite (= key2 GEN27) GEN28 GEN29) GEN30)))
(assert (= BAV18 (= key2 GEN27)))
(check-sat)
(get-model)