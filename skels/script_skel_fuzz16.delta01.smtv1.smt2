(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v1 () (_ BitVec 12))
(declare-fun v15 () (_ BitVec 8))
(declare-fun v11 () (_ BitVec 12))
(declare-fun v12 () (_ BitVec 15))
(assert (= BAV1 (and (not (bvslt (_ bv0 12) v1)) (not (bvult (_ bv0 1) (ite (bvult ((_ sign_extend 3) (ite (= (_ bv1 1) (ite (bvult v11 (_ bv1 12)) (_ bv1 1) (_ bv0 1))) v11 (_ bv0 12))) v12) (_ bv1 1) (_ bv0 1)))) (bvult (_ bv0 5) ((_ repeat 5) (ite (bvult ((_ sign_extend 2) ((_ sign_extend 1) v1)) (bvxnor v12 ((_ sign_extend 2) ((_ sign_extend 1) v1)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv0 10) ((_ sign_extend 9) (ite (bvsge (bvxnor v12 ((_ sign_extend 2) ((_ sign_extend 1) v1))) (_ bv0 15)) (_ bv1 1) (_ bv0 1)))) (bvugt (bvadd (_ bv1 14) ((_ zero_extend 13) (ite (bvult (ite (bvult ((_ sign_extend 2) ((_ sign_extend 1) v1)) (bvxnor v12 ((_ sign_extend 2) ((_ sign_extend 1) v1)))) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (_ bv1 1) (_ bv0 1)))) (_ bv0 14)) (or false (bvsgt (_ bv0 12) (bvxor v1 ((_ sign_extend 11) (ite (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15)))) (_ bv1 1) (_ bv0 1))))) (bvule ((_ zero_extend 12) (ite (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15)))) (_ bv1 1) (_ bv0 1))) (_ bv0 13))) (bvuge ((_ sign_extend 14) (ite (bvugt (bvadd (_ bv1 1) (ite (bvsle (_ bv0 12) v1) (_ bv1 1) (_ bv0 1))) (_ bv0 1)) (_ bv1 1) (_ bv0 1))) (_ bv1 15)))))
(assert (= BAV2 (= (_ bv1 1) (ite (bvult v11 (_ bv1 12)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV3 (= (_ bv0 10) ((_ sign_extend 9) (ite (bvsge (bvxnor v12 ((_ sign_extend 2) ((_ sign_extend 1) v1))) (_ bv0 15)) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV4 (or false (bvsgt (_ bv0 12) (bvxor v1 ((_ sign_extend 11) (ite (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15)))) (_ bv1 1) (_ bv0 1))))) (bvule ((_ zero_extend 12) (ite (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15)))) (_ bv1 1) (_ bv0 1))) (_ bv0 13)))))
(assert (= BAV5 (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15))))))
(assert (= BAV6 (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15))))))
(check-sat-assuming ((and (not (bvslt (_ bv0 12) v1)) (not (bvult (_ bv0 1) (ite (bvult ((_ sign_extend 3) (ite (= (_ bv1 1) (ite (bvult v11 (_ bv1 12)) (_ bv1 1) (_ bv0 1))) v11 (_ bv0 12))) v12) (_ bv1 1) (_ bv0 1)))) (bvult (_ bv0 5) ((_ repeat 5) (ite (bvult ((_ sign_extend 2) ((_ sign_extend 1) v1)) (bvxnor v12 ((_ sign_extend 2) ((_ sign_extend 1) v1)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv0 10) ((_ sign_extend 9) (ite (bvsge (bvxnor v12 ((_ sign_extend 2) ((_ sign_extend 1) v1))) (_ bv0 15)) (_ bv1 1) (_ bv0 1)))) (bvugt (bvadd (_ bv1 14) ((_ zero_extend 13) (ite (bvult (ite (bvult ((_ sign_extend 2) ((_ sign_extend 1) v1)) (bvxnor v12 ((_ sign_extend 2) ((_ sign_extend 1) v1)))) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (_ bv1 1) (_ bv0 1)))) (_ bv0 14)) (or false (bvsgt (_ bv0 12) (bvxor v1 ((_ sign_extend 11) (ite (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15)))) (_ bv1 1) (_ bv0 1))))) (bvule ((_ zero_extend 12) (ite (distinct (_ bv1 15) ((_ zero_extend 14) (bvcomp v11 ((_ zero_extend 4) v15)))) (_ bv1 1) (_ bv0 1))) (_ bv0 13))) (bvuge ((_ sign_extend 14) (ite (bvugt (bvadd (_ bv1 1) (ite (bvsle (_ bv0 12) v1) (_ bv1 1) (_ bv0 1))) (_ bv0 1)) (_ bv1 1) (_ bv0 1))) (_ bv1 15)))))
(get-model)