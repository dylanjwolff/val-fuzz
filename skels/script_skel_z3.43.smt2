(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(set-option :auto-config true)
(set-option :produce-models true)
(set-option :smt.mbqi true)
(set-option :model.compact true)
(declare-sort T)
(declare-fun subtype (T T) Bool)
(assert (forall ((x T)) (subtype x x)))
(assert (forall ((x T)(y T)) (=> (and (subtype x y) (subtype y x)) (= x y))))
(assert (forall ((x T)(y T)(z T)) (=> (and (subtype x y) (subtype y z)) (subtype x z))))
(assert (forall ((x T)(y T)(z T)) (=> (and (subtype x z) (subtype y z)) (or (subtype x y) (subtype y x)))))
(declare-const obj-type T)
(declare-const int-type T)
(declare-const real-type T)
(declare-const complex-type T)
(declare-const string-type T)
(assert (forall ((x T)) (subtype x obj-type)))
(assert (subtype int-type real-type))
(assert (subtype real-type complex-type))
(assert (not (subtype string-type real-type)))
(declare-const root-type T)
(assert (subtype obj-type root-type))
(assert (= BAV1 (forall ((x T)(y T)) (=> (and (subtype x y) (subtype y x)) (= x y)))))
(assert (= BAV2 (forall ((x T)(y T)) (and (subtype x y) (subtype y x)))))
(assert (= BAV3 (forall ((x T)(y T)) (= x y))))
(assert (= BAV4 (forall ((x T)(y T)(z T)) (=> (and (subtype x y) (subtype y z)) (subtype x z)))))
(assert (= BAV5 (forall ((x T)(y T)(z T)) (and (subtype x y) (subtype y z)))))
(assert (= BAV6 (forall ((x T)(y T)(z T)) (=> (and (subtype x z) (subtype y z)) (or (subtype x y) (subtype y x))))))
(assert (= BAV7 (forall ((x T)(y T)(z T)) (and (subtype x z) (subtype y z)))))
(assert (= BAV8 (forall ((x T)(y T)(z T)) (or (subtype x y) (subtype y x)))))
(check-sat)
(get-model)
(echo "Is int-type a subtype of complex-type?")
(eval (subtype int-type complex-type))
(echo "Is int-type = obj-type?")
(eval (= int-type obj-type))
(echo "Is int-type a subtype of root-type?")
(eval (subtype int-type root-type))
(echo "Is root-type = obj-type?")
(eval (= root-type obj-type))