(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(get-model)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-option :print-success false )
(declare-fun x () Real )
(declare-fun y () Real )
(assert (< (to_real GEN1) x))
(assert (<= x y))
(assert (not (<= (/ (to_real GEN2) y) (/ (to_real GEN3) x))))
(assert (= BAV1 (< (to_real GEN1) x)))
(assert (= BAV2 (<= x y)))
(assert (= BAV3 (<= (/ (to_real GEN2) y) (/ (to_real GEN3) x))))
(assert (= BAV4 (< (to_real 0) x)))
(assert (= BAV5 (<= x y)))
(assert (= BAV6 (<= (/ (to_real 1) y) (/ (to_real 1) x))))
(check-sat)
(get-model)
(reset)
(set-option :print-success false )
(set-option :auto-config true)
(declare-fun x () Real )
(declare-fun y () Real )
(assert (< (to_real 0) x))
(assert (<= x y))
(assert (not (<= (/ (to_real 1) y) (/ (to_real 1) x))))
(check-sat)