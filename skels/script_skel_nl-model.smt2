(set-option :auto-config true)
(set-option :model-validate true)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const GEN12 Real)
(declare-const GEN11 Real)
(declare-const GEN10 Real)
(declare-const GEN9 Real)
(declare-const GEN8 Real)
(declare-const GEN7 Real)
(declare-const GEN6 Real)
(declare-const GEN5 Real)
(declare-const GEN4 Real)
(declare-const GEN3 Real)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
(declare-fun skoSM1 () Real)
(declare-fun skoSP1 () Real)
(declare-fun skoS () Real)
(declare-fun skoX () Real)
(assert (<= (* skoSM1 (+ GEN1 (* skoSM1 (+ (- GEN2) (* GEN3 skoSM1))))) GEN4))
(assert (not (= skoS GEN5)))
(assert (= (* skoSP1 skoSP1) (+ GEN6 skoX)))
(assert (= (* skoSM1 skoSM1) (+ (- GEN7) skoX)))
(assert (= (* skoS skoS) skoX))
(assert (not (<= skoX GEN8)))
(assert (not (<= skoSP1 GEN9)))
(assert (not (<= skoSM1 GEN10)))
(assert (not (<= skoS GEN11)))
(assert (not (<= GEN12 skoX)))
(assert (= BAV1 (<= (* skoSM1 (+ GEN1 (* skoSM1 (+ (- GEN2) (* GEN3 skoSM1))))) GEN4)))
(assert (= BAV2 (= skoS GEN5)))
(assert (= BAV3 (= (* skoSP1 skoSP1) (+ GEN6 skoX))))
(assert (= BAV4 (= (* skoSM1 skoSM1) (+ (- GEN7) skoX))))
(assert (= BAV5 (= (* skoS skoS) skoX)))
(assert (= BAV6 (<= skoX GEN8)))
(assert (= BAV7 (<= skoSP1 GEN9)))
(assert (= BAV8 (<= skoSM1 GEN10)))
(assert (= BAV9 (<= skoS GEN11)))
(assert (= BAV10 (<= GEN12 skoX)))
(check-sat)
(get-model)