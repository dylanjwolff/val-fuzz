(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN24 Int)
(declare-const GEN23 Real)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Real)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Real)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Real)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Real)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Real)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-const x FPN)
(declare-const y FPN)
(declare-const z FPN)
(declare-const q FPN)
(declare-const r FPN)
(declare-const m FPN)
(assert (= m (fp.fma roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- GEN3) (- GEN4)) ((_ to_fp 11 53) roundNearestTiesToEven (- GEN7) GEN8) ((_ to_fp 11 53) roundNearestTiesToEven (- GEN11) GEN12))))
(assert (= x ((_ to_fp 11 53) roundNearestTiesToEven (- GEN15) (- GEN16))))
(assert (= y ((_ to_fp 11 53) roundNearestTiesToEven (- GEN19) GEN20)))
(assert (= z ((_ to_fp 11 53) roundNearestTiesToEven (- GEN23) GEN24)))
(assert (= q (fp.fma roundNearestTiesToEven x y z)))
(assert (not (= q m)))
(assert (= BAV1 (= m (fp.fma roundNearestTiesToEven ((_ to_fp 11 53) roundNearestTiesToEven (- GEN3) (- GEN4)) ((_ to_fp 11 53) roundNearestTiesToEven (- GEN7) GEN8) ((_ to_fp 11 53) roundNearestTiesToEven (- GEN11) GEN12)))))
(assert (= BAV2 (= x ((_ to_fp 11 53) roundNearestTiesToEven (- GEN15) (- GEN16)))))
(assert (= BAV3 (= y ((_ to_fp 11 53) roundNearestTiesToEven (- GEN19) GEN20))))
(assert (= BAV4 (= z ((_ to_fp 11 53) roundNearestTiesToEven (- GEN23) GEN24))))
(assert (= BAV5 (= q (fp.fma roundNearestTiesToEven x y z))))
(assert (= BAV6 (= q m)))
(check-sat)
(get-model)
(check-sat-using smt)