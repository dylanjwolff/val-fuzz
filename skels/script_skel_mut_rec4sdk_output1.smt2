(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const GEN7 Real)
(declare-const GEN6 Real)
(declare-const GEN5 Real)
(declare-const GEN4 Real)
(declare-const GEN3 Real)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
( set-info :source | SMT-COMP'06 organizers |)
( set-info :smt-lib-version 2.0)
( set-info :category "check")
( declare-datatypes ()
  ( ( Even ( ECons ( EElem Real) ( OTl Odd)) ( ENil))
    ( Odd ( OCons ( OElem Real) ( ETl Even)) ( ONil))))
( declare-fun SumOdd ( Odd) Real)
( declare-fun SumEven ( Even) Real)
( declare-fun v1 () Real)
( declare-fun v2 () Real)
( declare-fun e1 () Even)
( declare-fun e2 () Even)
( declare-fun e3 () Even)
( declare-fun o1 () Odd)
( declare-fun o2 () Odd)
( declare-fun o3 () Odd)
(assert (= e1 (ECons GEN1 o2)))
(assert (= e2 (ECons GEN2 o3)))
(assert (= o1 (OCons GEN3 e2)))
(assert (= o2 (OCons GEN4 e3)))
(assert (= (SumEven e3) GEN5))
(assert (= (SumOdd o3) GEN6))
(assert (= (SumEven e1) GEN7))
(assert (= BAV1 (= e1 (ECons GEN1 o2))))
(assert (= BAV2 (= e2 (ECons GEN2 o3))))
(assert (= BAV3 (= o1 (OCons GEN3 e2))))
(assert (= BAV4 (= o2 (OCons GEN4 e3))))
(assert (= BAV5 (= (SumEven e3) GEN5)))
(assert (= BAV6 (= (SumOdd o3) GEN6)))
(assert (= BAV7 (= (SumEven e1) GEN7)))
(check-sat)
(get-model)
(exit)