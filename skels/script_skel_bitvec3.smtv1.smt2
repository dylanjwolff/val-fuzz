(set-option :incremental false)
(set-info :source "Hand-crafted bit-vector benchmarks.  Some are from the SVC benchmark suite.
Contributed by Vijay Ganesh (vganesh@stanford.edu).  Translated into SMT-LIB
format by Clark Barrett using CVC3.")
(set-info :difficulty "0")
(set-info :category "crafted")
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const GEN88 Int)
(declare-const GEN87 Int)
(declare-const GEN86 Int)
(declare-const GEN85 Int)
(declare-const GEN84 Int)
(declare-const GEN83 Int)
(declare-const GEN82 Int)
(declare-const GEN81 Int)
(declare-const GEN80 Int)
(declare-const GEN79 Int)
(declare-const GEN78 Int)
(declare-const GEN77 Int)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a () (_ BitVec 32))
(declare-fun b () (_ BitVec 32))
(declare-fun c1 () (_ BitVec 32))
(declare-fun c2 () (_ BitVec 32))
(declare-fun out () (_ BitVec 32))
(declare-fun carry () (_ BitVec 32))
(assert (= BAV1 (=> (and (= ((_ extract 1 0) a) (_ bv3 2)) (= ((_ extract 1 0) b) (_ bv3 2))) (=> (and (and (and (and (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) carry) (ite (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) out) (ite (or (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) carry) (ite (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (_ bv1 1) (_ bv0 1)))) (and (= ((_ extract 2 0) out) (_ bv1 3)) (= ((_ extract 2 0) carry) (_ bv6 3)))))))
(assert (= BAV2 (and (= ((_ extract 1 0) a) (_ bv3 2)) (= ((_ extract 1 0) b) (_ bv3 2)))))
(assert (= BAV3 (= ((_ extract 1 0) a) (_ bv3 2))))
(assert (= BAV4 (= ((_ extract 1 0) b) (_ bv3 2))))
(assert (= BAV5 (=> (and (and (and (and (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) carry) (ite (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) out) (ite (or (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) carry) (ite (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (_ bv1 1) (_ bv0 1)))) (and (= ((_ extract 2 0) out) (_ bv1 3)) (= ((_ extract 2 0) carry) (_ bv6 3))))))
(assert (= BAV6 (and (and (and (and (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) carry) (ite (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) out) (ite (or (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) carry) (ite (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV7 (and (and (and (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) carry) (ite (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) out) (ite (or (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV8 (and (and (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) carry) (ite (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV9 (and (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV10 (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV11 (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV12 (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2)))))))
(assert (= BAV13 (= ((_ extract 0 0) a) (_ bv1 1))))
(assert (= BAV14 (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b)))))
(assert (= BAV15 (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))))
(assert (= BAV16 (= ((_ extract 1 1) a) (_ bv1 1))))
(assert (= BAV17 (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1)))))
(assert (= BAV18 (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2)))))
(assert (= BAV19 (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV20 (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1)))))
(assert (= BAV21 (= ((_ extract 0 0) c1) (_ bv1 1))))
(assert (= BAV22 (= ((_ extract 0 0) c2) (_ bv1 1))))
(assert (= BAV23 (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV24 (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1)))))
(assert (= BAV25 (= ((_ extract 0 0) c1) (_ bv1 1))))
(assert (= BAV26 (= ((_ extract 0 0) c2) (_ bv1 1))))
(assert (= BAV27 (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV28 (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1)))))))
(assert (= BAV29 (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))))
(assert (= BAV30 (= ((_ extract 0 0) carry) (_ bv0 1))))
(assert (= BAV31 (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))))
(assert (= BAV32 (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1)))))
(assert (= BAV33 (= ((_ extract 1 1) c1) (_ bv1 1))))
(assert (= BAV34 (= ((_ extract 1 1) c2) (_ bv0 1))))
(assert (= BAV35 (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))
(assert (= BAV36 (= ((_ extract 1 1) c1) (_ bv0 1))))
(assert (= BAV37 (= ((_ extract 1 1) c2) (_ bv1 1))))
(assert (= BAV38 (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))))
(assert (= BAV39 (= ((_ extract 0 0) carry) (_ bv1 1))))
(assert (= BAV40 (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1)))))
(assert (= BAV41 (= ((_ extract 1 1) c1) (_ bv0 1))))
(assert (= BAV42 (= ((_ extract 1 1) c2) (_ bv0 1))))
(assert (= BAV43 (= ((_ extract 1 1) carry) (ite (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV44 (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))))))
(assert (= BAV45 (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))
(assert (= BAV46 (= ((_ extract 1 1) c1) (_ bv1 1))))
(assert (= BAV47 (= ((_ extract 1 1) c2) (_ bv1 1))))
(assert (= BAV48 (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))))
(assert (= BAV49 (= ((_ extract 0 0) carry) (_ bv1 1))))
(assert (= BAV50 (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))))
(assert (= BAV51 (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1)))))
(assert (= BAV52 (= ((_ extract 1 1) c1) (_ bv1 1))))
(assert (= BAV53 (= ((_ extract 1 1) c2) (_ bv0 1))))
(assert (= BAV54 (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))
(assert (= BAV55 (= ((_ extract 1 1) c1) (_ bv0 1))))
(assert (= BAV56 (= ((_ extract 1 1) c2) (_ bv1 1))))
(assert (= BAV57 (= ((_ extract 2 2) out) (ite (or (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV58 (or (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1)))))))
(assert (= BAV59 (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1)))))))
(assert (= BAV60 (= ((_ extract 1 1) carry) (_ bv0 1))))
(assert (= BAV61 (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))))
(assert (= BAV62 (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1)))))
(assert (= BAV63 (= ((_ extract 2 2) c1) (_ bv1 1))))
(assert (= BAV64 (= ((_ extract 2 2) c2) (_ bv0 1))))
(assert (= BAV65 (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1)))))
(assert (= BAV66 (= ((_ extract 2 2) c1) (_ bv0 1))))
(assert (= BAV67 (= ((_ extract 2 2) c2) (_ bv1 1))))
(assert (= BAV68 (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1))))))
(assert (= BAV69 (= ((_ extract 1 1) carry) (_ bv1 1))))
(assert (= BAV70 (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1)))))
(assert (= BAV71 (= ((_ extract 2 2) c1) (_ bv0 1))))
(assert (= BAV72 (= ((_ extract 2 2) c2) (_ bv0 1))))
(assert (= BAV73 (= ((_ extract 2 2) carry) (ite (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV74 (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1)))))))
(assert (= BAV75 (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1)))))
(assert (= BAV76 (= ((_ extract 2 2) c1) (_ bv1 1))))
(assert (= BAV77 (= ((_ extract 2 2) c2) (_ bv1 1))))
(assert (= BAV78 (and (= ((_ extract 1 1) carry) (_ bv1 1)) (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))))
(assert (= BAV79 (= ((_ extract 1 1) carry) (_ bv1 1))))
(assert (= BAV80 (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1)))))
(assert (= BAV81 (= ((_ extract 2 2) c1) (_ bv1 1))))
(assert (= BAV82 (= ((_ extract 2 2) c2) (_ bv1 1))))
(assert (= BAV83 (and (= ((_ extract 2 0) out) (_ bv1 3)) (= ((_ extract 2 0) carry) (_ bv6 3)))))
(assert (= BAV84 (= ((_ extract 2 0) out) (_ bv1 3))))
(assert (= BAV85 (= ((_ extract 2 0) carry) (_ bv6 3))))
(check-sat-assuming ((not (=> (and (= ((_ extract 1 0) a) (_ bv3 2)) (= ((_ extract 1 0) b) (_ bv3 2))) (=> (and (and (and (and (and (and (and (ite (= ((_ extract 0 0) a) (_ bv1 1)) (= ((_ extract 2 0) c1) (concat (_ bv0 1) ((_ extract 1 0) b))) (= ((_ extract 2 0) c1) (concat (_ bv0 1) (_ bv0 2)))) (ite (= ((_ extract 1 1) a) (_ bv1 1)) (= ((_ extract 2 0) c2) (concat ((_ extract 1 0) b) (_ bv0 1))) (= ((_ extract 2 0) c2) (concat (_ bv0 1) (_ bv0 2))))) (= ((_ extract 0 0) out) (ite (or (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 0 0) carry) (ite (and (= ((_ extract 0 0) c1) (_ bv1 1)) (= ((_ extract 0 0) c2) (_ bv1 1))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) out) (ite (or (and (= ((_ extract 0 0) carry) (_ bv0 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1))))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) carry) (ite (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv1 1))) (and (= ((_ extract 0 0) carry) (_ bv1 1)) (or (and (= ((_ extract 1 1) c1) (_ bv1 1)) (= ((_ extract 1 1) c2) (_ bv0 1))) (and (= ((_ extract 1 1) c1) (_ bv0 1)) (= ((_ extract 1 1) c2) (_ bv1 1)))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) out) (ite (or (and (= ((_ extract 1 1) carry) (_ bv0 1)) (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv0 1))) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (and (= ((_ extract 2 2) c1) (_ bv0 1)) (= ((_ extract 2 2) c2) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 2 2) carry) (ite (or (and (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))) (and (= ((_ extract 1 1) carry) (_ bv1 1)) (or (= ((_ extract 2 2) c1) (_ bv1 1)) (= ((_ extract 2 2) c2) (_ bv1 1))))) (_ bv1 1) (_ bv0 1)))) (and (= ((_ extract 2 0) out) (_ bv1 3)) (= ((_ extract 2 0) carry) (_ bv6 3))))))))
(get-model)