(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-option :sets-ext true)
(assert (= (card (as univset (Set Int))) GEN1))
(declare-const universe (Set Int))
(declare-const A (Set Int))
(declare-const B (Set Int))
(assert (= (card A) GEN2))
(assert (= (card B) GEN3))
(assert (= (intersection A B) (as emptyset (Set Int))))
(assert (= universe (as univset (Set Int))))
(assert (= BAV1 (= (card (as univset (Set Int))) GEN1)))
(assert (= BAV2 (= (card A) GEN2)))
(assert (= BAV3 (= (card B) GEN3)))
(assert (= BAV4 (= (intersection A B) (as emptyset (Set Int)))))
(assert (= BAV5 (= universe (as univset (Set Int)))))
(check-sat)
(get-model)