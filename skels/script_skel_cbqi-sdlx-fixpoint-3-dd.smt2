(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(assert (or (forall ((H Int)(G Int)) (= (= G GEN1) (= H GEN2))) (forall ((C Int)(D Int)(E Int)) (or (= (= D GEN3) (= C GEN4)) (and (not (forall ((G Int)) (= (= E GEN5) (= G GEN6)))) (not (forall ((A Int)) (not (= (ite (= A GEN7) GEN8 GEN9) (ite (= C GEN10) GEN11 GEN12))))))))))
(assert (= BAV1 (or (forall ((H Int)(G Int)) (= (= G GEN1) (= H GEN2))) (forall ((C Int)(D Int)(E Int)) (or (= (= D GEN3) (= C GEN4)) (and (not (forall ((G Int)) (= (= E GEN5) (= G GEN6)))) (not (forall ((A Int)) (not (= (ite (= A GEN7) GEN8 GEN9) (ite (= C GEN10) GEN11 GEN12)))))))))))
(assert (= BAV2 (forall ((H Int)(G Int)) (= (= G GEN1) (= H GEN2)))))
(assert (= BAV3 (forall ((H Int)(G Int)) (= G GEN1))))
(assert (= BAV4 (forall ((H Int)(G Int)) (= H GEN2))))
(assert (= BAV5 (forall ((C Int)(D Int)(E Int)) (or (= (= D GEN3) (= C GEN4)) (and (not (forall ((G Int)) (= (= E GEN5) (= G GEN6)))) (not (forall ((A Int)) (not (= (ite (= A GEN7) GEN8 GEN9) (ite (= C GEN10) GEN11 GEN12))))))))))
(assert (= BAV6 (forall ((C Int)(D Int)(E Int)) (= (= D GEN3) (= C GEN4)))))
(assert (= BAV7 (forall ((C Int)(D Int)(E Int)) (= D GEN3))))
(assert (= BAV8 (forall ((C Int)(D Int)(E Int)) (= C GEN4))))
(assert (= BAV9 (forall ((C Int)(D Int)(E Int)) (and (not (forall ((G Int)) (= (= E GEN5) (= G GEN6)))) (not (forall ((A Int)) (not (= (ite (= A GEN7) GEN8 GEN9) (ite (= C GEN10) GEN11 GEN12)))))))))
(assert (= BAV10 (forall ((C Int)(D Int)(E Int)(G Int)) (= (= E GEN5) (= G GEN6)))))
(assert (= BAV11 (forall ((C Int)(D Int)(E Int)(G Int)) (= E GEN5))))
(assert (= BAV12 (forall ((C Int)(D Int)(E Int)(G Int)) (= G GEN6))))
(assert (= BAV13 (forall ((C Int)(D Int)(E Int)(A Int)) (= (ite (= A GEN7) GEN8 GEN9) (ite (= C GEN10) GEN11 GEN12)))))
(assert (= BAV14 (forall ((C Int)(D Int)(E Int)(A Int)) (= A GEN7))))
(assert (= BAV15 (forall ((C Int)(D Int)(E Int)(A Int)) (= C GEN10))))
(check-sat)
(get-model)