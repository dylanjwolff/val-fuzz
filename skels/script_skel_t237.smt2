(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const GEN4 Real)
(declare-const GEN3 Real)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
(declare-const a Real)
(declare-const b Real)
(declare-fun p (Real) Bool)
(simplify (^ a 0.))
(set-option :pp.max-depth 1000)
(assert (= (^ a GEN1) GEN2))
(assert (forall ((x Real)) (=> (p (/ x a)) (exists ((y Real)) (p (^ y GEN3))))))
(assert (p (^ b GEN4)))
(apply purify-arith)
(apply (! purify-arith :complete false))
(assert (= BAV1 (= (^ a GEN1) GEN2)))
(assert (= BAV2 (forall ((x Real)) (=> (p (/ x a)) (exists ((y Real)) (p (^ y GEN3)))))))