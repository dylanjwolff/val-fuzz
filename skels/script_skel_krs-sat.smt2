(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-sort $$unsorted 0)
(declare-fun cowlNothing ($$unsorted) Bool)
(declare-fun cowlThing ($$unsorted) Bool)
(declare-fun xsd_integer ($$unsorted) Bool)
(declare-fun xsd_string ($$unsorted) Bool)
(declare-fun _is () $$unsorted)
(assert (and (forall ((X $$unsorted)) (cowlThing X)) (forall ((X $$unsorted)) (not (cowlNothing X)))))
(assert (forall ((X $$unsorted)) (= (xsd_string X) (not (xsd_integer X)))))
(assert (and (forall ((X $$unsorted)) (or (not (cowlThing X)) (= X _is))) (cowlThing _is)))
(assert (cowlThing _is))
(assert (and (forall ((X $$unsorted)) (cowlThing X)) (forall ((X $$unsorted)) (not (cowlNothing X))) (forall ((X $$unsorted)) (or (not (cowlThing X)) (= X _is)))))
(assert (= BAV1 (and (forall ((X $$unsorted)) (cowlThing X)) (forall ((X $$unsorted)) (not (cowlNothing X))))))
(assert (= BAV2 (forall ((X $$unsorted)) (= (xsd_string X) (not (xsd_integer X))))))
(assert (= BAV3 (and (forall ((X $$unsorted)) (or (not (cowlThing X)) (= X _is))) (cowlThing _is))))
(assert (= BAV4 (forall ((X $$unsorted)) (or (not (cowlThing X)) (= X _is)))))
(assert (= BAV5 (forall ((X $$unsorted)) (= X _is))))
(assert (= BAV6 (and (forall ((X $$unsorted)) (cowlThing X)) (forall ((X $$unsorted)) (not (cowlNothing X))) (forall ((X $$unsorted)) (or (not (cowlThing X)) (= X _is))))))
(assert (= BAV7 (forall ((X $$unsorted)) (or (not (cowlThing X)) (= X _is)))))
(assert (= BAV8 (forall ((X $$unsorted)) (= X _is))))
(check-sat)