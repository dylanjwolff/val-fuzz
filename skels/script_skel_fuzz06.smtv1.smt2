(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const BAV184 Bool)
(declare-const BAV185 Bool)
(declare-const BAV186 Bool)
(declare-const BAV187 Bool)
(declare-const BAV188 Bool)
(declare-const BAV189 Bool)
(declare-const BAV190 Bool)
(declare-const BAV191 Bool)
(declare-const BAV192 Bool)
(declare-const BAV193 Bool)
(declare-const BAV194 Bool)
(declare-const BAV195 Bool)
(declare-const BAV196 Bool)
(declare-const BAV197 Bool)
(declare-const BAV198 Bool)
(declare-const BAV199 Bool)
(declare-const BAV200 Bool)
(declare-const BAV201 Bool)
(declare-const BAV202 Bool)
(declare-const BAV203 Bool)
(declare-const BAV204 Bool)
(declare-const BAV205 Bool)
(declare-const BAV206 Bool)
(declare-const BAV207 Bool)
(declare-const BAV208 Bool)
(declare-const BAV209 Bool)
(declare-const BAV210 Bool)
(declare-const BAV211 Bool)
(declare-const BAV212 Bool)
(declare-const BAV213 Bool)
(declare-const BAV214 Bool)
(declare-const BAV215 Bool)
(declare-const BAV216 Bool)
(declare-const BAV217 Bool)
(declare-const BAV218 Bool)
(declare-const BAV219 Bool)
(declare-const BAV220 Bool)
(declare-const BAV221 Bool)
(declare-const BAV222 Bool)
(declare-const BAV223 Bool)
(declare-const BAV224 Bool)
(declare-const BAV225 Bool)
(declare-const BAV226 Bool)
(declare-const BAV227 Bool)
(declare-const BAV228 Bool)
(declare-const BAV229 Bool)
(declare-const BAV230 Bool)
(declare-const BAV231 Bool)
(declare-const BAV232 Bool)
(declare-const BAV233 Bool)
(declare-const BAV234 Bool)
(declare-const BAV235 Bool)
(declare-const BAV236 Bool)
(declare-const BAV237 Bool)
(declare-const BAV238 Bool)
(declare-const BAV239 Bool)
(declare-const BAV240 Bool)
(declare-const BAV241 Bool)
(declare-const BAV242 Bool)
(declare-const BAV243 Bool)
(declare-const BAV244 Bool)
(declare-const BAV245 Bool)
(declare-const BAV246 Bool)
(declare-const BAV247 Bool)
(declare-const BAV248 Bool)
(declare-const BAV249 Bool)
(declare-const BAV250 Bool)
(declare-const BAV251 Bool)
(declare-const BAV252 Bool)
(declare-const BAV253 Bool)
(declare-const BAV254 Bool)
(declare-const BAV255 Bool)
(declare-const BAV256 Bool)
(declare-const BAV257 Bool)
(declare-const BAV258 Bool)
(declare-const BAV259 Bool)
(declare-const BAV260 Bool)
(declare-const BAV261 Bool)
(declare-const BAV262 Bool)
(declare-const BAV263 Bool)
(declare-const BAV264 Bool)
(declare-const BAV265 Bool)
(declare-const BAV266 Bool)
(declare-const BAV267 Bool)
(declare-const BAV268 Bool)
(declare-const BAV269 Bool)
(declare-const BAV270 Bool)
(declare-const BAV271 Bool)
(declare-const BAV272 Bool)
(declare-const BAV273 Bool)
(declare-const BAV274 Bool)
(declare-const BAV275 Bool)
(declare-const BAV276 Bool)
(declare-const BAV277 Bool)
(declare-const BAV278 Bool)
(declare-const BAV279 Bool)
(declare-const BAV280 Bool)
(declare-const BAV281 Bool)
(declare-const BAV282 Bool)
(declare-const BAV283 Bool)
(declare-const BAV284 Bool)
(declare-const BAV285 Bool)
(declare-const BAV286 Bool)
(declare-const BAV287 Bool)
(declare-const BAV288 Bool)
(declare-const BAV289 Bool)
(declare-const BAV290 Bool)
(declare-const BAV291 Bool)
(declare-const BAV292 Bool)
(declare-const BAV293 Bool)
(declare-const BAV294 Bool)
(declare-const BAV295 Bool)
(declare-const BAV296 Bool)
(declare-const BAV297 Bool)
(declare-const BAV298 Bool)
(declare-const BAV299 Bool)
(declare-const BAV300 Bool)
(declare-const BAV301 Bool)
(declare-const BAV302 Bool)
(declare-const BAV303 Bool)
(declare-const BAV304 Bool)
(declare-const BAV305 Bool)
(declare-const BAV306 Bool)
(declare-const BAV307 Bool)
(declare-const BAV308 Bool)
(declare-const BAV309 Bool)
(declare-const BAV310 Bool)
(declare-const BAV311 Bool)
(declare-const BAV312 Bool)
(declare-const BAV313 Bool)
(declare-const BAV314 Bool)
(declare-const BAV315 Bool)
(declare-const BAV316 Bool)
(declare-const BAV317 Bool)
(declare-const BAV318 Bool)
(declare-const BAV319 Bool)
(declare-const BAV320 Bool)
(declare-const BAV321 Bool)
(declare-const BAV322 Bool)
(declare-const BAV323 Bool)
(declare-const BAV324 Bool)
(declare-const BAV325 Bool)
(declare-const GEN296 Int)
(declare-const GEN295 Int)
(declare-const GEN294 Int)
(declare-const GEN293 Int)
(declare-const GEN292 Int)
(declare-const GEN291 Int)
(declare-const GEN290 Int)
(declare-const GEN289 Int)
(declare-const GEN288 Int)
(declare-const GEN287 Int)
(declare-const GEN286 Int)
(declare-const GEN285 Int)
(declare-const GEN284 Int)
(declare-const GEN283 Int)
(declare-const GEN282 Int)
(declare-const GEN281 Int)
(declare-const GEN280 Int)
(declare-const GEN279 Int)
(declare-const GEN278 Int)
(declare-const GEN277 Int)
(declare-const GEN276 Int)
(declare-const GEN275 Int)
(declare-const GEN274 Int)
(declare-const GEN273 Int)
(declare-const GEN272 Int)
(declare-const GEN271 Int)
(declare-const GEN270 Int)
(declare-const GEN269 Int)
(declare-const GEN268 Int)
(declare-const GEN267 Int)
(declare-const GEN266 Int)
(declare-const GEN265 Int)
(declare-const GEN264 Int)
(declare-const GEN263 Int)
(declare-const GEN262 Int)
(declare-const GEN261 Int)
(declare-const GEN260 Int)
(declare-const GEN259 Int)
(declare-const GEN258 Int)
(declare-const GEN257 Int)
(declare-const GEN256 Int)
(declare-const GEN255 Int)
(declare-const GEN254 Int)
(declare-const GEN253 Int)
(declare-const GEN252 Int)
(declare-const GEN251 Int)
(declare-const GEN250 Int)
(declare-const GEN249 Int)
(declare-const GEN248 Int)
(declare-const GEN247 Int)
(declare-const GEN246 Int)
(declare-const GEN245 Int)
(declare-const GEN244 Int)
(declare-const GEN243 Int)
(declare-const GEN242 Int)
(declare-const GEN241 Int)
(declare-const GEN240 Int)
(declare-const GEN239 Int)
(declare-const GEN238 Int)
(declare-const GEN237 Int)
(declare-const GEN236 Int)
(declare-const GEN235 Int)
(declare-const GEN234 Int)
(declare-const GEN233 Int)
(declare-const GEN232 Int)
(declare-const GEN231 Int)
(declare-const GEN230 Int)
(declare-const GEN229 Int)
(declare-const GEN228 Int)
(declare-const GEN227 Int)
(declare-const GEN226 Int)
(declare-const GEN225 Int)
(declare-const GEN224 Int)
(declare-const GEN223 Int)
(declare-const GEN222 Int)
(declare-const GEN221 Int)
(declare-const GEN220 Int)
(declare-const GEN219 Int)
(declare-const GEN218 Int)
(declare-const GEN217 Int)
(declare-const GEN216 Int)
(declare-const GEN215 Int)
(declare-const GEN214 Int)
(declare-const GEN213 Int)
(declare-const GEN212 Int)
(declare-const GEN211 Int)
(declare-const GEN210 Int)
(declare-const GEN209 Int)
(declare-const GEN208 Int)
(declare-const GEN207 Int)
(declare-const GEN206 Int)
(declare-const GEN205 Int)
(declare-const GEN204 Int)
(declare-const GEN203 Int)
(declare-const GEN202 Int)
(declare-const GEN201 Int)
(declare-const GEN200 Int)
(declare-const GEN199 Int)
(declare-const GEN198 Int)
(declare-const GEN197 Int)
(declare-const GEN196 Int)
(declare-const GEN195 Int)
(declare-const GEN194 Int)
(declare-const GEN193 Int)
(declare-const GEN192 Int)
(declare-const GEN191 Int)
(declare-const GEN190 Int)
(declare-const GEN189 Int)
(declare-const GEN188 Int)
(declare-const GEN187 Int)
(declare-const GEN186 Int)
(declare-const GEN185 Int)
(declare-const GEN184 Int)
(declare-const GEN183 Int)
(declare-const GEN182 Int)
(declare-const GEN181 Int)
(declare-const GEN180 Int)
(declare-const GEN179 Int)
(declare-const GEN178 Int)
(declare-const GEN177 Int)
(declare-const GEN176 Int)
(declare-const GEN175 Int)
(declare-const GEN174 Int)
(declare-const GEN173 Int)
(declare-const GEN172 Int)
(declare-const GEN171 Int)
(declare-const GEN170 Int)
(declare-const GEN169 Int)
(declare-const GEN168 Int)
(declare-const GEN167 Int)
(declare-const GEN166 Int)
(declare-const GEN165 Int)
(declare-const GEN164 Int)
(declare-const GEN163 Int)
(declare-const GEN162 Int)
(declare-const GEN161 Int)
(declare-const GEN160 Int)
(declare-const GEN159 Int)
(declare-const GEN158 Int)
(declare-const GEN157 Int)
(declare-const GEN156 Int)
(declare-const GEN155 Int)
(declare-const GEN154 Int)
(declare-const GEN153 Int)
(declare-const GEN152 Int)
(declare-const GEN151 Int)
(declare-const GEN150 Int)
(declare-const GEN149 Int)
(declare-const GEN148 Int)
(declare-const GEN147 Int)
(declare-const GEN146 Int)
(declare-const GEN145 Int)
(declare-const GEN144 Int)
(declare-const GEN143 Int)
(declare-const GEN142 Int)
(declare-const GEN141 Int)
(declare-const GEN140 Int)
(declare-const GEN139 Int)
(declare-const GEN138 Int)
(declare-const GEN137 Int)
(declare-const GEN136 Int)
(declare-const GEN135 Int)
(declare-const GEN134 Int)
(declare-const GEN133 Int)
(declare-const GEN132 Int)
(declare-const GEN131 Int)
(declare-const GEN130 Int)
(declare-const GEN129 Int)
(declare-const GEN128 Int)
(declare-const GEN127 Int)
(declare-const GEN126 Int)
(declare-const GEN125 Int)
(declare-const GEN124 Int)
(declare-const GEN123 Int)
(declare-const GEN122 Int)
(declare-const GEN121 Int)
(declare-const GEN120 Int)
(declare-const GEN119 Int)
(declare-const GEN118 Int)
(declare-const GEN117 Int)
(declare-const GEN116 Int)
(declare-const GEN115 Int)
(declare-const GEN114 Int)
(declare-const GEN113 Int)
(declare-const GEN112 Int)
(declare-const GEN111 Int)
(declare-const GEN110 Int)
(declare-const GEN109 Int)
(declare-const GEN108 Int)
(declare-const GEN107 Int)
(declare-const GEN106 Int)
(declare-const GEN105 Int)
(declare-const GEN104 Int)
(declare-const GEN103 Int)
(declare-const GEN102 Int)
(declare-const GEN101 Int)
(declare-const GEN100 Int)
(declare-const GEN99 Int)
(declare-const GEN98 Int)
(declare-const GEN97 Int)
(declare-const GEN96 Int)
(declare-const GEN95 Int)
(declare-const GEN94 Int)
(declare-const GEN93 Int)
(declare-const GEN92 Int)
(declare-const GEN91 Int)
(declare-const GEN90 Int)
(declare-const GEN89 Int)
(declare-const GEN88 Int)
(declare-const GEN87 Int)
(declare-const GEN86 Int)
(declare-const GEN85 Int)
(declare-const GEN84 Int)
(declare-const GEN83 Int)
(declare-const GEN82 Int)
(declare-const GEN81 Int)
(declare-const GEN80 Int)
(declare-const GEN79 Int)
(declare-const GEN78 Int)
(declare-const GEN77 Int)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () (_ BitVec 9))
(declare-fun v1 () (_ BitVec 2))
(declare-fun v2 () (_ BitVec 1))
(declare-fun v3 () (_ BitVec 3))
(assert (= BAV1 (and (and (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))))) (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))))) (or (ite (= (= (_ bv68 7) ((_ sign_extend 6) ((_ rotate_left 0) v2))) (xor (not (or (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ zero_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))) (xor (ite (= ((_ extract 0 0) v1) ((_ rotate_left 0) v2)) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 1) ((_ rotate_right 1) v1))) (= ((_ rotate_left 0) v2) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))))))) (not (=> (= ((_ sign_extend 3) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ sign_extend 8) v2) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))))) (or (not (= (and (= ((_ extract 1 1) ((_ zero_extend 1) v3)) ((_ extract 1 1) ((_ rotate_right 1) v1))) (= (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))) (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))) (xor (xor (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2) (ite (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3)))) (ite (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2))) (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))) (= ((_ sign_extend 8) (bvnot v2)) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))) (not (and (=> (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= v0 ((_ sign_extend 5) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))))) (= ((_ zero_extend 2) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnot ((_ zero_extend 1) v3)))))))
(assert (= BAV2 (and (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))))) (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))))))))
(assert (= BAV3 (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))))))
(assert (= BAV4 (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))))))
(assert (= BAV5 (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))
(assert (= BAV6 (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))))
(assert (= BAV7 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV8 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV9 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV10 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV11 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV12 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV13 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV14 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV15 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV16 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV17 (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))))))
(assert (= BAV18 (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))
(assert (= BAV19 (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))))
(assert (= BAV20 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV21 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV22 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV23 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV24 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV25 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV26 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV27 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV28 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV29 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV30 (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))))
(assert (= BAV31 (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))))))))
(assert (= BAV32 (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV33 (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9))))
(assert (= BAV34 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV35 (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV36 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV37 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1))))))
(assert (= BAV38 (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV39 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV40 (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))))))
(assert (= BAV41 (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))))
(assert (= BAV42 (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))))))))))
(assert (= BAV43 (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))))))
(assert (= BAV44 (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3))))
(assert (= BAV45 (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV46 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV47 (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7)))))
(assert (= BAV48 (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))))
(assert (= BAV49 (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))))
(assert (= BAV50 (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1))))
(assert (= BAV51 (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))
(assert (= BAV52 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV53 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1))))))
(assert (= BAV54 (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))))
(assert (= BAV55 (= ((_ extract 1 0) v1) v1)))
(assert (= BAV56 (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))
(assert (= BAV57 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV58 (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))))
(assert (= BAV59 (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))))
(assert (= BAV60 (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2))))
(assert (= BAV61 (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV62 (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)))
(assert (= BAV63 (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV64 (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0)))
(assert (= BAV65 (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV66 (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))))
(assert (= BAV67 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV68 (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))))
(assert (= BAV69 (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1))))
(assert (= BAV70 (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV71 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))))
(assert (= BAV72 (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV73 (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV74 (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))
(assert (= BAV75 (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))))
(assert (= BAV76 (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1))))
(assert (= BAV77 (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV78 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))))
(assert (= BAV79 (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV80 (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV81 (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))
(assert (= BAV82 (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))
(assert (= BAV83 (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9))))
(assert (= BAV84 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV85 (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))))))
(assert (= BAV86 (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1))))))
(assert (= BAV87 (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))))
(assert (= BAV88 (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))
(assert (= BAV89 (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))))))
(assert (= BAV90 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV91 (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV92 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV93 (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))))
(assert (= BAV94 (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1))))))
(assert (= BAV95 (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))
(assert (= BAV96 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV97 (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))))
(assert (= BAV98 (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1))))
(assert (= BAV99 (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))))
(assert (= BAV100 (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))))
(assert (= BAV101 (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV102 (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV103 (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))
(assert (= BAV104 (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))))
(assert (= BAV105 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV106 (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))
(assert (= BAV107 (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2))))))))
(assert (= BAV108 (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))))))
(assert (= BAV109 (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))))
(assert (= BAV110 (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9)))))
(assert (= BAV111 (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1))))
(assert (= BAV112 (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))))
(assert (= BAV113 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV114 (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))
(assert (= BAV115 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV116 (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))))
(assert (= BAV117 (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))
(assert (= BAV118 (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))
(assert (= BAV119 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))
(assert (= BAV120 (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))
(assert (= BAV121 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV122 (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))))
(assert (= BAV123 (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7))))
(assert (= BAV124 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV125 (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))
(assert (= BAV126 (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))))))
(assert (= BAV127 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))))
(assert (= BAV128 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV129 (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))))
(assert (= BAV130 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV131 (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))))
(assert (= BAV132 (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))
(assert (= BAV133 (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV134 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV135 (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV136 (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))
(assert (= BAV137 (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV138 (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV139 (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))
(assert (= BAV140 (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9))))
(assert (= BAV141 (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV142 (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))))))
(assert (= BAV143 (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))))))
(assert (= BAV144 (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))
(assert (= BAV145 (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))))
(assert (= BAV146 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV147 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV148 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV149 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV150 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV151 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV152 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV153 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV154 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV155 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV156 (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))))))
(assert (= BAV157 (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))
(assert (= BAV158 (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))))
(assert (= BAV159 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV160 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV161 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV162 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV163 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV164 (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))
(assert (= BAV165 (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3))))
(assert (= BAV166 (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV167 (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)))
(assert (= BAV168 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV169 (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))))
(assert (= BAV170 (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))))))))
(assert (= BAV171 (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV172 (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9))))
(assert (= BAV173 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV174 (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV175 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV176 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1))))))
(assert (= BAV177 (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV178 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV179 (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))))))
(assert (= BAV180 (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))))
(assert (= BAV181 (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))))))))))
(assert (= BAV182 (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))))))
(assert (= BAV183 (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3))))
(assert (= BAV184 (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV185 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV186 (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7)))))
(assert (= BAV187 (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))))
(assert (= BAV188 (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))))
(assert (= BAV189 (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1))))
(assert (= BAV190 (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))
(assert (= BAV191 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV192 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1))))))
(assert (= BAV193 (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))))
(assert (= BAV194 (= ((_ extract 1 0) v1) v1)))
(assert (= BAV195 (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))
(assert (= BAV196 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV197 (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))))
(assert (= BAV198 (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))))
(assert (= BAV199 (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2))))
(assert (= BAV200 (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV201 (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)))
(assert (= BAV202 (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV203 (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0)))
(assert (= BAV204 (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV205 (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))))
(assert (= BAV206 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV207 (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))))
(assert (= BAV208 (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1))))
(assert (= BAV209 (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV210 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))))
(assert (= BAV211 (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV212 (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV213 (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))
(assert (= BAV214 (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))))
(assert (= BAV215 (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1))))
(assert (= BAV216 (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV217 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))))
(assert (= BAV218 (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3)))))
(assert (= BAV219 (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV220 (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))
(assert (= BAV221 (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))
(assert (= BAV222 (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9))))
(assert (= BAV223 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV224 (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))))))
(assert (= BAV225 (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1))))))
(assert (= BAV226 (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))))
(assert (= BAV227 (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))
(assert (= BAV228 (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))))))
(assert (= BAV229 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV230 (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV231 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV232 (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))))
(assert (= BAV233 (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1))))))
(assert (= BAV234 (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))
(assert (= BAV235 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV236 (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))))
(assert (= BAV237 (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1))))
(assert (= BAV238 (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))))
(assert (= BAV239 (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))))))
(assert (= BAV240 (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV241 (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV242 (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))
(assert (= BAV243 (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))))
(assert (= BAV244 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV245 (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))
(assert (= BAV246 (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2))))))))
(assert (= BAV247 (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))))))
(assert (= BAV248 (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))))
(assert (= BAV249 (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9)))))
(assert (= BAV250 (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1))))
(assert (= BAV251 (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))))
(assert (= BAV252 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV253 (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))
(assert (= BAV254 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV255 (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))))
(assert (= BAV256 (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))
(assert (= BAV257 (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))
(assert (= BAV258 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))
(assert (= BAV259 (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))
(assert (= BAV260 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV261 (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))))
(assert (= BAV262 (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7))))
(assert (= BAV263 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV264 (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))
(assert (= BAV265 (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))))))
(assert (= BAV266 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))))
(assert (= BAV267 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV268 (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))))
(assert (= BAV269 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV270 (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))))
(assert (= BAV271 (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))
(assert (= BAV272 (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV273 (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))
(assert (= BAV274 (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV275 (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))
(assert (= BAV276 (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV277 (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))
(assert (= BAV278 (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))
(assert (= BAV279 (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9))))
(assert (= BAV280 (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))
(assert (= BAV281 (or (ite (= (= (_ bv68 7) ((_ sign_extend 6) ((_ rotate_left 0) v2))) (xor (not (or (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ zero_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))) (xor (ite (= ((_ extract 0 0) v1) ((_ rotate_left 0) v2)) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 1) ((_ rotate_right 1) v1))) (= ((_ rotate_left 0) v2) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))))))) (not (=> (= ((_ sign_extend 3) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ sign_extend 8) v2) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))))) (or (not (= (and (= ((_ extract 1 1) ((_ zero_extend 1) v3)) ((_ extract 1 1) ((_ rotate_right 1) v1))) (= (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))) (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))) (xor (xor (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2) (ite (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3)))) (ite (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2))) (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))) (= ((_ sign_extend 8) (bvnot v2)) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))) (not (and (=> (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= v0 ((_ sign_extend 5) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))))) (= ((_ zero_extend 2) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnot ((_ zero_extend 1) v3))))))
(assert (= BAV282 (= (= (_ bv68 7) ((_ sign_extend 6) ((_ rotate_left 0) v2))) (xor (not (or (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ zero_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))) (xor (ite (= ((_ extract 0 0) v1) ((_ rotate_left 0) v2)) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 1) ((_ rotate_right 1) v1))) (= ((_ rotate_left 0) v2) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV283 (= (_ bv68 7) ((_ sign_extend 6) ((_ rotate_left 0) v2)))))
(assert (= BAV284 (xor (not (or (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ zero_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))) (xor (ite (= ((_ extract 0 0) v1) ((_ rotate_left 0) v2)) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 1) ((_ rotate_right 1) v1))) (= ((_ rotate_left 0) v2) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV285 (or (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ zero_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV286 (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ zero_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))
(assert (= BAV287 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV288 (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV289 (xor (ite (= ((_ extract 0 0) v1) ((_ rotate_left 0) v2)) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 1) ((_ rotate_right 1) v1))) (= ((_ rotate_left 0) v2) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV290 (= ((_ extract 0 0) v1) ((_ rotate_left 0) v2))))
(assert (= BAV291 (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 1) ((_ rotate_right 1) v1)))))
(assert (= BAV292 (= ((_ rotate_left 0) v2) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV293 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV294 (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV295 (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2)))))
(assert (= BAV296 (=> (= ((_ sign_extend 3) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ sign_extend 8) v2) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))))))
(assert (= BAV297 (= ((_ sign_extend 3) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))))
(assert (= BAV298 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV299 (= ((_ sign_extend 8) v2) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV300 (or (not (= (and (= ((_ extract 1 1) ((_ zero_extend 1) v3)) ((_ extract 1 1) ((_ rotate_right 1) v1))) (= (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))) (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))) (xor (xor (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2) (ite (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3)))) (ite (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2))) (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))) (= ((_ sign_extend 8) (bvnot v2)) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))) (not (and (=> (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= v0 ((_ sign_extend 5) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))))))
(assert (= BAV301 (= (and (= ((_ extract 1 1) ((_ zero_extend 1) v3)) ((_ extract 1 1) ((_ rotate_right 1) v1))) (= (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))) (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))) (xor (xor (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2) (ite (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3)))) (ite (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2))) (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))) (= ((_ sign_extend 8) (bvnot v2)) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))))
(assert (= BAV302 (and (= ((_ extract 1 1) ((_ zero_extend 1) v3)) ((_ extract 1 1) ((_ rotate_right 1) v1))) (= (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))) (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))
(assert (= BAV303 (= ((_ extract 1 1) ((_ zero_extend 1) v3)) ((_ extract 1 1) ((_ rotate_right 1) v1)))))
(assert (= BAV304 (= (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))) (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))
(assert (= BAV305 (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1))))))
(assert (= BAV306 (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))))
(assert (= BAV307 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV308 (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))))
(assert (= BAV309 (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))
(assert (= BAV310 (xor (xor (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2) (ite (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3)))) (ite (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2))) (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))) (= ((_ sign_extend 8) (bvnot v2)) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))))))
(assert (= BAV311 (xor (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2) (ite (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3)))) (ite (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2))) (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV312 (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2)))
(assert (= BAV313 (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7)))))
(assert (= BAV314 (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV315 (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3))))))
(assert (= BAV316 (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2)))))
(assert (= BAV317 (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV318 (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV319 (= ((_ sign_extend 8) (bvnot v2)) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))
(assert (= BAV320 (and (=> (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= v0 ((_ sign_extend 5) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV321 (=> (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= v0 ((_ sign_extend 5) ((_ zero_extend 1) v3))))))
(assert (= BAV322 (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))))))
(assert (= BAV323 (= v0 ((_ sign_extend 5) ((_ zero_extend 1) v3)))))
(assert (= BAV324 (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV325 (= ((_ zero_extend 2) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnot ((_ zero_extend 1) v3)))))
(check-sat-assuming ((and (and (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))))))))))) (and (ite (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (or (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (or (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))) (not (xor (xor (= ((_ zero_extend 3) (bvnot v2)) (bvnot ((_ zero_extend 1) v3))) (= ((_ sign_extend 1) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) v3)) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3))))))) (=> (ite (=> (not (or (= ((_ zero_extend 8) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv256 9)) (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))))) (ite (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))) ((_ zero_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (not (= ((_ extract 0 0) v1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2))))))) (ite (and (or (= (= ((_ zero_extend 3) v2) ((_ zero_extend 1) v3)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))) (not (ite (ite (and (= ((_ rotate_left 0) v2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (= ((_ zero_extend 5) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (_ bv68 7))) (ite (= (ite (= ((_ zero_extend 1) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))))) (= ((_ extract 1 0) v1) v1)) (= ((_ zero_extend 3) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= (_ bv256 9) ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ sign_extend 3) ((_ rotate_left 0) v2)))) (xor (= ((_ sign_extend 7) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ extract 1 1) ((_ zero_extend 1) v3)) v2)) (and (= ((_ sign_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (bvnot v2)))) v0) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 8) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))))) (= ((_ zero_extend 2) ((_ extract 1 1) ((_ rotate_right 1) v1))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))))) (ite (= (= ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (not (ite (= ((_ sign_extend 2) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (bvnot ((_ zero_extend 1) v3))) (= (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)) (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))))))))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= ((_ sign_extend 5) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (_ bv256 9)))) (=> (xor (not (and (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) (ite (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ sign_extend 2) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2))) ((_ zero_extend 2) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))))) (or (=> (= ((_ zero_extend 3) ((_ extract 0 0) v1)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))) ((_ extract 1 1) ((_ rotate_right 1) v1)))) (= ((_ sign_extend 1) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) ((_ rotate_right 1) v1)))) (= (=> (= ((_ zero_extend 8) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= (_ bv68 7) ((_ zero_extend 6) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1))))) (not (and (= ((_ sign_extend 1) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (=> (and (and (and (=> (= ((_ sign_extend 1) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ extract 1 0) v1)) (= ((_ sign_extend 5) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (_ bv256 9))) (not (= (bvnot ((_ zero_extend 1) v3)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))))) (not (or (xor (= ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ sign_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))))) (or (= ((_ sign_extend 6) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))) (_ bv68 7)) (not (= (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ zero_extend 1) ((_ rotate_left 0) v2)))))) (not (ite (and (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnot ((_ zero_extend 1) v3)) ((_ zero_extend 1) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))))) (and (=> (= ((_ zero_extend 6) (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ rotate_left 0) v2)))) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))) (= ((_ zero_extend 6) (bvnand v3 ((_ sign_extend 2) v2))) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0))) (not (ite (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (= (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (= (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)) ((_ extract 1 1) ((_ zero_extend 1) v3)))))) (or (= ((_ zero_extend 5) (bvnot ((_ zero_extend 1) v3))) (_ bv256 9)) (= ((_ sign_extend 7) ((_ rotate_right 1) v1)) (bvmul ((_ sign_extend 8) ((_ extract 0 0) v1)) v0)))))))))))) (or (ite (= (= (_ bv68 7) ((_ sign_extend 6) ((_ rotate_left 0) v2))) (xor (not (or (= (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) ((_ zero_extend 2) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (= (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))) (xor (ite (= ((_ extract 0 0) v1) ((_ rotate_left 0) v2)) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 1) ((_ rotate_right 1) v1))) (= ((_ rotate_left 0) v2) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1)))) (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) (ite (distinct ((_ sign_extend 1) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnand v3 ((_ sign_extend 2) v2))) (_ bv1 1) (_ bv0 1))))))) (not (=> (= ((_ sign_extend 3) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) (= ((_ sign_extend 8) v2) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1)))))) (or (not (= (and (= ((_ extract 1 1) ((_ zero_extend 1) v3)) ((_ extract 1 1) ((_ rotate_right 1) v1))) (= (=> (= ((_ zero_extend 1) v3) (bvmul ((_ zero_extend 3) (bvcomp ((_ sign_extend 2) ((_ rotate_right 1) v1)) ((_ zero_extend 1) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2))))) (= (bvnand v3 ((_ sign_extend 2) v2)) ((_ zero_extend 2) ((_ extract 0 0) v1)))) (= ((_ zero_extend 1) (ite (bvult (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvult ((_ extract 1 0) v1) ((_ extract 1 0) v1)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)))))) (xor (xor (= (bvcomp ((_ sign_extend 3) (bvnot v2)) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv68 7))) ((_ zero_extend 1) v3) ((_ sign_extend 3) (bvnot v2)))) v2) (ite (= v1 ((_ sign_extend 1) (ite (bvslt ((_ rotate_right 1) v1) ((_ zero_extend 1) ((_ extract 1 1) ((_ zero_extend 1) v3)))) (_ bv1 1) (_ bv0 1)))) (= (_ bv68 7) ((_ zero_extend 4) ((_ extract 3 1) ((_ zero_extend 1) v3)))) (ite (= (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) ((_ sign_extend 1) ((_ rotate_left 0) v2))) (= ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (ite (bvslt v3 ((_ zero_extend 2) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (= (ite (bvugt (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))) ((_ rotate_right 1) v1)) (_ bv1 1) (_ bv0 1)) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)))))) (= ((_ sign_extend 8) (bvnot v2)) (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))))))) (not (and (=> (= (bvsub (_ bv256 9) ((_ sign_extend 8) ((_ extract 0 0) v1))) ((_ zero_extend 7) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1))))) (= v0 ((_ sign_extend 5) ((_ zero_extend 1) v3)))) (= (bvadd (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2)) (bvxnor ((_ rotate_right 1) v1) ((_ zero_extend 1) v2))) ((_ sign_extend 1) ((_ rotate_right 0) (ite (bvslt ((_ rotate_left 0) v2) (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))))))) (= ((_ zero_extend 2) (bvand ((_ zero_extend 1) ((_ rotate_left 0) v2)) (bvor ((_ zero_extend 1) ((_ extract 0 0) (bvadd (ite (bvule ((_ sign_extend 2) ((_ extract 1 1) ((_ zero_extend 1) v3))) v3) (_ bv1 1) (_ bv0 1)) ((_ extract 0 0) v1)))) ((_ rotate_right 1) v1)))) (bvnot ((_ zero_extend 1) v3)))))))
(get-model)