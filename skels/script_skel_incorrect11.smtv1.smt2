(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const BAV184 Bool)
(declare-const BAV185 Bool)
(declare-const BAV186 Bool)
(declare-const BAV187 Bool)
(declare-const BAV188 Bool)
(declare-const BAV189 Bool)
(declare-const BAV190 Bool)
(declare-const BAV191 Bool)
(declare-const BAV192 Bool)
(declare-const BAV193 Bool)
(declare-const BAV194 Bool)
(declare-const BAV195 Bool)
(declare-const BAV196 Bool)
(declare-const BAV197 Bool)
(declare-const BAV198 Bool)
(declare-const BAV199 Bool)
(declare-const BAV200 Bool)
(declare-const BAV201 Bool)
(declare-const BAV202 Bool)
(declare-const BAV203 Bool)
(declare-const BAV204 Bool)
(declare-const BAV205 Bool)
(declare-const BAV206 Bool)
(declare-const BAV207 Bool)
(declare-const BAV208 Bool)
(declare-const BAV209 Bool)
(declare-const BAV210 Bool)
(declare-const BAV211 Bool)
(declare-const BAV212 Bool)
(declare-const BAV213 Bool)
(declare-const BAV214 Bool)
(declare-const BAV215 Bool)
(declare-const BAV216 Bool)
(declare-const BAV217 Bool)
(declare-const BAV218 Bool)
(declare-const BAV219 Bool)
(declare-const BAV220 Bool)
(declare-const BAV221 Bool)
(declare-const BAV222 Bool)
(declare-const BAV223 Bool)
(declare-const BAV224 Bool)
(declare-const BAV225 Bool)
(declare-const BAV226 Bool)
(declare-const BAV227 Bool)
(declare-const BAV228 Bool)
(declare-const BAV229 Bool)
(declare-const BAV230 Bool)
(declare-const BAV231 Bool)
(declare-const BAV232 Bool)
(declare-const BAV233 Bool)
(declare-const BAV234 Bool)
(declare-const BAV235 Bool)
(declare-const BAV236 Bool)
(declare-const BAV237 Bool)
(declare-const BAV238 Bool)
(declare-const BAV239 Bool)
(declare-const BAV240 Bool)
(declare-const BAV241 Bool)
(declare-const BAV242 Bool)
(declare-const BAV243 Bool)
(declare-const BAV244 Bool)
(declare-const BAV245 Bool)
(declare-const BAV246 Bool)
(declare-const BAV247 Bool)
(declare-const BAV248 Bool)
(declare-const BAV249 Bool)
(declare-const BAV250 Bool)
(declare-const BAV251 Bool)
(declare-const BAV252 Bool)
(declare-const BAV253 Bool)
(declare-const BAV254 Bool)
(declare-const BAV255 Bool)
(declare-const BAV256 Bool)
(declare-const BAV257 Bool)
(declare-const BAV258 Bool)
(declare-const BAV259 Bool)
(declare-const BAV260 Bool)
(declare-const BAV261 Bool)
(declare-const BAV262 Bool)
(declare-const BAV263 Bool)
(declare-const BAV264 Bool)
(declare-const BAV265 Bool)
(declare-const BAV266 Bool)
(declare-const BAV267 Bool)
(declare-const BAV268 Bool)
(declare-const BAV269 Bool)
(declare-const BAV270 Bool)
(declare-const BAV271 Bool)
(declare-const BAV272 Bool)
(declare-const BAV273 Bool)
(declare-const BAV274 Bool)
(declare-const BAV275 Bool)
(declare-const BAV276 Bool)
(declare-const BAV277 Bool)
(declare-const BAV278 Bool)
(declare-const BAV279 Bool)
(declare-const BAV280 Bool)
(declare-const BAV281 Bool)
(declare-const BAV282 Bool)
(declare-const BAV283 Bool)
(declare-const BAV284 Bool)
(declare-const BAV285 Bool)
(declare-const BAV286 Bool)
(declare-const BAV287 Bool)
(declare-const BAV288 Bool)
(declare-const BAV289 Bool)
(declare-const BAV290 Bool)
(declare-const BAV291 Bool)
(declare-const BAV292 Bool)
(declare-const BAV293 Bool)
(declare-const BAV294 Bool)
(declare-const BAV295 Bool)
(declare-const BAV296 Bool)
(declare-const BAV297 Bool)
(declare-const BAV298 Bool)
(declare-const BAV299 Bool)
(declare-sort Index 0)
(declare-sort Element 0)
(declare-fun v0 () (Array Index Element))
(declare-fun v1 () Index)
(declare-fun v2 () Element)
(declare-fun v3 () Element)
(declare-fun v4 () Element)
(assert (= BAV1 (and (= (ite (ite (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0)) (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))) (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))) (ite (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0)) (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))) (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))) (not (ite (xor (distinct (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)) (or (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))) (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))))) (distinct v2 (ite (= v2 v3) v4 v2)) (and (= (ite (distinct v0 v0) v3 v3) v3) (xor (distinct (ite (= v2 v3) v4 v2) v4) (distinct v1 v1)))))) (= (= (not (= v0 (ite (distinct v0 v0) v0 v0))) (xor (distinct v3 v3) (or (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3)) (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1))))) (and (distinct (ite (distinct v2 v4) v1 v1) v1) (distinct v2 v2)))) (or (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))) (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)))))))
(assert (= BAV2 (= (ite (ite (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0)) (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))) (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))) (ite (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0)) (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))) (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))) (not (ite (xor (distinct (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)) (or (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))) (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))))) (distinct v2 (ite (= v2 v3) v4 v2)) (and (= (ite (distinct v0 v0) v3 v3) v3) (xor (distinct (ite (= v2 v3) v4 v2) v4) (distinct v1 v1)))))) (= (= (not (= v0 (ite (distinct v0 v0) v0 v0))) (xor (distinct v3 v3) (or (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3)) (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1))))) (and (distinct (ite (distinct v2 v4) v1 v1) v1) (distinct v2 v2))))))
(assert (= BAV3 (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0))))
(assert (= BAV4 (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))))
(assert (= BAV5 (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))))
(assert (= BAV6 (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3)))))
(assert (= BAV7 (= v4 v4)))
(assert (= BAV8 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))))
(assert (= BAV9 (distinct v2 v4)))
(assert (= BAV10 (= v2 v3)))
(assert (= BAV11 (= v2 v3)))
(assert (= BAV12 (distinct v1 v1)))
(assert (= BAV13 (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV14 (= v3 v3)))
(assert (= BAV15 (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))
(assert (= BAV16 (distinct v0 v0)))
(assert (= BAV17 (distinct v2 v4)))
(assert (= BAV18 (distinct v3 v3)))
(assert (= BAV19 (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))))
(assert (= BAV20 (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))))
(assert (= BAV21 (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3)))))
(assert (= BAV22 (= v4 v4)))
(assert (= BAV23 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))))
(assert (= BAV24 (distinct v2 v4)))
(assert (= BAV25 (= v2 v3)))
(assert (= BAV26 (= v2 v3)))
(assert (= BAV27 (distinct v1 v1)))
(assert (= BAV28 (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV29 (= v3 v3)))
(assert (= BAV30 (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))
(assert (= BAV31 (distinct v0 v0)))
(assert (= BAV32 (distinct v2 v4)))
(assert (= BAV33 (distinct v3 v3)))
(assert (= BAV34 (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))))
(assert (= BAV35 (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))))
(assert (= BAV36 (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3)))))
(assert (= BAV37 (= v4 v4)))
(assert (= BAV38 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))))
(assert (= BAV39 (distinct v2 v4)))
(assert (= BAV40 (= v2 v3)))
(assert (= BAV41 (= v2 v3)))
(assert (= BAV42 (distinct v1 v1)))
(assert (= BAV43 (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV44 (= v3 v3)))
(assert (= BAV45 (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))
(assert (= BAV46 (distinct v0 v0)))
(assert (= BAV47 (distinct v2 v4)))
(assert (= BAV48 (distinct v3 v3)))
(assert (= BAV49 (distinct v0 v0)))
(assert (= BAV50 (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2)))))))
(assert (= BAV51 (distinct v3 (ite (distinct v0 v0) v3 v3))))
(assert (= BAV52 (distinct v0 v0)))
(assert (= BAV53 (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))))
(assert (= BAV54 (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4))))
(assert (= BAV55 (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV56 (distinct v0 v0)))
(assert (= BAV57 (distinct v2 v4)))
(assert (= BAV58 (= v2 v3)))
(assert (= BAV59 (distinct v0 v0)))
(assert (= BAV60 (distinct v2 v4)))
(assert (= BAV61 (distinct v2 v4)))
(assert (= BAV62 (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2)))))
(assert (= BAV63 (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0)))
(assert (= BAV64 (distinct v2 v4)))
(assert (= BAV65 (= v2 v3)))
(assert (= BAV66 (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))
(assert (= BAV67 (distinct v1 v1)))
(assert (= BAV68 (= v2 v3)))
(assert (= BAV69 (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))))
(assert (= BAV70 (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))))
(assert (= BAV71 (distinct v4 (ite (= v2 v3) v4 v2))))
(assert (= BAV72 (= v2 v3)))
(assert (= BAV73 (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))
(assert (= BAV74 (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)))))
(assert (= BAV75 (= v2 v3)))
(assert (= BAV76 (distinct v2 v4)))
(assert (= BAV77 (= v2 v3)))
(assert (= BAV78 (= v2 v3)))
(assert (= BAV79 (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))
(assert (= BAV80 (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1)))
(assert (= BAV81 (distinct v1 v1)))
(assert (= BAV82 (distinct v2 v4)))
(assert (= BAV83 (distinct v0 v0)))
(assert (= BAV84 (distinct v2 v4)))
(assert (= BAV85 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))
(assert (= BAV86 (distinct v2 v4)))
(assert (= BAV87 (= v2 v3)))
(assert (= BAV88 (= v2 v3)))
(assert (= BAV89 (= v2 v3)))
(assert (= BAV90 (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))))
(assert (= BAV91 (distinct v4 (ite (= v2 v3) v4 v2))))
(assert (= BAV92 (= v2 v3)))
(assert (= BAV93 (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))
(assert (= BAV94 (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)))))
(assert (= BAV95 (= v2 v3)))
(assert (= BAV96 (distinct v2 v4)))
(assert (= BAV97 (= v2 v3)))
(assert (= BAV98 (= v2 v3)))
(assert (= BAV99 (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))
(assert (= BAV100 (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1)))
(assert (= BAV101 (distinct v1 v1)))
(assert (= BAV102 (distinct v2 v4)))
(assert (= BAV103 (distinct v0 v0)))
(assert (= BAV104 (distinct v2 v4)))
(assert (= BAV105 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))
(assert (= BAV106 (distinct v2 v4)))
(assert (= BAV107 (= v2 v3)))
(assert (= BAV108 (= v2 v3)))
(assert (= BAV109 (= v2 v3)))
(assert (= BAV110 (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0))))
(assert (= BAV111 (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))))
(assert (= BAV112 (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))))
(assert (= BAV113 (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3)))))
(assert (= BAV114 (= v4 v4)))
(assert (= BAV115 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))))
(assert (= BAV116 (distinct v2 v4)))
(assert (= BAV117 (= v2 v3)))
(assert (= BAV118 (= v2 v3)))
(assert (= BAV119 (distinct v1 v1)))
(assert (= BAV120 (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV121 (= v3 v3)))
(assert (= BAV122 (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))
(assert (= BAV123 (distinct v0 v0)))
(assert (= BAV124 (distinct v2 v4)))
(assert (= BAV125 (distinct v3 v3)))
(assert (= BAV126 (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))))
(assert (= BAV127 (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))))
(assert (= BAV128 (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3)))))
(assert (= BAV129 (= v4 v4)))
(assert (= BAV130 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))))
(assert (= BAV131 (distinct v2 v4)))
(assert (= BAV132 (= v2 v3)))
(assert (= BAV133 (= v2 v3)))
(assert (= BAV134 (distinct v1 v1)))
(assert (= BAV135 (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV136 (= v3 v3)))
(assert (= BAV137 (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))
(assert (= BAV138 (distinct v0 v0)))
(assert (= BAV139 (distinct v2 v4)))
(assert (= BAV140 (distinct v3 v3)))
(assert (= BAV141 (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))))
(assert (= BAV142 (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))))
(assert (= BAV143 (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3)))))
(assert (= BAV144 (= v4 v4)))
(assert (= BAV145 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))))
(assert (= BAV146 (distinct v2 v4)))
(assert (= BAV147 (= v2 v3)))
(assert (= BAV148 (= v2 v3)))
(assert (= BAV149 (distinct v1 v1)))
(assert (= BAV150 (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV151 (= v3 v3)))
(assert (= BAV152 (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))))
(assert (= BAV153 (distinct v0 v0)))
(assert (= BAV154 (distinct v2 v4)))
(assert (= BAV155 (distinct v3 v3)))
(assert (= BAV156 (distinct v0 v0)))
(assert (= BAV157 (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2)))))))
(assert (= BAV158 (distinct v3 (ite (distinct v0 v0) v3 v3))))
(assert (= BAV159 (distinct v0 v0)))
(assert (= BAV160 (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))))
(assert (= BAV161 (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4))))
(assert (= BAV162 (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))))
(assert (= BAV163 (distinct v0 v0)))
(assert (= BAV164 (distinct v2 v4)))
(assert (= BAV165 (= v2 v3)))
(assert (= BAV166 (distinct v0 v0)))
(assert (= BAV167 (distinct v2 v4)))
(assert (= BAV168 (distinct v2 v4)))
(assert (= BAV169 (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2)))))
(assert (= BAV170 (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0)))
(assert (= BAV171 (distinct v2 v4)))
(assert (= BAV172 (= v2 v3)))
(assert (= BAV173 (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))
(assert (= BAV174 (distinct v1 v1)))
(assert (= BAV175 (= v2 v3)))
(assert (= BAV176 (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))))
(assert (= BAV177 (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))))
(assert (= BAV178 (distinct v4 (ite (= v2 v3) v4 v2))))
(assert (= BAV179 (= v2 v3)))
(assert (= BAV180 (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))
(assert (= BAV181 (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)))))
(assert (= BAV182 (= v2 v3)))
(assert (= BAV183 (distinct v2 v4)))
(assert (= BAV184 (= v2 v3)))
(assert (= BAV185 (= v2 v3)))
(assert (= BAV186 (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))
(assert (= BAV187 (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1)))
(assert (= BAV188 (distinct v1 v1)))
(assert (= BAV189 (distinct v2 v4)))
(assert (= BAV190 (distinct v0 v0)))
(assert (= BAV191 (distinct v2 v4)))
(assert (= BAV192 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))
(assert (= BAV193 (distinct v2 v4)))
(assert (= BAV194 (= v2 v3)))
(assert (= BAV195 (= v2 v3)))
(assert (= BAV196 (= v2 v3)))
(assert (= BAV197 (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))))
(assert (= BAV198 (distinct v4 (ite (= v2 v3) v4 v2))))
(assert (= BAV199 (= v2 v3)))
(assert (= BAV200 (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))
(assert (= BAV201 (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)))))
(assert (= BAV202 (= v2 v3)))
(assert (= BAV203 (distinct v2 v4)))
(assert (= BAV204 (= v2 v3)))
(assert (= BAV205 (= v2 v3)))
(assert (= BAV206 (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2)))))
(assert (= BAV207 (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1)))
(assert (= BAV208 (distinct v1 v1)))
(assert (= BAV209 (distinct v2 v4)))
(assert (= BAV210 (distinct v0 v0)))
(assert (= BAV211 (distinct v2 v4)))
(assert (= BAV212 (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))
(assert (= BAV213 (distinct v2 v4)))
(assert (= BAV214 (= v2 v3)))
(assert (= BAV215 (= v2 v3)))
(assert (= BAV216 (= v2 v3)))
(assert (= BAV217 (xor (distinct (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)) (or (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))) (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0))))))))
(assert (= BAV218 (distinct (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))))
(assert (= BAV219 (= v2 v3)))
(assert (= BAV220 (= v2 v3)))
(assert (= BAV221 (or (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))) (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))))))
(assert (= BAV222 (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2))))))
(assert (= BAV223 (= v3 v2)))
(assert (= BAV224 (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))))
(assert (= BAV225 (distinct v1 v1)))
(assert (= BAV226 (distinct v2 v4)))
(assert (= BAV227 (= v2 v3)))
(assert (= BAV228 (= v2 v3)))
(assert (= BAV229 (= v2 v3)))
(assert (= BAV230 (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))))
(assert (= BAV231 (distinct v1 v1)))
(assert (= BAV232 (distinct v0 v0)))
(assert (= BAV233 (distinct v2 v4)))
(assert (= BAV234 (= v2 v3)))
(assert (= BAV235 (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2))))))
(assert (= BAV236 (= v3 v2)))
(assert (= BAV237 (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))))
(assert (= BAV238 (distinct v1 v1)))
(assert (= BAV239 (distinct v2 v4)))
(assert (= BAV240 (= v2 v3)))
(assert (= BAV241 (= v2 v3)))
(assert (= BAV242 (= v2 v3)))
(assert (= BAV243 (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))))
(assert (= BAV244 (distinct v1 v1)))
(assert (= BAV245 (distinct v0 v0)))
(assert (= BAV246 (distinct v2 v4)))
(assert (= BAV247 (= v2 v3)))
(assert (= BAV248 (distinct v2 (ite (= v2 v3) v4 v2))))
(assert (= BAV249 (= v2 v3)))
(assert (= BAV250 (and (= (ite (distinct v0 v0) v3 v3) v3) (xor (distinct (ite (= v2 v3) v4 v2) v4) (distinct v1 v1)))))
(assert (= BAV251 (= (ite (distinct v0 v0) v3 v3) v3)))
(assert (= BAV252 (distinct v0 v0)))
(assert (= BAV253 (xor (distinct (ite (= v2 v3) v4 v2) v4) (distinct v1 v1))))
(assert (= BAV254 (distinct (ite (= v2 v3) v4 v2) v4)))
(assert (= BAV255 (= v2 v3)))
(assert (= BAV256 (distinct v1 v1)))
(assert (= BAV257 (= (= (not (= v0 (ite (distinct v0 v0) v0 v0))) (xor (distinct v3 v3) (or (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3)) (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1))))) (and (distinct (ite (distinct v2 v4) v1 v1) v1) (distinct v2 v2)))))
(assert (= BAV258 (= (not (= v0 (ite (distinct v0 v0) v0 v0))) (xor (distinct v3 v3) (or (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3)) (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1)))))))
(assert (= BAV259 (= v0 (ite (distinct v0 v0) v0 v0))))
(assert (= BAV260 (distinct v0 v0)))
(assert (= BAV261 (xor (distinct v3 v3) (or (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3)) (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1))))))
(assert (= BAV262 (distinct v3 v3)))
(assert (= BAV263 (or (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3)) (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1)))))
(assert (= BAV264 (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3))))
(assert (= BAV265 (distinct v1 v1)))
(assert (= BAV266 (distinct v1 v1)))
(assert (= BAV267 (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1))))
(assert (= BAV268 (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1))))
(assert (= BAV269 (distinct v1 v1)))
(assert (= BAV270 (distinct v0 v0)))
(assert (= BAV271 (distinct v1 v1)))
(assert (= BAV272 (distinct v0 v0)))
(assert (= BAV273 (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1)))
(assert (= BAV274 (= v2 v3)))
(assert (= BAV275 (distinct v0 v0)))
(assert (= BAV276 (distinct v2 v4)))
(assert (= BAV277 (and (distinct (ite (distinct v2 v4) v1 v1) v1) (distinct v2 v2))))
(assert (= BAV278 (distinct (ite (distinct v2 v4) v1 v1) v1)))
(assert (= BAV279 (distinct v2 v4)))
(assert (= BAV280 (distinct v2 v2)))
(assert (= BAV281 (or (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))) (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))))))
(assert (= BAV282 (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)))))
(assert (= BAV283 (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))))
(assert (= BAV284 (= (ite (distinct v0 v0) v3 v3) v2)))
(assert (= BAV285 (distinct v0 v0)))
(assert (= BAV286 (distinct v2 v4)))
(assert (= BAV287 (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))))
(assert (= BAV288 (= (ite (distinct v0 v0) v3 v3) v2)))
(assert (= BAV289 (distinct v0 v0)))
(assert (= BAV290 (distinct v2 v4)))
(assert (= BAV291 (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)))))
(assert (= BAV292 (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))))
(assert (= BAV293 (= (ite (distinct v0 v0) v3 v3) v2)))
(assert (= BAV294 (distinct v0 v0)))
(assert (= BAV295 (distinct v2 v4)))
(assert (= BAV296 (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))))
(assert (= BAV297 (= (ite (distinct v0 v0) v3 v3) v2)))
(assert (= BAV298 (distinct v0 v0)))
(assert (= BAV299 (distinct v2 v4)))
(check-sat-assuming ((and (= (ite (ite (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0)) (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))) (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))) (ite (xor (ite (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3)) (xor (and (and (= v4 v4) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (distinct v1 v1) v3 v3))) (or (= v3 v3) (distinct v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)))) (distinct v3 v3))) (distinct v0 v0)) (or (distinct v3 (ite (distinct v0 v0) v3 v3)) (xor (= (= (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1) (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1))) (distinct v2 v4)) (xor (= (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)) v0) (= (ite (distinct v1 v1) v3 v3) (ite (= v2 v3) v4 v2))))) (xor (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))) (= (not (distinct v4 (ite (= v2 v3) v4 v2))) (xor (distinct (ite (= v2 v3) v0 v0) (ite (distinct v2 v4) (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0))) (=> (= (ite (distinct v1 v1) (ite (distinct v2 v4) v1 v1) (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1) (= (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)) (ite (= v2 v3) v4 v2))))))) (not (ite (xor (distinct (ite (= v2 v3) v0 v0) (ite (= v2 v3) v0 v0)) (or (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))) (ite (xor (= v3 v2) (= (ite (distinct v1 v1) v3 v3) (ite (distinct v2 v4) (ite (= v2 v3) v4 v2) (ite (= v2 v3) v4 v2)))) (= v2 v3) (distinct (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) (ite (distinct v2 v4) v0 (ite (= v2 v3) v0 v0)))))) (distinct v2 (ite (= v2 v3) v4 v2)) (and (= (ite (distinct v0 v0) v3 v3) v3) (xor (distinct (ite (= v2 v3) v4 v2) v4) (distinct v1 v1)))))) (= (= (not (= v0 (ite (distinct v0 v0) v0 v0))) (xor (distinct v3 v3) (or (= (ite (distinct v1 v1) v3 v3) (ite (distinct v1 v1) v3 v3)) (and (distinct (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1) (select (ite (distinct v1 v1) (ite (distinct v0 v0) v0 v0) v0) v1)) (= (ite (= v2 v3) v1 (ite (distinct v0 v0) (ite (distinct v2 v4) v1 v1) v1)) v1))))) (and (distinct (ite (distinct v2 v4) v1 v1) v1) (distinct v2 v2)))) (or (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4))) (and (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)) (and (= (ite (distinct v0 v0) v3 v3) v2) (distinct v2 v4)))))))
(get-model)