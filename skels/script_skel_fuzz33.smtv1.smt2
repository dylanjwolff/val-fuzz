(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const GEN185 Int)
(declare-const GEN184 Int)
(declare-const GEN183 Int)
(declare-const GEN182 Int)
(declare-const GEN181 Int)
(declare-const GEN180 Int)
(declare-const GEN179 Int)
(declare-const GEN178 Int)
(declare-const GEN177 Int)
(declare-const GEN176 Int)
(declare-const GEN175 Int)
(declare-const GEN174 Int)
(declare-const GEN173 Int)
(declare-const GEN172 Int)
(declare-const GEN171 Int)
(declare-const GEN170 Int)
(declare-const GEN169 Int)
(declare-const GEN168 Int)
(declare-const GEN167 Int)
(declare-const GEN166 Int)
(declare-const GEN165 Int)
(declare-const GEN164 Int)
(declare-const GEN163 Int)
(declare-const GEN162 Int)
(declare-const GEN161 Int)
(declare-const GEN160 Int)
(declare-const GEN159 Int)
(declare-const GEN158 Int)
(declare-const GEN157 Int)
(declare-const GEN156 Int)
(declare-const GEN155 Int)
(declare-const GEN154 Int)
(declare-const GEN153 Int)
(declare-const GEN152 Int)
(declare-const GEN151 Int)
(declare-const GEN150 Int)
(declare-const GEN149 Int)
(declare-const GEN148 Int)
(declare-const GEN147 Int)
(declare-const GEN146 Int)
(declare-const GEN145 Int)
(declare-const GEN144 Int)
(declare-const GEN143 Int)
(declare-const GEN142 Int)
(declare-const GEN141 Int)
(declare-const GEN140 Int)
(declare-const GEN139 Int)
(declare-const GEN138 Int)
(declare-const GEN137 Int)
(declare-const GEN136 Int)
(declare-const GEN135 Int)
(declare-const GEN134 Int)
(declare-const GEN133 Int)
(declare-const GEN132 Int)
(declare-const GEN131 Int)
(declare-const GEN130 Int)
(declare-const GEN129 Int)
(declare-const GEN128 Int)
(declare-const GEN127 Int)
(declare-const GEN126 Int)
(declare-const GEN125 Int)
(declare-const GEN124 Int)
(declare-const GEN123 Int)
(declare-const GEN122 Int)
(declare-const GEN121 Int)
(declare-const GEN120 Int)
(declare-const GEN119 Int)
(declare-const GEN118 Int)
(declare-const GEN117 Int)
(declare-const GEN116 Int)
(declare-const GEN115 Int)
(declare-const GEN114 Int)
(declare-const GEN113 Int)
(declare-const GEN112 Int)
(declare-const GEN111 Int)
(declare-const GEN110 Int)
(declare-const GEN109 Int)
(declare-const GEN108 Int)
(declare-const GEN107 Int)
(declare-const GEN106 Int)
(declare-const GEN105 Int)
(declare-const GEN104 Int)
(declare-const GEN103 Int)
(declare-const GEN102 Int)
(declare-const GEN101 Int)
(declare-const GEN100 Int)
(declare-const GEN99 Int)
(declare-const GEN98 Int)
(declare-const GEN97 Int)
(declare-const GEN96 Int)
(declare-const GEN95 Int)
(declare-const GEN94 Int)
(declare-const GEN93 Int)
(declare-const GEN92 Int)
(declare-const GEN91 Int)
(declare-const GEN90 Int)
(declare-const GEN89 Int)
(declare-const GEN88 Int)
(declare-const GEN87 Int)
(declare-const GEN86 Int)
(declare-const GEN85 Int)
(declare-const GEN84 Int)
(declare-const GEN83 Int)
(declare-const GEN82 Int)
(declare-const GEN81 Int)
(declare-const GEN80 Int)
(declare-const GEN79 Int)
(declare-const GEN78 Int)
(declare-const GEN77 Int)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () (_ BitVec 4))
(declare-fun v1 () (_ BitVec 4))
(assert (= BAV1 (and (or (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1)))) (bvsle v1 ((_ zero_extend 0) v0))) (or (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv9 4))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (or (not (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvsgt (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (or (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (not (bvsle v1 ((_ zero_extend 0) v0)))) (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (not (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0))))) (or (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0))) (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))) (or (not (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))) (not (bvslt ((_ sign_extend 2) (ite (bvuge (_ bv9 4) (bvadd (bvnot v0) (_ bv9 4))) (_ bv1 1) (_ bv0 1))) ((_ extract 3 1) (_ bv12 4)))) (not (bvugt (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))) (or (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))) (or (not (bvugt (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (bvsge (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv9 4)) (not (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))) (or (not (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvsgt (bvsub (_ bv9 4) (_ bv3 4)) (bvsub (bvnot v0) (bvnot v0)))) (not (= ((_ sign_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv12 4)))) (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (distinct (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv12 4))) (or (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvuge (bvadd (bvnot v0) (_ bv9 4)) ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (not (bvuge (bvsub (bvnot v0) (bvnot v0)) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))))) (or (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (or (bvule (_ bv1 4) ((_ zero_extend 2) (bvneg ((_ extract 3 2) v1)))) (bvule ((_ zero_extend 2) ((_ extract 3 2) v1)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (or (not (bvule (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvadd (bvnot v0) (_ bv9 4)))) (not (bvuge (bvadd (bvnot v0) (_ bv9 4)) ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))))) (not (bvslt ((_ sign_extend 2) (ite (bvuge (_ bv9 4) (bvadd (bvnot v0) (_ bv9 4))) (_ bv1 1) (_ bv0 1))) ((_ extract 3 1) (_ bv12 4))))) (or (not (bvsle (_ bv9 4) ((_ sign_extend 3) (ite (bvugt ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))) (_ bv9 4)) (_ bv1 1) (_ bv0 1))))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (bvsgt (bvsub (_ bv9 4) (_ bv3 4)) (bvsub (bvnot v0) (bvnot v0)))) (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsle v1 ((_ zero_extend 0) v0))) (not (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)))))) (or (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (not (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)))) (bvuge ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (bvand (_ bv12 4) v0))) (or (bvult ((_ sign_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (bvsle ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (_ bv3 4))) (or (not (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (bvule (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (distinct ((_ zero_extend 3) (ite (bvslt (_ bv12 4) (_ bv3 4)) (_ bv1 1) (_ bv0 1))) (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (_ bv1 1) (_ bv0 1)))) (not (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))))) (or (bvuge (bvand (_ bv12 4) v0) ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))) (or (not (bvuge (_ bv9 4) (bvsub (bvnot v0) (bvnot v0)))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (bvand (_ bv12 4) v0)))) (or (not (bvule ((_ zero_extend 2) ((_ extract 3 2) v1)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))) (not (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))) (not (bvsgt (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (or (not (bvugt (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) ((_ sign_extend 2) ((_ extract 3 2) v1)))) (bvuge (bvsub (bvnot v0) (bvnot v0)) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (not (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV2 (or (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1)))) (bvsle v1 ((_ zero_extend 0) v0)))))
(assert (= BAV3 (or (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv9 4))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))))))
(assert (= BAV4 (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV5 (or (not (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvsgt (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV6 (or (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (not (bvsle v1 ((_ zero_extend 0) v0))))))
(assert (= BAV7 (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV8 (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV9 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV10 (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (not (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)))))))
(assert (= BAV11 (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV12 (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV13 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV14 (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV15 (or (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0))) (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV16 (or (not (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))) (not (bvslt ((_ sign_extend 2) (ite (bvuge (_ bv9 4) (bvadd (bvnot v0) (_ bv9 4))) (_ bv1 1) (_ bv0 1))) ((_ extract 3 1) (_ bv12 4)))) (not (bvugt (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV17 (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV18 (or (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV19 (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV20 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV21 (or (not (bvugt (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (bvsge (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv9 4)) (not (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))))))
(assert (= BAV22 (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV23 (or (not (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvsgt (bvsub (_ bv9 4) (_ bv3 4)) (bvsub (bvnot v0) (bvnot v0)))) (not (= ((_ sign_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv12 4))))))
(assert (= BAV24 (= ((_ sign_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv12 4))))
(assert (= BAV25 (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (distinct (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv12 4)))))
(assert (= BAV26 (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV27 (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV28 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV29 (distinct (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))))
(assert (= BAV30 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV31 (or (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvuge (bvadd (bvnot v0) (_ bv9 4)) ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (not (bvuge (bvsub (bvnot v0) (bvnot v0)) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV32 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV33 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV34 (or (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV35 (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV36 (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV37 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV38 (or (bvule (_ bv1 4) ((_ zero_extend 2) (bvneg ((_ extract 3 2) v1)))) (bvule ((_ zero_extend 2) ((_ extract 3 2) v1)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))))))
(assert (= BAV39 (or (not (bvule (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvadd (bvnot v0) (_ bv9 4)))) (not (bvuge (bvadd (bvnot v0) (_ bv9 4)) ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))))) (not (bvslt ((_ sign_extend 2) (ite (bvuge (_ bv9 4) (bvadd (bvnot v0) (_ bv9 4))) (_ bv1 1) (_ bv0 1))) ((_ extract 3 1) (_ bv12 4)))))))
(assert (= BAV40 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV41 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV42 (or (not (bvsle (_ bv9 4) ((_ sign_extend 3) (ite (bvugt ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))) (_ bv9 4)) (_ bv1 1) (_ bv0 1))))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (bvsgt (bvsub (_ bv9 4) (_ bv3 4)) (bvsub (bvnot v0) (bvnot v0))))))
(assert (= BAV43 (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsle v1 ((_ zero_extend 0) v0))) (not (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV44 (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV45 (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV46 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV47 (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV48 (or (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (not (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)))) (bvuge ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (bvand (_ bv12 4) v0)))))
(assert (= BAV49 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV50 (or (bvult ((_ sign_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (bvsle ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (_ bv3 4)))))
(assert (= BAV51 (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV52 (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4))))))
(assert (= BAV53 (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4)))))
(assert (= BAV54 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV55 (or (not (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (bvule (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (distinct ((_ zero_extend 3) (ite (bvslt (_ bv12 4) (_ bv3 4)) (_ bv1 1) (_ bv0 1))) (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (_ bv1 1) (_ bv0 1)))) (not (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))))))
(assert (= BAV56 (distinct ((_ zero_extend 3) (ite (bvslt (_ bv12 4) (_ bv3 4)) (_ bv1 1) (_ bv0 1))) (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))))))
(assert (= BAV57 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV58 (or (bvuge (bvand (_ bv12 4) v0) ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))))))
(assert (= BAV59 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV60 (or (not (bvuge (_ bv9 4) (bvsub (bvnot v0) (bvnot v0)))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (bvand (_ bv12 4) v0))))))
(assert (= BAV61 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV62 (or (not (bvule ((_ zero_extend 2) ((_ extract 3 2) v1)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))) (not (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))) (not (bvsgt (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV63 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV64 (or (not (bvugt (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) ((_ sign_extend 2) ((_ extract 3 2) v1)))) (bvuge (bvsub (bvnot v0) (bvnot v0)) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (not (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV65 (= (_ bv3 4) ((_ zero_extend 0) v0))))
(assert (= BAV66 (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))
(check-sat-assuming ((and (or (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1)))) (bvsle v1 ((_ zero_extend 0) v0))) (or (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv9 4))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (or (not (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvsgt (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (or (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (not (bvsle v1 ((_ zero_extend 0) v0)))) (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (not (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0))))) (or (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0))) (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))) (or (not (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))) (not (bvslt ((_ sign_extend 2) (ite (bvuge (_ bv9 4) (bvadd (bvnot v0) (_ bv9 4))) (_ bv1 1) (_ bv0 1))) ((_ extract 3 1) (_ bv12 4)))) (not (bvugt (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))) (or (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))) (or (not (bvugt (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (bvsge (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv9 4)) (not (distinct (bvnot v0) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))) (or (not (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvsgt (bvsub (_ bv9 4) (_ bv3 4)) (bvsub (bvnot v0) (bvnot v0)))) (not (= ((_ sign_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv12 4)))) (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (distinct (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv12 4))) (or (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvuge (bvadd (bvnot v0) (_ bv9 4)) ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (not (bvuge (bvsub (bvnot v0) (bvnot v0)) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))))) (or (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (or (bvule (_ bv1 4) ((_ zero_extend 2) (bvneg ((_ extract 3 2) v1)))) (bvule ((_ zero_extend 2) ((_ extract 3 2) v1)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (or (not (bvule (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvadd (bvnot v0) (_ bv9 4)))) (not (bvuge (bvadd (bvnot v0) (_ bv9 4)) ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))))) (not (bvslt ((_ sign_extend 2) (ite (bvuge (_ bv9 4) (bvadd (bvnot v0) (_ bv9 4))) (_ bv1 1) (_ bv0 1))) ((_ extract 3 1) (_ bv12 4))))) (or (not (bvsle (_ bv9 4) ((_ sign_extend 3) (ite (bvugt ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1))) (_ bv9 4)) (_ bv1 1) (_ bv0 1))))) (not (bvuge ((_ sign_extend 0) (_ bv9 4)) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (bvsgt (bvsub (_ bv9 4) (_ bv3 4)) (bvsub (bvnot v0) (bvnot v0)))) (or (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsle v1 ((_ zero_extend 0) v0))) (not (= ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) ((_ zero_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)))))) (or (bvslt ((_ extract 3 2) v1) (bvneg ((_ extract 3 2) v1))) (not (bvule (_ bv1 4) (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)))) (bvuge ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (bvand (_ bv12 4) v0))) (or (bvult ((_ sign_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (not (distinct (ite (= (_ bv1 1) ((_ extract 0 0) (bvadd (bvnot v0) (_ bv9 4)))) (ite (= (_ bv1 1) ((_ extract 0 0) (_ bv12 4))) (bvnot v0) (_ bv9 4)) (_ bv1 4)) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (bvsle ((_ sign_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (_ bv3 4))) (or (not (bvsle (_ bv9 4) ((_ zero_extend 3) ((_ rotate_right 0) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))))) (bvule (bvlshr (_ bv3 4) (bvand (_ bv12 4) v0)) ((_ sign_extend 3) (ite (distinct ((_ zero_extend 3) (ite (bvslt (_ bv12 4) (_ bv3 4)) (_ bv1 1) (_ bv0 1))) (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))))) (_ bv1 1) (_ bv0 1)))) (not (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))))) (or (bvuge (bvand (_ bv12 4) v0) ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (bvule (bvsub (bvnot v0) (bvnot v0)) ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))) (or (not (bvuge (_ bv9 4) (bvsub (bvnot v0) (bvnot v0)))) (bvuge v1 ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1))) (bvand (_ bv12 4) v0)))) (or (not (bvule ((_ zero_extend 2) ((_ extract 3 2) v1)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))))) (not (bvslt (bvadd ((_ zero_extend 0) v0) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))))) (not (bvsgt (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1)) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))) (or (not (bvugt (bvnor (bvadd (bvnot v0) (_ bv9 4)) (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4)))) ((_ sign_extend 2) ((_ extract 3 2) v1)))) (bvuge (bvsub (bvnot v0) (bvnot v0)) ((_ zero_extend 3) (ite (= (_ bv3 4) ((_ zero_extend 0) v0)) (_ bv1 1) (_ bv0 1)))) (not (distinct (bvlshr ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0))) (bvadd (bvnot v0) (_ bv9 4))) ((_ sign_extend 3) (ite (bvugt ((_ sign_extend 3) (ite (bvuge (_ bv9 4) (bvnot v0)) (_ bv1 1) (_ bv0 1))) (bvmul (bvnot ((_ repeat 1) (bvsub (bvnot v0) (bvnot v0)))) ((_ zero_extend 3) (ite (bvsle v0 ((_ zero_extend 3) (ite (bvule (_ bv9 4) (_ bv12 4)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))))))
(get-model)