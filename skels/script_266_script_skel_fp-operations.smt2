(set-info :source "Handcrafted by C.M. Wintersteiger")
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-fun X () (_ FloatingPoint 2 6))
(declare-fun Y () (_ FloatingPoint 2 6))
(declare-fun Z () (_ FloatingPoint 2 6))
(declare-fun W () (_ FloatingPoint 2 6))
(assert (or (= X (fp.add RTZ Y Z)) (= X (fp.sub RTZ Y Z)) (= X (fp.mul RTZ Y Z)) (= X (fp.div RTZ Y Z)) (= X (fp.sqrt RTZ Y)) (= X (fp.rem X Y)) (= X (fp.roundToIntegral RTZ Y)) (= X (fp.min Y Z)) (= X (fp.max Y Z))))
(assert (= BAV1 (or (= X (fp.add RTZ Y Z)) (= X (fp.sub RTZ Y Z)) (= X (fp.mul RTZ Y Z)) (= X (fp.div RTZ Y Z)) (= X (fp.sqrt RTZ Y)) (= X (fp.rem X Y)) (= X (fp.roundToIntegral RTZ Y)) (= X (fp.min Y Z)) (= X (fp.max Y Z)))))
(assert (= BAV2 (= X (fp.add RTZ Y Z))))
(assert (= BAV3 (= X (fp.sub RTZ Y Z))))
(assert (= BAV4 (= X (fp.mul RTZ Y Z))))
(assert (= BAV5 (= X (fp.div RTZ Y Z))))
(assert (= BAV6 (= X (fp.sqrt RTZ Y))))
(assert (= BAV7 (= X (fp.rem X Y))))
(assert (= BAV8 (= X (fp.roundToIntegral RTZ Y))))
(assert (= BAV9 (= X (fp.min Y Z))))
(assert (= BAV10 (= X (fp.max Y Z))))
(assert (and (and (and (and (and (and (and (and (and (= BAV1 true) (= BAV2 false)) (= BAV3 false)) (= BAV4 false)) (= BAV5 true)) (= BAV6 false)) (= BAV7 true)) (= BAV8 false)) (= BAV9 true)) (= BAV10 false)))
(check-sat)
(exit)