(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun x () (Set Int))
(declare-fun y () (Set Int))
(assert (= x (singleton a)))
(assert (= y (singleton b)))
(assert (not (= x y)))
(assert (and (< GEN1 a) (< a GEN2) (< GEN3 b) (< b GEN4)))
(assert (= BAV1 (= x (singleton a))))
(assert (= BAV2 (= y (singleton b))))
(assert (= BAV3 (= x y)))
(assert (= BAV4 (and (< GEN1 a) (< a GEN2) (< GEN3 b) (< b GEN4))))
(assert (= BAV5 (< GEN1 a)))
(assert (= BAV6 (< a GEN2)))
(assert (= BAV7 (< GEN3 b)))
(assert (= BAV8 (< b GEN4)))
(check-sat)
(get-model)