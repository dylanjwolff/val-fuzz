(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-sort U 0)
(declare-fun P (Int U) Bool)
(declare-fun S (U) (Set Int))
(declare-fun f (U) U)
(assert (forall ((x Int)(z U)) (=> (member x (S (f z))) (P x z))))
(declare-fun a () U)
(assert (member GEN1 (S a)))
(assert (not (P GEN2 a)))
(assert (forall ((x U)(y U)) (= x y)))
(assert (= BAV1 (forall ((x Int)(z U)) (=> (member x (S (f z))) (P x z)))))
(assert (= BAV2 (forall ((x U)(y U)) (= x y))))
(check-sat)
(get-model)