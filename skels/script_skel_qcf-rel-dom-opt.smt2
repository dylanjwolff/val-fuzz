(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const GEN11 Int)
(declare-const GEN12 Int)
(declare-const GEN13 Int)
(declare-const GEN14 Int)
(declare-const GEN15 Int)
(declare-const GEN16 Int)
(declare-const GEN17 Int)
(declare-const GEN18 Int)
(declare-const GEN19 Int)
(declare-const GEN20 Int)
(declare-const GEN21 Int)
(declare-const GEN22 Int)
(declare-const GEN23 Int)
(declare-const GEN24 Int)
(declare-const GEN25 Int)
(declare-const GEN26 Int)
(declare-const GEN27 Int)
(declare-const GEN28 Int)
(declare-const GEN29 Int)
(declare-const GEN30 Int)
(declare-const GEN31 Int)
(declare-const BAV32 Bool)
(declare-fun P (Int) Bool)
(assert (P GEN1))
(assert (P GEN2))
(assert (P GEN3))
(assert (P GEN4))
(assert (P GEN5))
(assert (P GEN6))
(assert (P GEN7))
(assert (P GEN8))
(assert (P GEN9))
(assert (P GEN10))
(assert (P GEN11))
(assert (P GEN12))
(assert (P GEN13))
(assert (P GEN14))
(assert (P GEN15))
(assert (P GEN16))
(assert (P GEN17))
(assert (P GEN18))
(assert (P GEN19))
(assert (P GEN20))
(assert (P GEN21))
(assert (P GEN22))
(assert (P GEN23))
(assert (P GEN24))
(assert (P GEN25))
(assert (P GEN26))
(assert (P GEN27))
(assert (P GEN28))
(assert (P GEN29))
(assert (P GEN30))
(declare-fun Q (Int Int Int Int Int) Bool)
(assert (forall ((x Int)(y Int)(z Int)(w Int)(q Int)) (or (not (P x)) (not (P y)) (not (P z)) (not (P w)) (not (P q)) (Q x y z w q))))
(declare-fun R (Int) Bool)
(assert (R GEN31))
(assert (forall ((x Int)) (not (R x))))
(assert (= BAV32 (forall ((x Int)(y Int)(z Int)(w Int)(q Int)) (or (not (P x)) (not (P y)) (not (P z)) (not (P w)) (not (P q)) (Q x y z w q)))))
(check-sat)
(get-model)