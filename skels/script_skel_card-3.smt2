(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-sort E 0)
(declare-fun s () (Set E))
(declare-fun t () (Set E))
(declare-fun u () (Set E))
(assert (>= (card (union s t)) GEN1))
(assert (>= (card (union s u)) GEN2))
(assert (<= (card (union t u)) GEN3))
(assert (<= (card s) GEN4))
(assert (= (as emptyset (Set E)) (intersection t u)))
(assert (= BAV1 (>= (card (union s t)) GEN1)))
(assert (= BAV2 (>= (card (union s u)) GEN2)))
(assert (= BAV3 (<= (card (union t u)) GEN3)))
(assert (= BAV4 (<= (card s) GEN4)))
(assert (= BAV5 (= (as emptyset (Set E)) (intersection t u))))
(check-sat)
(get-model)