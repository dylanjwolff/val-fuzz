(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x () Real)
(declare-fun y () Real)
(declare-fun x1 () Real)
(assert (and (<= GEN1 x1) (<= x1 GEN2) (<= GEN3 (+ GEN4 x)) (<= x GEN5) (<= GEN6 (+ y GEN7)) (<= y GEN8) (<= (* (+ (* x1 x1) GEN9) (+ (+ (- (- y) (* x1 x)) (* GEN10 (* x1 x1))) GEN11)) GEN12) (<= (* (- (* x1 y) x) (+ (* x1 x1) GEN13)) (* (+ (* x1 x1) GEN14) (+ (* x1 x1) GEN15))) (not (= (+ (* x1 x1) GEN16) GEN17)) (<= GEN18 (* (+ (* x1 x1) GEN19) (+ (- (+ (* x1 x1) GEN20) x) (* x1 y)))) (<= (* (+ (* x1 x1) GEN21) (+ y (* x1 x))) (* GEN22 (* (+ (* x1 x1) GEN23) (+ (* x1 x1) GEN24))))))
(eliminate-quantifiers (exists x1))
(exit)
(assert (= BAV1 (and (<= GEN1 x1) (<= x1 GEN2) (<= GEN3 (+ GEN4 x)) (<= x GEN5) (<= GEN6 (+ y GEN7)) (<= y GEN8) (<= (* (+ (* x1 x1) GEN9) (+ (+ (- (- y) (* x1 x)) (* GEN10 (* x1 x1))) GEN11)) GEN12) (<= (* (- (* x1 y) x) (+ (* x1 x1) GEN13)) (* (+ (* x1 x1) GEN14) (+ (* x1 x1) GEN15))) (not (= (+ (* x1 x1) GEN16) GEN17)) (<= GEN18 (* (+ (* x1 x1) GEN19) (+ (- (+ (* x1 x1) GEN20) x) (* x1 y)))) (<= (* (+ (* x1 x1) GEN21) (+ y (* x1 x))) (* GEN22 (* (+ (* x1 x1) GEN23) (+ (* x1 x1) GEN24)))))))
(assert (= BAV2 (<= GEN1 x1)))
(assert (= BAV3 (<= x1 GEN2)))
(assert (= BAV4 (<= GEN3 (+ GEN4 x))))
(assert (= BAV5 (<= x GEN5)))
(assert (= BAV6 (<= GEN6 (+ y GEN7))))
(assert (= BAV7 (<= y GEN8)))
(assert (= BAV8 (<= (* (+ (* x1 x1) GEN9) (+ (+ (- (- y) (* x1 x)) (* GEN10 (* x1 x1))) GEN11)) GEN12)))
(assert (= BAV9 (<= (* (- (* x1 y) x) (+ (* x1 x1) GEN13)) (* (+ (* x1 x1) GEN14) (+ (* x1 x1) GEN15)))))
(assert (= BAV10 (= (+ (* x1 x1) GEN16) GEN17)))
(assert (= BAV11 (<= GEN18 (* (+ (* x1 x1) GEN19) (+ (- (+ (* x1 x1) GEN20) x) (* x1 y))))))
(assert (= BAV12 (<= (* (+ (* x1 x1) GEN21) (+ y (* x1 x))) (* GEN22 (* (+ (* x1 x1) GEN23) (+ (* x1 x1) GEN24))))))