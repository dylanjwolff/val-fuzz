(set-option :produce-models true)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const GEN1 Int)
(declare-datatypes () ((x5 (x3) (x4))))
(declare-sort x6 0)
(declare-fun x7 (x6) x5)
(declare-fun x8 () x6)
(assert (not (= x3 (x7 x8))))
(declare-fun x9 () x6)
(assert (not (= x3 (x7 x9))))
(declare-fun x11 () Int)
(declare-sort x12 0)
(declare-fun x13 () x12)
(declare-datatypes () ((x17 (x14) (x15) (x16))))
(declare-datatypes () ((x22 (x21 (x18 Int) (x19 Int) (x20 x5)))))
(declare-datatypes () ((x29 (x28 (x23 x5) (x24 x5) (x25 Int) (x26 Int) (x27 Int)))))
(declare-sort x30 0)
(declare-sort x31 0)
(declare-fun x32 () x31)
(declare-datatypes () ((x36 (x35 (x33 Int) (x34 Int)))))
(declare-fun x37 () x36)
(declare-datatypes () ((x45 (x44 (x38 x5) (x39 x6) (x40 x6) (x41 x6) (x42 x36) (x43 x31)))))
(declare-fun x47 (x12) x31)
(declare-fun x46 (x31) x12)
(declare-datatypes () ((x54 (x49 (x48 x22)) (x51 (x50 x29)) (d53 (s52 x12)))))
(declare-fun x57 (x22) x29)
(declare-fun x56 (x12) x22)
(declare-fun x55 (x29) x22)
(declare-fun x61 () (Array x6 x5))
(declare-fun x66 () (Array x6 x17))
(declare-fun x64 () (Array x6 x54))
(declare-fun x67 () (Array x6 x54))
(declare-fun x65 () (Array x6 x54))
(declare-fun x62 () (Array x30 x45))
(declare-fun x70 () (Array x30 x45))
(declare-fun x68 () (Array x30 x45))
(declare-fun x63 () x30)
(declare-fun x59 (x22) x12)
(declare-fun x60 (x29) x12)
(declare-fun x58 (x12) x29)
(declare-fun x71 () x6)
(declare-fun x69 () x6)
(assert (not (=> (and (forall ((x73 x30)) (=> (= x3 (x38 (select x62 x73))) (and (= (select x66 (x40 (select x62 x73))) x15) (= x3 (x7 (x40 (select x62 x73)))) (= (select x61 (x40 (select x62 x73))) x3) (= (x23 (ite (is-x49 (select x67 (x40 (select x62 x73)))) (x57 (x48 (select x67 (x40 (select x62 x73))))) (ite (is-x51 (select x67 (x40 (select x62 x73)))) (x50 (select x67 (x40 (select x62 x73)))) (x58 (s52 (select x67 (x40 (select x62 x73)))))))) x3)))) (forall ((x72 x6)) (=> (and (= x16 (select x66 x72)) (= (x7 x72) x3) (= (select x61 x72) x3)) (= (ite (is-d53 (select x67 x72)) x3 x4) x3)))) (= (ite (= (x38 (select x62 x63)) x3) (ite (and (=> (= (x40 (select x62 x63)) x69) (=> (= (x41 (select x62 x63)) x71) (=> (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63)))))) (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))))))) (= x3 (x38 (select x62 x63)))) x3 x4) (ite (forall ((x87 x6)) (=> (and (= x3 (select x61 x87)) (= x3 (x7 x87)) (= x16 (select x66 x87))) (= x3 (ite (is-d53 (select x67 x87)) x3 x4)))) x3 x4)) x3))))
(assert (= BAV1 (= x3 (x7 x8))))
(assert (= BAV2 (= x3 (x7 x9))))
(assert (= BAV3 (=> (and (forall ((x73 x30)) (=> (= x3 (x38 (select x62 x73))) (and (= (select x66 (x40 (select x62 x73))) x15) (= x3 (x7 (x40 (select x62 x73)))) (= (select x61 (x40 (select x62 x73))) x3) (= (x23 (ite (is-x49 (select x67 (x40 (select x62 x73)))) (x57 (x48 (select x67 (x40 (select x62 x73))))) (ite (is-x51 (select x67 (x40 (select x62 x73)))) (x50 (select x67 (x40 (select x62 x73)))) (x58 (s52 (select x67 (x40 (select x62 x73)))))))) x3)))) (forall ((x72 x6)) (=> (and (= x16 (select x66 x72)) (= (x7 x72) x3) (= (select x61 x72) x3)) (= (ite (is-d53 (select x67 x72)) x3 x4) x3)))) (= (ite (= (x38 (select x62 x63)) x3) (ite (and (=> (= (x40 (select x62 x63)) x69) (=> (= (x41 (select x62 x63)) x71) (=> (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63)))))) (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))))))) (= x3 (x38 (select x62 x63)))) x3 x4) (ite (forall ((x87 x6)) (=> (and (= x3 (select x61 x87)) (= x3 (x7 x87)) (= x16 (select x66 x87))) (= x3 (ite (is-d53 (select x67 x87)) x3 x4)))) x3 x4)) x3))))
(assert (= BAV4 (and (forall ((x73 x30)) (=> (= x3 (x38 (select x62 x73))) (and (= (select x66 (x40 (select x62 x73))) x15) (= x3 (x7 (x40 (select x62 x73)))) (= (select x61 (x40 (select x62 x73))) x3) (= (x23 (ite (is-x49 (select x67 (x40 (select x62 x73)))) (x57 (x48 (select x67 (x40 (select x62 x73))))) (ite (is-x51 (select x67 (x40 (select x62 x73)))) (x50 (select x67 (x40 (select x62 x73)))) (x58 (s52 (select x67 (x40 (select x62 x73)))))))) x3)))) (forall ((x72 x6)) (=> (and (= x16 (select x66 x72)) (= (x7 x72) x3) (= (select x61 x72) x3)) (= (ite (is-d53 (select x67 x72)) x3 x4) x3))))))
(assert (= BAV5 (forall ((x73 x30)) (=> (= x3 (x38 (select x62 x73))) (and (= (select x66 (x40 (select x62 x73))) x15) (= x3 (x7 (x40 (select x62 x73)))) (= (select x61 (x40 (select x62 x73))) x3) (= (x23 (ite (is-x49 (select x67 (x40 (select x62 x73)))) (x57 (x48 (select x67 (x40 (select x62 x73))))) (ite (is-x51 (select x67 (x40 (select x62 x73)))) (x50 (select x67 (x40 (select x62 x73)))) (x58 (s52 (select x67 (x40 (select x62 x73)))))))) x3))))))
(assert (= BAV6 (forall ((x73 x30)) (= x3 (x38 (select x62 x73))))))
(assert (= BAV7 (forall ((x73 x30)) (and (= (select x66 (x40 (select x62 x73))) x15) (= x3 (x7 (x40 (select x62 x73)))) (= (select x61 (x40 (select x62 x73))) x3) (= (x23 (ite (is-x49 (select x67 (x40 (select x62 x73)))) (x57 (x48 (select x67 (x40 (select x62 x73))))) (ite (is-x51 (select x67 (x40 (select x62 x73)))) (x50 (select x67 (x40 (select x62 x73)))) (x58 (s52 (select x67 (x40 (select x62 x73)))))))) x3)))))
(assert (= BAV8 (forall ((x73 x30)) (= (select x66 (x40 (select x62 x73))) x15))))
(assert (= BAV9 (forall ((x73 x30)) (= x3 (x7 (x40 (select x62 x73)))))))
(assert (= BAV10 (forall ((x73 x30)) (= (select x61 (x40 (select x62 x73))) x3))))
(assert (= BAV11 (forall ((x73 x30)) (= (x23 (ite (is-x49 (select x67 (x40 (select x62 x73)))) (x57 (x48 (select x67 (x40 (select x62 x73))))) (ite (is-x51 (select x67 (x40 (select x62 x73)))) (x50 (select x67 (x40 (select x62 x73)))) (x58 (s52 (select x67 (x40 (select x62 x73)))))))) x3))))
(assert (= BAV12 (forall ((x72 x6)) (=> (and (= x16 (select x66 x72)) (= (x7 x72) x3) (= (select x61 x72) x3)) (= (ite (is-d53 (select x67 x72)) x3 x4) x3)))))
(assert (= BAV13 (forall ((x72 x6)) (and (= x16 (select x66 x72)) (= (x7 x72) x3) (= (select x61 x72) x3)))))
(assert (= BAV14 (forall ((x72 x6)) (= x16 (select x66 x72)))))
(assert (= BAV15 (forall ((x72 x6)) (= (x7 x72) x3))))
(assert (= BAV16 (forall ((x72 x6)) (= (select x61 x72) x3))))
(assert (= BAV17 (forall ((x72 x6)) (= (ite (is-d53 (select x67 x72)) x3 x4) x3))))
(assert (= BAV18 (= (ite (= (x38 (select x62 x63)) x3) (ite (and (=> (= (x40 (select x62 x63)) x69) (=> (= (x41 (select x62 x63)) x71) (=> (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63)))))) (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))))))) (= x3 (x38 (select x62 x63)))) x3 x4) (ite (forall ((x87 x6)) (=> (and (= x3 (select x61 x87)) (= x3 (x7 x87)) (= x16 (select x66 x87))) (= x3 (ite (is-d53 (select x67 x87)) x3 x4)))) x3 x4)) x3)))
(assert (= BAV19 (= (x38 (select x62 x63)) x3)))
(assert (= BAV20 (and (=> (= (x40 (select x62 x63)) x69) (=> (= (x41 (select x62 x63)) x71) (=> (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63)))))) (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))))))) (= x3 (x38 (select x62 x63))))))
(assert (= BAV21 (=> (= (x40 (select x62 x63)) x69) (=> (= (x41 (select x62 x63)) x71) (=> (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63)))))) (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3)))))))))))
(assert (= BAV22 (= (x40 (select x62 x63)) x69)))
(assert (= BAV23 (=> (= (x41 (select x62 x63)) x71) (=> (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63)))))) (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))))))))
(assert (= BAV24 (= (x41 (select x62 x63)) x71)))
(assert (= BAV25 (=> (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63)))))) (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3)))))))))
(assert (= BAV26 (= x65 (store x67 x71 (d53 (x46 (x43 (select x62 x63))))))))
(assert (= BAV27 (=> (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32))) (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))))))
(assert (= BAV28 (= x70 (store x62 x63 (x44 (x38 (select x62 x63)) (x39 (select x62 x63)) (x40 (select x62 x63)) (x41 (select x62 x63)) (x42 (select x62 x63)) x32)))))
(assert (= BAV29 (=> (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63))))) (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3)))))))
(assert (= BAV30 (= x68 (store x70 x63 (x44 x4 (x39 (select x70 x63)) (x40 (select x70 x63)) (x41 (select x70 x63)) (x42 (select x70 x63)) (x43 (select x70 x63)))))))
(assert (= BAV31 (=> (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64) (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))))
(assert (= BAV32 (= (store x65 x69 (x51 (x28 x4 x3 (x25 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (x26 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) (+ (x27 (ite (is-x49 (select x65 x69)) (x57 (x48 (select x65 x69))) (ite (is-x51 (select x65 x69)) (x50 (select x65 x69)) (x58 (s52 (select x65 x69)))))) GEN1)))) x64)))
(assert (= BAV33 (forall ((x86 x6)) (=> (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3)))))
(assert (= BAV34 (forall ((x86 x6)) (and (= x3 (x7 x86)) (= x3 (select x61 x86)) (= (select x66 x86) x16)))))
(assert (= BAV35 (forall ((x86 x6)) (= x3 (x7 x86)))))
(assert (= BAV36 (forall ((x86 x6)) (= x3 (select x61 x86)))))
(assert (= BAV37 (forall ((x86 x6)) (= (select x66 x86) x16))))
(assert (= BAV38 (forall ((x86 x6)) (= (ite (is-d53 (select x64 x86)) x3 x4) x3))))
(assert (= BAV39 (= x3 (x38 (select x62 x63)))))
(assert (= BAV40 (forall ((x87 x6)) (=> (and (= x3 (select x61 x87)) (= x3 (x7 x87)) (= x16 (select x66 x87))) (= x3 (ite (is-d53 (select x67 x87)) x3 x4))))))
(assert (= BAV41 (forall ((x87 x6)) (and (= x3 (select x61 x87)) (= x3 (x7 x87)) (= x16 (select x66 x87))))))
(assert (= BAV42 (forall ((x87 x6)) (= x3 (select x61 x87)))))
(assert (= BAV43 (forall ((x87 x6)) (= x3 (x7 x87)))))
(assert (= BAV44 (forall ((x87 x6)) (= x16 (select x66 x87)))))
(assert (= BAV45 (forall ((x87 x6)) (= x3 (ite (is-d53 (select x67 x87)) x3 x4)))))
(check-sat)
(get-model)