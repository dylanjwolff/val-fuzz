(set-option :smt.string_solver seq)
(declare-const GEN1 String)
(declare-const GEN2 String)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(set-option :model_validate true)
(declare-fun c0 () Bool)
(declare-fun c1 () String)
(define-fun e2 () String (ite c0 c1 ""))
(define-fun e3 () (RegEx String) (re.+ (re.range "0" "9")))
(assert (str.in.re e2 e3))
(get-model)
(assert (not (= GEN1 e2)))
(assert (= BAV3 (= GEN1 e2)))
(assert (= BAV4 (= GEN2 e2)))
(check-sat)
(get-model)
(reset)
(exit)
(set-option :smt.string_solver z3str3)
(set-option :model_validate true)
(declare-fun c0 () Bool)
(declare-fun c1 () String)
(define-fun e2 () String (ite c0 c1 ""))
(define-fun e3 () (RegEx String) (re.+ (re.range "0" "9")))
(assert (str.in.re e2 e3))
(assert (not (= GEN2 e2)))
(check-sat)