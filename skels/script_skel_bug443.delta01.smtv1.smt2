(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN9 Real)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Real)
(declare-const GEN5 Real)
(declare-const GEN4 Real)
(declare-const GEN3 Real)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v1 () Real)
(declare-fun v2 () Real)
(declare-fun v0 () Real)
(declare-fun p1 (Real) Bool)
(assert (= BAV1 (xor (p1 GEN4) (=> (= GEN5 v2) (and (= (* v2 (/ (- GEN1) GEN2)) (ite (= GEN6 (+ (* v2 (/ (- GEN1) GEN2)) v1)) GEN7 v1)) (=> (p1 (ite (p1 v0) GEN8 v1)) (> (ite (>= (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) (+ (* v2 (/ (- GEN1) GEN2)) v1)) (ite (> (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) GEN9) (ite (= (+ (* v2 (/ (- GEN1) GEN2)) v1) v0) (+ (* v2 (/ (- GEN1) GEN2)) v1) (- GEN3 (- (* v2 (/ (- GEN1) GEN2))))) (* v2 (/ (- GEN1) GEN2))) v2) v1)))))))
(assert (= BAV2 (=> (= GEN5 v2) (and (= (* v2 (/ (- GEN1) GEN2)) (ite (= GEN6 (+ (* v2 (/ (- GEN1) GEN2)) v1)) GEN7 v1)) (=> (p1 (ite (p1 v0) GEN8 v1)) (> (ite (>= (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) (+ (* v2 (/ (- GEN1) GEN2)) v1)) (ite (> (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) GEN9) (ite (= (+ (* v2 (/ (- GEN1) GEN2)) v1) v0) (+ (* v2 (/ (- GEN1) GEN2)) v1) (- GEN3 (- (* v2 (/ (- GEN1) GEN2))))) (* v2 (/ (- GEN1) GEN2))) v2) v1))))))
(assert (= BAV3 (= GEN5 v2)))
(assert (= BAV4 (and (= (* v2 (/ (- GEN1) GEN2)) (ite (= GEN6 (+ (* v2 (/ (- GEN1) GEN2)) v1)) GEN7 v1)) (=> (p1 (ite (p1 v0) GEN8 v1)) (> (ite (>= (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) (+ (* v2 (/ (- GEN1) GEN2)) v1)) (ite (> (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) GEN9) (ite (= (+ (* v2 (/ (- GEN1) GEN2)) v1) v0) (+ (* v2 (/ (- GEN1) GEN2)) v1) (- GEN3 (- (* v2 (/ (- GEN1) GEN2))))) (* v2 (/ (- GEN1) GEN2))) v2) v1)))))
(assert (= BAV5 (= (* v2 (/ (- GEN1) GEN2)) (ite (= GEN6 (+ (* v2 (/ (- GEN1) GEN2)) v1)) GEN7 v1))))
(assert (= BAV6 (= GEN6 (+ (* v2 (/ (- GEN1) GEN2)) v1))))
(assert (= BAV7 (=> (p1 (ite (p1 v0) GEN8 v1)) (> (ite (>= (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) (+ (* v2 (/ (- GEN1) GEN2)) v1)) (ite (> (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) GEN9) (ite (= (+ (* v2 (/ (- GEN1) GEN2)) v1) v0) (+ (* v2 (/ (- GEN1) GEN2)) v1) (- GEN3 (- (* v2 (/ (- GEN1) GEN2))))) (* v2 (/ (- GEN1) GEN2))) v2) v1))))
(assert (= BAV8 (> (ite (>= (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) (+ (* v2 (/ (- GEN1) GEN2)) v1)) (ite (> (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) GEN9) (ite (= (+ (* v2 (/ (- GEN1) GEN2)) v1) v0) (+ (* v2 (/ (- GEN1) GEN2)) v1) (- GEN3 (- (* v2 (/ (- GEN1) GEN2))))) (* v2 (/ (- GEN1) GEN2))) v2) v1)))
(assert (= BAV9 (>= (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) (+ (* v2 (/ (- GEN1) GEN2)) v1))))
(assert (= BAV10 (> (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) GEN9)))
(assert (= BAV11 (= (+ (* v2 (/ (- GEN1) GEN2)) v1) v0)))
(check-sat-assuming ((xor (p1 GEN4) (=> (= GEN5 v2) (and (= (* v2 (/ (- GEN1) GEN2)) (ite (= GEN6 (+ (* v2 (/ (- GEN1) GEN2)) v1)) GEN7 v1)) (=> (p1 (ite (p1 v0) GEN8 v1)) (> (ite (>= (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) (+ (* v2 (/ (- GEN1) GEN2)) v1)) (ite (> (- GEN3 (- (* v2 (/ (- GEN1) GEN2)))) GEN9) (ite (= (+ (* v2 (/ (- GEN1) GEN2)) v1) v0) (+ (* v2 (/ (- GEN1) GEN2)) v1) (- GEN3 (- (* v2 (/ (- GEN1) GEN2))))) (* v2 (/ (- GEN1) GEN2))) v2) v1)))))))
(get-model)