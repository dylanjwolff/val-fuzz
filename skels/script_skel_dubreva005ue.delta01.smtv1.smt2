(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a1 () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (= BAV1 (= (_ bv0 1) (bvnot (ite (= (store a1 (_ bv0 32) (_ bv1 8)) (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store (store a1 (_ bv0 32) (_ bv1 8)) (_ bv0 32) (bvand (_ bv1 8) (bvnot (bvand (select a1 (_ bv0 32)) (bvnot (_ bv1 8)))))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV2 (= (store a1 (_ bv0 32) (_ bv1 8)) (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store (store a1 (_ bv0 32) (_ bv1 8)) (_ bv0 32) (bvand (_ bv1 8) (bvnot (bvand (select a1 (_ bv0 32)) (bvnot (_ bv1 8)))))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32))))))
(check-sat-assuming ((not (= (_ bv0 1) (bvnot (ite (= (store a1 (_ bv0 32) (_ bv1 8)) (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store a1 (_ bv0 32) (select (store (store a1 (_ bv0 32) (_ bv1 8)) (_ bv0 32) (bvand (_ bv1 8) (bvnot (bvand (select a1 (_ bv0 32)) (bvnot (_ bv1 8)))))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32))) (_ bv0 32)))) (_ bv1 1) (_ bv0 1)))))))
(get-model)