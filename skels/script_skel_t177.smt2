(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(get-model)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(define-fun bvsmod_def ((s (_ BitVec 13)) (t (_ BitVec 13))) (_ BitVec 13)
      (let ((msb_s ((_ extract 12 12) s))
            (msb_t ((_ extract 12 12) t)))
        (let ((abs_s (ite (= msb_s #b0) s (bvneg s)))
              (abs_t (ite (= msb_t #b0) t (bvneg t))))
          (let ((u (bvurem abs_s abs_t)))
            (ite (= u (_ bv0 13))
                 u
            (ite (and (= msb_s #b0) (= msb_t #b0))
                 u
            (ite (and (= msb_s #b1) (= msb_t #b0))
                 (bvadd (bvneg u) t)
            (ite (and (= msb_s #b0) (= msb_t #b1))
                 (bvadd u t)
                 (bvneg u)))))))))
(push)
(assert (not (= (bvsmod_def (_ bv30 13) (_ bv8190 13)) (bvsmod (_ bv30 13) (_ bv8190 13)))))
(assert (= BAV1 (= (bvsmod_def (_ bv30 13) (_ bv8190 13)) (bvsmod (_ bv30 13) (_ bv8190 13)))))
(assert (= BAV2 (= (bvsmod_def (_ bv30 13) (_ bv8180 13)) (bvsmod (_ bv30 13) (_ bv8180 13)))))
(assert (= BAV3 (= (bvsmod_def (_ bv8130 13) (_ bv8180 13)) (bvsmod (_ bv8130 13) (_ bv8180 13)))))
(assert (= BAV4 (= (bvsmod_def (_ bv8130 13) (_ bv30 13)) (bvsmod (_ bv8130 13) (_ bv30 13)))))
(assert (= BAV5 (= (bvsmod_def (_ bv30 13) (_ bv30 13)) (bvsmod (_ bv30 13) (_ bv30 13)))))
(assert (= BAV6 (= (bvsmod_def (_ bv30 13) (_ bv0 13)) (bvsmod (_ bv30 13) (_ bv0 13)))))
(assert (= BAV7 (= (bvsmod_def (_ bv8130 13) (_ bv0 13)) (bvsmod (_ bv8130 13) (_ bv0 13)))))
(check-sat)
(get-model)
(pop)
(push)
(assert (not (= (bvsmod_def (_ bv30 13) (_ bv8180 13)) (bvsmod (_ bv30 13) (_ bv8180 13)))))
(check-sat)
(pop)
(push)
(assert (not (= (bvsmod_def (_ bv8130 13) (_ bv8180 13)) (bvsmod (_ bv8130 13) (_ bv8180 13)))))
(check-sat)
(pop)
(push)
(assert (not (= (bvsmod_def (_ bv8130 13) (_ bv30 13)) (bvsmod (_ bv8130 13) (_ bv30 13)))))
(check-sat)
(pop)
(push)
(assert (not (= (bvsmod_def (_ bv30 13) (_ bv30 13)) (bvsmod (_ bv30 13) (_ bv30 13)))))
(check-sat)
(pop)
(push)
(assert (not (= (bvsmod_def (_ bv30 13) (_ bv0 13)) (bvsmod (_ bv30 13) (_ bv0 13)))))
(check-sat)
(pop)
(push)
(assert (not (= (bvsmod_def (_ bv8130 13) (_ bv0 13)) (bvsmod (_ bv8130 13) (_ bv0 13)))))
(check-sat)
(pop)