(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-option :auto-config false)
(set-option :pp.max-depth 100)
(declare-fun p (Int) Bool)
(declare-fun f (Int Real) Bool)
(push)
(assert (= (p GEN1) (and (p GEN2) (p GEN3))))
(assert (implies (p GEN4) (p GEN5)))
(assert (xor (p GEN6) (and (p GEN7) (p GEN8))))
(apply nnf)
(pop)
(echo "----")
(push)
(assert (ite (and (p GEN9) (p GEN10)) (p GEN11) (p GEN12)))
(apply nnf)
(pop)
(echo "----")
(push)
(assert (p (ite (p GEN13) GEN14 GEN15)))
(apply nnf)
(pop)
(assert (= BAV1 (= (p GEN1) (and (p GEN2) (p GEN3)))))
(assert (= BAV2 (and (p GEN2) (p GEN3))))
(assert (= BAV3 (xor (p GEN6) (and (p GEN7) (p GEN8)))))
(assert (= BAV4 (and (p GEN7) (p GEN8))))
(assert (= BAV5 (and (p GEN9) (p GEN10))))