(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-const m (Array Int Int))
(declare-const m1 (Array Int Int))
(define-fun memset ((lo Int) (hi Int) (e Int) (m (Array Int Int))) (Array Int Int)
    (lambda ((x Int)) (if (and (<= lo x) (<= x hi)) e (select m x))))
(declare-const e Int)
(assert (= m1 (memset GEN1 GEN2 e m)))
(assert (not (= (select m1 GEN3) e)))
(assert (= BAV1 (= m1 (memset GEN1 GEN2 e m))))
(assert (= BAV2 (= (select m1 GEN3) e)))
(check-sat)
(get-model)
(exit)