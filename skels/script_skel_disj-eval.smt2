(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x () Int)
(declare-fun y () Int)
(assert (or (= x GEN1) (= x GEN2) (= x GEN3) (= x GEN4) (= x GEN5)))
(assert (or (= y GEN6) (= y GEN7) (= y GEN8) (= y GEN9)))
(assert (= (* x x) (* y y y)))
(assert (= BAV1 (or (= x GEN1) (= x GEN2) (= x GEN3) (= x GEN4) (= x GEN5))))
(assert (= BAV2 (= x GEN1)))
(assert (= BAV3 (= x GEN2)))
(assert (= BAV4 (= x GEN3)))
(assert (= BAV5 (= x GEN4)))
(assert (= BAV6 (= x GEN5)))
(assert (= BAV7 (or (= y GEN6) (= y GEN7) (= y GEN8) (= y GEN9))))
(assert (= BAV8 (= y GEN6)))
(assert (= BAV9 (= y GEN7)))
(assert (= BAV10 (= y GEN8)))
(assert (= BAV11 (= y GEN9)))
(assert (= BAV12 (= (* x x) (* y y y))))
(check-sat)
(get-model)