(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-sort sort__smt2 0)
(declare-fun multiply__smt2_2 ( sort__smt2 sort__smt2 ) sort__smt2)
(declare-fun identity__smt2_0 ( ) sort__smt2)
(declare-fun c4__smt2_0 ( ) sort__smt2)
(declare-fun a__smt2_0 ( ) sort__smt2)
(declare-fun c3__smt2_0 ( ) sort__smt2)
(declare-fun b__smt2_0 ( ) sort__smt2)
(declare-fun c2__smt2_0 ( ) sort__smt2)
(declare-fun c1__smt2_0 ( ) sort__smt2)
(declare-fun f__smt2_0 ( ) sort__smt2)
(assert (forall ((?V7 sort__smt2)(?V6 sort__smt2)(?W sort__smt2)(?V sort__smt2)(?U sort__smt2)(?Z sort__smt2)(?Y sort__smt2)(?X sort__smt2)) (or (not (= (multiply__smt2_2 ?X ?Y) ?Z)) (not (= (multiply__smt2_2 ?U ?V) ?Z)) (not (= (multiply__smt2_2 ?X ?W) ?V6)) (not (= (multiply__smt2_2 ?V7 ?V) ?V6)) (= (multiply__smt2_2 ?U ?W) (multiply__smt2_2 ?V7 ?Y)))))
(assert (forall ((?X sort__smt2)) (= (multiply__smt2_2 ?X identity__smt2_0) ?X)))
(assert (= (multiply__smt2_2 c4__smt2_0 a__smt2_0) (multiply__smt2_2 c3__smt2_0 b__smt2_0)))
(assert (= (multiply__smt2_2 c2__smt2_0 a__smt2_0) (multiply__smt2_2 c1__smt2_0 b__smt2_0)))
(assert (= (multiply__smt2_2 c4__smt2_0 f__smt2_0) (multiply__smt2_2 c3__smt2_0 identity__smt2_0)))
(assert (not (= (multiply__smt2_2 c2__smt2_0 f__smt2_0) (multiply__smt2_2 c1__smt2_0 identity__smt2_0))))
(assert (= BAV1 (forall ((?V7 sort__smt2)(?V6 sort__smt2)(?W sort__smt2)(?V sort__smt2)(?U sort__smt2)(?Z sort__smt2)(?Y sort__smt2)(?X sort__smt2)) (or (not (= (multiply__smt2_2 ?X ?Y) ?Z)) (not (= (multiply__smt2_2 ?U ?V) ?Z)) (not (= (multiply__smt2_2 ?X ?W) ?V6)) (not (= (multiply__smt2_2 ?V7 ?V) ?V6)) (= (multiply__smt2_2 ?U ?W) (multiply__smt2_2 ?V7 ?Y))))))
(assert (= BAV2 (forall ((?V7 sort__smt2)(?V6 sort__smt2)(?W sort__smt2)(?V sort__smt2)(?U sort__smt2)(?Z sort__smt2)(?Y sort__smt2)(?X sort__smt2)) (= (multiply__smt2_2 ?X ?Y) ?Z))))
(assert (= BAV3 (forall ((?V7 sort__smt2)(?V6 sort__smt2)(?W sort__smt2)(?V sort__smt2)(?U sort__smt2)(?Z sort__smt2)(?Y sort__smt2)(?X sort__smt2)) (= (multiply__smt2_2 ?U ?V) ?Z))))
(assert (= BAV4 (forall ((?V7 sort__smt2)(?V6 sort__smt2)(?W sort__smt2)(?V sort__smt2)(?U sort__smt2)(?Z sort__smt2)(?Y sort__smt2)(?X sort__smt2)) (= (multiply__smt2_2 ?X ?W) ?V6))))
(assert (= BAV5 (forall ((?V7 sort__smt2)(?V6 sort__smt2)(?W sort__smt2)(?V sort__smt2)(?U sort__smt2)(?Z sort__smt2)(?Y sort__smt2)(?X sort__smt2)) (= (multiply__smt2_2 ?V7 ?V) ?V6))))
(assert (= BAV6 (forall ((?V7 sort__smt2)(?V6 sort__smt2)(?W sort__smt2)(?V sort__smt2)(?U sort__smt2)(?Z sort__smt2)(?Y sort__smt2)(?X sort__smt2)) (= (multiply__smt2_2 ?U ?W) (multiply__smt2_2 ?V7 ?Y)))))
(assert (= BAV7 (forall ((?X sort__smt2)) (= (multiply__smt2_2 ?X identity__smt2_0) ?X))))
(assert (= BAV8 (= (multiply__smt2_2 c4__smt2_0 a__smt2_0) (multiply__smt2_2 c3__smt2_0 b__smt2_0))))
(assert (= BAV9 (= (multiply__smt2_2 c2__smt2_0 a__smt2_0) (multiply__smt2_2 c1__smt2_0 b__smt2_0))))
(assert (= BAV10 (= (multiply__smt2_2 c4__smt2_0 f__smt2_0) (multiply__smt2_2 c3__smt2_0 identity__smt2_0))))
(assert (= BAV11 (= (multiply__smt2_2 c2__smt2_0 f__smt2_0) (multiply__smt2_2 c1__smt2_0 identity__smt2_0))))
(check-sat)