(set-logic ALL)
(declare-const GEN43 String)
(declare-const GEN42 String)
(declare-const GEN41 String)
(declare-const GEN40 String)
(declare-const GEN39 String)
(declare-const GEN38 String)
(declare-const GEN37 String)
(declare-const GEN36 String)
(declare-const GEN35 String)
(declare-const GEN34 String)
(declare-const GEN33 String)
(declare-const GEN32 String)
(declare-const GEN31 String)
(declare-const GEN30 String)
(declare-const GEN29 String)
(declare-const GEN28 String)
(declare-const GEN27 String)
(declare-const GEN26 String)
(declare-const GEN25 String)
(declare-const GEN24 String)
(declare-const GEN23 String)
(declare-const GEN22 String)
(declare-const GEN21 String)
(declare-const GEN20 String)
(declare-const GEN19 String)
(declare-const GEN18 String)
(declare-const GEN17 String)
(declare-const GEN16 String)
(declare-const GEN15 String)
(declare-const GEN14 String)
(declare-const GEN13 String)
(declare-const GEN12 String)
(declare-const GEN11 String)
(declare-const GEN10 String)
(declare-const GEN9 String)
(declare-const GEN8 String)
(declare-const GEN7 String)
(declare-const GEN6 String)
(declare-const GEN5 String)
(declare-const GEN4 String)
(declare-const GEN3 String)
(declare-const GEN2 String)
(declare-const GEN1 String)
(set-option :strings-exp true)
(set-option :strings-fmf true)
(declare-fun var_0 () String)
(declare-fun var_1 () String)
(declare-fun var_2 () String)
(declare-fun var_3 () String)
(declare-fun var_4 () String)
(declare-fun var_5 () String)
(declare-fun var_6 () String)
(declare-fun var_7 () String)
(declare-fun var_8 () String)
(declare-fun var_9 () String)
(declare-fun var_10 () String)
(declare-fun var_11 () String)
(declare-fun var_12 () String)
(assert (str.in.re (str.++ var_8 GEN1 var_9) (re.++ (re.* (re.union (str.to.re GEN2) (re.++ (str.to.re "b") (re.++ (re.* (re.union (str.to.re GEN4) (str.to.re GEN5))) (str.to.re GEN6))))) (re.++ (str.to.re GEN7) (re.* (re.union (str.to.re GEN8) (str.to.re GEN9)))))))
(assert (str.in.re (str.++ var_8 GEN10 var_9) (re.++ (re.* (re.union (re.union (str.to.re GEN11) (str.to.re GEN12)) (re.++ (str.to.re GEN13) (re.++ (re.* (str.to.re GEN14)) (re.union (str.to.re GEN15) (str.to.re GEN16)))))) (re.++ (str.to.re GEN17) (re.* (str.to.re GEN18))))))
(assert (str.in.re (str.++ var_8 GEN19 var_9) (re.++ (re.* (re.union (str.to.re GEN20) (re.++ (str.to.re GEN21) (re.++ (re.* (re.union (str.to.re GEN22) (str.to.re GEN23))) (str.to.re GEN24))))) (re.++ (str.to.re GEN25) (re.* (re.union (str.to.re GEN26) (str.to.re GEN27)))))))
(assert (str.in.re (str.++ var_8 GEN28 var_9) (re.* (re.++ (re.union (str.to.re GEN29) (str.to.re GEN30)) (re.++ (re.* (str.to.re GEN31)) (re.union (str.to.re GEN32) (str.to.re GEN33)))))))
(assert (str.in.re var_9 (re.* (re.range GEN34 GEN35))))
(assert (str.in.re var_8 (re.* (re.range GEN36 GEN37))))
(assert (not (str.in.re (str.++ GEN38 var_8 GEN39 GEN40 var_9) (re.++ (re.* (re.++ (str.to.re GEN41) (str.to.re GEN42))) (str.to.re GEN43)))))
(check-sat)
(get-model)