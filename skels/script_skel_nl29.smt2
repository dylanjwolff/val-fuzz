(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN6 Int)
(get-model)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Real)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
(set-option :auto-config true)
(set-option :produce-models true)
(set-option :pp.max-depth 100)
(declare-const x1 Real)
(declare-const x2 Real)
(declare-const x3 Real)
(assert (and (= (+ x1 x2) GEN1) (= (+ (* x1 x3) x2 (* (- GEN2) x3)) GEN3)))
(assert (= BAV1 (and (= (+ x1 x2) GEN1) (= (+ (* x1 x3) x2 (* (- GEN2) x3)) GEN3))))
(assert (= BAV2 (= (+ x1 x2) GEN1)))
(assert (= BAV3 (= (+ (* x1 x3) x2 (* (- GEN2) x3)) GEN3)))
(assert (= BAV4 (and (= (+ x1 x2) 1) (= (+ (* x1 x3) x2 (* (- 1) x3)) 2))))
(assert (= BAV5 (= (+ x1 x2) 1)))
(assert (= BAV6 (= (+ (* x1 x3) x2 (* (- 1) x3)) 2)))
(check-sat)
(get-model)
(reset)
(set-option :auto-config false)
(set-option :produce-models true)
(declare-const x1 Int)
(declare-const x2 Int)
(declare-const x3 Int)
(assert (and (= (+ x1 x2) 1) (= (+ (* x1 x3) x2 (* (- 1) x3)) 2)))
(check-sat)