(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN6 Int)
(declare-const GEN5 Real)
(declare-const GEN4 Int)
(declare-const GEN3 Real)
(declare-const GEN2 Int)
(declare-const GEN1 Real)
(declare-fun s () (Set Real))
(declare-fun t1 () (Set Real))
(declare-fun t2 () (Set Real))
(declare-fun t3 () (Set Real))
(declare-fun r1 () (Set Int))
(declare-fun r2 () (Set Int))
(declare-fun r3 () (Set Int))
(assert (and (member GEN1 s) (member GEN2 s)))
(assert (= t1 (union s (singleton GEN3))))
(assert (= t2 (union s (singleton GEN4))))
(assert (= t3 (union r3 (singleton GEN5))))
(assert (= (intersection r1 r2) (intersection s (singleton GEN6))))
(assert (not (= r1 (as emptyset (Set Real)))))
(assert (= BAV1 (and (member GEN1 s) (member GEN2 s))))
(assert (= BAV2 (= t1 (union s (singleton GEN3)))))
(assert (= BAV3 (= t2 (union s (singleton GEN4)))))
(assert (= BAV4 (= t3 (union r3 (singleton GEN5)))))
(assert (= BAV5 (= (intersection r1 r2) (intersection s (singleton GEN6)))))
(assert (= BAV6 (= r1 (as emptyset (Set Real)))))
(check-sat)
(get-model)