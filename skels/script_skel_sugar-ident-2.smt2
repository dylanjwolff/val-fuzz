(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const GEN8 Real)
(declare-const GEN7 Real)
(declare-const GEN6 Real)
(declare-const GEN5 Real)
(declare-const GEN4 Real)
(declare-const GEN3 Real)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun a1 () Bool)
(declare-fun a2 () Bool)
(declare-fun a3 () Bool)
(declare-fun a4 () Bool)
(declare-fun a5 () Bool)
(declare-fun a6 () Bool)
(declare-fun a7 () Bool)
(assert (= a2 (and (> (sin GEN1) GEN2) (> (cot GEN3) (/ (cos GEN4) (sin GEN5))))))
(assert (= a7 (> (* (sec GEN6) (cos GEN7)) GEN8)))
(assert (or a2 a7))
(assert (= BAV1 (= a2 (and (> (sin GEN1) GEN2) (> (cot GEN3) (/ (cos GEN4) (sin GEN5)))))))
(assert (= BAV2 (and (> (sin GEN1) GEN2) (> (cot GEN3) (/ (cos GEN4) (sin GEN5))))))
(assert (= BAV3 (> (sin GEN1) GEN2)))
(assert (= BAV4 (> (cot GEN3) (/ (cos GEN4) (sin GEN5)))))
(assert (= BAV5 (= a7 (> (* (sec GEN6) (cos GEN7)) GEN8))))
(assert (= BAV6 (> (* (sec GEN6) (cos GEN7)) GEN8)))
(assert (= BAV7 (or a2 a7)))
(check-sat)
(get-model)