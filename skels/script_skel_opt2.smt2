(set-option :auto-config true)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(get-model)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(get-model)
(declare-const GEN7 Int)
(get-model)
(declare-const GEN8 Int)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const GEN11 Int)
(declare-const GEN12 Int)
(declare-const GEN13 Int)
(declare-const GEN14 Int)
(declare-const GEN15 Int)
(declare-const GEN16 Int)
(declare-const GEN17 Int)
(declare-const GEN18 Int)
(declare-const GEN19 Int)
(declare-const GEN20 Int)
(declare-const GEN21 Int)
(declare-const GEN22 Int)
(declare-const GEN23 Int)
(declare-const GEN24 Int)
(declare-const GEN25 Int)
(declare-const GEN26 Int)
(declare-const GEN27 Int)
(declare-const GEN28 Int)
(declare-const GEN29 Int)
(declare-const GEN30 Int)
(declare-const GEN31 Int)
(declare-const GEN32 Int)
(declare-const GEN33 Int)
(declare-const GEN34 Int)
(declare-const GEN35 Int)
(declare-const GEN36 Int)
(declare-const GEN37 Int)
(declare-const GEN38 Int)
(declare-const GEN39 Int)
(declare-const GEN40 Int)
(declare-const GEN41 Int)
(declare-const GEN42 Int)
(declare-const GEN43 Int)
(declare-const GEN44 Int)
(declare-const GEN45 Int)
(declare-const GEN46 Int)
(declare-const GEN47 Int)
(declare-const GEN48 Int)
(declare-const GEN49 Int)
(declare-const GEN50 Int)
(declare-const GEN51 Int)
(declare-const GEN52 Int)
(declare-const GEN53 Int)
(declare-const GEN54 Int)
(declare-const GEN55 Int)
(declare-const GEN56 Int)
(declare-const GEN57 Int)
(declare-const GEN58 Int)
(declare-const GEN59 Int)
(declare-const GEN60 Int)
(declare-const GEN61 Int)
(declare-const GEN62 Int)
(declare-const GEN63 Int)
(declare-const GEN64 Int)
(declare-const GEN65 Int)
(declare-const GEN66 Int)
(declare-const GEN67 Int)
(declare-const GEN68 Int)
(declare-const GEN69 Int)
(declare-const GEN70 Int)
(declare-const GEN71 Int)
(declare-const GEN72 Int)
(declare-const GEN73 Int)
(declare-const GEN74 Int)
(declare-const GEN75 Int)
(declare-const GEN76 Int)
(declare-const GEN77 Int)
(declare-const GEN78 Int)
(declare-const GEN79 Int)
(declare-const GEN80 Int)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const BAV184 Bool)
(declare-const BAV185 Bool)
(declare-const BAV186 Bool)
(declare-const BAV187 Bool)
(declare-const BAV188 Bool)
(declare-const BAV189 Bool)
(declare-const BAV190 Bool)
(declare-const BAV191 Bool)
(declare-const BAV192 Bool)
(declare-const BAV193 Bool)
(declare-const BAV194 Bool)
(declare-const BAV195 Bool)
(declare-const BAV196 Bool)
(declare-const BAV197 Bool)
(declare-const BAV198 Bool)
(declare-const BAV199 Bool)
(declare-const BAV200 Bool)
(declare-const BAV201 Bool)
(declare-const BAV202 Bool)
(declare-const BAV203 Bool)
(declare-const BAV204 Bool)
(declare-const BAV205 Bool)
(declare-const BAV206 Bool)
(declare-const BAV207 Bool)
(declare-const BAV208 Bool)
(declare-const BAV209 Bool)
(declare-const BAV210 Bool)
(declare-const BAV211 Bool)
(declare-const BAV212 Bool)
(declare-const BAV213 Bool)
(declare-const BAV214 Bool)
(declare-const BAV215 Bool)
(declare-const BAV216 Bool)
(declare-const BAV217 Bool)
(declare-const BAV218 Bool)
(declare-const BAV219 Bool)
(declare-const BAV220 Bool)
(declare-const BAV221 Bool)
(declare-const BAV222 Bool)
(declare-const BAV223 Bool)
(declare-const BAV224 Bool)
(declare-const BAV225 Bool)
(declare-const BAV226 Bool)
(declare-const BAV227 Bool)
(declare-const BAV228 Bool)
(declare-const BAV229 Bool)
(declare-const BAV230 Bool)
(declare-const BAV231 Bool)
(declare-const BAV232 Bool)
(declare-fun id_0 () Int)
(declare-fun price_0 () Int)
(declare-fun quality_0 () Int)
(declare-fun end_0 () Int)
(declare-fun begin_0 () Int)
(declare-fun id_1 () Int)
(declare-fun price_1 () Int)
(declare-fun quality_1 () Int)
(declare-fun end_1 () Int)
(declare-fun begin_1 () Int)
(declare-fun id_2 () Int)
(declare-fun price_2 () Int)
(declare-fun quality_2 () Int)
(declare-fun end_2 () Int)
(declare-fun begin_2 () Int)
(assert (or (or (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))) (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20))) (and (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24)) (= end_0 GEN25))))
(assert (or (or (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))) (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45))) (and (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49)) (= end_1 GEN50))))
(assert (or (or (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))) (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70))) (and (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74)) (= end_2 GEN75))))
(define-fun PRICE_SUM () Int (+ price_0 price_1 price_2))
(assert (<= PRICE_SUM GEN76))
(define-fun MAX2 ((a1 Int) (a2 Int)) Int (ite (>= a1 a2) a1 a2))
(define-fun MAX3 ((a1 Int) (a2 Int) (a3 Int) ) Int (MAX2 a1 (MAX2 a2 a3 )))
(define-fun TIME_CRITERIA () Int (MAX3 end_0 end_1 end_2))
(define-fun PLAN_QUALITY () Int TIME_CRITERIA)
(echo "0000")
(assert (= BAV81 (or (or (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))) (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20))) (and (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24)) (= end_0 GEN25)))))
(assert (= BAV82 (or (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))) (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20)))))
(assert (= BAV83 (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15)))))
(assert (= BAV84 (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10)))))
(assert (= BAV85 (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5))))
(assert (= BAV86 (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4))))
(assert (= BAV87 (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3))))
(assert (= BAV88 (and (= id_0 GEN1) (= price_0 GEN2))))
(assert (= BAV89 (= id_0 GEN1)))
(assert (= BAV90 (= price_0 GEN2)))
(assert (= BAV91 (= quality_0 GEN3)))
(assert (= BAV92 (= begin_0 GEN4)))
(assert (= BAV93 (= end_0 GEN5)))
(assert (= BAV94 (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))))
(assert (= BAV95 (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9))))
(assert (= BAV96 (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8))))
(assert (= BAV97 (and (= id_0 GEN6) (= price_0 GEN7))))
(assert (= BAV98 (= id_0 GEN6)))
(assert (= BAV99 (= price_0 GEN7)))
(assert (= BAV100 (= quality_0 GEN8)))
(assert (= BAV101 (= begin_0 GEN9)))
(assert (= BAV102 (= end_0 GEN10)))
(assert (= BAV103 (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))))
(assert (= BAV104 (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14))))
(assert (= BAV105 (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13))))
(assert (= BAV106 (and (= id_0 GEN11) (= price_0 GEN12))))
(assert (= BAV107 (= id_0 GEN11)))
(assert (= BAV108 (= price_0 GEN12)))
(assert (= BAV109 (= quality_0 GEN13)))
(assert (= BAV110 (= begin_0 GEN14)))
(assert (= BAV111 (= end_0 GEN15)))
(assert (= BAV112 (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20))))
(assert (= BAV113 (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19))))
(assert (= BAV114 (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18))))
(assert (= BAV115 (and (= id_0 GEN16) (= price_0 GEN17))))
(assert (= BAV116 (= id_0 GEN16)))
(assert (= BAV117 (= price_0 GEN17)))
(assert (= BAV118 (= quality_0 GEN18)))
(assert (= BAV119 (= begin_0 GEN19)))
(assert (= BAV120 (= end_0 GEN20)))
(assert (= BAV121 (and (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24)) (= end_0 GEN25))))
(assert (= BAV122 (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24))))
(assert (= BAV123 (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23))))
(assert (= BAV124 (and (= id_0 GEN21) (= price_0 GEN22))))
(assert (= BAV125 (= id_0 GEN21)))
(assert (= BAV126 (= price_0 GEN22)))
(assert (= BAV127 (= quality_0 GEN23)))
(assert (= BAV128 (= begin_0 GEN24)))
(assert (= BAV129 (= end_0 GEN25)))
(assert (= BAV130 (or (or (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))) (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45))) (and (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49)) (= end_1 GEN50)))))
(assert (= BAV131 (or (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))) (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45)))))
(assert (= BAV132 (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40)))))
(assert (= BAV133 (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35)))))
(assert (= BAV134 (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30))))
(assert (= BAV135 (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29))))
(assert (= BAV136 (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28))))
(assert (= BAV137 (and (= id_1 GEN26) (= price_1 GEN27))))
(assert (= BAV138 (= id_1 GEN26)))
(assert (= BAV139 (= price_1 GEN27)))
(assert (= BAV140 (= quality_1 GEN28)))
(assert (= BAV141 (= begin_1 GEN29)))
(assert (= BAV142 (= end_1 GEN30)))
(assert (= BAV143 (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))))
(assert (= BAV144 (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34))))
(assert (= BAV145 (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33))))
(assert (= BAV146 (and (= id_1 GEN31) (= price_1 GEN32))))
(assert (= BAV147 (= id_1 GEN31)))
(assert (= BAV148 (= price_1 GEN32)))
(assert (= BAV149 (= quality_1 GEN33)))
(assert (= BAV150 (= begin_1 GEN34)))
(assert (= BAV151 (= end_1 GEN35)))
(assert (= BAV152 (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))))
(assert (= BAV153 (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39))))
(assert (= BAV154 (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38))))
(assert (= BAV155 (and (= id_1 GEN36) (= price_1 GEN37))))
(assert (= BAV156 (= id_1 GEN36)))
(assert (= BAV157 (= price_1 GEN37)))
(assert (= BAV158 (= quality_1 GEN38)))
(assert (= BAV159 (= begin_1 GEN39)))
(assert (= BAV160 (= end_1 GEN40)))
(assert (= BAV161 (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45))))
(assert (= BAV162 (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44))))
(assert (= BAV163 (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43))))
(assert (= BAV164 (and (= id_1 GEN41) (= price_1 GEN42))))
(assert (= BAV165 (= id_1 GEN41)))
(assert (= BAV166 (= price_1 GEN42)))
(assert (= BAV167 (= quality_1 GEN43)))
(assert (= BAV168 (= begin_1 GEN44)))
(assert (= BAV169 (= end_1 GEN45)))
(assert (= BAV170 (and (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49)) (= end_1 GEN50))))
(assert (= BAV171 (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49))))
(assert (= BAV172 (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48))))
(assert (= BAV173 (and (= id_1 GEN46) (= price_1 GEN47))))
(assert (= BAV174 (= id_1 GEN46)))
(assert (= BAV175 (= price_1 GEN47)))
(assert (= BAV176 (= quality_1 GEN48)))
(assert (= BAV177 (= begin_1 GEN49)))
(assert (= BAV178 (= end_1 GEN50)))
(assert (= BAV179 (or (or (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))) (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70))) (and (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74)) (= end_2 GEN75)))))
(assert (= BAV180 (or (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))) (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70)))))
(assert (= BAV181 (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65)))))
(assert (= BAV182 (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60)))))
(assert (= BAV183 (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55))))
(assert (= BAV184 (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54))))
(assert (= BAV185 (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53))))
(assert (= BAV186 (and (= id_2 GEN51) (= price_2 GEN52))))
(assert (= BAV187 (= id_2 GEN51)))
(assert (= BAV188 (= price_2 GEN52)))
(assert (= BAV189 (= quality_2 GEN53)))
(assert (= BAV190 (= begin_2 GEN54)))
(assert (= BAV191 (= end_2 GEN55)))
(assert (= BAV192 (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))))
(assert (= BAV193 (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59))))
(assert (= BAV194 (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58))))
(assert (= BAV195 (and (= id_2 GEN56) (= price_2 GEN57))))
(assert (= BAV196 (= id_2 GEN56)))
(assert (= BAV197 (= price_2 GEN57)))
(assert (= BAV198 (= quality_2 GEN58)))
(assert (= BAV199 (= begin_2 GEN59)))
(assert (= BAV200 (= end_2 GEN60)))
(assert (= BAV201 (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))))
(assert (= BAV202 (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64))))
(assert (= BAV203 (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63))))
(assert (= BAV204 (and (= id_2 GEN61) (= price_2 GEN62))))
(assert (= BAV205 (= id_2 GEN61)))
(assert (= BAV206 (= price_2 GEN62)))
(assert (= BAV207 (= quality_2 GEN63)))
(assert (= BAV208 (= begin_2 GEN64)))
(assert (= BAV209 (= end_2 GEN65)))
(assert (= BAV210 (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70))))
(assert (= BAV211 (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69))))
(assert (= BAV212 (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68))))
(assert (= BAV213 (and (= id_2 GEN66) (= price_2 GEN67))))
(assert (= BAV214 (= id_2 GEN66)))
(assert (= BAV215 (= price_2 GEN67)))
(assert (= BAV216 (= quality_2 GEN68)))
(assert (= BAV217 (= begin_2 GEN69)))
(assert (= BAV218 (= end_2 GEN70)))
(assert (= BAV219 (and (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74)) (= end_2 GEN75))))
(assert (= BAV220 (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74))))
(assert (= BAV221 (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73))))
(assert (= BAV222 (and (= id_2 GEN71) (= price_2 GEN72))))
(assert (= BAV223 (= id_2 GEN71)))
(assert (= BAV224 (= price_2 GEN72)))
(assert (= BAV225 (= quality_2 GEN73)))
(assert (= BAV226 (= begin_2 GEN74)))
(assert (= BAV227 (= end_2 GEN75)))
(assert (= BAV228 (<= PRICE_SUM GEN76)))
(assert (= BAV229 (< PLAN_QUALITY GEN77)))
(assert (= BAV230 (< PLAN_QUALITY GEN78)))
(assert (= BAV231 (< PLAN_QUALITY GEN79)))
(assert (= BAV232 (< PLAN_QUALITY GEN80)))
(check-sat)
(get-model)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(assert (< PLAN_QUALITY GEN77))
(echo "11111")
(check-sat)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(assert (< PLAN_QUALITY GEN78))
(echo "22222")
(check-sat)
(assert (< PLAN_QUALITY GEN79))
(echo "33333")
(check-sat)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(assert (< PLAN_QUALITY GEN80))
(echo "44444")
(check-sat)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(echo "The end")