(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(get-model)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(get-model)
(declare-const BAV8 Bool)
(get-model)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const GEN80 Int)
(declare-const GEN79 Int)
(declare-const GEN78 Int)
(declare-const GEN77 Int)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-option :auto-config true)
(declare-fun id_0 () Int)
(declare-fun price_0 () Int)
(declare-fun quality_0 () Int)
(declare-fun end_0 () Int)
(declare-fun begin_0 () Int)
(declare-fun id_1 () Int)
(declare-fun price_1 () Int)
(declare-fun quality_1 () Int)
(declare-fun end_1 () Int)
(declare-fun begin_1 () Int)
(declare-fun id_2 () Int)
(declare-fun price_2 () Int)
(declare-fun quality_2 () Int)
(declare-fun end_2 () Int)
(declare-fun begin_2 () Int)
(assert (or (or (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))) (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20))) (and (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24)) (= end_0 GEN25))))
(assert (or (or (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))) (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45))) (and (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49)) (= end_1 GEN50))))
(assert (or (or (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))) (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70))) (and (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74)) (= end_2 GEN75))))
(define-fun PRICE_SUM () Int (+ price_0 price_1 price_2))
(assert (<= PRICE_SUM GEN76))
(define-fun MAX2 ((a1 Int) (a2 Int)) Int (ite (>= a1 a2) a1 a2))
(define-fun MAX3 ((a1 Int) (a2 Int) (a3 Int) ) Int (MAX2 a1 (MAX2 a2 a3 )))
(define-fun TIME_CRITERIA () Int (MAX3 end_0 end_1 end_2))
(define-fun PLAN_QUALITY () Int TIME_CRITERIA)
(echo "0000")
(assert (= BAV1 (or (or (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))) (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20))) (and (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24)) (= end_0 GEN25)))))
(assert (= BAV2 (or (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))) (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20)))))
(assert (= BAV3 (or (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))) (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15)))))
(assert (= BAV4 (or (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5)) (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10)))))
(assert (= BAV5 (and (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4)) (= end_0 GEN5))))
(assert (= BAV6 (and (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3)) (= begin_0 GEN4))))
(assert (= BAV7 (and (and (= id_0 GEN1) (= price_0 GEN2)) (= quality_0 GEN3))))
(assert (= BAV8 (and (= id_0 GEN1) (= price_0 GEN2))))
(assert (= BAV9 (= id_0 GEN1)))
(assert (= BAV10 (= price_0 GEN2)))
(assert (= BAV11 (= quality_0 GEN3)))
(assert (= BAV12 (= begin_0 GEN4)))
(assert (= BAV13 (= end_0 GEN5)))
(assert (= BAV14 (and (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9)) (= end_0 GEN10))))
(assert (= BAV15 (and (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8)) (= begin_0 GEN9))))
(assert (= BAV16 (and (and (= id_0 GEN6) (= price_0 GEN7)) (= quality_0 GEN8))))
(assert (= BAV17 (and (= id_0 GEN6) (= price_0 GEN7))))
(assert (= BAV18 (= id_0 GEN6)))
(assert (= BAV19 (= price_0 GEN7)))
(assert (= BAV20 (= quality_0 GEN8)))
(assert (= BAV21 (= begin_0 GEN9)))
(assert (= BAV22 (= end_0 GEN10)))
(assert (= BAV23 (and (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14)) (= end_0 GEN15))))
(assert (= BAV24 (and (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13)) (= begin_0 GEN14))))
(assert (= BAV25 (and (and (= id_0 GEN11) (= price_0 GEN12)) (= quality_0 GEN13))))
(assert (= BAV26 (and (= id_0 GEN11) (= price_0 GEN12))))
(assert (= BAV27 (= id_0 GEN11)))
(assert (= BAV28 (= price_0 GEN12)))
(assert (= BAV29 (= quality_0 GEN13)))
(assert (= BAV30 (= begin_0 GEN14)))
(assert (= BAV31 (= end_0 GEN15)))
(assert (= BAV32 (and (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19)) (= end_0 GEN20))))
(assert (= BAV33 (and (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18)) (= begin_0 GEN19))))
(assert (= BAV34 (and (and (= id_0 GEN16) (= price_0 GEN17)) (= quality_0 GEN18))))
(assert (= BAV35 (and (= id_0 GEN16) (= price_0 GEN17))))
(assert (= BAV36 (= id_0 GEN16)))
(assert (= BAV37 (= price_0 GEN17)))
(assert (= BAV38 (= quality_0 GEN18)))
(assert (= BAV39 (= begin_0 GEN19)))
(assert (= BAV40 (= end_0 GEN20)))
(assert (= BAV41 (and (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24)) (= end_0 GEN25))))
(assert (= BAV42 (and (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23)) (= begin_0 GEN24))))
(assert (= BAV43 (and (and (= id_0 GEN21) (= price_0 GEN22)) (= quality_0 GEN23))))
(assert (= BAV44 (and (= id_0 GEN21) (= price_0 GEN22))))
(assert (= BAV45 (= id_0 GEN21)))
(assert (= BAV46 (= price_0 GEN22)))
(assert (= BAV47 (= quality_0 GEN23)))
(assert (= BAV48 (= begin_0 GEN24)))
(assert (= BAV49 (= end_0 GEN25)))
(assert (= BAV50 (or (or (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))) (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45))) (and (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49)) (= end_1 GEN50)))))
(assert (= BAV51 (or (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))) (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45)))))
(assert (= BAV52 (or (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))) (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40)))))
(assert (= BAV53 (or (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30)) (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35)))))
(assert (= BAV54 (and (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29)) (= end_1 GEN30))))
(assert (= BAV55 (and (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28)) (= begin_1 GEN29))))
(assert (= BAV56 (and (and (= id_1 GEN26) (= price_1 GEN27)) (= quality_1 GEN28))))
(assert (= BAV57 (and (= id_1 GEN26) (= price_1 GEN27))))
(assert (= BAV58 (= id_1 GEN26)))
(assert (= BAV59 (= price_1 GEN27)))
(assert (= BAV60 (= quality_1 GEN28)))
(assert (= BAV61 (= begin_1 GEN29)))
(assert (= BAV62 (= end_1 GEN30)))
(assert (= BAV63 (and (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34)) (= end_1 GEN35))))
(assert (= BAV64 (and (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33)) (= begin_1 GEN34))))
(assert (= BAV65 (and (and (= id_1 GEN31) (= price_1 GEN32)) (= quality_1 GEN33))))
(assert (= BAV66 (and (= id_1 GEN31) (= price_1 GEN32))))
(assert (= BAV67 (= id_1 GEN31)))
(assert (= BAV68 (= price_1 GEN32)))
(assert (= BAV69 (= quality_1 GEN33)))
(assert (= BAV70 (= begin_1 GEN34)))
(assert (= BAV71 (= end_1 GEN35)))
(assert (= BAV72 (and (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39)) (= end_1 GEN40))))
(assert (= BAV73 (and (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38)) (= begin_1 GEN39))))
(assert (= BAV74 (and (and (= id_1 GEN36) (= price_1 GEN37)) (= quality_1 GEN38))))
(assert (= BAV75 (and (= id_1 GEN36) (= price_1 GEN37))))
(assert (= BAV76 (= id_1 GEN36)))
(assert (= BAV77 (= price_1 GEN37)))
(assert (= BAV78 (= quality_1 GEN38)))
(assert (= BAV79 (= begin_1 GEN39)))
(assert (= BAV80 (= end_1 GEN40)))
(assert (= BAV81 (and (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44)) (= end_1 GEN45))))
(assert (= BAV82 (and (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43)) (= begin_1 GEN44))))
(assert (= BAV83 (and (and (= id_1 GEN41) (= price_1 GEN42)) (= quality_1 GEN43))))
(assert (= BAV84 (and (= id_1 GEN41) (= price_1 GEN42))))
(assert (= BAV85 (= id_1 GEN41)))
(assert (= BAV86 (= price_1 GEN42)))
(assert (= BAV87 (= quality_1 GEN43)))
(assert (= BAV88 (= begin_1 GEN44)))
(assert (= BAV89 (= end_1 GEN45)))
(assert (= BAV90 (and (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49)) (= end_1 GEN50))))
(assert (= BAV91 (and (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48)) (= begin_1 GEN49))))
(assert (= BAV92 (and (and (= id_1 GEN46) (= price_1 GEN47)) (= quality_1 GEN48))))
(assert (= BAV93 (and (= id_1 GEN46) (= price_1 GEN47))))
(assert (= BAV94 (= id_1 GEN46)))
(assert (= BAV95 (= price_1 GEN47)))
(assert (= BAV96 (= quality_1 GEN48)))
(assert (= BAV97 (= begin_1 GEN49)))
(assert (= BAV98 (= end_1 GEN50)))
(assert (= BAV99 (or (or (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))) (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70))) (and (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74)) (= end_2 GEN75)))))
(assert (= BAV100 (or (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))) (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70)))))
(assert (= BAV101 (or (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))) (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65)))))
(assert (= BAV102 (or (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55)) (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60)))))
(assert (= BAV103 (and (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54)) (= end_2 GEN55))))
(assert (= BAV104 (and (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53)) (= begin_2 GEN54))))
(assert (= BAV105 (and (and (= id_2 GEN51) (= price_2 GEN52)) (= quality_2 GEN53))))
(assert (= BAV106 (and (= id_2 GEN51) (= price_2 GEN52))))
(assert (= BAV107 (= id_2 GEN51)))
(assert (= BAV108 (= price_2 GEN52)))
(assert (= BAV109 (= quality_2 GEN53)))
(assert (= BAV110 (= begin_2 GEN54)))
(assert (= BAV111 (= end_2 GEN55)))
(assert (= BAV112 (and (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59)) (= end_2 GEN60))))
(assert (= BAV113 (and (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58)) (= begin_2 GEN59))))
(assert (= BAV114 (and (and (= id_2 GEN56) (= price_2 GEN57)) (= quality_2 GEN58))))
(assert (= BAV115 (and (= id_2 GEN56) (= price_2 GEN57))))
(assert (= BAV116 (= id_2 GEN56)))
(assert (= BAV117 (= price_2 GEN57)))
(assert (= BAV118 (= quality_2 GEN58)))
(assert (= BAV119 (= begin_2 GEN59)))
(assert (= BAV120 (= end_2 GEN60)))
(assert (= BAV121 (and (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64)) (= end_2 GEN65))))
(assert (= BAV122 (and (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63)) (= begin_2 GEN64))))
(assert (= BAV123 (and (and (= id_2 GEN61) (= price_2 GEN62)) (= quality_2 GEN63))))
(assert (= BAV124 (and (= id_2 GEN61) (= price_2 GEN62))))
(assert (= BAV125 (= id_2 GEN61)))
(assert (= BAV126 (= price_2 GEN62)))
(assert (= BAV127 (= quality_2 GEN63)))
(assert (= BAV128 (= begin_2 GEN64)))
(assert (= BAV129 (= end_2 GEN65)))
(assert (= BAV130 (and (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69)) (= end_2 GEN70))))
(assert (= BAV131 (and (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68)) (= begin_2 GEN69))))
(assert (= BAV132 (and (and (= id_2 GEN66) (= price_2 GEN67)) (= quality_2 GEN68))))
(assert (= BAV133 (and (= id_2 GEN66) (= price_2 GEN67))))
(assert (= BAV134 (= id_2 GEN66)))
(assert (= BAV135 (= price_2 GEN67)))
(assert (= BAV136 (= quality_2 GEN68)))
(assert (= BAV137 (= begin_2 GEN69)))
(assert (= BAV138 (= end_2 GEN70)))
(assert (= BAV139 (and (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74)) (= end_2 GEN75))))
(assert (= BAV140 (and (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73)) (= begin_2 GEN74))))
(assert (= BAV141 (and (and (= id_2 GEN71) (= price_2 GEN72)) (= quality_2 GEN73))))
(assert (= BAV142 (and (= id_2 GEN71) (= price_2 GEN72))))
(assert (= BAV143 (= id_2 GEN71)))
(assert (= BAV144 (= price_2 GEN72)))
(assert (= BAV145 (= quality_2 GEN73)))
(assert (= BAV146 (= begin_2 GEN74)))
(assert (= BAV147 (= end_2 GEN75)))
(assert (= BAV148 (<= PRICE_SUM GEN76)))
(assert (= BAV149 (< PLAN_QUALITY GEN77)))
(assert (= BAV150 (< PLAN_QUALITY GEN78)))
(assert (= BAV151 (< PLAN_QUALITY GEN79)))
(assert (= BAV152 (< PLAN_QUALITY GEN80)))
(check-sat)
(get-model)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(assert (< PLAN_QUALITY GEN77))
(echo "11111")
(check-sat)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(assert (< PLAN_QUALITY GEN78))
(echo "22222")
(check-sat)
(assert (< PLAN_QUALITY GEN79))
(echo "33333")
(check-sat)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(assert (< PLAN_QUALITY GEN80))
(echo "44444")
(check-sat)
(get-value (id_0))
(get-value (id_1))
(get-value (id_2))
(get-value (PLAN_QUALITY))
(get-value (PRICE_SUM))
(echo "The end")