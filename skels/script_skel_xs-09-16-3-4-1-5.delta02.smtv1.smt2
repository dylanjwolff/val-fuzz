(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun arg1 () Int)
(declare-fun adr_lo () Int)
(declare-fun select_format (Int) Int)
(declare-fun x () Int)
(assert (= BAV1 (and (= (select_format arg1) adr_lo) (and (or (= GEN1 x) (or (= adr_lo (select_format GEN2)) (or (= adr_lo (select_format GEN3)) (or (= adr_lo (select_format GEN4)) (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8))))))) (and (= adr_lo GEN9) (and (< arg1 GEN10) (>= arg1 GEN11)))))))
(assert (= BAV2 (= (select_format arg1) adr_lo)))
(assert (= BAV3 (and (or (= GEN1 x) (or (= adr_lo (select_format GEN2)) (or (= adr_lo (select_format GEN3)) (or (= adr_lo (select_format GEN4)) (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8))))))) (and (= adr_lo GEN9) (and (< arg1 GEN10) (>= arg1 GEN11))))))
(assert (= BAV4 (or (= GEN1 x) (or (= adr_lo (select_format GEN2)) (or (= adr_lo (select_format GEN3)) (or (= adr_lo (select_format GEN4)) (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8)))))))))
(assert (= BAV5 (= GEN1 x)))
(assert (= BAV6 (or (= adr_lo (select_format GEN2)) (or (= adr_lo (select_format GEN3)) (or (= adr_lo (select_format GEN4)) (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8))))))))
(assert (= BAV7 (= adr_lo (select_format GEN2))))
(assert (= BAV8 (or (= adr_lo (select_format GEN3)) (or (= adr_lo (select_format GEN4)) (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8)))))))
(assert (= BAV9 (= adr_lo (select_format GEN3))))
(assert (= BAV10 (or (= adr_lo (select_format GEN4)) (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8))))))
(assert (= BAV11 (= adr_lo (select_format GEN4))))
(assert (= BAV12 (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8)))))
(assert (= BAV13 (= GEN5 (select_format GEN6))))
(assert (= BAV14 (= GEN7 (select_format GEN8))))
(assert (= BAV15 (and (= adr_lo GEN9) (and (< arg1 GEN10) (>= arg1 GEN11)))))
(assert (= BAV16 (= adr_lo GEN9)))
(assert (= BAV17 (and (< arg1 GEN10) (>= arg1 GEN11))))
(assert (= BAV18 (< arg1 GEN10)))
(assert (= BAV19 (>= arg1 GEN11)))
(check-sat-assuming ((and (= (select_format arg1) adr_lo) (and (or (= GEN1 x) (or (= adr_lo (select_format GEN2)) (or (= adr_lo (select_format GEN3)) (or (= adr_lo (select_format GEN4)) (or (= GEN5 (select_format GEN6)) (= GEN7 (select_format GEN8))))))) (and (= adr_lo GEN9) (and (< arg1 GEN10) (>= arg1 GEN11)))))))
(get-model)