(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Real)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Real)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Real)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Real)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Real)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () Real)
(declare-fun v2 () Real)
(declare-fun v1 () Real)
(assert (= BAV1 (and (= (/ (* GEN1 GEN2) GEN12) (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (= (= (ite false GEN13 v1) (+ GEN14 v2)) (ite (= (ite false v0 (* GEN1 GEN2)) (/ (ite false (- GEN15) GEN16) GEN17)) (and false (ite (= (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (/ (* GEN1 GEN2) GEN18)) (=> (= (= (ite false (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (* GEN1 GEN2)) GEN19) (= (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)) (/ (* GEN1 GEN2) GEN20))) (= GEN21 (ite (= (- (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) GEN22) GEN23 GEN24))) (=> false false))) false)))))
(assert (= BAV2 (= (/ (* GEN1 GEN2) GEN12) (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)))))
(assert (= BAV3 (= (= (ite false GEN13 v1) (+ GEN14 v2)) (ite (= (ite false v0 (* GEN1 GEN2)) (/ (ite false (- GEN15) GEN16) GEN17)) (and false (ite (= (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (/ (* GEN1 GEN2) GEN18)) (=> (= (= (ite false (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (* GEN1 GEN2)) GEN19) (= (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)) (/ (* GEN1 GEN2) GEN20))) (= GEN21 (ite (= (- (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) GEN22) GEN23 GEN24))) (=> false false))) false))))
(assert (= BAV4 (= (ite false GEN13 v1) (+ GEN14 v2))))
(assert (= BAV5 (= (ite false v0 (* GEN1 GEN2)) (/ (ite false (- GEN15) GEN16) GEN17))))
(assert (= BAV6 (and false (ite (= (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (/ (* GEN1 GEN2) GEN18)) (=> (= (= (ite false (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (* GEN1 GEN2)) GEN19) (= (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)) (/ (* GEN1 GEN2) GEN20))) (= GEN21 (ite (= (- (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) GEN22) GEN23 GEN24))) (=> false false)))))
(assert (= BAV7 (= (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (/ (* GEN1 GEN2) GEN18))))
(assert (= BAV8 (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)))))
(assert (= BAV9 (= v2 (/ (+ GEN7 GEN8) GEN10))))
(assert (= BAV10 (=> (= (= (ite false (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (* GEN1 GEN2)) GEN19) (= (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)) (/ (* GEN1 GEN2) GEN20))) (= GEN21 (ite (= (- (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) GEN22) GEN23 GEN24)))))
(assert (= BAV11 (= (= (ite false (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (* GEN1 GEN2)) GEN19) (= (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)) (/ (* GEN1 GEN2) GEN20)))))
(assert (= BAV12 (= (ite false (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (* GEN1 GEN2)) GEN19)))
(assert (= BAV13 (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)))))
(assert (= BAV14 (= v2 (/ (+ GEN7 GEN8) GEN10))))
(assert (= BAV15 (= (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)) (/ (* GEN1 GEN2) GEN20))))
(assert (= BAV16 (= GEN21 (ite (= (- (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) GEN22) GEN23 GEN24))))
(assert (= BAV17 (= (- (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) GEN22)))
(assert (= BAV18 (=> false false)))
(check-sat-assuming ((and (= (/ (* GEN1 GEN2) GEN12) (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (= (= (ite false GEN13 v1) (+ GEN14 v2)) (ite (= (ite false v0 (* GEN1 GEN2)) (/ (ite false (- GEN15) GEN16) GEN17)) (and false (ite (= (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (/ (* GEN1 GEN2) GEN18)) (=> (= (= (ite false (ite (= GEN9 (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) (+ GEN7 GEN8) (ite (= v2 (/ (+ GEN7 GEN8) GEN10)) v2 GEN11)) (* GEN1 GEN2)) GEN19) (= (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0)) (/ (* GEN1 GEN2) GEN20))) (= GEN21 (ite (= (- (- (* GEN3 (- v0)) (- (/ (- GEN4 GEN5) GEN6) v0))) GEN22) GEN23 GEN24))) (=> false false))) false)))))
(get-model)