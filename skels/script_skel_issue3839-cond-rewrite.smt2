(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a () Int)
(declare-fun b () Int)
(assert (xor (> a GEN1) (not (and (ite (= a b) (> (* GEN2 a b) GEN3) true) (> (* a a) GEN4)))))
(assert (= a b))
(assert (> (* a b) GEN5))
(assert (= BAV1 (xor (> a GEN1) (not (and (ite (= a b) (> (* GEN2 a b) GEN3) true) (> (* a a) GEN4))))))
(assert (= BAV2 (> a GEN1)))
(assert (= BAV3 (and (ite (= a b) (> (* GEN2 a b) GEN3) true) (> (* a a) GEN4))))
(assert (= BAV4 (= a b)))
(assert (= BAV5 (> (* GEN2 a b) GEN3)))
(assert (= BAV6 (> (* a a) GEN4)))
(assert (= BAV7 (= a b)))
(assert (= BAV8 (> (* a b) GEN5)))
(check-sat)
(get-model)