(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-sort U 0)
(declare-sort V 0)
(declare-fun z9 () V)
(declare-fun x10 () V)
(declare-fun x9 () V)
(declare-fun x13 () V)
(declare-fun x0 () V)
(declare-fun z12 () V)
(declare-fun x12 () V)
(declare-fun y12 () V)
(declare-fun z11 () V)
(declare-fun x11 () V)
(declare-fun y11 () V)
(declare-fun z10 () V)
(declare-fun y10 () V)
(declare-fun y8 () V)
(declare-fun x8 () V)
(declare-fun y7 () V)
(declare-fun x7 () V)
(declare-fun z6 () V)
(declare-fun x6 () V)
(declare-fun y6 () V)
(declare-fun z5 () V)
(declare-fun x5 () V)
(declare-fun y5 () V)
(declare-fun y4 () V)
(declare-fun x4 () V)
(declare-fun y3 () V)
(declare-fun x3 () V)
(declare-fun y2 () V)
(declare-fun x2 () V)
(declare-fun y1 () V)
(declare-fun x1 () V)
(declare-fun y0 () V)
(assert (= BAV1 (and (and (= x0 y0) (= y0 x1)) (and (= x1 y1) (= y1 x2)) (and (= x2 y2) (= y2 x3)) (and (= x3 y3) (= y3 x4)) (and (= x4 y4) (= y4 x5)) (or (and false (= y5 x6)) (and (= x5 z5) (= x6 z5))) (or (and (= x6 y6) (= y6 x7)) (and (= x6 z6) (= x7 z6))) (and (= x7 y7) (= y7 x8)) (and (= x8 y8) (= y8 x9)) (or (and (= x10 y10) (= y10 x11)) (and (= x10 z10) (= x11 z10))) (or (and (= x11 y11) (= y11 x12)) (and (= x11 z11) (= x12 z11))) (or (and (= x12 y12) (= y12 x13)) (and (= x12 z12) (= x13 z12))) (not (= x0 x13)) (or false (and (= x9 z9) (= x10 z9))))))
(assert (= BAV2 (and (= x0 y0) (= y0 x1))))
(assert (= BAV3 (= x0 y0)))
(assert (= BAV4 (= y0 x1)))
(assert (= BAV5 (and (= x1 y1) (= y1 x2))))
(assert (= BAV6 (= x1 y1)))
(assert (= BAV7 (= y1 x2)))
(assert (= BAV8 (and (= x2 y2) (= y2 x3))))
(assert (= BAV9 (= x2 y2)))
(assert (= BAV10 (= y2 x3)))
(assert (= BAV11 (and (= x3 y3) (= y3 x4))))
(assert (= BAV12 (= x3 y3)))
(assert (= BAV13 (= y3 x4)))
(assert (= BAV14 (and (= x4 y4) (= y4 x5))))
(assert (= BAV15 (= x4 y4)))
(assert (= BAV16 (= y4 x5)))
(assert (= BAV17 (or (and false (= y5 x6)) (and (= x5 z5) (= x6 z5)))))
(assert (= BAV18 (and false (= y5 x6))))
(assert (= BAV19 (= y5 x6)))
(assert (= BAV20 (and (= x5 z5) (= x6 z5))))
(assert (= BAV21 (= x5 z5)))
(assert (= BAV22 (= x6 z5)))
(assert (= BAV23 (or (and (= x6 y6) (= y6 x7)) (and (= x6 z6) (= x7 z6)))))
(assert (= BAV24 (and (= x6 y6) (= y6 x7))))
(assert (= BAV25 (= x6 y6)))
(assert (= BAV26 (= y6 x7)))
(assert (= BAV27 (and (= x6 z6) (= x7 z6))))
(assert (= BAV28 (= x6 z6)))
(assert (= BAV29 (= x7 z6)))
(assert (= BAV30 (and (= x7 y7) (= y7 x8))))
(assert (= BAV31 (= x7 y7)))
(assert (= BAV32 (= y7 x8)))
(assert (= BAV33 (and (= x8 y8) (= y8 x9))))
(assert (= BAV34 (= x8 y8)))
(assert (= BAV35 (= y8 x9)))
(assert (= BAV36 (or (and (= x10 y10) (= y10 x11)) (and (= x10 z10) (= x11 z10)))))
(assert (= BAV37 (and (= x10 y10) (= y10 x11))))
(assert (= BAV38 (= x10 y10)))
(assert (= BAV39 (= y10 x11)))
(assert (= BAV40 (and (= x10 z10) (= x11 z10))))
(assert (= BAV41 (= x10 z10)))
(assert (= BAV42 (= x11 z10)))
(assert (= BAV43 (or (and (= x11 y11) (= y11 x12)) (and (= x11 z11) (= x12 z11)))))
(assert (= BAV44 (and (= x11 y11) (= y11 x12))))
(assert (= BAV45 (= x11 y11)))
(assert (= BAV46 (= y11 x12)))
(assert (= BAV47 (and (= x11 z11) (= x12 z11))))
(assert (= BAV48 (= x11 z11)))
(assert (= BAV49 (= x12 z11)))
(assert (= BAV50 (or (and (= x12 y12) (= y12 x13)) (and (= x12 z12) (= x13 z12)))))
(assert (= BAV51 (and (= x12 y12) (= y12 x13))))
(assert (= BAV52 (= x12 y12)))
(assert (= BAV53 (= y12 x13)))
(assert (= BAV54 (and (= x12 z12) (= x13 z12))))
(assert (= BAV55 (= x12 z12)))
(assert (= BAV56 (= x13 z12)))
(assert (= BAV57 (= x0 x13)))
(assert (= BAV58 (or false (and (= x9 z9) (= x10 z9)))))
(assert (= BAV59 (and (= x9 z9) (= x10 z9))))
(assert (= BAV60 (= x9 z9)))
(assert (= BAV61 (= x10 z9)))
(check-sat-assuming ((and (and (= x0 y0) (= y0 x1)) (and (= x1 y1) (= y1 x2)) (and (= x2 y2) (= y2 x3)) (and (= x3 y3) (= y3 x4)) (and (= x4 y4) (= y4 x5)) (or (and false (= y5 x6)) (and (= x5 z5) (= x6 z5))) (or (and (= x6 y6) (= y6 x7)) (and (= x6 z6) (= x7 z6))) (and (= x7 y7) (= y7 x8)) (and (= x8 y8) (= y8 x9)) (or (and (= x10 y10) (= y10 x11)) (and (= x10 z10) (= x11 z10))) (or (and (= x11 y11) (= y11 x12)) (and (= x11 z11) (= x12 z11))) (or (and (= x12 y12) (= y12 x13)) (and (= x12 z12) (= x13 z12))) (not (= x0 x13)) (or false (and (= x9 z9) (= x10 z9))))))
(get-model)