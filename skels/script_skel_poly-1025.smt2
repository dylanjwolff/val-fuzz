(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-info :source |
These benchmarks used in the paper:

  Dejan Jovanovic and Leonardo de Moura.  Solving Non-Linear Arithmetic.
  In IJCAR 2012, published as LNCS volume 7364, pp. 339--354.

The meti-tarski benchmarks are proof obligations extracted from the
Meti-Tarski project, see:

  B. Akbarpour and L. C. Paulson. MetiTarski: An automatic theorem prover
  for real-valued special functions. Journal of Automated Reasoning,
  44(3):175-205, 2010.

Submitted by Dejan Jovanovic for SMT-LIB.


|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(declare-fun skoX () Real)
(declare-fun skoY () Real)
(declare-fun skoZ () Real)
(assert (and (not (<= skoX GEN14)) (and (or (not (<= (* skoZ (* skoY (* skoY (+ (* skoX (* skoX (+ (/ (- GEN15) GEN16) (* skoX (/ GEN4 GEN5))))) (* skoY (* skoX (* skoX (+ (/ GEN17 GEN18) (* skoX (/ GEN4 GEN5)))))))))) (* skoY (+ (* skoX (+ (/ GEN19 GEN20) (* skoX (/ (- GEN6) GEN7)))) (* skoY (* skoX (+ (/ (- GEN21) GEN22) (* skoX (/ (- GEN6) GEN7))))))))) (not (<= skoZ GEN1))) (and (or (not (<= skoY GEN2)) (not (<= skoZ GEN1))) (and (or (not (<= skoX GEN3)) (or (not (<= skoY GEN2)) (not (<= skoZ GEN1)))) (and (<= skoZ GEN23) (and (<= skoY GEN24) (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1)))))))))))))))
(assert (= BAV1 (and (not (<= skoX GEN14)) (and (or (not (<= (* skoZ (* skoY (* skoY (+ (* skoX (* skoX (+ (/ (- GEN15) GEN16) (* skoX (/ GEN4 GEN5))))) (* skoY (* skoX (* skoX (+ (/ GEN17 GEN18) (* skoX (/ GEN4 GEN5)))))))))) (* skoY (+ (* skoX (+ (/ GEN19 GEN20) (* skoX (/ (- GEN6) GEN7)))) (* skoY (* skoX (+ (/ (- GEN21) GEN22) (* skoX (/ (- GEN6) GEN7))))))))) (not (<= skoZ GEN1))) (and (or (not (<= skoY GEN2)) (not (<= skoZ GEN1))) (and (or (not (<= skoX GEN3)) (or (not (<= skoY GEN2)) (not (<= skoZ GEN1)))) (and (<= skoZ GEN23) (and (<= skoY GEN24) (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1))))))))))))))))
(assert (= BAV2 (<= skoX GEN14)))
(assert (= BAV3 (and (or (not (<= (* skoZ (* skoY (* skoY (+ (* skoX (* skoX (+ (/ (- GEN15) GEN16) (* skoX (/ GEN4 GEN5))))) (* skoY (* skoX (* skoX (+ (/ GEN17 GEN18) (* skoX (/ GEN4 GEN5)))))))))) (* skoY (+ (* skoX (+ (/ GEN19 GEN20) (* skoX (/ (- GEN6) GEN7)))) (* skoY (* skoX (+ (/ (- GEN21) GEN22) (* skoX (/ (- GEN6) GEN7))))))))) (not (<= skoZ GEN1))) (and (or (not (<= skoY GEN2)) (not (<= skoZ GEN1))) (and (or (not (<= skoX GEN3)) (or (not (<= skoY GEN2)) (not (<= skoZ GEN1)))) (and (<= skoZ GEN23) (and (<= skoY GEN24) (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1)))))))))))))))
(assert (= BAV4 (or (not (<= (* skoZ (* skoY (* skoY (+ (* skoX (* skoX (+ (/ (- GEN15) GEN16) (* skoX (/ GEN4 GEN5))))) (* skoY (* skoX (* skoX (+ (/ GEN17 GEN18) (* skoX (/ GEN4 GEN5)))))))))) (* skoY (+ (* skoX (+ (/ GEN19 GEN20) (* skoX (/ (- GEN6) GEN7)))) (* skoY (* skoX (+ (/ (- GEN21) GEN22) (* skoX (/ (- GEN6) GEN7))))))))) (not (<= skoZ GEN1)))))
(assert (= BAV5 (<= (* skoZ (* skoY (* skoY (+ (* skoX (* skoX (+ (/ (- GEN15) GEN16) (* skoX (/ GEN4 GEN5))))) (* skoY (* skoX (* skoX (+ (/ GEN17 GEN18) (* skoX (/ GEN4 GEN5)))))))))) (* skoY (+ (* skoX (+ (/ GEN19 GEN20) (* skoX (/ (- GEN6) GEN7)))) (* skoY (* skoX (+ (/ (- GEN21) GEN22) (* skoX (/ (- GEN6) GEN7))))))))))
(assert (= BAV6 (<= skoZ GEN1)))
(assert (= BAV7 (and (or (not (<= skoY GEN2)) (not (<= skoZ GEN1))) (and (or (not (<= skoX GEN3)) (or (not (<= skoY GEN2)) (not (<= skoZ GEN1)))) (and (<= skoZ GEN23) (and (<= skoY GEN24) (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1))))))))))))))
(assert (= BAV8 (or (not (<= skoY GEN2)) (not (<= skoZ GEN1)))))
(assert (= BAV9 (<= skoY GEN2)))
(assert (= BAV10 (<= skoZ GEN1)))
(assert (= BAV11 (and (or (not (<= skoX GEN3)) (or (not (<= skoY GEN2)) (not (<= skoZ GEN1)))) (and (<= skoZ GEN23) (and (<= skoY GEN24) (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1)))))))))))))
(assert (= BAV12 (or (not (<= skoX GEN3)) (or (not (<= skoY GEN2)) (not (<= skoZ GEN1))))))
(assert (= BAV13 (<= skoX GEN3)))
(assert (= BAV14 (or (not (<= skoY GEN2)) (not (<= skoZ GEN1)))))
(assert (= BAV15 (<= skoY GEN2)))
(assert (= BAV16 (<= skoZ GEN1)))
(assert (= BAV17 (and (<= skoZ GEN23) (and (<= skoY GEN24) (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1))))))))))))
(assert (= BAV18 (<= skoZ GEN23)))
(assert (= BAV19 (and (<= skoY GEN24) (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1)))))))))))
(assert (= BAV20 (<= skoY GEN24)))
(assert (= BAV21 (and (<= skoX GEN25) (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1))))))))))
(assert (= BAV22 (<= skoX GEN25)))
(assert (= BAV23 (and (<= GEN26 skoZ) (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1)))))))))
(assert (= BAV24 (<= GEN26 skoZ)))
(assert (= BAV25 (and (<= GEN27 skoY) (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1))))))))
(assert (= BAV26 (<= GEN27 skoY)))
(assert (= BAV27 (and (<= GEN28 skoX) (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1)))))))
(assert (= BAV28 (<= GEN28 skoX)))
(assert (= BAV29 (and (or (not (<= skoX GEN3)) (not (<= skoZ GEN1))) (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1))))))
(assert (= BAV30 (or (not (<= skoX GEN3)) (not (<= skoZ GEN1)))))
(assert (= BAV31 (<= skoX GEN3)))
(assert (= BAV32 (<= skoZ GEN1)))
(assert (= BAV33 (or (not (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))) (not (<= skoZ GEN1)))))
(assert (= BAV34 (<= (* skoZ (* skoY (+ (* skoX (+ (/ (- GEN29) GEN30) (* skoX (/ GEN8 GEN9)))) (* skoY (* skoX (+ (/ GEN31 GEN32) (* skoX (/ GEN8 GEN9)))))))) (+ (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))) (* skoY (+ (/ (- GEN10) GEN11) (* skoX (/ (- GEN12) GEN13))))))))
(assert (= BAV35 (<= skoZ GEN1)))
(check-sat)
(get-model)
(exit)