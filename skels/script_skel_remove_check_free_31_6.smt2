(set-option :print-success false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-sort Loc 0)
(define-sort SetLoc () (Set Loc))
(define-sort SetInt () (Set Int))
(declare-sort FldLoc 0)
(declare-sort FldInt 0)
(declare-fun null$0 () Loc)
(declare-fun read$0 (FldLoc Loc) Loc)
(declare-fun write$0 (FldLoc Loc Loc) FldLoc)
(declare-fun ep$0 (FldLoc SetLoc Loc) Loc)
(declare-fun Btwn$0 (FldLoc Loc Loc Loc) Bool)
(declare-fun Frame$0 (SetLoc SetLoc FldLoc FldLoc) Bool)
(declare-fun Alloc$0 () SetLoc)
(declare-fun FP$0 () SetLoc)
(declare-fun FP_1$0 () SetLoc)
(declare-fun FP_2$0 () SetLoc)
(declare-fun FP_Caller$0 () SetLoc)
(declare-fun FP_Caller_1$0 () SetLoc)
(declare-fun curr_2$0 () Loc)
(declare-fun curr_3$0 () Loc)
(declare-fun lseg_domain$0 (FldLoc Loc Loc) SetLoc)
(declare-fun lseg_struct$0 (SetLoc FldLoc Loc Loc) Bool)
(declare-fun lst$0 () Loc)
(declare-fun lst_1$0 () Loc)
(declare-fun next$0 () FldLoc)
(declare-fun next_1$0 () FldLoc)
(declare-fun nondet_2$0 () Bool)
(declare-fun sk_?X_27$0 () SetLoc)
(declare-fun sk_?X_28$0 () SetLoc)
(declare-fun sk_?X_29$0 () SetLoc)
(declare-fun sk_?X_30$0 () SetLoc)
(declare-fun sk_?X_31$0 () SetLoc)
(declare-fun sk_?X_32$0 () SetLoc)
(declare-fun sk_?X_33$0 () SetLoc)
(declare-fun tmp_2$0 () Loc)
(assert (! (forall ((?y Loc)) (or (not (Btwn$0 next$0 null$0 ?y ?y)) (= null$0 ?y) (Btwn$0 next$0 null$0 (read$0 next$0 null$0) ?y))) :named btwn_reach_8))
(assert (! (forall ((?y Loc)) (or (not (Btwn$0 next$0 tmp_2$0 ?y ?y)) (= tmp_2$0 ?y) (Btwn$0 next$0 tmp_2$0 (read$0 next$0 tmp_2$0) ?y))) :named btwn_reach_9))
(assert (! (forall ((?y Loc)) (or (not (Btwn$0 next$0 curr_3$0 ?y ?y)) (= curr_3$0 ?y) (Btwn$0 next$0 curr_3$0 (read$0 next$0 curr_3$0) ?y))) :named btwn_reach_10))
(assert (! (forall ((?y Loc)) (or (not (= (read$0 next$0 null$0) null$0)) (not (Btwn$0 next$0 null$0 ?y ?y)) (= null$0 ?y))) :named btwn_cycl_8))
(assert (! (forall ((?y Loc)) (or (not (= (read$0 next$0 tmp_2$0) tmp_2$0)) (not (Btwn$0 next$0 tmp_2$0 ?y ?y)) (= tmp_2$0 ?y))) :named btwn_cycl_9))
(assert (! (forall ((?y Loc)) (or (not (= (read$0 next$0 curr_3$0) curr_3$0)) (not (Btwn$0 next$0 curr_3$0 ?y ?y)) (= curr_3$0 ?y))) :named btwn_cycl_10))
(assert (! (Btwn$0 next$0 null$0 (read$0 next$0 null$0) (read$0 next$0 null$0)) :named btwn_step_8))
(assert (! (Btwn$0 next$0 tmp_2$0 (read$0 next$0 tmp_2$0) (read$0 next$0 tmp_2$0)) :named btwn_step_9))
(assert (! (Btwn$0 next$0 curr_3$0 (read$0 next$0 curr_3$0) (read$0 next$0 curr_3$0)) :named btwn_step_10))
(assert (! (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 null$0) sk_?X_30$0) (= null$0 (ep$0 ?f sk_?X_30$0 null$0)))) :named entry-point3_10))
(assert (! (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 lst_1$0) sk_?X_30$0) (= lst_1$0 (ep$0 ?f sk_?X_30$0 lst_1$0)))) :named entry-point3_11))
(assert (! (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 curr_3$0) sk_?X_30$0) (= curr_3$0 (ep$0 ?f sk_?X_30$0 curr_3$0)))) :named entry-point3_12))
(assert (! (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 tmp_2$0) sk_?X_30$0) (= tmp_2$0 (ep$0 ?f sk_?X_30$0 tmp_2$0)))) :named entry-point3_13))
(assert (! (forall ((?f FldLoc)) (Btwn$0 ?f null$0 (ep$0 ?f sk_?X_30$0 null$0) (ep$0 ?f sk_?X_30$0 null$0))) :named entry-point1_10))
(assert (! (forall ((?f FldLoc)) (Btwn$0 ?f lst_1$0 (ep$0 ?f sk_?X_30$0 lst_1$0) (ep$0 ?f sk_?X_30$0 lst_1$0))) :named entry-point1_11))
(assert (! (forall ((?f FldLoc)) (Btwn$0 ?f curr_3$0 (ep$0 ?f sk_?X_30$0 curr_3$0) (ep$0 ?f sk_?X_30$0 curr_3$0))) :named entry-point1_12))
(assert (! (forall ((?f FldLoc)) (Btwn$0 ?f tmp_2$0 (ep$0 ?f sk_?X_30$0 tmp_2$0) (ep$0 ?f sk_?X_30$0 tmp_2$0))) :named entry-point1_13))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f null$0 (ep$0 ?f sk_?X_30$0 null$0) ?y) (not (Btwn$0 ?f null$0 ?y ?y)) (not (member ?y sk_?X_30$0)))) :named entry-point4_10))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f lst_1$0 (ep$0 ?f sk_?X_30$0 lst_1$0) ?y) (not (Btwn$0 ?f lst_1$0 ?y ?y)) (not (member ?y sk_?X_30$0)))) :named entry-point4_11))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f curr_3$0 (ep$0 ?f sk_?X_30$0 curr_3$0) ?y) (not (Btwn$0 ?f curr_3$0 ?y ?y)) (not (member ?y sk_?X_30$0)))) :named entry-point4_12))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f tmp_2$0 (ep$0 ?f sk_?X_30$0 tmp_2$0) ?y) (not (Btwn$0 ?f tmp_2$0 ?y ?y)) (not (member ?y sk_?X_30$0)))) :named entry-point4_13))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f null$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 null$0) sk_?X_30$0))) :named entry-point2_10))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f lst_1$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 lst_1$0) sk_?X_30$0))) :named entry-point2_11))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f curr_3$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 curr_3$0) sk_?X_30$0))) :named entry-point2_12))
(assert (! (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f tmp_2$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 tmp_2$0) sk_?X_30$0))) :named entry-point2_13))
(assert (! (= (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) curr_3$0) (read$0 next$0 tmp_2$0)) :named read_write2))
(assert (! (or (= null$0 curr_3$0) (= (read$0 next$0 null$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) null$0))) :named read_write1))
(assert (! (or (= tmp_2$0 curr_3$0) (= (read$0 next$0 tmp_2$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) tmp_2$0))) :named read_write1_1))
(assert (! (or (= curr_3$0 curr_3$0) (= (read$0 next$0 curr_3$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) curr_3$0))) :named read_write1_2))
(assert (! (= (read$0 next$0 null$0) null$0) :named read_null_5))
(assert (! (= (read$0 next_1$0 null$0) null$0) :named read_null_6))
(assert (! (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (member l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (member l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))) :named lseg_footprint_20))
(assert (! (forall ((l1 Loc)) (or (and (Btwn$0 next$0 curr_3$0 l1 null$0) (member l1 (lseg_domain$0 next$0 curr_3$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 curr_3$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 curr_3$0 null$0)))))) :named lseg_footprint_21))
(assert (! (not (member tmp_2$0 FP_2$0)) :named check_free_31_6))
(assert (! (not (member null$0 Alloc$0)) :named framecondition_of_remove_loop_18_4_15))
(assert (! (not (= lst$0 null$0)) :named if_else_13_6_4))
(assert (! (= FP_Caller$0 (union FP$0 FP_Caller$0)) :named precondition_of_remove_10_11_20))
(assert (! (= sk_?X_33$0 FP$0) :named precondition_of_remove_10_11_21))
(assert (! (lseg_struct$0 sk_?X_32$0 next$0 lst$0 curr_2$0) :named invariant_18_4_62))
(assert (! (= FP$0 (union FP_1$0 FP$0)) :named invariant_18_4_63))
(assert (! (= sk_?X_31$0 (lseg_domain$0 next$0 curr_2$0 null$0)) :named invariant_18_4_64))
(assert (! (= sk_?X_30$0 (union sk_?X_31$0 sk_?X_32$0)) :named invariant_18_4_65))
(assert (! (= (as emptyset SetLoc) (as emptyset SetLoc)) :named invariant_18_4_66))
(assert (! (lseg_struct$0 sk_?X_28$0 next$0 curr_3$0 null$0) :named invariant_18_4_67))
(assert (! (= sk_?X_29$0 (union sk_?X_28$0 sk_?X_27$0)) :named invariant_18_4_68))
(assert (! (= sk_?X_28$0 (lseg_domain$0 next$0 curr_3$0 null$0)) :named invariant_18_4_69))
(assert (! (= (as emptyset SetLoc) (intersection sk_?X_27$0 sk_?X_28$0)) :named invariant_18_4_70))
(assert (! (= Alloc$0 (union FP_Caller$0 Alloc$0)) :named initial_footprint_of_remove_10_11_10))
(assert (! (Frame$0 FP_1$0 Alloc$0 next$0 next$0) :named framecondition_of_remove_loop_18_4_16))
(assert (! (= next_1$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0))) :named assign_30_6))
(assert (! (= curr_2$0 lst$0) :named assign_17_4_4))
(assert (! (= FP_2$0 (union (setminus FP$0 FP_1$0) (union (intersection Alloc$0 FP_1$0) (setminus Alloc$0 Alloc$0)))) :named framecondition_of_remove_loop_18_4_17))
(assert (! (or (Btwn$0 next$0 lst$0 curr_2$0 curr_2$0) (not (lseg_struct$0 sk_?X_32$0 next$0 lst$0 curr_2$0))) :named unnamed_23))
(assert (! (or (Btwn$0 next$0 curr_3$0 null$0 null$0) (not (lseg_struct$0 sk_?X_28$0 next$0 curr_3$0 null$0))) :named unnamed_24))
(assert (! (or (= (read$0 next$0 curr_3$0) null$0) (not nondet_2$0)) :named unnamed_25))
(assert (! (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst_1$0 l1 curr_3$0) (member l1 (lseg_domain$0 next$0 lst_1$0 curr_3$0)) (not (= l1 curr_3$0))) (and (or (= l1 curr_3$0) (not (Btwn$0 next$0 lst_1$0 l1 curr_3$0))) (not (member l1 (lseg_domain$0 next$0 lst_1$0 curr_3$0)))))) :named lseg_footprint_22))
(assert (! (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (member l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 lst$0 null$0)))))) :named lseg_footprint_23))
(assert (! (forall ((l1 Loc)) (or (and (Btwn$0 next$0 curr_2$0 l1 null$0) (member l1 (lseg_domain$0 next$0 curr_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 curr_2$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 curr_2$0 null$0)))))) :named lseg_footprint_24))
(assert (! (not (member null$0 Alloc$0)) :named initial_footprint_of_remove_10_11_11))
(assert (! (not (= tmp_2$0 null$0)) :named if_else_28_8_2))
(assert (! (lseg_struct$0 sk_?X_33$0 next$0 lst$0 null$0) :named precondition_of_remove_10_11_22))
(assert (! (= sk_?X_33$0 (lseg_domain$0 next$0 lst$0 null$0)) :named precondition_of_remove_10_11_23))
(assert (! (not (= curr_2$0 null$0)) :named invariant_18_4_71))
(assert (! (lseg_struct$0 sk_?X_31$0 next$0 curr_2$0 null$0) :named invariant_18_4_72))
(assert (! (= sk_?X_32$0 (lseg_domain$0 next$0 lst$0 curr_2$0)) :named invariant_18_4_73))
(assert (! (= sk_?X_30$0 FP_1$0) :named invariant_18_4_74))
(assert (! (= (as emptyset SetLoc) (intersection sk_?X_32$0 sk_?X_31$0)) :named invariant_18_4_75))
(assert (! (not (= curr_3$0 null$0)) :named invariant_18_4_76))
(assert (! (lseg_struct$0 sk_?X_27$0 next$0 lst_1$0 curr_3$0) :named invariant_18_4_77))
(assert (! (= sk_?X_29$0 (union (intersection Alloc$0 FP_1$0) (setminus Alloc$0 Alloc$0))) :named invariant_18_4_78))
(assert (! (= sk_?X_27$0 (lseg_domain$0 next$0 lst_1$0 curr_3$0)) :named invariant_18_4_79))
(assert (! (= (as emptyset SetLoc) (as emptyset SetLoc)) :named invariant_18_4_80))
(assert (! (= Alloc$0 (union FP_2$0 Alloc$0)) :named framecondition_of_remove_loop_18_4_18))
(assert (! (= tmp_2$0 (read$0 next$0 curr_3$0)) :named assign_27_4_2))
(assert (! (= lst_1$0 lst$0) :named framecondition_of_remove_loop_18_4_19))
(assert (! (= FP_Caller_1$0 (setminus FP_Caller$0 FP$0)) :named assign_13_2_5))
(assert (! (or (Btwn$0 next$0 lst_1$0 curr_3$0 curr_3$0) (not (lseg_struct$0 sk_?X_27$0 next$0 lst_1$0 curr_3$0))) :named unnamed_26))
(assert (! (or (Btwn$0 next$0 lst$0 null$0 null$0) (not (lseg_struct$0 sk_?X_33$0 next$0 lst$0 null$0))) :named unnamed_27))
(assert (! (or (Btwn$0 next$0 curr_2$0 null$0 null$0) (not (lseg_struct$0 sk_?X_31$0 next$0 curr_2$0 null$0))) :named unnamed_28))
(assert (! (forall ((?u Loc)(?v Loc)(?z Loc)) (and (or (Btwn$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) ?z ?u ?v) (not (or (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))) (or (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (not (Btwn$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) ?z ?u ?v))))) :named btwn_write))
(assert (! (forall ((?x Loc)) (Btwn$0 next$0 ?x ?x ?x)) :named btwn_refl_5))
(assert (! (forall ((?x Loc)(?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y))) :named btwn_sndw_5))
(assert (! (forall ((?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?y)) (not (Btwn$0 next$0 ?x ?z ?z)) (Btwn$0 next$0 ?x ?y ?z) (Btwn$0 next$0 ?x ?z ?y))) :named btwn_ord1_5))
(assert (! (forall ((?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?z)) (and (Btwn$0 next$0 ?x ?y ?y) (Btwn$0 next$0 ?y ?z ?z)))) :named btwn_ord2_5))
(assert (! (forall ((?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?y)) (not (Btwn$0 next$0 ?y ?z ?z)) (Btwn$0 next$0 ?x ?z ?z))) :named btwn_trn1_5))
(assert (! (forall ((?u Loc)(?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?z)) (not (Btwn$0 next$0 ?y ?u ?z)) (and (Btwn$0 next$0 ?x ?y ?u) (Btwn$0 next$0 ?x ?u ?z)))) :named btwn_trn2_5))
(assert (! (forall ((?u Loc)(?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?z)) (not (Btwn$0 next$0 ?x ?u ?y)) (and (Btwn$0 next$0 ?x ?u ?z) (Btwn$0 next$0 ?u ?y ?z)))) :named btwn_trn3_5))
(assert (= BAV1 (forall ((?y Loc)) (or (not (Btwn$0 next$0 null$0 ?y ?y)) (= null$0 ?y) (Btwn$0 next$0 null$0 (read$0 next$0 null$0) ?y)))))
(assert (= BAV2 (forall ((?y Loc)) (= null$0 ?y))))
(assert (= BAV3 (forall ((?y Loc)) (or (not (Btwn$0 next$0 tmp_2$0 ?y ?y)) (= tmp_2$0 ?y) (Btwn$0 next$0 tmp_2$0 (read$0 next$0 tmp_2$0) ?y)))))
(assert (= BAV4 (forall ((?y Loc)) (= tmp_2$0 ?y))))
(assert (= BAV5 (forall ((?y Loc)) (or (not (Btwn$0 next$0 curr_3$0 ?y ?y)) (= curr_3$0 ?y) (Btwn$0 next$0 curr_3$0 (read$0 next$0 curr_3$0) ?y)))))
(assert (= BAV6 (forall ((?y Loc)) (= curr_3$0 ?y))))
(assert (= BAV7 (forall ((?y Loc)) (or (not (= (read$0 next$0 null$0) null$0)) (not (Btwn$0 next$0 null$0 ?y ?y)) (= null$0 ?y)))))
(assert (= BAV8 (forall ((?y Loc)) (= (read$0 next$0 null$0) null$0))))
(assert (= BAV9 (forall ((?y Loc)) (= null$0 ?y))))
(assert (= BAV10 (forall ((?y Loc)) (or (not (= (read$0 next$0 tmp_2$0) tmp_2$0)) (not (Btwn$0 next$0 tmp_2$0 ?y ?y)) (= tmp_2$0 ?y)))))
(assert (= BAV11 (forall ((?y Loc)) (= (read$0 next$0 tmp_2$0) tmp_2$0))))
(assert (= BAV12 (forall ((?y Loc)) (= tmp_2$0 ?y))))
(assert (= BAV13 (forall ((?y Loc)) (or (not (= (read$0 next$0 curr_3$0) curr_3$0)) (not (Btwn$0 next$0 curr_3$0 ?y ?y)) (= curr_3$0 ?y)))))
(assert (= BAV14 (forall ((?y Loc)) (= (read$0 next$0 curr_3$0) curr_3$0))))
(assert (= BAV15 (forall ((?y Loc)) (= curr_3$0 ?y))))
(assert (= BAV16 (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 null$0) sk_?X_30$0) (= null$0 (ep$0 ?f sk_?X_30$0 null$0))))))
(assert (= BAV17 (forall ((?f FldLoc)) (= null$0 (ep$0 ?f sk_?X_30$0 null$0)))))
(assert (= BAV18 (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 lst_1$0) sk_?X_30$0) (= lst_1$0 (ep$0 ?f sk_?X_30$0 lst_1$0))))))
(assert (= BAV19 (forall ((?f FldLoc)) (= lst_1$0 (ep$0 ?f sk_?X_30$0 lst_1$0)))))
(assert (= BAV20 (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 curr_3$0) sk_?X_30$0) (= curr_3$0 (ep$0 ?f sk_?X_30$0 curr_3$0))))))
(assert (= BAV21 (forall ((?f FldLoc)) (= curr_3$0 (ep$0 ?f sk_?X_30$0 curr_3$0)))))
(assert (= BAV22 (forall ((?f FldLoc)) (or (member (ep$0 ?f sk_?X_30$0 tmp_2$0) sk_?X_30$0) (= tmp_2$0 (ep$0 ?f sk_?X_30$0 tmp_2$0))))))
(assert (= BAV23 (forall ((?f FldLoc)) (= tmp_2$0 (ep$0 ?f sk_?X_30$0 tmp_2$0)))))
(assert (= BAV24 (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f null$0 (ep$0 ?f sk_?X_30$0 null$0) ?y) (not (Btwn$0 ?f null$0 ?y ?y)) (not (member ?y sk_?X_30$0))))))
(assert (= BAV25 (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f lst_1$0 (ep$0 ?f sk_?X_30$0 lst_1$0) ?y) (not (Btwn$0 ?f lst_1$0 ?y ?y)) (not (member ?y sk_?X_30$0))))))
(assert (= BAV26 (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f curr_3$0 (ep$0 ?f sk_?X_30$0 curr_3$0) ?y) (not (Btwn$0 ?f curr_3$0 ?y ?y)) (not (member ?y sk_?X_30$0))))))
(assert (= BAV27 (forall ((?f FldLoc)(?y Loc)) (or (Btwn$0 ?f tmp_2$0 (ep$0 ?f sk_?X_30$0 tmp_2$0) ?y) (not (Btwn$0 ?f tmp_2$0 ?y ?y)) (not (member ?y sk_?X_30$0))))))
(assert (= BAV28 (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f null$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 null$0) sk_?X_30$0)))))
(assert (= BAV29 (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f lst_1$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 lst_1$0) sk_?X_30$0)))))
(assert (= BAV30 (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f curr_3$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 curr_3$0) sk_?X_30$0)))))
(assert (= BAV31 (forall ((?f FldLoc)(?y Loc)) (or (not (Btwn$0 ?f tmp_2$0 ?y ?y)) (not (member ?y sk_?X_30$0)) (member (ep$0 ?f sk_?X_30$0 tmp_2$0) sk_?X_30$0)))))
(assert (= BAV32 (= (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) curr_3$0) (read$0 next$0 tmp_2$0))))
(assert (= BAV33 (or (= null$0 curr_3$0) (= (read$0 next$0 null$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) null$0)))))
(assert (= BAV34 (= null$0 curr_3$0)))
(assert (= BAV35 (= (read$0 next$0 null$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) null$0))))
(assert (= BAV36 (or (= tmp_2$0 curr_3$0) (= (read$0 next$0 tmp_2$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) tmp_2$0)))))
(assert (= BAV37 (= tmp_2$0 curr_3$0)))
(assert (= BAV38 (= (read$0 next$0 tmp_2$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) tmp_2$0))))
(assert (= BAV39 (or (= curr_3$0 curr_3$0) (= (read$0 next$0 curr_3$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) curr_3$0)))))
(assert (= BAV40 (= curr_3$0 curr_3$0)))
(assert (= BAV41 (= (read$0 next$0 curr_3$0) (read$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) curr_3$0))))
(assert (= BAV42 (= (read$0 next$0 null$0) null$0)))
(assert (= BAV43 (= (read$0 next_1$0 null$0) null$0)))
(assert (= BAV44 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (member l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (member l1 (lseg_domain$0 next$0 lst$0 curr_2$0))))))))
(assert (= BAV45 (forall ((l1 Loc)) (and (Btwn$0 next$0 lst$0 l1 curr_2$0) (member l1 (lseg_domain$0 next$0 lst$0 curr_2$0)) (not (= l1 curr_2$0))))))
(assert (= BAV46 (forall ((l1 Loc)) (= l1 curr_2$0))))
(assert (= BAV47 (forall ((l1 Loc)) (and (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))) (not (member l1 (lseg_domain$0 next$0 lst$0 curr_2$0)))))))
(assert (= BAV48 (forall ((l1 Loc)) (or (= l1 curr_2$0) (not (Btwn$0 next$0 lst$0 l1 curr_2$0))))))
(assert (= BAV49 (forall ((l1 Loc)) (= l1 curr_2$0))))
(assert (= BAV50 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 curr_3$0 l1 null$0) (member l1 (lseg_domain$0 next$0 curr_3$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 curr_3$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 curr_3$0 null$0))))))))
(assert (= BAV51 (forall ((l1 Loc)) (and (Btwn$0 next$0 curr_3$0 l1 null$0) (member l1 (lseg_domain$0 next$0 curr_3$0 null$0)) (not (= l1 null$0))))))
(assert (= BAV52 (forall ((l1 Loc)) (= l1 null$0))))
(assert (= BAV53 (forall ((l1 Loc)) (and (or (= l1 null$0) (not (Btwn$0 next$0 curr_3$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 curr_3$0 null$0)))))))
(assert (= BAV54 (forall ((l1 Loc)) (or (= l1 null$0) (not (Btwn$0 next$0 curr_3$0 l1 null$0))))))
(assert (= BAV55 (forall ((l1 Loc)) (= l1 null$0))))
(assert (= BAV56 (= lst$0 null$0)))
(assert (= BAV57 (= FP_Caller$0 (union FP$0 FP_Caller$0))))
(assert (= BAV58 (= sk_?X_33$0 FP$0)))
(assert (= BAV59 (= FP$0 (union FP_1$0 FP$0))))
(assert (= BAV60 (= sk_?X_31$0 (lseg_domain$0 next$0 curr_2$0 null$0))))
(assert (= BAV61 (= sk_?X_30$0 (union sk_?X_31$0 sk_?X_32$0))))
(assert (= BAV62 (= (as emptyset SetLoc) (as emptyset SetLoc))))
(assert (= BAV63 (= sk_?X_29$0 (union sk_?X_28$0 sk_?X_27$0))))
(assert (= BAV64 (= sk_?X_28$0 (lseg_domain$0 next$0 curr_3$0 null$0))))
(assert (= BAV65 (= (as emptyset SetLoc) (intersection sk_?X_27$0 sk_?X_28$0))))
(assert (= BAV66 (= Alloc$0 (union FP_Caller$0 Alloc$0))))
(assert (= BAV67 (= next_1$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)))))
(assert (= BAV68 (= curr_2$0 lst$0)))
(assert (= BAV69 (= FP_2$0 (union (setminus FP$0 FP_1$0) (union (intersection Alloc$0 FP_1$0) (setminus Alloc$0 Alloc$0))))))
(assert (= BAV70 (or (Btwn$0 next$0 lst$0 curr_2$0 curr_2$0) (not (lseg_struct$0 sk_?X_32$0 next$0 lst$0 curr_2$0)))))
(assert (= BAV71 (or (Btwn$0 next$0 curr_3$0 null$0 null$0) (not (lseg_struct$0 sk_?X_28$0 next$0 curr_3$0 null$0)))))
(assert (= BAV72 (or (= (read$0 next$0 curr_3$0) null$0) (not nondet_2$0))))
(assert (= BAV73 (= (read$0 next$0 curr_3$0) null$0)))
(assert (= BAV74 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst_1$0 l1 curr_3$0) (member l1 (lseg_domain$0 next$0 lst_1$0 curr_3$0)) (not (= l1 curr_3$0))) (and (or (= l1 curr_3$0) (not (Btwn$0 next$0 lst_1$0 l1 curr_3$0))) (not (member l1 (lseg_domain$0 next$0 lst_1$0 curr_3$0))))))))
(assert (= BAV75 (forall ((l1 Loc)) (and (Btwn$0 next$0 lst_1$0 l1 curr_3$0) (member l1 (lseg_domain$0 next$0 lst_1$0 curr_3$0)) (not (= l1 curr_3$0))))))
(assert (= BAV76 (forall ((l1 Loc)) (= l1 curr_3$0))))
(assert (= BAV77 (forall ((l1 Loc)) (and (or (= l1 curr_3$0) (not (Btwn$0 next$0 lst_1$0 l1 curr_3$0))) (not (member l1 (lseg_domain$0 next$0 lst_1$0 curr_3$0)))))))
(assert (= BAV78 (forall ((l1 Loc)) (or (= l1 curr_3$0) (not (Btwn$0 next$0 lst_1$0 l1 curr_3$0))))))
(assert (= BAV79 (forall ((l1 Loc)) (= l1 curr_3$0))))
(assert (= BAV80 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 lst$0 l1 null$0) (member l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 lst$0 null$0))))))))
(assert (= BAV81 (forall ((l1 Loc)) (and (Btwn$0 next$0 lst$0 l1 null$0) (member l1 (lseg_domain$0 next$0 lst$0 null$0)) (not (= l1 null$0))))))
(assert (= BAV82 (forall ((l1 Loc)) (= l1 null$0))))
(assert (= BAV83 (forall ((l1 Loc)) (and (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 lst$0 null$0)))))))
(assert (= BAV84 (forall ((l1 Loc)) (or (= l1 null$0) (not (Btwn$0 next$0 lst$0 l1 null$0))))))
(assert (= BAV85 (forall ((l1 Loc)) (= l1 null$0))))
(assert (= BAV86 (forall ((l1 Loc)) (or (and (Btwn$0 next$0 curr_2$0 l1 null$0) (member l1 (lseg_domain$0 next$0 curr_2$0 null$0)) (not (= l1 null$0))) (and (or (= l1 null$0) (not (Btwn$0 next$0 curr_2$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 curr_2$0 null$0))))))))
(assert (= BAV87 (forall ((l1 Loc)) (and (Btwn$0 next$0 curr_2$0 l1 null$0) (member l1 (lseg_domain$0 next$0 curr_2$0 null$0)) (not (= l1 null$0))))))
(assert (= BAV88 (forall ((l1 Loc)) (= l1 null$0))))
(assert (= BAV89 (forall ((l1 Loc)) (and (or (= l1 null$0) (not (Btwn$0 next$0 curr_2$0 l1 null$0))) (not (member l1 (lseg_domain$0 next$0 curr_2$0 null$0)))))))
(assert (= BAV90 (forall ((l1 Loc)) (or (= l1 null$0) (not (Btwn$0 next$0 curr_2$0 l1 null$0))))))
(assert (= BAV91 (forall ((l1 Loc)) (= l1 null$0))))
(assert (= BAV92 (= tmp_2$0 null$0)))
(assert (= BAV93 (= sk_?X_33$0 (lseg_domain$0 next$0 lst$0 null$0))))
(assert (= BAV94 (= curr_2$0 null$0)))
(assert (= BAV95 (= sk_?X_32$0 (lseg_domain$0 next$0 lst$0 curr_2$0))))
(assert (= BAV96 (= sk_?X_30$0 FP_1$0)))
(assert (= BAV97 (= (as emptyset SetLoc) (intersection sk_?X_32$0 sk_?X_31$0))))
(assert (= BAV98 (= curr_3$0 null$0)))
(assert (= BAV99 (= sk_?X_29$0 (union (intersection Alloc$0 FP_1$0) (setminus Alloc$0 Alloc$0)))))
(assert (= BAV100 (= sk_?X_27$0 (lseg_domain$0 next$0 lst_1$0 curr_3$0))))
(assert (= BAV101 (= (as emptyset SetLoc) (as emptyset SetLoc))))
(assert (= BAV102 (= Alloc$0 (union FP_2$0 Alloc$0))))
(assert (= BAV103 (= tmp_2$0 (read$0 next$0 curr_3$0))))
(assert (= BAV104 (= lst_1$0 lst$0)))
(assert (= BAV105 (= FP_Caller_1$0 (setminus FP_Caller$0 FP$0))))
(assert (= BAV106 (or (Btwn$0 next$0 lst_1$0 curr_3$0 curr_3$0) (not (lseg_struct$0 sk_?X_27$0 next$0 lst_1$0 curr_3$0)))))
(assert (= BAV107 (or (Btwn$0 next$0 lst$0 null$0 null$0) (not (lseg_struct$0 sk_?X_33$0 next$0 lst$0 null$0)))))
(assert (= BAV108 (or (Btwn$0 next$0 curr_2$0 null$0 null$0) (not (lseg_struct$0 sk_?X_31$0 next$0 curr_2$0 null$0)))))
(assert (= BAV109 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (or (Btwn$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) ?z ?u ?v) (not (or (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))) (or (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (not (Btwn$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) ?z ?u ?v)))))))
(assert (= BAV110 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) ?z ?u ?v) (not (or (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))))))
(assert (= BAV111 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))))
(assert (= BAV112 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))))))
(assert (= BAV113 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0)))))))
(assert (= BAV114 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))))
(assert (= BAV115 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))))
(assert (= BAV116 (forall ((?u Loc)(?v Loc)(?z Loc)) (= curr_3$0 ?v))))
(assert (= BAV117 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))))))
(assert (= BAV118 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v))))))
(assert (= BAV119 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))
(assert (= BAV120 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))
(assert (= BAV121 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))))
(assert (= BAV122 (forall ((?u Loc)(?v Loc)(?z Loc)) (= curr_3$0 ?v))))
(assert (= BAV123 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))))))
(assert (= BAV124 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v))))))
(assert (= BAV125 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))
(assert (= BAV126 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))
(assert (= BAV127 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))) (not (Btwn$0 (write$0 next$0 curr_3$0 (read$0 next$0 tmp_2$0)) ?z ?u ?v))))))
(assert (= BAV128 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z ?u ?v) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))))))
(assert (= BAV129 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 ?z ?v curr_3$0) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0)))))))
(assert (= BAV130 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z ?v ?v) (not (Btwn$0 next$0 ?z curr_3$0 curr_3$0))))))
(assert (= BAV131 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 ?z ?u curr_3$0) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))))
(assert (= BAV132 (forall ((?u Loc)(?v Loc)(?z Loc)) (= curr_3$0 ?v))))
(assert (= BAV133 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))))))
(assert (= BAV134 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v))))))
(assert (= BAV135 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))
(assert (= BAV136 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))
(assert (= BAV137 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (not (= curr_3$0 ?v)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))) (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?u ?v) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))))
(assert (= BAV138 (forall ((?u Loc)(?v Loc)(?z Loc)) (= curr_3$0 ?v))))
(assert (= BAV139 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 ?z curr_3$0 ?v) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v)))))))
(assert (= BAV140 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 ?z curr_3$0 curr_3$0) (not (Btwn$0 next$0 ?z ?v ?v))))))
(assert (= BAV141 (forall ((?u Loc)(?v Loc)(?z Loc)) (or (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v curr_3$0) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0)))))))
(assert (= BAV142 (forall ((?u Loc)(?v Loc)(?z Loc)) (and (Btwn$0 next$0 (read$0 next$0 tmp_2$0) ?v ?v) (not (Btwn$0 next$0 (read$0 next$0 tmp_2$0) curr_3$0 curr_3$0))))))
(assert (= BAV143 (forall ((?x Loc)(?y Loc)) (or (not (Btwn$0 next$0 ?x ?y ?x)) (= ?x ?y)))))
(assert (= BAV144 (forall ((?x Loc)(?y Loc)) (= ?x ?y))))
(assert (= BAV145 (forall ((?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?y)) (not (Btwn$0 next$0 ?x ?z ?z)) (Btwn$0 next$0 ?x ?y ?z) (Btwn$0 next$0 ?x ?z ?y)))))
(assert (= BAV146 (forall ((?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?z)) (and (Btwn$0 next$0 ?x ?y ?y) (Btwn$0 next$0 ?y ?z ?z))))))
(assert (= BAV147 (forall ((?x Loc)(?y Loc)(?z Loc)) (and (Btwn$0 next$0 ?x ?y ?y) (Btwn$0 next$0 ?y ?z ?z)))))
(assert (= BAV148 (forall ((?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?y)) (not (Btwn$0 next$0 ?y ?z ?z)) (Btwn$0 next$0 ?x ?z ?z)))))
(assert (= BAV149 (forall ((?u Loc)(?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?z)) (not (Btwn$0 next$0 ?y ?u ?z)) (and (Btwn$0 next$0 ?x ?y ?u) (Btwn$0 next$0 ?x ?u ?z))))))
(assert (= BAV150 (forall ((?u Loc)(?x Loc)(?y Loc)(?z Loc)) (and (Btwn$0 next$0 ?x ?y ?u) (Btwn$0 next$0 ?x ?u ?z)))))
(assert (= BAV151 (forall ((?u Loc)(?x Loc)(?y Loc)(?z Loc)) (or (not (Btwn$0 next$0 ?x ?y ?z)) (not (Btwn$0 next$0 ?x ?u ?y)) (and (Btwn$0 next$0 ?x ?u ?z) (Btwn$0 next$0 ?u ?y ?z))))))
(assert (= BAV152 (forall ((?u Loc)(?x Loc)(?y Loc)(?z Loc)) (and (Btwn$0 next$0 ?x ?u ?z) (Btwn$0 next$0 ?u ?y ?z)))))
(check-sat)
(get-model)
(exit)