(set-option :incremental false)
(set-info :status unknown)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun full_fq_2 () (_ BitVec 1))
(declare-fun full_fs_2 () (_ BitVec 1))
(declare-fun reset_2 () (_ BitVec 1))
(declare-fun full_fq_1 () (_ BitVec 1))
(declare-fun reset_1 () (_ BitVec 1))
(declare-fun a504 () (Array (_ BitVec 6) (_ BitVec 32)))
(declare-fun enqeue_2 () (_ BitVec 1))
(declare-fun deqeue_2 () (_ BitVec 1))
(declare-fun a723 () (Array (_ BitVec 6) (_ BitVec 32)))
(declare-fun a942 () (Array (_ BitVec 6) (_ BitVec 32)))
(declare-fun a1161 () (Array (_ BitVec 6) (_ BitVec 32)))
(declare-fun a1380 () (Array (_ BitVec 6) (_ BitVec 32)))
(assert (= BAV1 (= (_ bv0 1) (bvand (ite (= (_ bv0 32) (select a1380 (_ bv0 6))) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a1161 a1380) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a942 a1161) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a723 a942) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a723 (ite (= (_ bv1 1) deqeue_2) (ite (= (_ bv1 1) enqeue_2) (ite (= (_ bv1 1) full_fs_2) a504 (store a504 (_ bv0 6) (_ bv0 32))) a504) a504)) (_ bv1 1) (_ bv0 1)) (bvand (bvand reset_2 (bvand reset_1 (ite (= full_fq_2 (ite (= (_ bv1 1) reset_1) full_fq_1 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (bvnot (bvand reset_2 (bvnot (ite (= full_fs_2 full_fq_2) (_ bv1 1) (_ bv0 1))))))))))))))
(assert (= BAV2 (= (_ bv0 32) (select a1380 (_ bv0 6)))))
(assert (= BAV3 (= a1161 a1380)))
(assert (= BAV4 (= a942 a1161)))
(assert (= BAV5 (= a723 a942)))
(assert (= BAV6 (= a723 (ite (= (_ bv1 1) deqeue_2) (ite (= (_ bv1 1) enqeue_2) (ite (= (_ bv1 1) full_fs_2) a504 (store a504 (_ bv0 6) (_ bv0 32))) a504) a504))))
(assert (= BAV7 (= (_ bv1 1) deqeue_2)))
(assert (= BAV8 (= (_ bv1 1) enqeue_2)))
(assert (= BAV9 (= (_ bv1 1) full_fs_2)))
(assert (= BAV10 (= full_fq_2 (ite (= (_ bv1 1) reset_1) full_fq_1 (_ bv0 1)))))
(assert (= BAV11 (= (_ bv1 1) reset_1)))
(assert (= BAV12 (= full_fs_2 full_fq_2)))
(check-sat-assuming ((not (= (_ bv0 1) (bvand (ite (= (_ bv0 32) (select a1380 (_ bv0 6))) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a1161 a1380) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a942 a1161) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a723 a942) (_ bv1 1) (_ bv0 1)) (bvand (ite (= a723 (ite (= (_ bv1 1) deqeue_2) (ite (= (_ bv1 1) enqeue_2) (ite (= (_ bv1 1) full_fs_2) a504 (store a504 (_ bv0 6) (_ bv0 32))) a504) a504)) (_ bv1 1) (_ bv0 1)) (bvand (bvand reset_2 (bvand reset_1 (ite (= full_fq_2 (ite (= (_ bv1 1) reset_1) full_fq_1 (_ bv0 1))) (_ bv1 1) (_ bv0 1)))) (bvnot (bvand reset_2 (bvnot (ite (= full_fs_2 full_fq_2) (_ bv1 1) (_ bv0 1)))))))))))))))
(get-model)