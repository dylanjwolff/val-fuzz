(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-const a Int)
(declare-const b Int)
(assert (or (= a GEN1) (= a GEN2)))
(assert (> b (+ a GEN3)))
(assert (< b GEN4))
(apply (par-then split-clause (then solve-eqs propagate-ineqs solve-eqs)))
(check-sat-using (par-then split-clause (then solve-eqs propagate-ineqs solve-eqs)))
(get-model)
(assert (= BAV1 (or (= a GEN1) (= a GEN2))))
(assert (= BAV2 (= a GEN1)))
(assert (= BAV3 (= a GEN2)))
(assert (= BAV4 (> b (+ a GEN3))))
(assert (= BAV5 (< b GEN4)))