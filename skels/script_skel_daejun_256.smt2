(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(define-fun pow256 () Int 115792089237316195423570985008687907853269984665640564039457584007913129639936)
(define-fun chop ((x Int)) Int (mod x pow256))
(define-fun add ((x Int) (y Int)) Int (chop (+ x y)))
(define-fun mul ((x Int) (y Int)) Int (chop (* x y)))
(declare-fun a () Int)
(assert (and (<= GEN1 a) (< a pow256)))
(declare-fun a31 () Int)
(declare-fun a30 () Int)
(declare-fun a29 () Int)
(declare-fun a28 () Int)
(declare-fun a27 () Int)
(declare-fun a26 () Int)
(declare-fun a25 () Int)
(declare-fun a24 () Int)
(declare-fun a23 () Int)
(declare-fun a22 () Int)
(declare-fun a21 () Int)
(declare-fun a20 () Int)
(declare-fun a19 () Int)
(declare-fun a18 () Int)
(declare-fun a17 () Int)
(declare-fun a16 () Int)
(declare-fun a15 () Int)
(declare-fun a14 () Int)
(declare-fun a13 () Int)
(declare-fun a12 () Int)
(declare-fun a11 () Int)
(declare-fun a10 () Int)
(declare-fun a09 () Int)
(declare-fun a08 () Int)
(declare-fun a07 () Int)
(declare-fun a06 () Int)
(declare-fun a05 () Int)
(declare-fun a04 () Int)
(declare-fun a03 () Int)
(declare-fun a02 () Int)
(declare-fun a01 () Int)
(declare-fun a00 () Int)
(declare-fun b31 () Int)
(declare-fun b30 () Int)
(declare-fun b29 () Int)
(declare-fun b28 () Int)
(declare-fun b27 () Int)
(declare-fun b26 () Int)
(declare-fun b25 () Int)
(declare-fun b24 () Int)
(declare-fun b23 () Int)
(declare-fun b22 () Int)
(declare-fun b21 () Int)
(declare-fun b20 () Int)
(declare-fun b19 () Int)
(declare-fun b18 () Int)
(declare-fun b17 () Int)
(declare-fun b16 () Int)
(declare-fun b15 () Int)
(declare-fun b14 () Int)
(declare-fun b13 () Int)
(declare-fun b12 () Int)
(declare-fun b11 () Int)
(declare-fun b10 () Int)
(declare-fun b09 () Int)
(declare-fun b08 () Int)
(declare-fun b07 () Int)
(declare-fun b06 () Int)
(declare-fun b05 () Int)
(declare-fun b04 () Int)
(declare-fun b03 () Int)
(declare-fun b02 () Int)
(declare-fun b01 () Int)
(declare-fun b00 () Int)
(assert (= b00 a))
(assert (= b01 (div b00 GEN2)))
(assert (= b02 (div b01 GEN3)))
(assert (= b03 (div b02 GEN4)))
(assert (= b04 (div b03 GEN5)))
(assert (= b05 (div b04 GEN6)))
(assert (= b06 (div b05 GEN7)))
(assert (= b07 (div b06 GEN8)))
(assert (= b08 (div b07 GEN9)))
(assert (= b09 (div b08 GEN10)))
(assert (= b10 (div b09 GEN11)))
(assert (= b11 (div b10 GEN12)))
(assert (= b12 (div b11 GEN13)))
(assert (= b13 (div b12 GEN14)))
(assert (= b14 (div b13 GEN15)))
(assert (= b15 (div b14 GEN16)))
(assert (= b16 (div b15 GEN17)))
(assert (= b17 (div b16 GEN18)))
(assert (= b18 (div b17 GEN19)))
(assert (= b19 (div b18 GEN20)))
(assert (= b20 (div b19 GEN21)))
(assert (= b21 (div b20 GEN22)))
(assert (= b22 (div b21 GEN23)))
(assert (= b23 (div b22 GEN24)))
(assert (= b24 (div b23 GEN25)))
(assert (= b25 (div b24 GEN26)))
(assert (= b26 (div b25 GEN27)))
(assert (= b27 (div b26 GEN28)))
(assert (= b28 (div b27 GEN29)))
(assert (= b29 (div b28 GEN30)))
(assert (= b30 (div b29 GEN31)))
(assert (= b31 (div b30 256)))
(assert (= a00 (mod b00 256)))
(assert (= a01 (mod b01 256)))
(assert (= a02 (mod b02 256)))
(assert (= a03 (mod b03 256)))
(assert (= a04 (mod b04 256)))
(assert (= a05 (mod b05 256)))
(assert (= a06 (mod b06 256)))
(assert (= a07 (mod b07 256)))
(assert (= a08 (mod b08 256)))
(assert (= a09 (mod b09 256)))
(assert (= a10 (mod b10 256)))
(assert (= a11 (mod b11 256)))
(assert (= a12 (mod b12 256)))
(assert (= a13 (mod b13 256)))
(assert (= a14 (mod b14 256)))
(assert (= a15 (mod b15 256)))
(assert (= a16 (mod b16 256)))
(assert (= a17 (mod b17 256)))
(assert (= a18 (mod b18 256)))
(assert (= a19 (mod b19 256)))
(assert (= a20 (mod b20 256)))
(assert (= a21 (mod b21 256)))
(assert (= a22 (mod b22 256)))
(assert (= a23 (mod b23 256)))
(assert (= a24 (mod b24 256)))
(assert (= a25 (mod b25 256)))
(assert (= a26 (mod b26 256)))
(assert (= a27 (mod b27 256)))
(assert (= a28 (mod b28 256)))
(assert (= a29 (mod b29 256)))
(assert (= a30 (mod b30 256)))
(assert (= a31 (mod b31 256)))
(declare-fun aprime () Int)
(assert (= aprime (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul a31 256) a30) 256) a29) 256) a28) 256) a27) 256) a26) 256) a25) 256) a24) 256) a23) 256) a22) 256) a21) 256) a20) 256) a19) 256) a18) 256) a17) 256) a16) 256) a15) 256) a14) 256) a13) 256) a12) 256) a11) 256) a10) 256) a09) 256) a08) 256) a07) 256) a06) 256) a05) 256) a04) 256) a03) 256) a02) 256) a01) 256) a00)))
(assert (not (= a aprime)))
(assert (= BAV1 (and (<= GEN1 a) (< a pow256))))
(assert (= BAV2 (<= GEN1 a)))
(assert (= BAV3 (< a pow256)))
(assert (= BAV4 (= b00 a)))
(assert (= BAV5 (= b01 (div b00 GEN2))))
(assert (= BAV6 (= b02 (div b01 GEN3))))
(assert (= BAV7 (= b03 (div b02 GEN4))))
(assert (= BAV8 (= b04 (div b03 GEN5))))
(assert (= BAV9 (= b05 (div b04 GEN6))))
(assert (= BAV10 (= b06 (div b05 GEN7))))
(assert (= BAV11 (= b07 (div b06 GEN8))))
(assert (= BAV12 (= b08 (div b07 GEN9))))
(assert (= BAV13 (= b09 (div b08 GEN10))))
(assert (= BAV14 (= b10 (div b09 GEN11))))
(assert (= BAV15 (= b11 (div b10 GEN12))))
(assert (= BAV16 (= b12 (div b11 GEN13))))
(assert (= BAV17 (= b13 (div b12 GEN14))))
(assert (= BAV18 (= b14 (div b13 GEN15))))
(assert (= BAV19 (= b15 (div b14 GEN16))))
(assert (= BAV20 (= b16 (div b15 GEN17))))
(assert (= BAV21 (= b17 (div b16 GEN18))))
(assert (= BAV22 (= b18 (div b17 GEN19))))
(assert (= BAV23 (= b19 (div b18 GEN20))))
(assert (= BAV24 (= b20 (div b19 GEN21))))
(assert (= BAV25 (= b21 (div b20 GEN22))))
(assert (= BAV26 (= b22 (div b21 GEN23))))
(assert (= BAV27 (= b23 (div b22 GEN24))))
(assert (= BAV28 (= b24 (div b23 GEN25))))
(assert (= BAV29 (= b25 (div b24 GEN26))))
(assert (= BAV30 (= b26 (div b25 GEN27))))
(assert (= BAV31 (= b27 (div b26 GEN28))))
(assert (= BAV32 (= b28 (div b27 GEN29))))
(assert (= BAV33 (= b29 (div b28 GEN30))))
(assert (= BAV34 (= b30 (div b29 GEN31))))
(assert (= BAV35 (= b31 (div b30 256))))
(assert (= BAV36 (= a00 (mod b00 256))))
(assert (= BAV37 (= a01 (mod b01 256))))
(assert (= BAV38 (= a02 (mod b02 256))))
(assert (= BAV39 (= a03 (mod b03 256))))
(assert (= BAV40 (= a04 (mod b04 256))))
(assert (= BAV41 (= a05 (mod b05 256))))
(assert (= BAV42 (= a06 (mod b06 256))))
(assert (= BAV43 (= a07 (mod b07 256))))
(assert (= BAV44 (= a08 (mod b08 256))))
(assert (= BAV45 (= a09 (mod b09 256))))
(assert (= BAV46 (= a10 (mod b10 256))))
(assert (= BAV47 (= a11 (mod b11 256))))
(assert (= BAV48 (= a12 (mod b12 256))))
(assert (= BAV49 (= a13 (mod b13 256))))
(assert (= BAV50 (= a14 (mod b14 256))))
(assert (= BAV51 (= a15 (mod b15 256))))
(assert (= BAV52 (= a16 (mod b16 256))))
(assert (= BAV53 (= a17 (mod b17 256))))
(assert (= BAV54 (= a18 (mod b18 256))))
(assert (= BAV55 (= a19 (mod b19 256))))
(assert (= BAV56 (= a20 (mod b20 256))))
(assert (= BAV57 (= a21 (mod b21 256))))
(assert (= BAV58 (= a22 (mod b22 256))))
(assert (= BAV59 (= a23 (mod b23 256))))
(assert (= BAV60 (= a24 (mod b24 256))))
(assert (= BAV61 (= a25 (mod b25 256))))
(assert (= BAV62 (= a26 (mod b26 256))))
(assert (= BAV63 (= a27 (mod b27 256))))
(assert (= BAV64 (= a28 (mod b28 256))))
(assert (= BAV65 (= a29 (mod b29 256))))
(assert (= BAV66 (= a30 (mod b30 256))))
(assert (= BAV67 (= a31 (mod b31 256))))
(assert (= BAV68 (= aprime (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul (add (mul a31 256) a30) 256) a29) 256) a28) 256) a27) 256) a26) 256) a25) 256) a24) 256) a23) 256) a22) 256) a21) 256) a20) 256) a19) 256) a18) 256) a17) 256) a16) 256) a15) 256) a14) 256) a13) 256) a12) 256) a11) 256) a10) 256) a09) 256) a08) 256) a07) 256) a06) 256) a05) 256) a04) 256) a03) 256) a02) 256) a01) 256) a00))))
(assert (= BAV69 (= a aprime)))
(check-sat)
(get-model)