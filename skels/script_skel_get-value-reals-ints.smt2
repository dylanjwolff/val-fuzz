(set-info :smt-lib-version 2.0)
(set-option :produce-models true)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun pos_int () Int)
(declare-fun pos_real_int_value () Real)
(declare-fun pos_rat () Real)
(declare-fun zero () Real)
(declare-fun neg_rat () Real)
(declare-fun neg_real_int_value () Real)
(declare-fun neg_int () Int)
(assert (= pos_int GEN1))
(assert (= pos_real_int_value GEN2))
(assert (= pos_rat (/ GEN3 GEN4)))
(assert (= zero GEN5))
(assert (= neg_rat (/ (- GEN6) GEN7)))
(assert (= neg_real_int_value (- GEN8)))
(assert (= neg_int (- GEN9)))
(assert (= BAV1 (= pos_int GEN1)))
(assert (= BAV2 (= pos_real_int_value GEN2)))
(assert (= BAV3 (= pos_rat (/ GEN3 GEN4))))
(assert (= BAV4 (= zero GEN5)))
(assert (= BAV5 (= neg_rat (/ (- GEN6) GEN7))))
(assert (= BAV6 (= neg_real_int_value (- GEN8))))
(assert (= BAV7 (= neg_int (- GEN9))))
(check-sat)
(get-model)
(get-value (pos_int pos_real_int_value pos_rat zero neg_rat neg_real_int_value neg_int))