(set-option :incremental false)
(set-info :status unknown)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v1 () (_ BitVec 2))
(assert (= BAV1 (= (_ bv0 8) (concat (_ bv0 2) (concat (ite (= (_ bv0 5) ((_ sign_extend 3) v1)) (_ bv1 1) (_ bv0 1)) (_ bv0 5))))))
(assert (= BAV2 (= (_ bv0 5) ((_ sign_extend 3) v1))))
(assert (= BAV3 (= (_ bv0 4) ((_ sign_extend 2) ((_ sign_extend 1) (ite (bvugt (bvcomp v1 (_ bv1 2)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV4 (= (_ bv0 16) ((_ zero_extend 15) (ite (distinct (_ bv0 3) ((_ zero_extend 2) (ite (bvsle (_ bv0 2) ((_ sign_extend 1) (ite (bvugt (bvcomp v1 (_ bv1 2)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV5 (distinct (_ bv0 3) ((_ zero_extend 2) (ite (bvsle (_ bv0 2) ((_ sign_extend 1) (ite (bvugt (bvcomp v1 (_ bv1 2)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))
(check-sat-assuming ((ite (= (_ bv0 8) (concat (_ bv0 2) (concat (ite (= (_ bv0 5) ((_ sign_extend 3) v1)) (_ bv1 1) (_ bv0 1)) (_ bv0 5)))) false (ite (= (_ bv0 4) ((_ sign_extend 2) ((_ sign_extend 1) (ite (bvugt (bvcomp v1 (_ bv1 2)) (_ bv0 1)) (_ bv1 1) (_ bv0 1))))) true (= (_ bv0 16) ((_ zero_extend 15) (ite (distinct (_ bv0 3) ((_ zero_extend 2) (ite (bvsle (_ bv0 2) ((_ sign_extend 1) (ite (bvugt (bvcomp v1 (_ bv1 2)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))))
(get-model)