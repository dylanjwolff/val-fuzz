(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const GEN1 Int)
(set-option :auto-config true)
(declare-const v0 Int)
(declare-const v1 Int)
(assert (and (xor (if_then_else (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1)))) (< v1 (- (* v1 GEN1) v1)) (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1))))) (distinct (ite (< v0 (* (~ GEN1) (* v1 GEN1))) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) v1) (* v1 GEN1))) (if_then_else (xor (if_then_else (implies (>= v0 v0) (distinct (- (* v1 GEN1) v1) (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)))) (not (< v0 (* (~ GEN1) (* v1 GEN1)))) (xor (<= (+ v1 v0) (- (* v1 GEN1) v1)) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1))))) (and (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1))))) (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1))))))) (= (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) v0) (= (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) v0))))
(assert (= BAV1 (and (xor (if_then_else (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1)))) (< v1 (- (* v1 GEN1) v1)) (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1))))) (distinct (ite (< v0 (* (~ GEN1) (* v1 GEN1))) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) v1) (* v1 GEN1))) (if_then_else (xor (if_then_else (implies (>= v0 v0) (distinct (- (* v1 GEN1) v1) (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)))) (not (< v0 (* (~ GEN1) (* v1 GEN1)))) (xor (<= (+ v1 v0) (- (* v1 GEN1) v1)) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1))))) (and (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1))))) (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1))))))) (= (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) v0) (= (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) v0)))))
(assert (= BAV2 (xor (if_then_else (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1)))) (< v1 (- (* v1 GEN1) v1)) (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1))))) (distinct (ite (< v0 (* (~ GEN1) (* v1 GEN1))) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) v1) (* v1 GEN1)))))
(assert (= BAV3 (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1))))))
(assert (= BAV4 (= (* v1 GEN1) v0)))
(assert (= BAV5 (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1)))))
(assert (= BAV6 (<= (+ v1 v0) (- (* v1 GEN1) v1))))
(assert (= BAV7 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV8 (and (= (* v1 GEN1) v0) (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1))))))
(assert (= BAV9 (= (* v1 GEN1) v0)))
(assert (= BAV10 (< (+ v1 v0) (ite (<= (+ v1 v0) (- (* v1 GEN1) v1)) v0 (- (* v1 GEN1) v1)))))
(assert (= BAV11 (<= (+ v1 v0) (- (* v1 GEN1) v1))))
(assert (= BAV12 (distinct (ite (< v0 (* (~ GEN1) (* v1 GEN1))) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) v1) (* v1 GEN1))))
(assert (= BAV13 (< v0 (* (~ GEN1) (* v1 GEN1)))))
(assert (= BAV14 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV15 (xor (if_then_else (implies (>= v0 v0) (distinct (- (* v1 GEN1) v1) (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)))) (not (< v0 (* (~ GEN1) (* v1 GEN1)))) (xor (<= (+ v1 v0) (- (* v1 GEN1) v1)) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1))))) (and (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1))))) (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))))))))
(assert (= BAV16 (>= v0 v0)))
(assert (= BAV17 (distinct (- (* v1 GEN1) v1) (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)))))
(assert (= BAV18 (= (* v1 GEN1) v0)))
(assert (= BAV19 (< v0 (* (~ GEN1) (* v1 GEN1)))))
(assert (= BAV20 (xor (<= (+ v1 v0) (- (* v1 GEN1) v1)) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1))))))
(assert (= BAV21 (<= (+ v1 v0) (- (* v1 GEN1) v1))))
(assert (= BAV22 (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)))))
(assert (= BAV23 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV24 (<= v1 (+ v1 v0))))
(assert (= BAV25 (and (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1))))) (implies (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1)))) (if_then_else (<= v1 (+ v1 v0)) (not (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))) (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1))))))))
(assert (= BAV26 (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1))))))
(assert (= BAV27 (<= (* v1 GEN1) (+ v1 v0))))
(assert (= BAV28 (<= (* v1 GEN1) (+ v1 v0))))
(assert (= BAV29 (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))))
(assert (= BAV30 (<= v1 (+ v1 v0))))
(assert (= BAV31 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV32 (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))))
(assert (= BAV33 (<= v1 (+ v1 v0))))
(assert (= BAV34 (= (- (* v1 GEN1) v1) v1)))
(assert (= BAV35 (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1))))
(assert (= BAV36 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV37 (<= v1 (+ v1 v0))))
(assert (= BAV38 (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))))
(assert (= BAV39 (= (* v1 GEN1) v0)))
(assert (= BAV40 (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))))
(assert (= BAV41 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV42 (or (implies (implies (iff (<= (* v1 GEN1) (+ v1 v0)) (<= (* v1 GEN1) (+ v1 v0))) (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))) (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))) (iff (= (- (* v1 GEN1) v1) v1) (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1))))))
(assert (= BAV43 (<= (* v1 GEN1) (+ v1 v0))))
(assert (= BAV44 (<= (* v1 GEN1) (+ v1 v0))))
(assert (= BAV45 (distinct (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))))
(assert (= BAV46 (<= v1 (+ v1 v0))))
(assert (= BAV47 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV48 (< (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) (* v1 GEN1))))
(assert (= BAV49 (<= v1 (+ v1 v0))))
(assert (= BAV50 (= (- (* v1 GEN1) v1) v1)))
(assert (= BAV51 (<= (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)) (* v1 GEN1))))
(assert (= BAV52 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV53 (<= v1 (+ v1 v0))))
(assert (= BAV54 (>= (ite (= (* v1 GEN1) v0) (+ v1 v0) (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)))))
(assert (= BAV55 (= (* v1 GEN1) v0)))
(assert (= BAV56 (>= (- (* v1 GEN1) v1) (ite (< v1 (- (* v1 GEN1) v1)) (* (~ GEN1) (* v1 GEN1)) (* v1 GEN1)))))
(assert (= BAV57 (< v1 (- (* v1 GEN1) v1))))
(assert (= BAV58 (= (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) v0)))
(assert (= BAV59 (<= v1 (+ v1 v0))))
(assert (= BAV60 (= (ite (<= v1 (+ v1 v0)) (* v1 GEN1) (- (* v1 GEN1) v1)) v0)))
(assert (= BAV61 (<= v1 (+ v1 v0))))
(check-sat)
(get-model)