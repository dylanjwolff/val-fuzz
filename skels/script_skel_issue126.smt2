(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x0 () (_ BitVec 32))
(declare-fun x1 () (_ BitVec 32))
(declare-fun x2 () (_ BitVec 32))
(declare-fun x3 () (_ BitVec 32))
(declare-fun x4 () (_ BitVec 32))
(declare-fun x5 () (_ BitVec 32))
(declare-fun x6 () (_ BitVec 32))
(assert (and (and (= false (xor false (xor (= (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)) false) false))) (not (= (bvsub x5 (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) (_ bv0 32)))) (not (= (bvsub (_ bv0 32) (bvnand x3 (bvadd x1 x4))) (_ bv0 32)))))
(assert (= BAV1 (and (and (= false (xor false (xor (= (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)) false) false))) (not (= (bvsub x5 (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) (_ bv0 32)))) (not (= (bvsub (_ bv0 32) (bvnand x3 (bvadd x1 x4))) (_ bv0 32))))))
(assert (= BAV2 (and (= false (xor false (xor (= (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)) false) false))) (not (= (bvsub x5 (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) (_ bv0 32))))))
(assert (= BAV3 (= false (xor false (xor (= (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)) false) false)))))
(assert (= BAV4 (xor false (xor (= (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)) false) false))))
(assert (= BAV5 (xor (= (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)) false) false)))
(assert (= BAV6 (= (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)) false)))
(assert (= BAV7 (xor (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false) (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false))))
(assert (= BAV8 (= (not (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))) false)))
(assert (= BAV9 (=> true (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17)))))
(assert (= BAV10 (distinct ((_ zero_extend 16) (ite (bvult (bvneg (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) x6) (_ bv1 1) (_ bv0 1))) (_ bv0 17))))
(assert (= BAV11 (=> (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false) false)))
(assert (= BAV12 (=> (not (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)) false)))
(assert (= BAV13 (= (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false) true)))
(assert (= BAV14 (= (bvslt (bvand x0 (bvmul (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4))) x2)) (_ bv0 32)) false)))
(assert (= BAV15 (= (bvsub x5 (bvnand (bvneg (bvadd x1 x4)) (bvneg (bvadd x1 x4)))) (_ bv0 32))))
(assert (= BAV16 (= (bvsub (_ bv0 32) (bvnand x3 (bvadd x1 x4))) (_ bv0 32))))
(check-sat)
(get-model)