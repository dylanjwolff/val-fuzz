(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(define-sort Elt () Int)
(define-sort mySet () (Set Elt ))
(define-fun smt_set_emp () mySet (as emptyset mySet))
(define-fun smt_set_mem ((x Elt) (s mySet)) Bool (member x s))
(define-fun smt_set_add ((s mySet) (x Elt)) mySet (union s (singleton x)))
(define-fun smt_set_cup ((s1 mySet) (s2 mySet)) mySet (union s1 s2))
(define-fun smt_set_cap ((s1 mySet) (s2 mySet)) mySet (intersection s1 s2))
(define-fun smt_set_dif ((s1 mySet) (s2 mySet)) mySet (setminus s1 s2))
(define-fun smt_set_sub ((s1 mySet) (s2 mySet)) Bool (subset s1 s2))
(declare-fun z3v66 () Int)
(declare-fun z3v67 () Int)
(assert (distinct z3v66 z3v67))
(declare-fun z3v68 () Int)
(declare-fun z3f69 (Int) Int)
(declare-fun z3f70 (Int) mySet)
(declare-fun z3v71 () Int)
(declare-fun z3f72 (Int) mySet)
(declare-fun z3v73 () Int)
(declare-fun z3v74 () Int)
(declare-fun z3v75 () Int)
(declare-fun z3f76 (Int) Bool)
(declare-fun z3f77 (Int Int) Int)
(declare-fun z3v78 () Int)
(declare-fun z3f79 (Int) Bool)
(declare-fun z3v80 () Int)
(declare-fun z3f81 (Int) Int)
(declare-fun z3v82 () Int)
(declare-fun z3v83 () Int)
(declare-fun z3v85 () Int)
(declare-fun z3v86 () Int)
(declare-fun z3v87 () Int)
(declare-fun z3f88 () Int)
(declare-fun z3v89 () Int)
(declare-fun z3v90 () Int)
(declare-fun z3v91 () Int)
(declare-fun z3v92 () Int)
(declare-fun z3v93 () Int)
(declare-fun z3f94 (Int) Int)
(declare-fun z3f95 (Int) Int)
(declare-fun z3f96 (Int Int Int) Int)
(declare-fun z3v97 () Int)
(declare-fun z3v98 () Int)
(declare-fun z3v99 () Int)
(assert (= z3v99 z3v98))
(assert (and (>= (z3f69 z3v85) GEN1) (not (smt_set_mem z3v86 (z3f70 z3v85))) (= (z3f72 z3v85) smt_set_emp) (>= (z3f69 z3v87) GEN2) (= (z3f72 z3v87) smt_set_emp) (= (z3f70 z3v87) smt_set_emp) (= (z3f69 z3v87) GEN3) (= (z3f76 z3v87) true) (= z3v87 z3f88) (>= (z3f69 z3v87) GEN4) (= z3v87 z3v89) (>= (z3f69 z3v87) GEN5) (= (z3f70 z3v87) (z3f70 z3v90)) (= (z3f72 z3v87) smt_set_emp) (>= (z3f69 z3v89) GEN6) (= (z3f70 z3v89) (z3f70 z3v90)) (= (z3f72 z3v89) smt_set_emp) (>= (z3f69 z3v90) GEN7) (= (z3f72 z3v90) (ite (smt_set_mem z3v86 (z3f70 z3v85)) (smt_set_cup (smt_set_add smt_set_emp z3v86) (z3f72 z3v85)) (z3f72 z3v85))) (= (z3f70 z3v90) (smt_set_cup (smt_set_add smt_set_emp z3v86) (z3f70 z3v85))) (= (z3f69 z3v90) (+ GEN8 (z3f69 z3v85))) (= (z3f76 z3v90) false) (>= (z3f69 z3v91) GEN9) (= (z3f72 z3v91) smt_set_emp) (= (z3f70 z3v91) smt_set_emp) (= (z3f69 z3v91) GEN10) (= (z3f76 z3v91) true) (= z3v91 z3f88) (>= (z3f69 z3v91) GEN11) (= z3v91 z3v92) (>= (z3f69 z3v91) GEN12) (not (smt_set_mem z3v86 (z3f70 z3v91))) (= (z3f72 z3v91) smt_set_emp) (= (z3f94 z3v93) z3v92) (= (z3f95 z3v93) z3v85) (= z3v93 (z3f96 z3v86 z3v92 z3v85)) (= z3v93 z3v97) (= (smt_set_cap (z3f70 (z3f94 z3v93)) (z3f70 (z3f95 z3v93))) smt_set_emp) (>= (z3f69 z3v92) GEN13) (not (smt_set_mem z3v86 (z3f70 z3v92))) (= (z3f72 z3v92) smt_set_emp) (= (smt_set_cap (z3f70 (z3f94 z3v97)) (z3f70 (z3f95 z3v97))) smt_set_emp) (z3f79 z3v66) (= (z3f81 z3v80) z3v80) (= (z3f81 z3v82) z3v82) (not (z3f79 z3v67)) (= (z3f81 z3v83) z3v83)))
(assert (not (> z3v99 z3v98)))
(assert (= BAV1 (distinct z3v66 z3v67)))
(assert (= BAV2 (= z3v99 z3v98)))
(assert (= BAV3 (and (>= (z3f69 z3v85) GEN1) (not (smt_set_mem z3v86 (z3f70 z3v85))) (= (z3f72 z3v85) smt_set_emp) (>= (z3f69 z3v87) GEN2) (= (z3f72 z3v87) smt_set_emp) (= (z3f70 z3v87) smt_set_emp) (= (z3f69 z3v87) GEN3) (= (z3f76 z3v87) true) (= z3v87 z3f88) (>= (z3f69 z3v87) GEN4) (= z3v87 z3v89) (>= (z3f69 z3v87) GEN5) (= (z3f70 z3v87) (z3f70 z3v90)) (= (z3f72 z3v87) smt_set_emp) (>= (z3f69 z3v89) GEN6) (= (z3f70 z3v89) (z3f70 z3v90)) (= (z3f72 z3v89) smt_set_emp) (>= (z3f69 z3v90) GEN7) (= (z3f72 z3v90) (ite (smt_set_mem z3v86 (z3f70 z3v85)) (smt_set_cup (smt_set_add smt_set_emp z3v86) (z3f72 z3v85)) (z3f72 z3v85))) (= (z3f70 z3v90) (smt_set_cup (smt_set_add smt_set_emp z3v86) (z3f70 z3v85))) (= (z3f69 z3v90) (+ GEN8 (z3f69 z3v85))) (= (z3f76 z3v90) false) (>= (z3f69 z3v91) GEN9) (= (z3f72 z3v91) smt_set_emp) (= (z3f70 z3v91) smt_set_emp) (= (z3f69 z3v91) GEN10) (= (z3f76 z3v91) true) (= z3v91 z3f88) (>= (z3f69 z3v91) GEN11) (= z3v91 z3v92) (>= (z3f69 z3v91) GEN12) (not (smt_set_mem z3v86 (z3f70 z3v91))) (= (z3f72 z3v91) smt_set_emp) (= (z3f94 z3v93) z3v92) (= (z3f95 z3v93) z3v85) (= z3v93 (z3f96 z3v86 z3v92 z3v85)) (= z3v93 z3v97) (= (smt_set_cap (z3f70 (z3f94 z3v93)) (z3f70 (z3f95 z3v93))) smt_set_emp) (>= (z3f69 z3v92) GEN13) (not (smt_set_mem z3v86 (z3f70 z3v92))) (= (z3f72 z3v92) smt_set_emp) (= (smt_set_cap (z3f70 (z3f94 z3v97)) (z3f70 (z3f95 z3v97))) smt_set_emp) (z3f79 z3v66) (= (z3f81 z3v80) z3v80) (= (z3f81 z3v82) z3v82) (not (z3f79 z3v67)) (= (z3f81 z3v83) z3v83))))
(assert (= BAV4 (>= (z3f69 z3v85) GEN1)))
(assert (= BAV5 (= (z3f72 z3v85) smt_set_emp)))
(assert (= BAV6 (>= (z3f69 z3v87) GEN2)))
(assert (= BAV7 (= (z3f72 z3v87) smt_set_emp)))
(assert (= BAV8 (= (z3f70 z3v87) smt_set_emp)))
(assert (= BAV9 (= (z3f69 z3v87) GEN3)))
(assert (= BAV10 (= (z3f76 z3v87) true)))
(assert (= BAV11 (= z3v87 z3f88)))
(assert (= BAV12 (>= (z3f69 z3v87) GEN4)))
(assert (= BAV13 (= z3v87 z3v89)))
(assert (= BAV14 (>= (z3f69 z3v87) GEN5)))
(assert (= BAV15 (= (z3f70 z3v87) (z3f70 z3v90))))
(assert (= BAV16 (= (z3f72 z3v87) smt_set_emp)))
(assert (= BAV17 (>= (z3f69 z3v89) GEN6)))
(assert (= BAV18 (= (z3f70 z3v89) (z3f70 z3v90))))
(assert (= BAV19 (= (z3f72 z3v89) smt_set_emp)))
(assert (= BAV20 (>= (z3f69 z3v90) GEN7)))
(assert (= BAV21 (= (z3f72 z3v90) (ite (smt_set_mem z3v86 (z3f70 z3v85)) (smt_set_cup (smt_set_add smt_set_emp z3v86) (z3f72 z3v85)) (z3f72 z3v85)))))
(assert (= BAV22 (= (z3f70 z3v90) (smt_set_cup (smt_set_add smt_set_emp z3v86) (z3f70 z3v85)))))
(assert (= BAV23 (= (z3f69 z3v90) (+ GEN8 (z3f69 z3v85)))))
(assert (= BAV24 (= (z3f76 z3v90) false)))
(assert (= BAV25 (>= (z3f69 z3v91) GEN9)))
(assert (= BAV26 (= (z3f72 z3v91) smt_set_emp)))
(assert (= BAV27 (= (z3f70 z3v91) smt_set_emp)))
(assert (= BAV28 (= (z3f69 z3v91) GEN10)))
(assert (= BAV29 (= (z3f76 z3v91) true)))
(assert (= BAV30 (= z3v91 z3f88)))
(assert (= BAV31 (>= (z3f69 z3v91) GEN11)))
(assert (= BAV32 (= z3v91 z3v92)))
(assert (= BAV33 (>= (z3f69 z3v91) GEN12)))
(assert (= BAV34 (= (z3f72 z3v91) smt_set_emp)))
(assert (= BAV35 (= (z3f94 z3v93) z3v92)))
(assert (= BAV36 (= (z3f95 z3v93) z3v85)))
(assert (= BAV37 (= z3v93 (z3f96 z3v86 z3v92 z3v85))))
(assert (= BAV38 (= z3v93 z3v97)))
(assert (= BAV39 (= (smt_set_cap (z3f70 (z3f94 z3v93)) (z3f70 (z3f95 z3v93))) smt_set_emp)))
(assert (= BAV40 (>= (z3f69 z3v92) GEN13)))
(assert (= BAV41 (= (z3f72 z3v92) smt_set_emp)))
(assert (= BAV42 (= (smt_set_cap (z3f70 (z3f94 z3v97)) (z3f70 (z3f95 z3v97))) smt_set_emp)))
(assert (= BAV43 (= (z3f81 z3v80) z3v80)))
(assert (= BAV44 (= (z3f81 z3v82) z3v82)))
(assert (= BAV45 (= (z3f81 z3v83) z3v83)))
(assert (= BAV46 (> z3v99 z3v98)))
(check-sat)
(get-model)