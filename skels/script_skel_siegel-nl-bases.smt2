(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-const n Int)
(declare-const i1 Int)
(declare-const i2 Int)
(declare-const j1 Int)
(declare-const j2 Int)
(assert (>= n GEN1))
(assert (not (= i1 i2)))
(assert (<= GEN2 i1))
(assert (<= i1 j1))
(assert (< j1 n))
(assert (<= GEN3 i2))
(assert (<= i2 j2))
(assert (< j2 n))
(assert (or (= (+ (* i1 n) j1) (+ (* i2 n) j2)) (= (+ (* i1 n) j1) (+ (* j2 n) i2)) (= (+ (* j1 n) i1) (+ (* i2 n) j2)) (= (+ (* j1 n) i1) (+ (* j2 n) i2))))
(assert (= BAV1 (>= n GEN1)))
(assert (= BAV2 (= i1 i2)))
(assert (= BAV3 (<= GEN2 i1)))
(assert (= BAV4 (<= i1 j1)))
(assert (= BAV5 (< j1 n)))
(assert (= BAV6 (<= GEN3 i2)))
(assert (= BAV7 (<= i2 j2)))
(assert (= BAV8 (< j2 n)))
(assert (= BAV9 (or (= (+ (* i1 n) j1) (+ (* i2 n) j2)) (= (+ (* i1 n) j1) (+ (* j2 n) i2)) (= (+ (* j1 n) i1) (+ (* i2 n) j2)) (= (+ (* j1 n) i1) (+ (* j2 n) i2)))))
(assert (= BAV10 (= (+ (* i1 n) j1) (+ (* i2 n) j2))))
(assert (= BAV11 (= (+ (* i1 n) j1) (+ (* j2 n) i2))))
(assert (= BAV12 (= (+ (* j1 n) i1) (+ (* i2 n) j2))))
(assert (= BAV13 (= (+ (* j1 n) i1) (+ (* j2 n) i2))))
(check-sat)
(get-model)