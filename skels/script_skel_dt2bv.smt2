(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-datatypes () ((P (P1) (P0) (P3))))
(declare-fun n3_p () P)
(declare-fun n2_p () P)
(declare-fun n1_p () P)
(declare-fun n0_p () P)
(declare-fun imbalance () Int)
(assert (= imbalance (- (ite (and true (>= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18)))) (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18))) (ite (and true (<= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18)))) (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18))))))
(assert ((_ is P1) n0_p))
(assert ((_ is P3) n0_p))
(assert (forall ((x P)(y Int)(z Bool)) (=> z (= x P0))))
(apply dt2bv)
(assert (= BAV1 (= imbalance (- (ite (and true (>= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18)))) (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18))) (ite (and true (<= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18)))) (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18)))))))
(assert (= BAV2 (and true (>= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18))))))
(assert (= BAV3 (>= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18)))))
(assert (= BAV4 (= n0_p P0)))
(assert (= BAV5 (= n1_p P0)))
(assert (= BAV6 (= n2_p P0)))
(assert (= BAV7 (= n3_p P0)))
(assert (= BAV8 (= n0_p P1)))
(assert (= BAV9 (= n1_p P1)))
(assert (= BAV10 (= n2_p P1)))
(assert (= BAV11 (= n3_p P1)))
(assert (= BAV12 (= n0_p P0)))
(assert (= BAV13 (= n1_p P0)))
(assert (= BAV14 (= n2_p P0)))
(assert (= BAV15 (= n3_p P0)))
(assert (= BAV16 (= n0_p P1)))
(assert (= BAV17 (= n1_p P1)))
(assert (= BAV18 (= n2_p P1)))
(assert (= BAV19 (= n3_p P1)))
(assert (= BAV20 (and true (<= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18))))))
(assert (= BAV21 (<= (+ GEN1 (ite (= n0_p P0) GEN2 GEN3) (ite (= n1_p P0) GEN4 GEN5) (ite (= n2_p P0) GEN6 GEN7) (ite (= n3_p P0) GEN8 GEN9)) (+ GEN10 (ite (= n0_p P1) GEN11 GEN12) (ite (= n1_p P1) GEN13 GEN14) (ite (= n2_p P1) GEN15 GEN16) (ite (= n3_p P1) GEN17 GEN18)))))
(assert (= BAV22 (= n0_p P0)))
(assert (= BAV23 (= n1_p P0)))
(assert (= BAV24 (= n2_p P0)))
(assert (= BAV25 (= n3_p P0)))
(assert (= BAV26 (= n0_p P1)))
(assert (= BAV27 (= n1_p P1)))
(assert (= BAV28 (= n2_p P1)))
(assert (= BAV29 (= n3_p P1)))
(assert (= BAV30 (= n0_p P0)))
(assert (= BAV31 (= n1_p P0)))
(assert (= BAV32 (= n2_p P0)))
(assert (= BAV33 (= n3_p P0)))
(assert (= BAV34 (= n0_p P1)))
(assert (= BAV35 (= n1_p P1)))
(assert (= BAV36 (= n2_p P1)))
(assert (= BAV37 (= n3_p P1)))
(assert (= BAV38 (forall ((x P)(y Int)(z Bool)) (=> z (= x P0)))))
(assert (= BAV39 (forall ((x P)(y Int)(z Bool)) (= x P0))))