(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN98 Int)
(declare-const GEN97 Int)
(declare-const GEN96 Int)
(declare-const GEN95 Int)
(declare-const GEN94 Int)
(declare-const GEN93 Int)
(declare-const GEN92 Int)
(declare-const GEN91 Int)
(declare-const GEN90 Int)
(declare-const GEN89 Int)
(declare-const GEN88 Int)
(declare-const GEN87 Int)
(declare-const GEN86 Int)
(declare-const GEN85 Int)
(declare-const GEN84 Int)
(declare-const GEN83 Int)
(declare-const GEN82 Int)
(declare-const GEN81 Int)
(declare-const GEN80 Int)
(declare-const GEN79 Int)
(declare-const GEN78 Int)
(declare-const GEN77 Int)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v2 () (_ BitVec 4))
(declare-fun v4 () (_ BitVec 4))
(declare-fun v1 () (_ BitVec 4))
(declare-fun v0 () (_ BitVec 4))
(declare-fun v6 () (_ BitVec 4))
(assert (= BAV1 (and (bvuge ((_ sign_extend 3) (ite (distinct (_ bv1 1) (ite (bvule (ite (= (_ bv1 1) ((_ extract 1 1) v2)) (_ bv0 4) (_ bv1 4)) (bvlshr v2 v4)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (_ bv1 4)) (bvsle v2 ((_ sign_extend 3) (ite (bvsgt ((_ zero_extend 1) (ite (bvslt (_ bv1 1) (ite (bvult (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1)))) (_ bv1 4)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (bvsge (_ bv1 4) ((_ zero_extend 3) (ite (bvslt (_ bv0 4) (bvnot ((_ rotate_left 3) v4))) (_ bv1 1) (_ bv0 1)))) (bvule (bvsub (_ bv1 4) (bvnot ((_ rotate_left 3) v4))) (_ bv4 4)) (or false (bvult v0 (_ bv1 4)) (bvugt (_ bv1 4) ((_ sign_extend 3) (ite (= (ite (distinct (bvshl (_ bv4 4) v1) (bvmul v4 (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1)))))) (_ bv1 1) (_ bv0 1)) (ite (bvule (_ bv1 2) ((_ sign_extend 1) (ite (bvult (_ bv0 4) ((_ sign_extend 3) (ite (bvuge (bvnor v1 (bvnot ((_ rotate_left 3) v4))) v6) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))) (bvsge (bvadd ((_ sign_extend 3) (_ bv1 1)) (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv0 4)) (or false (bvugt ((_ sign_extend 3) (_ bv1 1)) v2) (bvugt (ite (bvsge v6 (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv1 1) (_ bv0 1)) (ite (bvsle (bvshl v1 v0) ((_ zero_extend 3) (ite (bvuge v6 ((_ sign_extend 3) (bvxnor (_ bv0 1) (ite (bvuge (_ bv0 4) (bvshl (_ bv4 4) v1)) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (or false (not (bvule (_ bv1 1) (ite (bvult (_ bv0 4) (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= (_ bv0 2) ((_ sign_extend 1) (ite (bvsge v6 (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv1 1) (_ bv0 1))))) (bvuge ((_ rotate_left 3) v4) (bvadd ((_ sign_extend 3) (_ bv1 1)) (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4))))) (or false (bvsge (ite (bvule (ite (= (_ bv1 1) ((_ extract 1 1) v2)) (_ bv0 4) (_ bv1 4)) (bvlshr v2 v4)) (_ bv1 1) (_ bv0 1)) (ite (bvsgt (bvnor v1 (bvnot ((_ rotate_left 3) v4))) (_ bv0 4)) (_ bv1 1) (_ bv0 1))) (bvsgt v0 ((_ zero_extend 3) (ite (bvsgt (_ bv0 4) v0) (_ bv1 1) (_ bv0 1))))) (bvsgt (ite (bvugt ((_ sign_extend 3) (bvcomp (_ bv0 4) (bvlshr v2 v4))) (_ bv1 4)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvslt (ite (bvule (bvnor v1 (bvnot ((_ rotate_left 3) v4))) (_ bv1 4)) (_ bv1 1) (_ bv0 1)) (_ bv0 1)) (bvugt (ite (bvsge v2 ((_ sign_extend 3) (_ bv1 1))) (_ bv1 1) (_ bv0 1)) (_ bv0 1)))))
(assert (= BAV2 (distinct (_ bv1 1) (ite (bvule (ite (= (_ bv1 1) ((_ extract 1 1) v2)) (_ bv0 4) (_ bv1 4)) (bvlshr v2 v4)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV3 (= (_ bv1 1) ((_ extract 1 1) v2))))
(assert (= BAV4 (or false (bvult v0 (_ bv1 4)) (bvugt (_ bv1 4) ((_ sign_extend 3) (ite (= (ite (distinct (bvshl (_ bv4 4) v1) (bvmul v4 (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1)))))) (_ bv1 1) (_ bv0 1)) (ite (bvule (_ bv1 2) ((_ sign_extend 1) (ite (bvult (_ bv0 4) ((_ sign_extend 3) (ite (bvuge (bvnor v1 (bvnot ((_ rotate_left 3) v4))) v6) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV5 (= (ite (distinct (bvshl (_ bv4 4) v1) (bvmul v4 (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1)))))) (_ bv1 1) (_ bv0 1)) (ite (bvule (_ bv1 2) ((_ sign_extend 1) (ite (bvult (_ bv0 4) ((_ sign_extend 3) (ite (bvuge (bvnor v1 (bvnot ((_ rotate_left 3) v4))) v6) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV6 (distinct (bvshl (_ bv4 4) v1) (bvmul v4 (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV7 (or false (bvugt ((_ sign_extend 3) (_ bv1 1)) v2) (bvugt (ite (bvsge v6 (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv1 1) (_ bv0 1)) (ite (bvsle (bvshl v1 v0) ((_ zero_extend 3) (ite (bvuge v6 ((_ sign_extend 3) (bvxnor (_ bv0 1) (ite (bvuge (_ bv0 4) (bvshl (_ bv4 4) v1)) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV8 (or false (not (bvule (_ bv1 1) (ite (bvult (_ bv0 4) (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= (_ bv0 2) ((_ sign_extend 1) (ite (bvsge v6 (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV9 (= (_ bv0 2) ((_ sign_extend 1) (ite (bvsge v6 (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV10 (or false (bvsge (ite (bvule (ite (= (_ bv1 1) ((_ extract 1 1) v2)) (_ bv0 4) (_ bv1 4)) (bvlshr v2 v4)) (_ bv1 1) (_ bv0 1)) (ite (bvsgt (bvnor v1 (bvnot ((_ rotate_left 3) v4))) (_ bv0 4)) (_ bv1 1) (_ bv0 1))) (bvsgt v0 ((_ zero_extend 3) (ite (bvsgt (_ bv0 4) v0) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV11 (= (_ bv1 1) ((_ extract 1 1) v2))))
(check-sat-assuming ((and (bvuge ((_ sign_extend 3) (ite (distinct (_ bv1 1) (ite (bvule (ite (= (_ bv1 1) ((_ extract 1 1) v2)) (_ bv0 4) (_ bv1 4)) (bvlshr v2 v4)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (_ bv1 4)) (bvsle v2 ((_ sign_extend 3) (ite (bvsgt ((_ zero_extend 1) (ite (bvslt (_ bv1 1) (ite (bvult (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1)))) (_ bv1 4)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (bvsge (_ bv1 4) ((_ zero_extend 3) (ite (bvslt (_ bv0 4) (bvnot ((_ rotate_left 3) v4))) (_ bv1 1) (_ bv0 1)))) (bvule (bvsub (_ bv1 4) (bvnot ((_ rotate_left 3) v4))) (_ bv4 4)) (or false (bvult v0 (_ bv1 4)) (bvugt (_ bv1 4) ((_ sign_extend 3) (ite (= (ite (distinct (bvshl (_ bv4 4) v1) (bvmul v4 (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1)))))) (_ bv1 1) (_ bv0 1)) (ite (bvule (_ bv1 2) ((_ sign_extend 1) (ite (bvult (_ bv0 4) ((_ sign_extend 3) (ite (bvuge (bvnor v1 (bvnot ((_ rotate_left 3) v4))) v6) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))))) (bvsge (bvadd ((_ sign_extend 3) (_ bv1 1)) (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv0 4)) (or false (bvugt ((_ sign_extend 3) (_ bv1 1)) v2) (bvugt (ite (bvsge v6 (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv1 1) (_ bv0 1)) (ite (bvsle (bvshl v1 v0) ((_ zero_extend 3) (ite (bvuge v6 ((_ sign_extend 3) (bvxnor (_ bv0 1) (ite (bvuge (_ bv0 4) (bvshl (_ bv4 4) v1)) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (or false (not (bvule (_ bv1 1) (ite (bvult (_ bv0 4) (bvand v1 ((_ sign_extend 3) (ite (bvuge v1 v6) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= (_ bv0 2) ((_ sign_extend 1) (ite (bvsge v6 (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4)))) (_ bv1 1) (_ bv0 1))))) (bvuge ((_ rotate_left 3) v4) (bvadd ((_ sign_extend 3) (_ bv1 1)) (bvnor (_ bv1 4) (bvmul v2 (_ bv4 4))))) (or false (bvsge (ite (bvule (ite (= (_ bv1 1) ((_ extract 1 1) v2)) (_ bv0 4) (_ bv1 4)) (bvlshr v2 v4)) (_ bv1 1) (_ bv0 1)) (ite (bvsgt (bvnor v1 (bvnot ((_ rotate_left 3) v4))) (_ bv0 4)) (_ bv1 1) (_ bv0 1))) (bvsgt v0 ((_ zero_extend 3) (ite (bvsgt (_ bv0 4) v0) (_ bv1 1) (_ bv0 1))))) (bvsgt (ite (bvugt ((_ sign_extend 3) (bvcomp (_ bv0 4) (bvlshr v2 v4))) (_ bv1 4)) (_ bv1 1) (_ bv0 1)) (_ bv1 1)) (bvslt (ite (bvule (bvnor v1 (bvnot ((_ rotate_left 3) v4))) (_ bv1 4)) (_ bv1 1) (_ bv0 1)) (_ bv0 1)) (bvugt (ite (bvsge v2 ((_ sign_extend 3) (_ bv1 1))) (_ bv1 1) (_ bv0 1)) (_ bv0 1)))))
(get-model)