(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const GEN1 Int)
(declare-fun v0 () Int)
(assert (and (not (xor (xor (xor (>= (* (- GEN1) v0) (* (- GEN1) v0)) (= (- v0 v0) v0)) (= (* (- GEN1) v0) (- v0 v0))) (= (< v0 (- v0 v0)) (= v0 (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)))))) (and (ite (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0))) (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0))) (distinct (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (* (- GEN1) v0))) (ite (not (<= (- v0 v0) (* (- GEN1) v0))) (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))) (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))))))))
(assert (= BAV1 (and (not (xor (xor (xor (>= (* (- GEN1) v0) (* (- GEN1) v0)) (= (- v0 v0) v0)) (= (* (- GEN1) v0) (- v0 v0))) (= (< v0 (- v0 v0)) (= v0 (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)))))) (and (ite (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0))) (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0))) (distinct (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (* (- GEN1) v0))) (ite (not (<= (- v0 v0) (* (- GEN1) v0))) (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))) (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))))))))
(assert (= BAV2 (xor (xor (xor (>= (* (- GEN1) v0) (* (- GEN1) v0)) (= (- v0 v0) v0)) (= (* (- GEN1) v0) (- v0 v0))) (= (< v0 (- v0 v0)) (= v0 (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)))))))
(assert (= BAV3 (xor (xor (>= (* (- GEN1) v0) (* (- GEN1) v0)) (= (- v0 v0) v0)) (= (* (- GEN1) v0) (- v0 v0)))))
(assert (= BAV4 (xor (>= (* (- GEN1) v0) (* (- GEN1) v0)) (= (- v0 v0) v0))))
(assert (= BAV5 (>= (* (- GEN1) v0) (* (- GEN1) v0))))
(assert (= BAV6 (= (- v0 v0) v0)))
(assert (= BAV7 (= (* (- GEN1) v0) (- v0 v0))))
(assert (= BAV8 (= (< v0 (- v0 v0)) (= v0 (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0))))))
(assert (= BAV9 (< v0 (- v0 v0))))
(assert (= BAV10 (= v0 (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)))))
(assert (= BAV11 (< v0 (- v0 v0))))
(assert (= BAV12 (and (ite (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0))) (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0))) (distinct (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (* (- GEN1) v0))) (ite (not (<= (- v0 v0) (* (- GEN1) v0))) (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))) (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))))))))
(assert (= BAV13 (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0)))))
(assert (= BAV14 (< v0 (- v0 v0))))
(assert (= BAV15 (< v0 (- v0 v0))))
(assert (= BAV16 (= v0 (ite (< v0 (- v0 v0)) (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (- v0 v0)))))
(assert (= BAV17 (< v0 (- v0 v0))))
(assert (= BAV18 (< v0 (- v0 v0))))
(assert (= BAV19 (distinct (ite (< v0 (- v0 v0)) (* (- GEN1) v0) (* (- GEN1) v0)) (* (- GEN1) v0))))
(assert (= BAV20 (< v0 (- v0 v0))))
(assert (= BAV21 (<= (- v0 v0) (* (- GEN1) v0))))
(assert (= BAV22 (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))))))
(assert (= BAV23 (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))))
(assert (= BAV24 (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0)))))
(assert (= BAV25 (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0))))
(assert (= BAV26 (>= (* (- GEN1) v0) (* (- GEN1) v0))))
(assert (= BAV27 (> (- v0 v0) (- v0 v0))))
(assert (= BAV28 (= v0 (- v0 v0))))
(assert (= BAV29 (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))))
(assert (= BAV30 (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0)))))
(assert (= BAV31 (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0))))
(assert (= BAV32 (>= (* (- GEN1) v0) (* (- GEN1) v0))))
(assert (= BAV33 (> (- v0 v0) (- v0 v0))))
(assert (= BAV34 (= v0 (- v0 v0))))
(assert (= BAV35 (=> (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))) (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0))))))
(assert (= BAV36 (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))))
(assert (= BAV37 (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0)))))
(assert (= BAV38 (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0))))
(assert (= BAV39 (>= (* (- GEN1) v0) (* (- GEN1) v0))))
(assert (= BAV40 (> (- v0 v0) (- v0 v0))))
(assert (= BAV41 (= v0 (- v0 v0))))
(assert (= BAV42 (or (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0))) (= v0 (- v0 v0)))))
(assert (= BAV43 (and (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0)) (> (- v0 v0) (- v0 v0)))))
(assert (= BAV44 (> (* (- GEN1) v0) (ite (>= (* (- GEN1) v0) (* (- GEN1) v0)) v0 v0))))
(assert (= BAV45 (>= (* (- GEN1) v0) (* (- GEN1) v0))))
(assert (= BAV46 (> (- v0 v0) (- v0 v0))))
(assert (= BAV47 (= v0 (- v0 v0))))
(check-sat)
(get-model)