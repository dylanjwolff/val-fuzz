(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun I (Int Int) Bool)
(assert (I GEN1 GEN2))
(assert (forall ((x Int)(y Int)(xp Int)(yp Int)) (=> (and (I x y) (= xp (+ x GEN3)) (= yp y)) (I xp yp))))
(assert (not (I GEN4 GEN5)))
(assert (= BAV1 (forall ((x Int)(y Int)(xp Int)(yp Int)) (=> (and (I x y) (= xp (+ x GEN3)) (= yp y)) (I xp yp)))))
(assert (= BAV2 (forall ((x Int)(y Int)(xp Int)(yp Int)) (and (I x y) (= xp (+ x GEN3)) (= yp y)))))
(assert (= BAV3 (forall ((x Int)(y Int)(xp Int)(yp Int)) (= xp (+ x GEN3)))))
(assert (= BAV4 (forall ((x Int)(y Int)(xp Int)(yp Int)) (= yp y))))
(check-sat)
(get-model)