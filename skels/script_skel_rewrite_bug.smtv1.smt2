(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a () (Array (_ BitVec 32) (_ BitVec 8)))
(assert (= BAV1 (and true true true true (not (bvslt ((_ sign_extend 24) (_ bv0 8)) ((_ sign_extend 24) (select (store (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32) (select (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32))) (_ bv0 32))))) (bvslt (_ bv0 32) ((_ sign_extend 24) (select (store (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32) (select (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32))) (_ bv1 32)))))))
(check-sat-assuming ((and true true true true (not (bvslt ((_ sign_extend 24) (_ bv0 8)) ((_ sign_extend 24) (select (store (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32) (select (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32))) (_ bv0 32))))) (bvslt (_ bv0 32) ((_ sign_extend 24) (select (store (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32) (select (store (store a (_ bv1 32) (_ bv1 8)) (_ bv0 32) ((_ extract 7 0) ((_ sign_extend 24) (select a (_ bv1 32))))) (_ bv1 32))) (_ bv1 32)))))))
(get-model)