(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const GEN11 Int)
(declare-const GEN12 Int)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-fun x () Int)
(declare-fun y () Int)
(declare-fun z () Int)
(declare-fun w () Int)
(declare-fun u () Int)
(declare-fun v () Int)
(assert (> (- (+ (* GEN1 x) (* GEN2 y) (* GEN3 z)) u v) GEN4))
(assert (> (+ u v) GEN5))
(assert (> (+ x y) GEN6))
(assert (> x GEN7))
(assert (> z GEN8))
(assert (> u GEN9))
(assert (> v GEN10))
(assert (< u GEN11))
(assert (< v GEN12))
(assert (= BAV13 (> (- (+ (* GEN1 x) (* GEN2 y) (* GEN3 z)) u v) GEN4)))
(assert (= BAV14 (> (+ u v) GEN5)))
(assert (= BAV15 (> (+ x y) GEN6)))
(assert (= BAV16 (> x GEN7)))
(assert (= BAV17 (> z GEN8)))
(assert (= BAV18 (> u GEN9)))
(assert (= BAV19 (> v GEN10)))
(assert (= BAV20 (< u GEN11)))
(assert (= BAV21 (< v GEN12)))
(check-sat)
(get-model)