(set-info :smt-lib-version 2.6)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x () (_ BitVec 32))
(declare-fun y () (_ BitVec 32))
(declare-fun z () (_ BitVec 32))
(assert (= z (bvadd x y)))
(assert (distinct x y))
(assert (and (distinct x (_ bv0 32)) (= (bvand x (bvsub x (_ bv1 32))) (_ bv0 32))))
(assert (and (distinct y (_ bv0 32)) (= (bvand y (bvsub y (_ bv1 32))) (_ bv0 32))))
(assert (and (distinct z (_ bv0 32)) (= (bvand z (bvsub z (_ bv1 32))) (_ bv0 32))))
(assert (= BAV1 (= z (bvadd x y))))
(assert (= BAV2 (distinct x y)))
(assert (= BAV3 (and (distinct x (_ bv0 32)) (= (bvand x (bvsub x (_ bv1 32))) (_ bv0 32)))))
(assert (= BAV4 (distinct x (_ bv0 32))))
(assert (= BAV5 (= (bvand x (bvsub x (_ bv1 32))) (_ bv0 32))))
(assert (= BAV6 (and (distinct y (_ bv0 32)) (= (bvand y (bvsub y (_ bv1 32))) (_ bv0 32)))))
(assert (= BAV7 (distinct y (_ bv0 32))))
(assert (= BAV8 (= (bvand y (bvsub y (_ bv1 32))) (_ bv0 32))))
(assert (= BAV9 (and (distinct z (_ bv0 32)) (= (bvand z (bvsub z (_ bv1 32))) (_ bv0 32)))))
(assert (= BAV10 (distinct z (_ bv0 32))))
(assert (= BAV11 (= (bvand z (bvsub z (_ bv1 32))) (_ bv0 32))))
(check-sat)
(get-model)
(exit)