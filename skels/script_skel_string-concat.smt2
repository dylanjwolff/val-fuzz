(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(get-model)
(get-model)
(get-model)
(declare-const BAV5 Bool)
(get-model)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const GEN59 Int)
(declare-const GEN58 String)
(declare-const GEN57 Int)
(declare-const GEN56 String)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 String)
(declare-const GEN47 String)
(declare-const GEN46 String)
(declare-const GEN45 String)
(declare-const GEN44 String)
(declare-const GEN43 String)
(declare-const GEN42 String)
(declare-const GEN41 String)
(declare-const GEN40 String)
(declare-const GEN39 String)
(declare-const GEN38 String)
(declare-const GEN37 String)
(declare-const GEN36 String)
(declare-const GEN35 String)
(declare-const GEN34 String)
(declare-const GEN33 String)
(declare-const GEN32 String)
(declare-const GEN31 String)
(declare-const GEN30 String)
(declare-const GEN29 String)
(declare-const GEN28 String)
(declare-const GEN27 String)
(declare-const GEN26 String)
(declare-const GEN25 String)
(declare-const GEN24 String)
(declare-const GEN23 String)
(declare-const GEN22 String)
(declare-const GEN21 String)
(declare-const GEN20 String)
(declare-const GEN19 String)
(declare-const GEN18 String)
(declare-const GEN17 String)
(declare-const GEN16 String)
(declare-const GEN15 String)
(declare-const GEN14 String)
(declare-const GEN13 String)
(declare-const GEN12 String)
(declare-const GEN11 String)
(declare-const GEN10 String)
(declare-const GEN9 String)
(declare-const GEN8 String)
(declare-const GEN7 String)
(declare-const GEN6 String)
(declare-const GEN5 String)
(declare-const GEN4 String)
(declare-const GEN3 String)
(declare-const GEN2 String)
(declare-const GEN1 String)
(declare-const a String)
(declare-const b String)
(declare-const c String)
(declare-const d String)
(declare-const e String)
(push)
(assert (= a GEN1))
(assert (= BAV1 (= a GEN1)))
(assert (= BAV2 (= a (str.++ GEN2 GEN3))))
(assert (= BAV3 (= a b)))
(assert (= BAV4 (= a b)))
(assert (= BAV5 (= a GEN4)))
(assert (= BAV6 (= a (str.++ a GEN5))))
(assert (= BAV7 (= b (str.++ a GEN6))))
(assert (= BAV8 (= (str.++ a b) (str.++ b GEN7 a))))
(assert (= BAV9 (= (str.++ a GEN8) (str.++ GEN9 a))))
(assert (= BAV10 (= (str.++ a GEN10) (str.++ GEN11 a))))
(assert (= BAV11 (= a (str.++ b GEN12 c GEN13 d))))
(assert (= BAV12 (= a (str.++ b GEN14 c GEN15 a))))
(assert (= BAV13 (= a GEN16)))
(assert (= BAV14 (= (str.++ a b) GEN17)))
(assert (= BAV15 (= a GEN18)))
(assert (= BAV16 (= (str.++ a b) GEN19)))
(assert (= BAV17 (= a GEN20)))
(assert (= BAV18 (= (str.++ b a) GEN21)))
(assert (= BAV19 (= b GEN22)))
(assert (= BAV20 (= (str.++ a b c) GEN23)))
(assert (= BAV21 (= (str.++ a b) GEN24)))
(assert (= BAV22 (= (str.++ a b) GEN25)))
(assert (= BAV23 (= (str.++ a b) GEN26)))
(assert (= BAV24 (= (str.++ a b) GEN27)))
(assert (= BAV25 (= (str.++ b c) GEN28)))
(assert (= BAV26 (= b GEN29)))
(assert (= BAV27 (= (str.++ a b) c)))
(assert (= BAV28 (or (= a GEN30) (= a GEN31) (= a GEN32))))
(assert (= BAV29 (= a GEN30)))
(assert (= BAV30 (= a GEN31)))
(assert (= BAV31 (= a GEN32)))
(assert (= BAV32 (or (= c GEN33) (= c GEN34) (= c GEN35))))
(assert (= BAV33 (= c GEN33)))
(assert (= BAV34 (= c GEN34)))
(assert (= BAV35 (= c GEN35)))
(assert (= BAV36 (= (str.++ GEN36 a) (str.++ GEN37 b))))
(assert (= BAV37 (= (str.++ GEN38 a) (str.++ GEN39 b))))
(assert (= BAV38 (= (str.++ GEN40 a) (str.++ GEN41 b))))
(assert (= BAV39 (= (str.++ GEN42 a) (str.++ GEN43 b))))
(assert (= BAV40 (= (str.++ GEN44 a) (str.++ b GEN45))))
(assert (= BAV41 (= (str.++ GEN46 a) (str.++ b GEN47))))
(assert (= BAV42 (= (str.++ a b) (str.++ c d e))))
(assert (= BAV43 (= (str.len a) (str.len b))))
(assert (= BAV44 (= (str.++ a b) (str.++ c d e))))
(assert (= BAV45 (= (str.len a) (str.len b))))
(assert (= BAV46 (= a GEN48)))
(assert (= BAV47 (= (str.++ a b) (str.++ c d e))))
(assert (= BAV48 (= (str.len a) (str.len b))))
(assert (= BAV49 (> (str.len a) GEN49)))
(assert (= BAV50 (= (str.++ a b) c)))
(assert (= BAV51 (= (str.len a) GEN50)))
(assert (= BAV52 (= (str.len b) GEN51)))
(assert (= BAV53 (= (str.++ a b) c)))
(assert (= BAV54 (= (str.len a) GEN52)))
(assert (= BAV55 (= (str.len b) GEN53)))
(assert (= BAV56 (= (str.++ a b) c)))
(assert (= BAV57 (= (str.len a) GEN54)))
(assert (= BAV58 (= (str.len b) GEN55)))
(assert (= BAV59 (= (str.++ a b) (str.++ GEN56 c))))
(assert (= BAV60 (= (str.len a) GEN57)))
(assert (= BAV61 (= (str.++ a b) (str.++ GEN58 c))))
(assert (= BAV62 (= (str.len b) GEN59)))
(assert (= BAV63 (= (str.++ a b) (str.++ "a" c))))
(assert (= BAV64 (= (str.len c) 0)))
(assert (= BAV65 (= (str.++ a b) (str.++ "a" c))))
(assert (= BAV66 (= (str.len c) 0)))
(assert (= BAV67 (= (str.len a) 0)))
(assert (= BAV68 (= (str.++ a b) (str.++ "a" c))))
(assert (= BAV69 (= (str.len c) 0)))
(assert (= BAV70 (= (str.len b) 0)))
(assert (= BAV71 (= (str.++ a b) (str.++ "a" c))))
(assert (= BAV72 (= (str.len a) 0)))
(assert (= BAV73 (= (str.len b) 0)))
(assert (= BAV74 (= (str.++ a "b" b) (str.++ "a" c))))
(assert (= BAV75 (= (str.len a) 3)))
(assert (= BAV76 (= (str.++ a "b" b) (str.++ "a" c))))
(assert (= BAV77 (= (str.len b) 3)))
(assert (= BAV78 (= (str.++ a "b" b) (str.++ "a" c))))
(assert (= BAV79 (= (str.len c) 3)))
(assert (= BAV80 (= (str.++ a "b" b) (str.++ "a" c))))
(assert (= BAV81 (= (str.len c) 2)))
(assert (= BAV82 (= (str.++ a "b" b) (str.++ "a" c))))
(assert (= BAV83 (= (str.len c) 1)))
(assert (= BAV84 (= (str.++ a "b" b) (str.++ "a" c))))
(assert (= BAV85 (= (str.len c) 0)))
(assert (= BAV86 (= (str.++ "abc" a) (str.++ b "cef"))))
(assert (= BAV87 (= (str.len a) 1)))
(assert (= BAV88 (= (str.++ "abc" a) (str.++ b "cef"))))
(assert (= BAV89 (= (str.len a) 2)))
(assert (= BAV90 (= (str.++ "abc" a) (str.++ b "cef"))))
(assert (= BAV91 (>= (str.len a) 3)))
(assert (= BAV92 (= (str.++ a "b") (str.++ b "c" d))))
(assert (= BAV93 (= (str.len a) 0)))
(assert (= BAV94 (= (= a "") (= (str.len a) 0))))
(assert (= BAV95 (= a "")))
(assert (= BAV96 (= (str.len a) 0)))
(assert (= BAV97 (= c (str.++ "a" b))))
(assert (= BAV98 (= c (str.++ a "b"))))
(assert (= BAV99 (= (str.len a) 1)))
(assert (= BAV100 (= e (str.++ a "bc"))))
(assert (= BAV101 (= e (str.++ b c))))
(assert (= BAV102 (= e (str.++ "ab" d))))
(assert (= BAV103 (= e (str.++ a "abc" b))))
(assert (= BAV104 (= e (str.++ c "ef" d))))
(assert (= BAV105 (= (str.len e) 4)))
(assert (= BAV106 (= e (str.++ a "abc" b))))
(assert (= BAV107 (= e (str.++ c "ef" d))))
(assert (= BAV108 (<= (str.len e) 4)))
(assert (= BAV109 (= e (str.++ a "abc" b))))
(assert (= BAV110 (= e (str.++ c "ef" d))))
(assert (= BAV111 (= (str.len e) 5)))
(assert (= BAV112 (= e (str.++ a "abc" b))))
(assert (= BAV113 (= e (str.++ c "ef" d))))
(assert (= BAV114 (= (str.len e) 6)))
(assert (= BAV115 (= e (str.++ a "abc" b))))
(assert (= BAV116 (= e (str.++ c "ef" d))))
(assert (= BAV117 (>= (str.len e) 6)))
(assert (= BAV118 (= (str.++ a "ab") (str.++ "ba" a))))
(assert (= BAV119 (= (str.len a) 7)))
(assert (= BAV120 (= (str.++ a "ab") (str.++ "ba" a))))
(assert (= BAV121 (= (str.len a) 6)))
(assert (= BAV122 (= a b)))
(assert (= BAV123 (= (str.len a) (str.len b))))
(assert (= BAV124 (= (str.++ c a b) (str.++ b a))))
(assert (= BAV125 (= (str.++ a "ab" b) (str.++ b "ba" c))))
(assert (= BAV126 (= c (str.++ a b))))
(assert (= BAV127 (= (str.++ a "a") (str.++ "a" a))))
(check-sat)
(get-model)
(pop)
(push)
(assert (= a (str.++ GEN2 GEN3)))
(check-sat)
(get-model)
(pop)
(push)
(assert (= a b))
(check-sat)
(pop)
(push)
(assert (not (= a b)))
(check-sat)
(pop)
(push)
(assert (not (= a GEN4)))
(check-sat)
(pop)
(push)
(assert (= a (str.++ a GEN5)))
(check-sat)
(pop)
(push)
(assert (= b (str.++ a GEN6)))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ b GEN7 a)))
(check-sat)
(pop)
(push)
(assert (= (str.++ a GEN8) (str.++ GEN9 a)))
(check-sat)
(pop)
(push)
(assert (= (str.++ a GEN10) (str.++ GEN11 a)))
(check-sat)
(pop)
(push)
(assert (= a (str.++ b GEN12 c GEN13 d)))
(check-sat)
(pop)
(push)
(assert (= a (str.++ b GEN14 c GEN15 a)))
(check-sat)
(pop)
(push)
(assert (= a GEN16))
(assert (= (str.++ a b) GEN17))
(check-sat)
(get-model)
(pop)
(push)
(assert (= a GEN18))
(assert (= (str.++ a b) GEN19))
(check-sat)
(get-model)
(pop)
(push)
(assert (= a GEN20))
(assert (= (str.++ b a) GEN21))
(check-sat)
(get-model)
(pop)
(push)
(assert (= b GEN22))
(assert (= (str.++ a b c) GEN23))
(check-sat)
(get-model)
(pop)
(push)
(assert (= (str.++ a b) GEN24))
(check-sat)
(get-model)
(pop)
(push)
(assert (= (str.++ a b) GEN25))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) GEN26))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) GEN27))
(assert (= (str.++ b c) GEN28))
(assert (not (= b GEN29)))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) c))
(assert (or (= a GEN30) (= a GEN31) (= a GEN32)))
(assert (or (= c GEN33) (= c GEN34) (= c GEN35)))
(check-sat)
(get-model)
(pop)
(push)
(assert (= (str.++ GEN36 a) (str.++ GEN37 b)))
(check-sat)
(pop)
(push)
(assert (= (str.++ GEN38 a) (str.++ GEN39 b)))
(check-sat)
(pop)
(push)
(assert (= (str.++ GEN40 a) (str.++ GEN41 b)))
(check-sat)
(pop)
(push)
(assert (= (str.++ GEN42 a) (str.++ GEN43 b)))
(check-sat)
(pop)
(push)
(assert (= (str.++ GEN44 a) (str.++ b GEN45)))
(check-sat)
(pop)
(push)
(assert (= (str.++ GEN46 a) (str.++ b GEN47)))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ c d e)))
(assert (= (str.len a) (str.len b)))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ c d e)))
(assert (= (str.len a) (str.len b)))
(assert (not (= a GEN48)))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ c d e)))
(assert (= (str.len a) (str.len b)))
(assert (> (str.len a) GEN49))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) c))
(assert (= (str.len a) GEN50))
(assert (= (str.len b) GEN51))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) c))
(assert (= (str.len a) GEN52))
(assert (= (str.len b) GEN53))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) c))
(assert (= (str.len a) GEN54))
(assert (= (str.len b) GEN55))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ GEN56 c)))
(assert (= (str.len a) GEN57))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ GEN58 c)))
(assert (= (str.len b) GEN59))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ "a" c)))
(assert (= (str.len c) 0))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ "a" c)))
(assert (= (str.len c) 0))
(assert (= (str.len a) 0))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ "a" c)))
(assert (= (str.len c) 0))
(assert (= (str.len b) 0))
(check-sat)
(pop)
(push)
(assert (= (str.++ a b) (str.++ "a" c)))
(assert (= (str.len a) 0))
(assert (= (str.len b) 0))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "b" b) (str.++ "a" c)))
(assert (= (str.len a) 3))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "b" b) (str.++ "a" c)))
(assert (= (str.len b) 3))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "b" b) (str.++ "a" c)))
(assert (= (str.len c) 3))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "b" b) (str.++ "a" c)))
(assert (= (str.len c) 2))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "b" b) (str.++ "a" c)))
(assert (= (str.len c) 1))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "b" b) (str.++ "a" c)))
(assert (= (str.len c) 0))
(check-sat)
(pop)
(push)
(assert (= (str.++ "abc" a) (str.++ b "cef")))
(assert (= (str.len a) 1))
(check-sat)
(pop)
(push)
(assert (= (str.++ "abc" a) (str.++ b "cef")))
(assert (= (str.len a) 2))
(check-sat)
(pop)
(push)
(assert (= (str.++ "abc" a) (str.++ b "cef")))
(assert (>= (str.len a) 3))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "b") (str.++ b "c" d)))
(assert (= (str.len a) 0))
(check-sat)
(pop)
(push)
(assert (not (= (= a "") (= (str.len a) 0))))
(check-sat)
(pop)
(push)
(assert (= c (str.++ "a" b)))
(assert (= c (str.++ a "b")))
(assert (= (str.len a) 1))
(check-sat)
(pop)
(push)
(assert (= e (str.++ a "bc")))
(assert (= e (str.++ b c)))
(assert (= e (str.++ "ab" d)))
(check-sat)
(pop)
(push)
(assert (= e (str.++ a "abc" b)))
(assert (= e (str.++ c "ef" d)))
(assert (= (str.len e) 4))
(check-sat)
(pop)
(push)
(assert (= e (str.++ a "abc" b)))
(assert (= e (str.++ c "ef" d)))
(assert (<= (str.len e) 4))
(check-sat)
(pop)
(push)
(assert (= e (str.++ a "abc" b)))
(assert (= e (str.++ c "ef" d)))
(assert (= (str.len e) 5))
(check-sat)
(pop)
(push)
(assert (= e (str.++ a "abc" b)))
(assert (= e (str.++ c "ef" d)))
(assert (= (str.len e) 6))
(check-sat)
(pop)
(push)
(assert (= e (str.++ a "abc" b)))
(assert (= e (str.++ c "ef" d)))
(assert (>= (str.len e) 6))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "ab") (str.++ "ba" a)))
(assert (= (str.len a) 7))
(check-sat)
(get-model)
(pop)
(push)
(assert (= (str.++ a "ab") (str.++ "ba" a)))
(assert (= (str.len a) 6))
(check-sat)
(pop)
(push)
(assert (not (= a b)))
(assert (= (str.len a) (str.len b)))
(check-sat)
(pop)
(push)
(assert (not (= (str.++ c a b) (str.++ b a))))
(check-sat)
(pop)
(push)
(assert (= (str.++ a "ab" b) (str.++ b "ba" c)))
(assert (= c (str.++ a b)))
(assert (not (= (str.++ a "a") (str.++ "a" a))))
(check-sat)
(pop)