(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x () Real)
(declare-fun y () Real)
(declare-fun x1 () Real)
(declare-fun y2 () Real)
(assert (and (= (- (+ (- (+ (* x1 x1) (* GEN1 (* y y))) (* GEN2 (* y y2))) (* y2 y2)) GEN3) GEN4) (= (+ (+ (+ (+ (- (- (* GEN5 (* x x)) (* GEN6 (* x x1))) (* GEN7 x)) (* x1 x1)) (* GEN8 x1)) GEN9) (* y2 y2)) GEN10)))
(eliminate-quantifiers (exists x1 y2))
(exit)
(assert (= BAV1 (and (= (- (+ (- (+ (* x1 x1) (* GEN1 (* y y))) (* GEN2 (* y y2))) (* y2 y2)) GEN3) GEN4) (= (+ (+ (+ (+ (- (- (* GEN5 (* x x)) (* GEN6 (* x x1))) (* GEN7 x)) (* x1 x1)) (* GEN8 x1)) GEN9) (* y2 y2)) GEN10))))
(assert (= BAV2 (= (- (+ (- (+ (* x1 x1) (* GEN1 (* y y))) (* GEN2 (* y y2))) (* y2 y2)) GEN3) GEN4)))
(assert (= BAV3 (= (+ (+ (+ (+ (- (- (* GEN5 (* x x)) (* GEN6 (* x x1))) (* GEN7 x)) (* x1 x1)) (* GEN8 x1)) GEN9) (* y2 y2)) GEN10)))