(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN2 Int)
(declare-const GEN1 Real)
(declare-datatypes () (
  ( RealTree 
    ( Node 
      (left RealTree) 
		  (elem Real) 
		  (right RealTree)) 
    (Leaf)
   )
))
(declare-datatypes (T1 T2) ((Pair (mk-pair (first T1) (second T2)))))
( declare-fun SumeAndPositiveTree ( RealTree ) (Pair Real Bool) )
(declare-fun l1 () RealTree)
(declare-fun l2 () RealTree)
(declare-const result (Pair Real Bool))
(assert (= l1 (Node l2 GEN1 l2)))
(assert (= result (SumeAndPositiveTree l1)))
(assert (= (first result) GEN2))
(assert (= (second result) true))
(assert (= BAV1 (= l1 (Node l2 GEN1 l2))))
(assert (= BAV2 (= result (SumeAndPositiveTree l1))))
(assert (= BAV3 (= (first result) GEN2)))
(assert (= BAV4 (= (second result) true)))
(check-sat)
(get-model)