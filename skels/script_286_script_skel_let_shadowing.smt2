(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const _let_0 Int)
(declare-const x Int)
(declare-const y Int)
(declare-const a Bool)
(declare-const b Bool)
(assert (= (* x y) (* x y) _let_0))
(assert (= (and a b) (and a b) (forall ((_let_0 Int)) (= GEN1 _let_0))))
(assert (= (and a b) (and a b) (forall ((x Int)) (forall ((y Int)) (and (and a b) (and b a) (and b a) (= GEN2 _let_0))))))
(assert (= BAV3 (= (* x y) (* x y) _let_0)))
(assert (= BAV4 (= (and a b) (and a b) (forall ((_let_0 Int)) (= GEN1 _let_0)))))
(assert (= BAV5 (and a b)))
(assert (= BAV6 (and a b)))
(assert (= BAV7 (forall ((_let_0 Int)) (= GEN1 _let_0))))
(assert (= BAV8 (= (and a b) (and a b) (forall ((x Int)) (forall ((y Int)) (and (and a b) (and b a) (and b a) (= GEN2 _let_0)))))))
(assert (= BAV9 (and a b)))
(assert (= BAV10 (and a b)))
(assert (= BAV11 (forall ((x Int)(y Int)) (and (and a b) (and b a) (and b a) (= GEN2 _let_0)))))
(assert (= BAV12 (forall ((x Int)(y Int)) (and a b))))
(assert (= BAV13 (forall ((x Int)(y Int)) (and b a))))
(assert (= BAV14 (forall ((x Int)(y Int)) (and b a))))
(assert (= BAV15 (forall ((x Int)(y Int)) (= GEN2 _let_0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (= BAV3 false) (= BAV4 false)) (= BAV5 false)) (= BAV6 false)) (= BAV7 false)) (= BAV8 false)) (= BAV9 false)) (= BAV10 true)) (= BAV11 true)) (= BAV12 false)) (= BAV13 true)) (= BAV14 true)) (= BAV15 true)))
(check-sat)