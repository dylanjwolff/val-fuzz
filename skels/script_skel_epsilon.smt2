(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const GEN212 Real)
(declare-const GEN211 Real)
(declare-const GEN210 Real)
(declare-const GEN209 Real)
(declare-const GEN208 Real)
(declare-const GEN207 Real)
(declare-const GEN206 Real)
(declare-const GEN205 Real)
(declare-const GEN204 Real)
(declare-const GEN203 Real)
(declare-const GEN202 Real)
(declare-const GEN201 Real)
(declare-const GEN200 Real)
(declare-const GEN199 Real)
(declare-const GEN198 Real)
(declare-const GEN197 Real)
(declare-const GEN196 Real)
(declare-const GEN195 Real)
(declare-const GEN194 Real)
(declare-const GEN193 Real)
(declare-const GEN192 Real)
(declare-const GEN191 Real)
(declare-const GEN190 Real)
(declare-const GEN189 Real)
(declare-const GEN188 Real)
(declare-const GEN187 Real)
(declare-const GEN186 Real)
(declare-const GEN185 Real)
(declare-const GEN184 Real)
(declare-const GEN183 Real)
(declare-const GEN182 Real)
(declare-const GEN181 Real)
(declare-const GEN180 Real)
(declare-const GEN179 Real)
(declare-const GEN178 Real)
(declare-const GEN177 Real)
(declare-const GEN176 Real)
(declare-const GEN175 Real)
(declare-const GEN174 Real)
(declare-const GEN173 Real)
(declare-const GEN172 Real)
(declare-const GEN171 Real)
(declare-const GEN170 Real)
(declare-const GEN169 Real)
(declare-const GEN168 Real)
(declare-const GEN167 Real)
(declare-const GEN166 Real)
(declare-const GEN165 Real)
(declare-const GEN164 Real)
(declare-const GEN163 Real)
(declare-const GEN162 Real)
(declare-const GEN161 Real)
(declare-const GEN160 Real)
(declare-const GEN159 Real)
(declare-const GEN158 Real)
(declare-const GEN157 Real)
(declare-const GEN156 Real)
(declare-const GEN155 Real)
(declare-const GEN154 Real)
(declare-const GEN153 Real)
(declare-const GEN152 Real)
(declare-const GEN151 Real)
(declare-const GEN150 Real)
(declare-const GEN149 Real)
(declare-const GEN148 Real)
(declare-const GEN147 Real)
(declare-const GEN146 Real)
(declare-const GEN145 Real)
(declare-const GEN144 Real)
(declare-const GEN143 Real)
(declare-const GEN142 Real)
(declare-const GEN141 Real)
(declare-const GEN140 Real)
(declare-const GEN139 Real)
(declare-const GEN138 Real)
(declare-const GEN137 Real)
(declare-const GEN136 Real)
(declare-const GEN135 Real)
(declare-const GEN134 Real)
(declare-const GEN133 Real)
(declare-const GEN132 Real)
(declare-const GEN131 Real)
(declare-const GEN130 Real)
(declare-const GEN129 Real)
(declare-const GEN128 Real)
(declare-const GEN127 Real)
(declare-const GEN126 Real)
(declare-const GEN125 Real)
(declare-const GEN124 Real)
(declare-const GEN123 Real)
(declare-const GEN122 Real)
(declare-const GEN121 Real)
(declare-const GEN120 Real)
(declare-const GEN119 Real)
(declare-const GEN118 Real)
(declare-const GEN117 Real)
(declare-const GEN116 Real)
(declare-const GEN115 Real)
(declare-const GEN114 Real)
(declare-const GEN113 Real)
(declare-const GEN112 Real)
(declare-const GEN111 Real)
(declare-const GEN110 Real)
(declare-const GEN109 Real)
(declare-const GEN108 Real)
(declare-const GEN107 Real)
(declare-const GEN106 Real)
(declare-const GEN105 Real)
(declare-const GEN104 Real)
(declare-const GEN103 Real)
(declare-const GEN102 Real)
(declare-const GEN101 Real)
(declare-const GEN100 Real)
(declare-const GEN99 Real)
(declare-const GEN98 Real)
(declare-const GEN97 Real)
(declare-const GEN96 Real)
(declare-const GEN95 Real)
(declare-const GEN94 Real)
(declare-const GEN93 Real)
(declare-const GEN92 Real)
(declare-const GEN91 Real)
(declare-const GEN90 Real)
(declare-const GEN89 Real)
(declare-const GEN88 Real)
(declare-const GEN87 Real)
(declare-const GEN86 Real)
(declare-const GEN85 Real)
(declare-const GEN84 Real)
(declare-const GEN83 Real)
(declare-const GEN82 Real)
(declare-const GEN81 Real)
(declare-const GEN80 Real)
(declare-const GEN79 Real)
(declare-const GEN78 Real)
(declare-const GEN77 Real)
(declare-const GEN76 Real)
(declare-const GEN75 Real)
(declare-const GEN74 Real)
(declare-const GEN73 Real)
(declare-const GEN72 Real)
(declare-const GEN71 Real)
(declare-const GEN70 Real)
(declare-const GEN69 Real)
(declare-const GEN68 Real)
(declare-const GEN67 Real)
(declare-const GEN66 Real)
(declare-const GEN65 Real)
(declare-const GEN64 Real)
(declare-const GEN63 Real)
(declare-const GEN62 Real)
(declare-const GEN61 Real)
(declare-const GEN60 Real)
(declare-const GEN59 Real)
(declare-const GEN58 Real)
(declare-const GEN57 Real)
(declare-const GEN56 Real)
(declare-const GEN55 Real)
(declare-const GEN54 Real)
(declare-const GEN53 Real)
(declare-const GEN52 Real)
(declare-const GEN51 Real)
(declare-const GEN50 Real)
(declare-const GEN49 Real)
(declare-const GEN48 Real)
(declare-const GEN47 Real)
(declare-const GEN46 Real)
(declare-const GEN45 Real)
(declare-const GEN44 Real)
(declare-const GEN43 Real)
(declare-const GEN42 Real)
(declare-const GEN41 Real)
(declare-const GEN40 Real)
(declare-const GEN39 Real)
(declare-const GEN38 Real)
(declare-const GEN37 Real)
(declare-const GEN36 Real)
(declare-const GEN35 Real)
(declare-const GEN34 Real)
(declare-const GEN33 Real)
(declare-const GEN32 Real)
(declare-const GEN31 Real)
(declare-const GEN30 Real)
(declare-const GEN29 Real)
(declare-const GEN28 Real)
(declare-const GEN27 Real)
(declare-const GEN26 Real)
(declare-const GEN25 Real)
(declare-const GEN24 Real)
(declare-const GEN23 Real)
(declare-const GEN22 Real)
(declare-const GEN21 Real)
(declare-const GEN20 Real)
(declare-const GEN19 Real)
(declare-const GEN18 Real)
(declare-const GEN17 Real)
(declare-const GEN16 Real)
(declare-const GEN15 Real)
(declare-const GEN14 Real)
(declare-const GEN13 Real)
(declare-const GEN12 Real)
(declare-const GEN11 Real)
(declare-const GEN10 Real)
(declare-const GEN9 Real)
(declare-const GEN8 Real)
(declare-const GEN7 Real)
(declare-const GEN6 Real)
(declare-const GEN5 Real)
(declare-const GEN4 Real)
(declare-const GEN3 Real)
(declare-const GEN2 Real)
(declare-const GEN1 Real)
(declare-const i_loop Real)
(declare-const loopex Bool)
(declare-fun zot-p1 (Real) Bool)
(declare-fun zot-p2 (Real) Bool)
(declare-const zot-i-eve_zot-p2 Real)
(declare-fun zot-p3 (Real) Bool)
(declare-fun zot-p4 (Real) Bool)
(declare-const zot-i-eve_zot-p4 Real)
(declare-fun zot-p5 (Real) Bool)
(declare-fun y-theta (Real) Real)
(assert (and (zot-p1 GEN1) (or (not loopex) (or (= i_loop GEN2) (= i_loop GEN3) (= i_loop GEN4) (= i_loop GEN5) (= i_loop GEN6) (= i_loop GEN7) (= i_loop GEN8) (= i_loop GEN9) (= i_loop GEN10) (= i_loop GEN11))) (= (and (<= GEN12 i_loop) (<= i_loop GEN13)) (and loopex (= (< GEN14 (y-theta (- i_loop GEN15))) (< GEN16 (y-theta GEN17))) (= (= GEN18 (y-theta (- i_loop GEN19))) (= GEN20 (y-theta GEN21))) (= (< (y-theta (- i_loop GEN22)) GEN23) (< (y-theta GEN24) GEN25)) (= (= (y-theta (- i_loop GEN26)) GEN27) (= (y-theta GEN28) GEN29)) (= (zot-p5 (- i_loop GEN30)) (zot-p5 GEN31)) (= (zot-p3 (- i_loop GEN32)) (zot-p3 GEN33)))) (= (zot-p1 GEN34) (and (zot-p2 GEN35) (zot-p4 GEN36))) (= (zot-p1 GEN37) (and (zot-p2 GEN38) (zot-p4 GEN39))) (= (zot-p1 GEN40) (and (zot-p2 GEN41) (zot-p4 GEN42))) (= (zot-p1 GEN43) (and (zot-p2 GEN44) (zot-p4 GEN45))) (= (zot-p1 GEN46) (and (zot-p2 GEN47) (zot-p4 GEN48))) (= (zot-p1 GEN49) (and (zot-p2 GEN50) (zot-p4 GEN51))) (= (zot-p1 GEN52) (and (zot-p2 GEN53) (zot-p4 GEN54))) (= (zot-p1 GEN55) (and (zot-p2 GEN56) (zot-p4 GEN57))) (= (zot-p1 GEN58) (and (zot-p2 GEN59) (zot-p4 GEN60))) (= (zot-p1 GEN61) (and (zot-p2 GEN62) (zot-p4 GEN63))) (= (zot-p1 GEN64) (and (zot-p2 GEN65) (zot-p4 GEN66))) (= (zot-p4 GEN67) (and (zot-p5 GEN68) (or false (zot-p4 GEN69)))) (= (zot-p2 GEN70) (or (zot-p3 GEN71) (and true (zot-p2 GEN72)))) (= (zot-p4 GEN73) (and (zot-p5 GEN74) (or false (zot-p4 GEN75)))) (= (zot-p2 GEN76) (or (zot-p3 GEN77) (and true (zot-p2 GEN78)))) (= (zot-p4 GEN79) (and (zot-p5 GEN80) (or false (zot-p4 GEN81)))) (= (zot-p2 GEN82) (or (zot-p3 GEN83) (and true (zot-p2 GEN84)))) (= (zot-p4 GEN85) (and (zot-p5 GEN86) (or false (zot-p4 GEN87)))) (= (zot-p2 GEN88) (or (zot-p3 GEN89) (and true (zot-p2 GEN90)))) (= (zot-p4 GEN91) (and (zot-p5 GEN92) (or false (zot-p4 GEN93)))) (= (zot-p2 GEN94) (or (zot-p3 GEN95) (and true (zot-p2 GEN96)))) (= (zot-p4 GEN97) (and (zot-p5 GEN98) (or false (zot-p4 GEN99)))) (= (zot-p2 GEN100) (or (zot-p3 GEN101) (and true (zot-p2 GEN102)))) (= (zot-p4 GEN103) (and (zot-p5 GEN104) (or false (zot-p4 GEN105)))) (= (zot-p2 GEN106) (or (zot-p3 GEN107) (and true (zot-p2 GEN108)))) (= (zot-p4 GEN109) (and (zot-p5 GEN110) (or false (zot-p4 GEN111)))) (= (zot-p2 GEN112) (or (zot-p3 GEN113) (and true (zot-p2 GEN114)))) (= (zot-p4 GEN115) (and (zot-p5 GEN116) (or false (zot-p4 GEN117)))) (= (zot-p2 GEN118) (or (zot-p3 GEN119) (and true (zot-p2 GEN120)))) (= (zot-p4 GEN121) (and (zot-p5 GEN122) (or false (zot-p4 GEN123)))) (= (zot-p2 GEN124) (or (zot-p3 GEN125) (and true (zot-p2 GEN126)))) (= (zot-p4 GEN127) (and (zot-p5 GEN128) (or false (zot-p4 GEN129)))) (= (zot-p2 GEN130) (or (zot-p3 GEN131) (and true (zot-p2 GEN132)))) (or (not (not loopex)) (and (not (zot-p5 GEN133)) (not (zot-p3 GEN134)) (not (zot-p1 GEN135)) (not (zot-p4 GEN136)) (not (zot-p2 GEN137)))) (or (not loopex) (and (= (zot-p5 i_loop) (zot-p5 GEN138)) (= (zot-p3 i_loop) (zot-p3 GEN139)) (= (zot-p1 i_loop) (zot-p1 GEN140)) (= (zot-p4 i_loop) (zot-p4 GEN141)) (= (zot-p2 i_loop) (zot-p2 GEN142)))) (or (not loopex) (and (or (not (not (zot-p4 GEN143))) (and (<= i_loop zot-i-eve_zot-p4) (<= zot-i-eve_zot-p4 GEN144) (not (zot-p4 zot-i-eve_zot-p4)))) (or (not (zot-p2 GEN145)) (and (<= i_loop zot-i-eve_zot-p2) (<= zot-i-eve_zot-p2 GEN146) (zot-p3 zot-i-eve_zot-p2))))) (= (zot-p5 GEN147) (> (y-theta GEN148) GEN149)) (= (zot-p3 GEN150) (= (y-theta GEN151) GEN152)) (= (zot-p5 GEN153) (> (y-theta GEN154) GEN155)) (= (zot-p3 GEN156) (= (y-theta GEN157) GEN158)) (= (zot-p5 GEN159) (> (y-theta GEN160) GEN161)) (= (zot-p3 GEN162) (= (y-theta GEN163) GEN164)) (= (zot-p5 GEN165) (> (y-theta GEN166) GEN167)) (= (zot-p3 GEN168) (= (y-theta GEN169) GEN170)) (= (zot-p5 GEN171) (> (y-theta GEN172) GEN173)) (= (zot-p3 GEN174) (= (y-theta GEN175) GEN176)) (= (zot-p5 GEN177) (> (y-theta GEN178) GEN179)) (= (zot-p3 GEN180) (= (y-theta GEN181) GEN182)) (= (zot-p5 GEN183) (> (y-theta GEN184) GEN185)) (= (zot-p3 GEN186) (= (y-theta GEN187) GEN188)) (= (zot-p5 GEN189) (> (y-theta GEN190) GEN191)) (= (zot-p3 GEN192) (= (y-theta GEN193) GEN194)) (= (zot-p5 GEN195) (> (y-theta GEN196) GEN197)) (= (zot-p3 GEN198) (= (y-theta GEN199) GEN200)) (= (zot-p5 GEN201) (> (y-theta GEN202) GEN203)) (= (zot-p3 GEN204) (= (y-theta GEN205) GEN206)) (= (zot-p5 GEN207) (> (y-theta GEN208) GEN209)) (= (zot-p3 GEN210) (= (y-theta GEN211) GEN212)) true))
(assert (= BAV1 (and (zot-p1 GEN1) (or (not loopex) (or (= i_loop GEN2) (= i_loop GEN3) (= i_loop GEN4) (= i_loop GEN5) (= i_loop GEN6) (= i_loop GEN7) (= i_loop GEN8) (= i_loop GEN9) (= i_loop GEN10) (= i_loop GEN11))) (= (and (<= GEN12 i_loop) (<= i_loop GEN13)) (and loopex (= (< GEN14 (y-theta (- i_loop GEN15))) (< GEN16 (y-theta GEN17))) (= (= GEN18 (y-theta (- i_loop GEN19))) (= GEN20 (y-theta GEN21))) (= (< (y-theta (- i_loop GEN22)) GEN23) (< (y-theta GEN24) GEN25)) (= (= (y-theta (- i_loop GEN26)) GEN27) (= (y-theta GEN28) GEN29)) (= (zot-p5 (- i_loop GEN30)) (zot-p5 GEN31)) (= (zot-p3 (- i_loop GEN32)) (zot-p3 GEN33)))) (= (zot-p1 GEN34) (and (zot-p2 GEN35) (zot-p4 GEN36))) (= (zot-p1 GEN37) (and (zot-p2 GEN38) (zot-p4 GEN39))) (= (zot-p1 GEN40) (and (zot-p2 GEN41) (zot-p4 GEN42))) (= (zot-p1 GEN43) (and (zot-p2 GEN44) (zot-p4 GEN45))) (= (zot-p1 GEN46) (and (zot-p2 GEN47) (zot-p4 GEN48))) (= (zot-p1 GEN49) (and (zot-p2 GEN50) (zot-p4 GEN51))) (= (zot-p1 GEN52) (and (zot-p2 GEN53) (zot-p4 GEN54))) (= (zot-p1 GEN55) (and (zot-p2 GEN56) (zot-p4 GEN57))) (= (zot-p1 GEN58) (and (zot-p2 GEN59) (zot-p4 GEN60))) (= (zot-p1 GEN61) (and (zot-p2 GEN62) (zot-p4 GEN63))) (= (zot-p1 GEN64) (and (zot-p2 GEN65) (zot-p4 GEN66))) (= (zot-p4 GEN67) (and (zot-p5 GEN68) (or false (zot-p4 GEN69)))) (= (zot-p2 GEN70) (or (zot-p3 GEN71) (and true (zot-p2 GEN72)))) (= (zot-p4 GEN73) (and (zot-p5 GEN74) (or false (zot-p4 GEN75)))) (= (zot-p2 GEN76) (or (zot-p3 GEN77) (and true (zot-p2 GEN78)))) (= (zot-p4 GEN79) (and (zot-p5 GEN80) (or false (zot-p4 GEN81)))) (= (zot-p2 GEN82) (or (zot-p3 GEN83) (and true (zot-p2 GEN84)))) (= (zot-p4 GEN85) (and (zot-p5 GEN86) (or false (zot-p4 GEN87)))) (= (zot-p2 GEN88) (or (zot-p3 GEN89) (and true (zot-p2 GEN90)))) (= (zot-p4 GEN91) (and (zot-p5 GEN92) (or false (zot-p4 GEN93)))) (= (zot-p2 GEN94) (or (zot-p3 GEN95) (and true (zot-p2 GEN96)))) (= (zot-p4 GEN97) (and (zot-p5 GEN98) (or false (zot-p4 GEN99)))) (= (zot-p2 GEN100) (or (zot-p3 GEN101) (and true (zot-p2 GEN102)))) (= (zot-p4 GEN103) (and (zot-p5 GEN104) (or false (zot-p4 GEN105)))) (= (zot-p2 GEN106) (or (zot-p3 GEN107) (and true (zot-p2 GEN108)))) (= (zot-p4 GEN109) (and (zot-p5 GEN110) (or false (zot-p4 GEN111)))) (= (zot-p2 GEN112) (or (zot-p3 GEN113) (and true (zot-p2 GEN114)))) (= (zot-p4 GEN115) (and (zot-p5 GEN116) (or false (zot-p4 GEN117)))) (= (zot-p2 GEN118) (or (zot-p3 GEN119) (and true (zot-p2 GEN120)))) (= (zot-p4 GEN121) (and (zot-p5 GEN122) (or false (zot-p4 GEN123)))) (= (zot-p2 GEN124) (or (zot-p3 GEN125) (and true (zot-p2 GEN126)))) (= (zot-p4 GEN127) (and (zot-p5 GEN128) (or false (zot-p4 GEN129)))) (= (zot-p2 GEN130) (or (zot-p3 GEN131) (and true (zot-p2 GEN132)))) (or (not (not loopex)) (and (not (zot-p5 GEN133)) (not (zot-p3 GEN134)) (not (zot-p1 GEN135)) (not (zot-p4 GEN136)) (not (zot-p2 GEN137)))) (or (not loopex) (and (= (zot-p5 i_loop) (zot-p5 GEN138)) (= (zot-p3 i_loop) (zot-p3 GEN139)) (= (zot-p1 i_loop) (zot-p1 GEN140)) (= (zot-p4 i_loop) (zot-p4 GEN141)) (= (zot-p2 i_loop) (zot-p2 GEN142)))) (or (not loopex) (and (or (not (not (zot-p4 GEN143))) (and (<= i_loop zot-i-eve_zot-p4) (<= zot-i-eve_zot-p4 GEN144) (not (zot-p4 zot-i-eve_zot-p4)))) (or (not (zot-p2 GEN145)) (and (<= i_loop zot-i-eve_zot-p2) (<= zot-i-eve_zot-p2 GEN146) (zot-p3 zot-i-eve_zot-p2))))) (= (zot-p5 GEN147) (> (y-theta GEN148) GEN149)) (= (zot-p3 GEN150) (= (y-theta GEN151) GEN152)) (= (zot-p5 GEN153) (> (y-theta GEN154) GEN155)) (= (zot-p3 GEN156) (= (y-theta GEN157) GEN158)) (= (zot-p5 GEN159) (> (y-theta GEN160) GEN161)) (= (zot-p3 GEN162) (= (y-theta GEN163) GEN164)) (= (zot-p5 GEN165) (> (y-theta GEN166) GEN167)) (= (zot-p3 GEN168) (= (y-theta GEN169) GEN170)) (= (zot-p5 GEN171) (> (y-theta GEN172) GEN173)) (= (zot-p3 GEN174) (= (y-theta GEN175) GEN176)) (= (zot-p5 GEN177) (> (y-theta GEN178) GEN179)) (= (zot-p3 GEN180) (= (y-theta GEN181) GEN182)) (= (zot-p5 GEN183) (> (y-theta GEN184) GEN185)) (= (zot-p3 GEN186) (= (y-theta GEN187) GEN188)) (= (zot-p5 GEN189) (> (y-theta GEN190) GEN191)) (= (zot-p3 GEN192) (= (y-theta GEN193) GEN194)) (= (zot-p5 GEN195) (> (y-theta GEN196) GEN197)) (= (zot-p3 GEN198) (= (y-theta GEN199) GEN200)) (= (zot-p5 GEN201) (> (y-theta GEN202) GEN203)) (= (zot-p3 GEN204) (= (y-theta GEN205) GEN206)) (= (zot-p5 GEN207) (> (y-theta GEN208) GEN209)) (= (zot-p3 GEN210) (= (y-theta GEN211) GEN212)) true)))
(assert (= BAV2 (or (not loopex) (or (= i_loop GEN2) (= i_loop GEN3) (= i_loop GEN4) (= i_loop GEN5) (= i_loop GEN6) (= i_loop GEN7) (= i_loop GEN8) (= i_loop GEN9) (= i_loop GEN10) (= i_loop GEN11)))))
(assert (= BAV3 (or (= i_loop GEN2) (= i_loop GEN3) (= i_loop GEN4) (= i_loop GEN5) (= i_loop GEN6) (= i_loop GEN7) (= i_loop GEN8) (= i_loop GEN9) (= i_loop GEN10) (= i_loop GEN11))))
(assert (= BAV4 (= i_loop GEN2)))
(assert (= BAV5 (= i_loop GEN3)))
(assert (= BAV6 (= i_loop GEN4)))
(assert (= BAV7 (= i_loop GEN5)))
(assert (= BAV8 (= i_loop GEN6)))
(assert (= BAV9 (= i_loop GEN7)))
(assert (= BAV10 (= i_loop GEN8)))
(assert (= BAV11 (= i_loop GEN9)))
(assert (= BAV12 (= i_loop GEN10)))
(assert (= BAV13 (= i_loop GEN11)))
(assert (= BAV14 (= (and (<= GEN12 i_loop) (<= i_loop GEN13)) (and loopex (= (< GEN14 (y-theta (- i_loop GEN15))) (< GEN16 (y-theta GEN17))) (= (= GEN18 (y-theta (- i_loop GEN19))) (= GEN20 (y-theta GEN21))) (= (< (y-theta (- i_loop GEN22)) GEN23) (< (y-theta GEN24) GEN25)) (= (= (y-theta (- i_loop GEN26)) GEN27) (= (y-theta GEN28) GEN29)) (= (zot-p5 (- i_loop GEN30)) (zot-p5 GEN31)) (= (zot-p3 (- i_loop GEN32)) (zot-p3 GEN33))))))
(assert (= BAV15 (and (<= GEN12 i_loop) (<= i_loop GEN13))))
(assert (= BAV16 (<= GEN12 i_loop)))
(assert (= BAV17 (<= i_loop GEN13)))
(assert (= BAV18 (and loopex (= (< GEN14 (y-theta (- i_loop GEN15))) (< GEN16 (y-theta GEN17))) (= (= GEN18 (y-theta (- i_loop GEN19))) (= GEN20 (y-theta GEN21))) (= (< (y-theta (- i_loop GEN22)) GEN23) (< (y-theta GEN24) GEN25)) (= (= (y-theta (- i_loop GEN26)) GEN27) (= (y-theta GEN28) GEN29)) (= (zot-p5 (- i_loop GEN30)) (zot-p5 GEN31)) (= (zot-p3 (- i_loop GEN32)) (zot-p3 GEN33)))))
(assert (= BAV19 (= (< GEN14 (y-theta (- i_loop GEN15))) (< GEN16 (y-theta GEN17)))))
(assert (= BAV20 (< GEN14 (y-theta (- i_loop GEN15)))))
(assert (= BAV21 (< GEN16 (y-theta GEN17))))
(assert (= BAV22 (= (= GEN18 (y-theta (- i_loop GEN19))) (= GEN20 (y-theta GEN21)))))
(assert (= BAV23 (= GEN18 (y-theta (- i_loop GEN19)))))
(assert (= BAV24 (= GEN20 (y-theta GEN21))))
(assert (= BAV25 (= (< (y-theta (- i_loop GEN22)) GEN23) (< (y-theta GEN24) GEN25))))
(assert (= BAV26 (< (y-theta (- i_loop GEN22)) GEN23)))
(assert (= BAV27 (< (y-theta GEN24) GEN25)))
(assert (= BAV28 (= (= (y-theta (- i_loop GEN26)) GEN27) (= (y-theta GEN28) GEN29))))
(assert (= BAV29 (= (y-theta (- i_loop GEN26)) GEN27)))
(assert (= BAV30 (= (y-theta GEN28) GEN29)))
(assert (= BAV31 (= (zot-p5 (- i_loop GEN30)) (zot-p5 GEN31))))
(assert (= BAV32 (= (zot-p3 (- i_loop GEN32)) (zot-p3 GEN33))))
(assert (= BAV33 (= (zot-p1 GEN34) (and (zot-p2 GEN35) (zot-p4 GEN36)))))
(assert (= BAV34 (and (zot-p2 GEN35) (zot-p4 GEN36))))
(assert (= BAV35 (= (zot-p1 GEN37) (and (zot-p2 GEN38) (zot-p4 GEN39)))))
(assert (= BAV36 (and (zot-p2 GEN38) (zot-p4 GEN39))))
(assert (= BAV37 (= (zot-p1 GEN40) (and (zot-p2 GEN41) (zot-p4 GEN42)))))
(assert (= BAV38 (and (zot-p2 GEN41) (zot-p4 GEN42))))
(assert (= BAV39 (= (zot-p1 GEN43) (and (zot-p2 GEN44) (zot-p4 GEN45)))))
(assert (= BAV40 (and (zot-p2 GEN44) (zot-p4 GEN45))))
(assert (= BAV41 (= (zot-p1 GEN46) (and (zot-p2 GEN47) (zot-p4 GEN48)))))
(assert (= BAV42 (and (zot-p2 GEN47) (zot-p4 GEN48))))
(assert (= BAV43 (= (zot-p1 GEN49) (and (zot-p2 GEN50) (zot-p4 GEN51)))))
(assert (= BAV44 (and (zot-p2 GEN50) (zot-p4 GEN51))))
(assert (= BAV45 (= (zot-p1 GEN52) (and (zot-p2 GEN53) (zot-p4 GEN54)))))
(assert (= BAV46 (and (zot-p2 GEN53) (zot-p4 GEN54))))
(assert (= BAV47 (= (zot-p1 GEN55) (and (zot-p2 GEN56) (zot-p4 GEN57)))))
(assert (= BAV48 (and (zot-p2 GEN56) (zot-p4 GEN57))))
(assert (= BAV49 (= (zot-p1 GEN58) (and (zot-p2 GEN59) (zot-p4 GEN60)))))
(assert (= BAV50 (and (zot-p2 GEN59) (zot-p4 GEN60))))
(assert (= BAV51 (= (zot-p1 GEN61) (and (zot-p2 GEN62) (zot-p4 GEN63)))))
(assert (= BAV52 (and (zot-p2 GEN62) (zot-p4 GEN63))))
(assert (= BAV53 (= (zot-p1 GEN64) (and (zot-p2 GEN65) (zot-p4 GEN66)))))
(assert (= BAV54 (and (zot-p2 GEN65) (zot-p4 GEN66))))
(assert (= BAV55 (= (zot-p4 GEN67) (and (zot-p5 GEN68) (or false (zot-p4 GEN69))))))
(assert (= BAV56 (and (zot-p5 GEN68) (or false (zot-p4 GEN69)))))
(assert (= BAV57 (or false (zot-p4 GEN69))))
(assert (= BAV58 (= (zot-p2 GEN70) (or (zot-p3 GEN71) (and true (zot-p2 GEN72))))))
(assert (= BAV59 (or (zot-p3 GEN71) (and true (zot-p2 GEN72)))))
(assert (= BAV60 (and true (zot-p2 GEN72))))
(assert (= BAV61 (= (zot-p4 GEN73) (and (zot-p5 GEN74) (or false (zot-p4 GEN75))))))
(assert (= BAV62 (and (zot-p5 GEN74) (or false (zot-p4 GEN75)))))
(assert (= BAV63 (or false (zot-p4 GEN75))))
(assert (= BAV64 (= (zot-p2 GEN76) (or (zot-p3 GEN77) (and true (zot-p2 GEN78))))))
(assert (= BAV65 (or (zot-p3 GEN77) (and true (zot-p2 GEN78)))))
(assert (= BAV66 (and true (zot-p2 GEN78))))
(assert (= BAV67 (= (zot-p4 GEN79) (and (zot-p5 GEN80) (or false (zot-p4 GEN81))))))
(assert (= BAV68 (and (zot-p5 GEN80) (or false (zot-p4 GEN81)))))
(assert (= BAV69 (or false (zot-p4 GEN81))))
(assert (= BAV70 (= (zot-p2 GEN82) (or (zot-p3 GEN83) (and true (zot-p2 GEN84))))))
(assert (= BAV71 (or (zot-p3 GEN83) (and true (zot-p2 GEN84)))))
(assert (= BAV72 (and true (zot-p2 GEN84))))
(assert (= BAV73 (= (zot-p4 GEN85) (and (zot-p5 GEN86) (or false (zot-p4 GEN87))))))
(assert (= BAV74 (and (zot-p5 GEN86) (or false (zot-p4 GEN87)))))
(assert (= BAV75 (or false (zot-p4 GEN87))))
(assert (= BAV76 (= (zot-p2 GEN88) (or (zot-p3 GEN89) (and true (zot-p2 GEN90))))))
(assert (= BAV77 (or (zot-p3 GEN89) (and true (zot-p2 GEN90)))))
(assert (= BAV78 (and true (zot-p2 GEN90))))
(assert (= BAV79 (= (zot-p4 GEN91) (and (zot-p5 GEN92) (or false (zot-p4 GEN93))))))
(assert (= BAV80 (and (zot-p5 GEN92) (or false (zot-p4 GEN93)))))
(assert (= BAV81 (or false (zot-p4 GEN93))))
(assert (= BAV82 (= (zot-p2 GEN94) (or (zot-p3 GEN95) (and true (zot-p2 GEN96))))))
(assert (= BAV83 (or (zot-p3 GEN95) (and true (zot-p2 GEN96)))))
(assert (= BAV84 (and true (zot-p2 GEN96))))
(assert (= BAV85 (= (zot-p4 GEN97) (and (zot-p5 GEN98) (or false (zot-p4 GEN99))))))
(assert (= BAV86 (and (zot-p5 GEN98) (or false (zot-p4 GEN99)))))
(assert (= BAV87 (or false (zot-p4 GEN99))))
(assert (= BAV88 (= (zot-p2 GEN100) (or (zot-p3 GEN101) (and true (zot-p2 GEN102))))))
(assert (= BAV89 (or (zot-p3 GEN101) (and true (zot-p2 GEN102)))))
(assert (= BAV90 (and true (zot-p2 GEN102))))
(assert (= BAV91 (= (zot-p4 GEN103) (and (zot-p5 GEN104) (or false (zot-p4 GEN105))))))
(assert (= BAV92 (and (zot-p5 GEN104) (or false (zot-p4 GEN105)))))
(assert (= BAV93 (or false (zot-p4 GEN105))))
(assert (= BAV94 (= (zot-p2 GEN106) (or (zot-p3 GEN107) (and true (zot-p2 GEN108))))))
(assert (= BAV95 (or (zot-p3 GEN107) (and true (zot-p2 GEN108)))))
(assert (= BAV96 (and true (zot-p2 GEN108))))
(assert (= BAV97 (= (zot-p4 GEN109) (and (zot-p5 GEN110) (or false (zot-p4 GEN111))))))
(assert (= BAV98 (and (zot-p5 GEN110) (or false (zot-p4 GEN111)))))
(assert (= BAV99 (or false (zot-p4 GEN111))))
(assert (= BAV100 (= (zot-p2 GEN112) (or (zot-p3 GEN113) (and true (zot-p2 GEN114))))))
(assert (= BAV101 (or (zot-p3 GEN113) (and true (zot-p2 GEN114)))))
(assert (= BAV102 (and true (zot-p2 GEN114))))
(assert (= BAV103 (= (zot-p4 GEN115) (and (zot-p5 GEN116) (or false (zot-p4 GEN117))))))
(assert (= BAV104 (and (zot-p5 GEN116) (or false (zot-p4 GEN117)))))
(assert (= BAV105 (or false (zot-p4 GEN117))))
(assert (= BAV106 (= (zot-p2 GEN118) (or (zot-p3 GEN119) (and true (zot-p2 GEN120))))))
(assert (= BAV107 (or (zot-p3 GEN119) (and true (zot-p2 GEN120)))))
(assert (= BAV108 (and true (zot-p2 GEN120))))
(assert (= BAV109 (= (zot-p4 GEN121) (and (zot-p5 GEN122) (or false (zot-p4 GEN123))))))
(assert (= BAV110 (and (zot-p5 GEN122) (or false (zot-p4 GEN123)))))
(assert (= BAV111 (or false (zot-p4 GEN123))))
(assert (= BAV112 (= (zot-p2 GEN124) (or (zot-p3 GEN125) (and true (zot-p2 GEN126))))))
(assert (= BAV113 (or (zot-p3 GEN125) (and true (zot-p2 GEN126)))))
(assert (= BAV114 (and true (zot-p2 GEN126))))
(assert (= BAV115 (= (zot-p4 GEN127) (and (zot-p5 GEN128) (or false (zot-p4 GEN129))))))
(assert (= BAV116 (and (zot-p5 GEN128) (or false (zot-p4 GEN129)))))
(assert (= BAV117 (or false (zot-p4 GEN129))))
(assert (= BAV118 (= (zot-p2 GEN130) (or (zot-p3 GEN131) (and true (zot-p2 GEN132))))))
(assert (= BAV119 (or (zot-p3 GEN131) (and true (zot-p2 GEN132)))))
(assert (= BAV120 (and true (zot-p2 GEN132))))
(assert (= BAV121 (or (not (not loopex)) (and (not (zot-p5 GEN133)) (not (zot-p3 GEN134)) (not (zot-p1 GEN135)) (not (zot-p4 GEN136)) (not (zot-p2 GEN137))))))
(assert (= BAV122 (and (not (zot-p5 GEN133)) (not (zot-p3 GEN134)) (not (zot-p1 GEN135)) (not (zot-p4 GEN136)) (not (zot-p2 GEN137)))))
(assert (= BAV123 (or (not loopex) (and (= (zot-p5 i_loop) (zot-p5 GEN138)) (= (zot-p3 i_loop) (zot-p3 GEN139)) (= (zot-p1 i_loop) (zot-p1 GEN140)) (= (zot-p4 i_loop) (zot-p4 GEN141)) (= (zot-p2 i_loop) (zot-p2 GEN142))))))
(assert (= BAV124 (and (= (zot-p5 i_loop) (zot-p5 GEN138)) (= (zot-p3 i_loop) (zot-p3 GEN139)) (= (zot-p1 i_loop) (zot-p1 GEN140)) (= (zot-p4 i_loop) (zot-p4 GEN141)) (= (zot-p2 i_loop) (zot-p2 GEN142)))))
(assert (= BAV125 (= (zot-p5 i_loop) (zot-p5 GEN138))))
(assert (= BAV126 (= (zot-p3 i_loop) (zot-p3 GEN139))))
(assert (= BAV127 (= (zot-p1 i_loop) (zot-p1 GEN140))))
(assert (= BAV128 (= (zot-p4 i_loop) (zot-p4 GEN141))))
(assert (= BAV129 (= (zot-p2 i_loop) (zot-p2 GEN142))))
(assert (= BAV130 (or (not loopex) (and (or (not (not (zot-p4 GEN143))) (and (<= i_loop zot-i-eve_zot-p4) (<= zot-i-eve_zot-p4 GEN144) (not (zot-p4 zot-i-eve_zot-p4)))) (or (not (zot-p2 GEN145)) (and (<= i_loop zot-i-eve_zot-p2) (<= zot-i-eve_zot-p2 GEN146) (zot-p3 zot-i-eve_zot-p2)))))))
(assert (= BAV131 (and (or (not (not (zot-p4 GEN143))) (and (<= i_loop zot-i-eve_zot-p4) (<= zot-i-eve_zot-p4 GEN144) (not (zot-p4 zot-i-eve_zot-p4)))) (or (not (zot-p2 GEN145)) (and (<= i_loop zot-i-eve_zot-p2) (<= zot-i-eve_zot-p2 GEN146) (zot-p3 zot-i-eve_zot-p2))))))
(assert (= BAV132 (or (not (not (zot-p4 GEN143))) (and (<= i_loop zot-i-eve_zot-p4) (<= zot-i-eve_zot-p4 GEN144) (not (zot-p4 zot-i-eve_zot-p4))))))
(assert (= BAV133 (and (<= i_loop zot-i-eve_zot-p4) (<= zot-i-eve_zot-p4 GEN144) (not (zot-p4 zot-i-eve_zot-p4)))))
(assert (= BAV134 (<= i_loop zot-i-eve_zot-p4)))
(assert (= BAV135 (<= zot-i-eve_zot-p4 GEN144)))
(assert (= BAV136 (or (not (zot-p2 GEN145)) (and (<= i_loop zot-i-eve_zot-p2) (<= zot-i-eve_zot-p2 GEN146) (zot-p3 zot-i-eve_zot-p2)))))
(assert (= BAV137 (and (<= i_loop zot-i-eve_zot-p2) (<= zot-i-eve_zot-p2 GEN146) (zot-p3 zot-i-eve_zot-p2))))
(assert (= BAV138 (<= i_loop zot-i-eve_zot-p2)))
(assert (= BAV139 (<= zot-i-eve_zot-p2 GEN146)))
(assert (= BAV140 (= (zot-p5 GEN147) (> (y-theta GEN148) GEN149))))
(assert (= BAV141 (> (y-theta GEN148) GEN149)))
(assert (= BAV142 (= (zot-p3 GEN150) (= (y-theta GEN151) GEN152))))
(assert (= BAV143 (= (y-theta GEN151) GEN152)))
(assert (= BAV144 (= (zot-p5 GEN153) (> (y-theta GEN154) GEN155))))
(assert (= BAV145 (> (y-theta GEN154) GEN155)))
(assert (= BAV146 (= (zot-p3 GEN156) (= (y-theta GEN157) GEN158))))
(assert (= BAV147 (= (y-theta GEN157) GEN158)))
(assert (= BAV148 (= (zot-p5 GEN159) (> (y-theta GEN160) GEN161))))
(assert (= BAV149 (> (y-theta GEN160) GEN161)))
(assert (= BAV150 (= (zot-p3 GEN162) (= (y-theta GEN163) GEN164))))
(assert (= BAV151 (= (y-theta GEN163) GEN164)))
(assert (= BAV152 (= (zot-p5 GEN165) (> (y-theta GEN166) GEN167))))
(assert (= BAV153 (> (y-theta GEN166) GEN167)))
(assert (= BAV154 (= (zot-p3 GEN168) (= (y-theta GEN169) GEN170))))
(assert (= BAV155 (= (y-theta GEN169) GEN170)))
(assert (= BAV156 (= (zot-p5 GEN171) (> (y-theta GEN172) GEN173))))
(assert (= BAV157 (> (y-theta GEN172) GEN173)))
(assert (= BAV158 (= (zot-p3 GEN174) (= (y-theta GEN175) GEN176))))
(assert (= BAV159 (= (y-theta GEN175) GEN176)))
(assert (= BAV160 (= (zot-p5 GEN177) (> (y-theta GEN178) GEN179))))
(assert (= BAV161 (> (y-theta GEN178) GEN179)))
(assert (= BAV162 (= (zot-p3 GEN180) (= (y-theta GEN181) GEN182))))
(assert (= BAV163 (= (y-theta GEN181) GEN182)))
(assert (= BAV164 (= (zot-p5 GEN183) (> (y-theta GEN184) GEN185))))
(assert (= BAV165 (> (y-theta GEN184) GEN185)))
(assert (= BAV166 (= (zot-p3 GEN186) (= (y-theta GEN187) GEN188))))
(assert (= BAV167 (= (y-theta GEN187) GEN188)))
(assert (= BAV168 (= (zot-p5 GEN189) (> (y-theta GEN190) GEN191))))
(assert (= BAV169 (> (y-theta GEN190) GEN191)))
(assert (= BAV170 (= (zot-p3 GEN192) (= (y-theta GEN193) GEN194))))
(assert (= BAV171 (= (y-theta GEN193) GEN194)))
(assert (= BAV172 (= (zot-p5 GEN195) (> (y-theta GEN196) GEN197))))
(assert (= BAV173 (> (y-theta GEN196) GEN197)))
(assert (= BAV174 (= (zot-p3 GEN198) (= (y-theta GEN199) GEN200))))
(assert (= BAV175 (= (y-theta GEN199) GEN200)))
(assert (= BAV176 (= (zot-p5 GEN201) (> (y-theta GEN202) GEN203))))
(assert (= BAV177 (> (y-theta GEN202) GEN203)))
(assert (= BAV178 (= (zot-p3 GEN204) (= (y-theta GEN205) GEN206))))
(assert (= BAV179 (= (y-theta GEN205) GEN206)))
(assert (= BAV180 (= (zot-p5 GEN207) (> (y-theta GEN208) GEN209))))
(assert (= BAV181 (> (y-theta GEN208) GEN209)))
(assert (= BAV182 (= (zot-p3 GEN210) (= (y-theta GEN211) GEN212))))
(assert (= BAV183 (= (y-theta GEN211) GEN212)))
(check-sat)
(get-model)
(eval (and (zot-p1 1.0)
              (or (not loopex)
                  (or (= i_loop 1.0) (= i_loop 2.0) (= i_loop 3.0)
                      (= i_loop 4.0) (= i_loop 5.0) (= i_loop 6.0)
                      (= i_loop 7.0) (= i_loop 8.0) (= i_loop 9.0)
                      (= i_loop 10.0)))
              (= (and (<= 1.0 i_loop) (<= i_loop 10.0))
                 (and loopex
                      (= (< 0.0 (y-theta (- i_loop 1.0)))
                         (< 0.0 (y-theta 10.0)))
                      (= (= 0.0 (y-theta (- i_loop 1.0)))
                         (= 0.0 (y-theta 10.0)))
                      (= (< (y-theta (- i_loop 1.0)) 0.0)
                         (< (y-theta 10.0) 0.0))
                      (= (= (y-theta (- i_loop 1.0)) 0.0)
                         (= (y-theta 10.0) 0.0))
                      (= (zot-p5 (- i_loop 1.0)) (zot-p5 10.0))
                      (= (zot-p3 (- i_loop 1.0)) (zot-p3 10.0))))
              (= (zot-p1 0.0) (and (zot-p2 0.0) (zot-p4 0.0)))
              (= (zot-p1 1.0) (and (zot-p2 1.0) (zot-p4 1.0)))
              (= (zot-p1 2.0) (and (zot-p2 2.0) (zot-p4 2.0)))
              (= (zot-p1 3.0) (and (zot-p2 3.0) (zot-p4 3.0)))
              (= (zot-p1 4.0) (and (zot-p2 4.0) (zot-p4 4.0)))
              (= (zot-p1 5.0) (and (zot-p2 5.0) (zot-p4 5.0)))
              (= (zot-p1 6.0) (and (zot-p2 6.0) (zot-p4 6.0)))
              (= (zot-p1 7.0) (and (zot-p2 7.0) (zot-p4 7.0)))
              (= (zot-p1 8.0) (and (zot-p2 8.0) (zot-p4 8.0)))
              (= (zot-p1 9.0) (and (zot-p2 9.0) (zot-p4 9.0)))
              (= (zot-p1 10.0) (and (zot-p2 10.0) (zot-p4 10.0)))
              (= (zot-p4 0.0) (and (zot-p5 0.0) (or false (zot-p4 1.0))))
              (= (zot-p2 0.0) (or (zot-p3 0.0) (and true (zot-p2 1.0))))
              (= (zot-p4 1.0) (and (zot-p5 1.0) (or false (zot-p4 2.0))))
              (= (zot-p2 1.0) (or (zot-p3 1.0) (and true (zot-p2 2.0))))
              (= (zot-p4 2.0) (and (zot-p5 2.0) (or false (zot-p4 3.0))))
              (= (zot-p2 2.0) (or (zot-p3 2.0) (and true (zot-p2 3.0))))
              (= (zot-p4 3.0) (and (zot-p5 3.0) (or false (zot-p4 4.0))))
              (= (zot-p2 3.0) (or (zot-p3 3.0) (and true (zot-p2 4.0))))
              (= (zot-p4 4.0) (and (zot-p5 4.0) (or false (zot-p4 5.0))))
              (= (zot-p2 4.0) (or (zot-p3 4.0) (and true (zot-p2 5.0))))
              (= (zot-p4 5.0) (and (zot-p5 5.0) (or false (zot-p4 6.0))))
              (= (zot-p2 5.0) (or (zot-p3 5.0) (and true (zot-p2 6.0))))
              (= (zot-p4 6.0) (and (zot-p5 6.0) (or false (zot-p4 7.0))))
              (= (zot-p2 6.0) (or (zot-p3 6.0) (and true (zot-p2 7.0))))
              (= (zot-p4 7.0) (and (zot-p5 7.0) (or false (zot-p4 8.0))))
              (= (zot-p2 7.0) (or (zot-p3 7.0) (and true (zot-p2 8.0))))
              (= (zot-p4 8.0) (and (zot-p5 8.0) (or false (zot-p4 9.0))))
              (= (zot-p2 8.0) (or (zot-p3 8.0) (and true (zot-p2 9.0))))
              (= (zot-p4 9.0) (and (zot-p5 9.0) (or false (zot-p4 10.0))))
              (= (zot-p2 9.0) (or (zot-p3 9.0) (and true (zot-p2 10.0))))
              (= (zot-p4 10.0) (and (zot-p5 10.0) (or false (zot-p4 11.0))))
              (= (zot-p2 10.0) (or (zot-p3 10.0) (and true (zot-p2 11.0))))
              (or (not (not loopex))
                  (and (not (zot-p5 11.0)) (not (zot-p3 11.0))
                       (not (zot-p1 11.0)) (not (zot-p4 11.0))
                       (not (zot-p2 11.0))))
              (or (not loopex)
                  (and (= (zot-p5 i_loop) (zot-p5 11.0))
                       (= (zot-p3 i_loop) (zot-p3 11.0))
                       (= (zot-p1 i_loop) (zot-p1 11.0))
                       (= (zot-p4 i_loop) (zot-p4 11.0))
                       (= (zot-p2 i_loop) (zot-p2 11.0))))
              (or (not loopex)
                  (and
                   (or (not (not (zot-p4 10.0)))
                       (and (<= i_loop zot-i-eve_zot-p4)
                            (<= zot-i-eve_zot-p4 10.0)
                            (not (zot-p4 zot-i-eve_zot-p4))))
                   (or (not (zot-p2 10.0))
                       (and (<= i_loop zot-i-eve_zot-p2)
                            (<= zot-i-eve_zot-p2 10.0)
                            (zot-p3 zot-i-eve_zot-p2)))))
              (= (zot-p5 0.0) (> (y-theta 0.0) 0.0))
              (= (zot-p3 0.0) (= (y-theta 0.0) 0.0))
              (= (zot-p5 1.0) (> (y-theta 1.0) 0.0))
              (= (zot-p3 1.0) (= (y-theta 1.0) 0.0))
              (= (zot-p5 2.0) (> (y-theta 2.0) 0.0))
              (= (zot-p3 2.0) (= (y-theta 2.0) 0.0))
              (= (zot-p5 3.0) (> (y-theta 3.0) 0.0))
              (= (zot-p3 3.0) (= (y-theta 3.0) 0.0))
              (= (zot-p5 4.0) (> (y-theta 4.0) 0.0))
              (= (zot-p3 4.0) (= (y-theta 4.0) 0.0))
              (= (zot-p5 5.0) (> (y-theta 5.0) 0.0))
              (= (zot-p3 5.0) (= (y-theta 5.0) 0.0))
              (= (zot-p5 6.0) (> (y-theta 6.0) 0.0))
              (= (zot-p3 6.0) (= (y-theta 6.0) 0.0))
              (= (zot-p5 7.0) (> (y-theta 7.0) 0.0))
              (= (zot-p3 7.0) (= (y-theta 7.0) 0.0))
              (= (zot-p5 8.0) (> (y-theta 8.0) 0.0))
              (= (zot-p3 8.0) (= (y-theta 8.0) 0.0))
              (= (zot-p5 9.0) (> (y-theta 9.0) 0.0))
              (= (zot-p3 9.0) (= (y-theta 9.0) 0.0))
              (= (zot-p5 10.0) (> (y-theta 10.0) 0.0))
              (= (zot-p3 10.0) (= (y-theta 10.0) 0.0)) true))