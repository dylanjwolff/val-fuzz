(set-info :smt-lib-version 2.6)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const BAV184 Bool)
(declare-const BAV185 Bool)
(declare-const BAV186 Bool)
(declare-const BAV187 Bool)
(declare-const BAV188 Bool)
(declare-const BAV189 Bool)
(declare-const BAV190 Bool)
(declare-const BAV191 Bool)
(declare-const BAV192 Bool)
(declare-const BAV193 Bool)
(declare-const BAV194 Bool)
(declare-const BAV195 Bool)
(declare-const BAV196 Bool)
(declare-const BAV197 Bool)
(declare-const BAV198 Bool)
(declare-const BAV199 Bool)
(declare-const BAV200 Bool)
(declare-const BAV201 Bool)
(declare-const BAV202 Bool)
(declare-const BAV203 Bool)
(declare-const BAV204 Bool)
(declare-const BAV205 Bool)
(declare-const BAV206 Bool)
(declare-const BAV207 Bool)
(declare-const BAV208 Bool)
(declare-const BAV209 Bool)
(declare-const BAV210 Bool)
(declare-const BAV211 Bool)
(declare-const BAV212 Bool)
(declare-const BAV213 Bool)
(declare-const BAV214 Bool)
(declare-const BAV215 Bool)
(declare-const BAV216 Bool)
(declare-const BAV217 Bool)
(declare-const BAV218 Bool)
(declare-const BAV219 Bool)
(declare-const BAV220 Bool)
(declare-const BAV221 Bool)
(declare-const BAV222 Bool)
(declare-const BAV223 Bool)
(declare-const BAV224 Bool)
(declare-const BAV225 Bool)
(declare-const BAV226 Bool)
(declare-const BAV227 Bool)
(declare-const BAV228 Bool)
(declare-const BAV229 Bool)
(declare-const BAV230 Bool)
(declare-const BAV231 Bool)
(declare-const BAV232 Bool)
(declare-const BAV233 Bool)
(declare-const BAV234 Bool)
(declare-const BAV235 Bool)
(declare-const BAV236 Bool)
(declare-const BAV237 Bool)
(declare-const BAV238 Bool)
(declare-const BAV239 Bool)
(declare-const BAV240 Bool)
(declare-const BAV241 Bool)
(declare-const BAV242 Bool)
(declare-const BAV243 Bool)
(declare-const BAV244 Bool)
(declare-const BAV245 Bool)
(declare-const BAV246 Bool)
(declare-const BAV247 Bool)
(declare-const BAV248 Bool)
(declare-const BAV249 Bool)
(declare-const BAV250 Bool)
(declare-const BAV251 Bool)
(declare-const BAV252 Bool)
(declare-const BAV253 Bool)
(declare-const BAV254 Bool)
(declare-const BAV255 Bool)
(declare-const BAV256 Bool)
(declare-const BAV257 Bool)
(declare-const BAV258 Bool)
(declare-const BAV259 Bool)
(declare-const BAV260 Bool)
(declare-const BAV261 Bool)
(declare-const BAV262 Bool)
(declare-const BAV263 Bool)
(declare-const BAV264 Bool)
(declare-const BAV265 Bool)
(declare-const BAV266 Bool)
(declare-const BAV267 Bool)
(declare-const BAV268 Bool)
(declare-const BAV269 Bool)
(declare-const BAV270 Bool)
(declare-const BAV271 Bool)
(declare-const BAV272 Bool)
(declare-const BAV273 Bool)
(declare-const BAV274 Bool)
(declare-const BAV275 Bool)
(declare-const BAV276 Bool)
(declare-const BAV277 Bool)
(declare-const BAV278 Bool)
(declare-const BAV279 Bool)
(declare-const BAV280 Bool)
(declare-const BAV281 Bool)
(declare-const BAV282 Bool)
(declare-const BAV283 Bool)
(declare-const BAV284 Bool)
(declare-const BAV285 Bool)
(declare-const BAV286 Bool)
(declare-const BAV287 Bool)
(declare-const BAV288 Bool)
(declare-const BAV289 Bool)
(declare-const BAV290 Bool)
(declare-const BAV291 Bool)
(declare-const BAV292 Bool)
(declare-const BAV293 Bool)
(declare-const BAV294 Bool)
(declare-const BAV295 Bool)
(declare-const BAV296 Bool)
(declare-const BAV297 Bool)
(declare-const BAV298 Bool)
(declare-const BAV299 Bool)
(declare-const BAV300 Bool)
(declare-const BAV301 Bool)
(declare-const BAV302 Bool)
(declare-const BAV303 Bool)
(declare-const BAV304 Bool)
(declare-const BAV305 Bool)
(declare-const BAV306 Bool)
(declare-const BAV307 Bool)
(declare-const BAV308 Bool)
(declare-const BAV309 Bool)
(declare-const BAV310 Bool)
(declare-const BAV311 Bool)
(declare-const BAV312 Bool)
(declare-const BAV313 Bool)
(declare-const BAV314 Bool)
(declare-const BAV315 Bool)
(declare-const BAV316 Bool)
(declare-const BAV317 Bool)
(declare-const BAV318 Bool)
(declare-const BAV319 Bool)
(declare-const BAV320 Bool)
(declare-const BAV321 Bool)
(declare-const BAV322 Bool)
(declare-const BAV323 Bool)
(declare-const BAV324 Bool)
(declare-const BAV325 Bool)
(declare-const BAV326 Bool)
(declare-const BAV327 Bool)
(declare-const BAV328 Bool)
(declare-const BAV329 Bool)
(declare-const BAV330 Bool)
(declare-const BAV331 Bool)
(declare-const BAV332 Bool)
(declare-const BAV333 Bool)
(declare-const BAV334 Bool)
(declare-const BAV335 Bool)
(declare-const BAV336 Bool)
(declare-const BAV337 Bool)
(declare-const BAV338 Bool)
(declare-const BAV339 Bool)
(declare-const BAV340 Bool)
(declare-const BAV341 Bool)
(declare-const BAV342 Bool)
(declare-const BAV343 Bool)
(declare-const BAV344 Bool)
(declare-const BAV345 Bool)
(declare-const BAV346 Bool)
(declare-const BAV347 Bool)
(declare-const BAV348 Bool)
(declare-const BAV349 Bool)
(declare-const BAV350 Bool)
(declare-const BAV351 Bool)
(declare-const BAV352 Bool)
(declare-const BAV353 Bool)
(declare-const BAV354 Bool)
(declare-const BAV355 Bool)
(declare-const BAV356 Bool)
(declare-const BAV357 Bool)
(declare-const BAV358 Bool)
(declare-const BAV359 Bool)
(declare-const BAV360 Bool)
(declare-const BAV361 Bool)
(declare-const BAV362 Bool)
(declare-const BAV363 Bool)
(declare-const BAV364 Bool)
(declare-const BAV365 Bool)
(declare-const BAV366 Bool)
(declare-const BAV367 Bool)
(declare-const BAV368 Bool)
(declare-const BAV369 Bool)
(declare-const BAV370 Bool)
(declare-const BAV371 Bool)
(declare-const BAV372 Bool)
(declare-const BAV373 Bool)
(declare-const BAV374 Bool)
(declare-const BAV375 Bool)
(declare-const BAV376 Bool)
(declare-const BAV377 Bool)
(declare-const BAV378 Bool)
(declare-const BAV379 Bool)
(declare-const BAV380 Bool)
(declare-const BAV381 Bool)
(declare-const BAV382 Bool)
(declare-const BAV383 Bool)
(declare-const BAV384 Bool)
(declare-const BAV385 Bool)
(declare-const BAV386 Bool)
(declare-const BAV387 Bool)
(declare-const BAV388 Bool)
(declare-const BAV389 Bool)
(declare-const BAV390 Bool)
(declare-const BAV391 Bool)
(declare-const BAV392 Bool)
(declare-const BAV393 Bool)
(declare-const BAV394 Bool)
(declare-const BAV395 Bool)
(declare-const BAV396 Bool)
(declare-const BAV397 Bool)
(declare-const BAV398 Bool)
(declare-const BAV399 Bool)
(declare-const BAV400 Bool)
(declare-const BAV401 Bool)
(declare-const BAV402 Bool)
(declare-const BAV403 Bool)
(declare-const BAV404 Bool)
(declare-const BAV405 Bool)
(declare-const BAV406 Bool)
(declare-const BAV407 Bool)
(declare-const BAV408 Bool)
(declare-const BAV409 Bool)
(declare-const BAV410 Bool)
(declare-const BAV411 Bool)
(declare-const BAV412 Bool)
(declare-const BAV413 Bool)
(declare-const BAV414 Bool)
(declare-const BAV415 Bool)
(declare-const BAV416 Bool)
(declare-const BAV417 Bool)
(declare-const BAV418 Bool)
(declare-const BAV419 Bool)
(declare-const BAV420 Bool)
(declare-const BAV421 Bool)
(declare-const BAV422 Bool)
(declare-const BAV423 Bool)
(declare-const BAV424 Bool)
(declare-const BAV425 Bool)
(declare-const BAV426 Bool)
(declare-const BAV427 Bool)
(declare-const BAV428 Bool)
(declare-const BAV429 Bool)
(declare-const BAV430 Bool)
(declare-const BAV431 Bool)
(declare-const BAV432 Bool)
(declare-const BAV433 Bool)
(declare-const BAV434 Bool)
(declare-const BAV435 Bool)
(declare-const BAV436 Bool)
(declare-const BAV437 Bool)
(declare-const BAV438 Bool)
(declare-const BAV439 Bool)
(declare-const BAV440 Bool)
(declare-const BAV441 Bool)
(declare-const BAV442 Bool)
(declare-const BAV443 Bool)
(declare-const BAV444 Bool)
(declare-const BAV445 Bool)
(declare-const BAV446 Bool)
(declare-const BAV447 Bool)
(declare-const BAV448 Bool)
(declare-const BAV449 Bool)
(declare-const BAV450 Bool)
(declare-const BAV451 Bool)
(declare-const BAV452 Bool)
(declare-const BAV453 Bool)
(declare-const BAV454 Bool)
(declare-const BAV455 Bool)
(declare-const BAV456 Bool)
(declare-const BAV457 Bool)
(declare-const BAV458 Bool)
(declare-const BAV459 Bool)
(declare-const BAV460 Bool)
(declare-const BAV461 Bool)
(declare-const BAV462 Bool)
(declare-const BAV463 Bool)
(declare-const BAV464 Bool)
(declare-const BAV465 Bool)
(declare-const BAV466 Bool)
(declare-const BAV467 Bool)
(declare-const BAV468 Bool)
(declare-const BAV469 Bool)
(declare-const BAV470 Bool)
(declare-const BAV471 Bool)
(declare-const BAV472 Bool)
(declare-const BAV473 Bool)
(declare-const BAV474 Bool)
(declare-const BAV475 Bool)
(declare-const BAV476 Bool)
(declare-const BAV477 Bool)
(declare-const BAV478 Bool)
(declare-const BAV479 Bool)
(declare-const BAV480 Bool)
(declare-const BAV481 Bool)
(declare-const BAV482 Bool)
(declare-const BAV483 Bool)
(declare-const BAV484 Bool)
(declare-const BAV485 Bool)
(declare-const BAV486 Bool)
(declare-const BAV487 Bool)
(declare-const BAV488 Bool)
(declare-const BAV489 Bool)
(declare-const BAV490 Bool)
(declare-const BAV491 Bool)
(declare-const BAV492 Bool)
(declare-const BAV493 Bool)
(declare-const BAV494 Bool)
(declare-const BAV495 Bool)
(declare-const BAV496 Bool)
(declare-const BAV497 Bool)
(declare-const BAV498 Bool)
(declare-const BAV499 Bool)
(declare-const BAV500 Bool)
(declare-const BAV501 Bool)
(declare-const BAV502 Bool)
(declare-const BAV503 Bool)
(declare-const BAV504 Bool)
(declare-const BAV505 Bool)
(declare-const BAV506 Bool)
(declare-const BAV507 Bool)
(declare-const BAV508 Bool)
(declare-const BAV509 Bool)
(declare-const BAV510 Bool)
(declare-const BAV511 Bool)
(declare-const BAV512 Bool)
(declare-const BAV513 Bool)
(declare-const BAV514 Bool)
(declare-const BAV515 Bool)
(declare-const BAV516 Bool)
(declare-const BAV517 Bool)
(declare-const BAV518 Bool)
(declare-const BAV519 Bool)
(declare-const BAV520 Bool)
(declare-const BAV521 Bool)
(declare-const BAV522 Bool)
(declare-const BAV523 Bool)
(declare-const BAV524 Bool)
(declare-const BAV525 Bool)
(declare-const BAV526 Bool)
(declare-const BAV527 Bool)
(declare-const BAV528 Bool)
(declare-const BAV529 Bool)
(declare-const BAV530 Bool)
(declare-const BAV531 Bool)
(declare-const BAV532 Bool)
(declare-const BAV533 Bool)
(declare-const BAV534 Bool)
(declare-const BAV535 Bool)
(declare-const BAV536 Bool)
(declare-const BAV537 Bool)
(declare-const BAV538 Bool)
(declare-const BAV539 Bool)
(declare-const BAV540 Bool)
(declare-const BAV541 Bool)
(declare-const BAV542 Bool)
(declare-const BAV543 Bool)
(declare-const BAV544 Bool)
(declare-const BAV545 Bool)
(declare-const BAV546 Bool)
(declare-const BAV547 Bool)
(declare-const BAV548 Bool)
(declare-const BAV549 Bool)
(declare-const BAV550 Bool)
(declare-const BAV551 Bool)
(declare-const BAV552 Bool)
(declare-const BAV553 Bool)
(declare-const BAV554 Bool)
(declare-const BAV555 Bool)
(declare-const BAV556 Bool)
(declare-const BAV557 Bool)
(declare-const BAV558 Bool)
(declare-const BAV559 Bool)
(declare-const BAV560 Bool)
(declare-const BAV561 Bool)
(declare-const BAV562 Bool)
(declare-const BAV563 Bool)
(declare-const BAV564 Bool)
(declare-const BAV565 Bool)
(declare-const BAV566 Bool)
(declare-const BAV567 Bool)
(declare-const BAV568 Bool)
(declare-const BAV569 Bool)
(declare-const BAV570 Bool)
(declare-const BAV571 Bool)
(declare-const BAV572 Bool)
(declare-const BAV573 Bool)
(declare-const BAV574 Bool)
(declare-const BAV575 Bool)
(declare-const BAV576 Bool)
(declare-const BAV577 Bool)
(declare-const BAV578 Bool)
(declare-const BAV579 Bool)
(declare-const BAV580 Bool)
(declare-const BAV581 Bool)
(declare-const BAV582 Bool)
(declare-const BAV583 Bool)
(declare-const BAV584 Bool)
(declare-const BAV585 Bool)
(declare-const BAV586 Bool)
(declare-const BAV587 Bool)
(declare-const BAV588 Bool)
(declare-const BAV589 Bool)
(declare-const BAV590 Bool)
(declare-const BAV591 Bool)
(declare-const BAV592 Bool)
(declare-const BAV593 Bool)
(declare-const BAV594 Bool)
(declare-const BAV595 Bool)
(declare-const BAV596 Bool)
(declare-const BAV597 Bool)
(declare-const BAV598 Bool)
(declare-const BAV599 Bool)
(declare-const BAV600 Bool)
(declare-const BAV601 Bool)
(declare-const BAV602 Bool)
(declare-const BAV603 Bool)
(declare-const BAV604 Bool)
(declare-const BAV605 Bool)
(declare-const BAV606 Bool)
(declare-const BAV607 Bool)
(declare-const BAV608 Bool)
(declare-const BAV609 Bool)
(declare-const BAV610 Bool)
(declare-const BAV611 Bool)
(declare-const BAV612 Bool)
(declare-const BAV613 Bool)
(declare-const BAV614 Bool)
(declare-const BAV615 Bool)
(declare-const BAV616 Bool)
(declare-const BAV617 Bool)
(declare-const BAV618 Bool)
(declare-const BAV619 Bool)
(declare-const BAV620 Bool)
(declare-const BAV621 Bool)
(declare-const BAV622 Bool)
(declare-const BAV623 Bool)
(declare-const BAV624 Bool)
(declare-const BAV625 Bool)
(declare-const BAV626 Bool)
(declare-const BAV627 Bool)
(declare-const BAV628 Bool)
(declare-const BAV629 Bool)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-info :source | Simplify Theorem Prover Benchmark Suite |)
(set-info :category "industrial")
(declare-fun true_term () Int)
(declare-fun false_term () Int)
(assert (= true_term GEN1))
(assert (= false_term GEN2))
(declare-fun S_select (Int Int) Int)
(declare-fun S_store (Int Int Int) Int)
(assert (forall ((?m Int)(?i Int)(?x Int)) (= (S_select (S_store ?m ?i ?x) ?i) ?x)))
(assert (forall ((?m Int)(?i Int)(?j Int)(?x Int)) (=> (not (= ?i ?j)) (= (S_select (S_store ?m ?i ?x) ?j) (S_select ?m ?j)))))
(declare-fun PO_LT (Int Int) Int)
(assert (forall ((?t Int)) (= (PO_LT ?t ?t) true_term)))
(declare-fun T_java_lang_Object () Int)
(assert (= (PO_LT T_java_lang_Object T_java_lang_Object) true_term))
(assert (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (=> (and (= (PO_LT ?t0 ?t1) true_term) (= (PO_LT ?t1 ?t2) true_term)) (= (PO_LT ?t0 ?t2) true_term))))
(assert (forall ((?t0 Int)(?t1 Int)) (=> (and (= (PO_LT ?t0 ?t1) true_term) (= (PO_LT ?t1 ?t0) true_term)) (= ?t0 ?t1))))
(declare-fun T_boolean () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_boolean) true_term) (= ?t T_boolean))))
(declare-fun T_char () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_char) true_term) (= ?t T_char))))
(declare-fun T_byte () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_byte) true_term) (= ?t T_byte))))
(declare-fun T_short () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_short) true_term) (= ?t T_short))))
(declare-fun T_int () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_int) true_term) (= ?t T_int))))
(declare-fun T_long () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_long) true_term) (= ?t T_long))))
(declare-fun T_float () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_float) true_term) (= ?t T_float))))
(declare-fun T_double () Int)
(assert (forall ((?t Int)) (=> (= (PO_LT ?t T_double) true_term) (= ?t T_double))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_boolean ?t) true_term) (= ?t T_boolean))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_char ?t) true_term) (= ?t T_char))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_byte ?t) true_term) (= ?t T_byte))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_short ?t) true_term) (= ?t T_short))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_int ?t) true_term) (= ?t T_int))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_long ?t) true_term) (= ?t T_long))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_float ?t) true_term) (= ?t T_float))))
(assert (forall ((?t Int)) (=> (= (PO_LT T_double ?t) true_term) (= ?t T_double))))
(declare-fun asChild (Int Int) Int)
(declare-fun classDown (Int Int) Int)
(assert (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (=> (= (PO_LT ?t0 (asChild ?t1 ?t2)) true_term) (= (classDown ?t2 ?t0) (asChild ?t1 ?t2)))))
(declare-fun T_java_lang_Cloneable () Int)
(assert (= (PO_LT T_java_lang_Cloneable T_java_lang_Object) true_term))
(declare-fun array (Int) Int)
(assert (forall ((?t Int)) (= (PO_LT (array ?t) T_java_lang_Cloneable) true_term)))
(declare-fun elemtype (Int) Int)
(assert (forall ((?t Int)) (= (elemtype (array ?t)) ?t)))
(assert (forall ((?t0 Int)(?t1 Int)) (= (= (PO_LT ?t0 (array ?t1)) true_term) (and (= ?t0 (array (elemtype ?t0))) (= (PO_LT (elemtype ?t0) ?t1) true_term)))))
(declare-fun is (Int Int) Int)
(declare-fun cast (Int Int) Int)
(assert (forall ((?x Int)(?t Int)) (= (is (cast ?x ?t) ?t) true_term)))
(assert (forall ((?x Int)(?t Int)) (=> (= (is ?x ?t) true_term) (= (cast ?x ?t) ?x))))
(assert true)
(assert (forall ((?x Int)) (= (= (is ?x T_char) true_term) (and (<= GEN3 ?x) (<= ?x GEN4)))))
(assert (forall ((?x Int)) (= (= (is ?x T_byte) true_term) (and (<= (- GEN5) ?x) (<= ?x GEN6)))))
(assert (forall ((?x Int)) (= (= (is ?x T_short) true_term) (and (<= (- GEN7) ?x) (<= ?x GEN8)))))
(declare-fun intFirst () Int)
(declare-fun intLast () Int)
(assert (forall ((?x Int)) (= (= (is ?x T_int) true_term) (and (<= intFirst ?x) (<= ?x intLast)))))
(declare-fun longFirst () Int)
(declare-fun longLast () Int)
(assert (forall ((?x Int)) (= (= (is ?x T_long) true_term) (and (<= longFirst ?x) (<= ?x longLast)))))
(assert (< longFirst intFirst))
(assert (< intFirst (- GEN9)))
(assert (< GEN10 intLast))
(assert (< intLast longLast))
(declare-fun null () Int)
(declare-fun typeof (Int) Int)
(assert (forall ((?x Int)(?t Int)) (=> (= (PO_LT ?t T_java_lang_Object) true_term) (= (= (is ?x ?t) true_term) (or (= ?x null) (= (PO_LT (typeof ?x) ?t) true_term))))))
(declare-fun asField (Int Int) Int)
(assert (forall ((?f Int)(?t Int)(?x Int)) (= (is (S_select (asField ?f ?t) ?x) ?t) true_term)))
(declare-fun asElems (Int) Int)
(assert (forall ((?e Int)(?a Int)(?i Int)) (= (is (S_select (S_select (asElems ?e) ?a) ?i) (elemtype (typeof ?a))) true_term)))
(declare-fun vAllocTime (Int) Int)
(declare-fun isAllocated (Int Int) Int)
(assert (forall ((?x Int)(?a0 Int)) (= (= (isAllocated ?x ?a0) true_term) (< (vAllocTime ?x) ?a0))))
(declare-fun fClosedTime (Int) Int)
(assert (forall ((?x Int)(?f Int)(?a0 Int)) (=> (and (< (fClosedTime ?f) ?a0) (= (isAllocated ?x ?a0) true_term)) (= (isAllocated (S_select ?f ?x) ?a0) true_term))))
(declare-fun eClosedTime (Int) Int)
(assert (forall ((?a Int)(?e Int)(?i Int)(?a0 Int)) (=> (and (< (eClosedTime ?e) ?a0) (= (isAllocated ?a ?a0) true_term)) (= (isAllocated (S_select (S_select ?e ?a) ?i) ?a0) true_term))))
(declare-fun asLockSet (Int) Int)
(declare-fun max (Int) Int)
(assert (forall ((?S Int)) (= (S_select (asLockSet ?S) (max (asLockSet ?S))) true_term)))
(assert (forall ((?S Int)) (= (S_select (asLockSet ?S) null) true_term)))
(declare-fun lockLE (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (lockLE ?x ?y) true_term) (<= ?x ?y))))
(declare-fun lockLT (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (lockLT ?x ?y) true_term) (< ?x ?y))))
(assert (forall ((?S Int)(?mu Int)) (=> (= (S_select (asLockSet ?S) ?mu) true_term) (= (lockLE ?mu (max (asLockSet ?S))) true_term))))
(assert (forall ((?x Int)) (=> (= (PO_LT (typeof ?x) T_java_lang_Object) true_term) (= (lockLE null ?x) true_term))))
(declare-fun arrayLength (Int) Int)
(assert (forall ((?a Int)) (and (<= GEN11 (arrayLength ?a)) (= (is (arrayLength ?a) T_int) true_term))))
(declare-fun arrayFresh (Int Int Int Int Int Int Int) Int)
(declare-fun arrayShapeMore (Int Int) Int)
(declare-fun arrayParent (Int) Int)
(declare-fun arrayPosition (Int) Int)
(assert (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (= (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeMore ?n ?s) ?T ?v) true_term) (and (<= ?a0 (vAllocTime ?a)) (= (isAllocated ?a ?b0) true_term) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (and (= (arrayFresh (S_select (S_select ?e ?a) ?i) ?a0 ?b0 ?e ?s (elemtype ?T) ?v) true_term) (= (arrayParent (S_select (S_select ?e ?a) ?i)) ?a) (= (arrayPosition (S_select (S_select ?e ?a) ?i)) ?i)))))))
(declare-fun arrayShapeOne (Int) Int)
(assert (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (= (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeOne ?n) ?T ?v) true_term) (and (<= ?a0 (vAllocTime ?a)) (= (isAllocated ?a ?b0) true_term) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (= (S_select (S_select ?e ?a) ?i) ?v))))))
(declare-fun arrayType () Int)
(assert (= arrayType (asChild arrayType T_java_lang_Object)))
(assert (forall ((?t Int)) (= (PO_LT (array ?t) arrayType) true_term)))
(declare-fun isNewArray (Int) Int)
(assert (forall ((?s Int)) (=> (= true_term (isNewArray ?s)) (= (PO_LT (typeof ?s) arrayType) true_term))))
(declare-fun boolAnd (Int Int) Int)
(assert (forall ((?a Int)(?b Int)) (= (= (boolAnd ?a ?b) true_term) (and (= ?a true_term) (= ?b true_term)))))
(declare-fun boolEq (Int Int) Int)
(assert (forall ((?a Int)(?b Int)) (= (= (boolEq ?a ?b) true_term) (= (= ?a true_term) (= ?b true_term)))))
(declare-fun boolImplies (Int Int) Int)
(assert (forall ((?a Int)(?b Int)) (= (= (boolImplies ?a ?b) true_term) (=> (= ?a true_term) (= ?b true_term)))))
(declare-fun boolNE (Int Int) Int)
(assert (forall ((?a Int)(?b Int)) (= (= (boolNE ?a ?b) true_term) (not (= (= ?a true_term) (= ?b true_term))))))
(declare-fun boolNot (Int) Int)
(assert (forall ((?a Int)) (= (= (boolNot ?a) true_term) (not (= ?a true_term)))))
(declare-fun boolOr (Int Int) Int)
(assert (forall ((?a Int)(?b Int)) (= (= (boolOr ?a ?b) true_term) (or (= ?a true_term) (= ?b true_term)))))
(declare-fun integralEQ (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (integralEQ ?x ?y) true_term) (= ?x ?y))))
(declare-fun stringCat (Int Int) Int)
(declare-fun T_java_lang_String () Int)
(assert (forall ((?x Int)(?y Int)) (and (not (= (stringCat ?x ?y) null)) (= (PO_LT (typeof (stringCat ?x ?y)) T_java_lang_String) true_term))))
(declare-fun integralGE (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (integralGE ?x ?y) true_term) (>= ?x ?y))))
(declare-fun integralGT (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (integralGT ?x ?y) true_term) (> ?x ?y))))
(declare-fun integralLE (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (integralLE ?x ?y) true_term) (<= ?x ?y))))
(declare-fun integralLT (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (integralLT ?x ?y) true_term) (< ?x ?y))))
(declare-fun integralNE (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (integralNE ?x ?y) true_term) (not (= ?x ?y)))))
(declare-fun refEQ (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (refEQ ?x ?y) true_term) (= ?x ?y))))
(declare-fun refNE (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (= (= (refNE ?x ?y) true_term) (not (= ?x ?y)))))
(declare-fun nonnullelements (Int Int) Int)
(assert (forall ((?x Int)(?e Int)) (= (= (nonnullelements ?x ?e) true_term) (and (not (= ?x null)) (forall ((?i Int)) (=> (and (<= GEN12 ?i) (< ?i (arrayLength ?x))) (not (= (S_select (S_select ?e ?x) ?i) null))))))))
(declare-fun classLiteral (Int) Int)
(declare-fun T_java_lang_Class () Int)
(declare-fun alloc () Int)
(assert (forall ((?t Int)) (and (not (= (classLiteral ?t) null)) (= (is (classLiteral ?t) T_java_lang_Class) true_term) (= (isAllocated (classLiteral ?t) alloc) true_term))))
(declare-fun integralAnd (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (=> (or (<= GEN13 ?x) (<= GEN14 ?y)) (<= GEN15 (integralAnd ?x ?y)))))
(assert (forall ((?x Int)(?y Int)) (=> (<= GEN16 ?x) (<= (integralAnd ?x ?y) ?x))))
(assert (forall ((?x Int)(?y Int)) (=> (<= GEN17 ?y) (<= (integralAnd ?x ?y) ?y))))
(declare-fun integralOr (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (=> (and (<= GEN18 ?x) (<= GEN19 ?y)) (and (<= ?x (integralOr ?x ?y)) (<= ?y (integralOr ?x ?y))))))
(declare-fun integralXor (Int Int) Int)
(assert (forall ((?x Int)(?y Int)) (=> (and (<= GEN20 ?x) (<= GEN21 ?y)) (<= GEN22 (integralXor ?x ?y)))))
(declare-fun intShiftL (Int Int) Int)
(assert (forall ((?n Int)) (=> (and (<= GEN23 ?n) (< ?n GEN24)) (<= GEN25 (intShiftL GEN26 ?n)))))
(declare-fun longShiftL (Int Int) Int)
(assert (forall ((?n Int)) (=> (and (<= GEN27 ?n) (< ?n GEN28)) (<= GEN29 (longShiftL GEN30 ?n)))))
(assert true)
(declare-fun T_javafe_tc_FieldDeclVec () Int)
(declare-fun T_javafe_ast_ASTDecoration () Int)
(declare-fun T_javafe_parser_TagConstants () Int)
(declare-fun T_javafe_ast_TagConstants () Int)
(declare-fun T_javafe_ast_Identifier () Int)
(declare-fun T_javafe_tc_MethodDeclVec () Int)
(declare-fun T_java_io_FilterOutputStream () Int)
(declare-fun T_java_io_OutputStream () Int)
(declare-fun T_java_lang_Comparable () Int)
(declare-fun T_java_util_Properties () Int)
(declare-fun T_java_util_Hashtable () Int)
(declare-fun T_javafe_ast_GenericVarDecl () Int)
(declare-fun T_javafe_ast_ASTNode () Int)
(declare-fun T_javafe_ast_Type () Int)
(declare-fun T_java_util_EscjavaKeyValue () Int)
(declare-fun T_javafe_ast_TypeDecl () Int)
(declare-fun T_javafe_ast_TypeDeclElem () Int)
(declare-fun T_javafe_tc_Env () Int)
(declare-fun T_javafe_ast_OperatorTags () Int)
(declare-fun T_javafe_ast_GeneratedTags () Int)
(declare-fun T_javafe_ast_GenericBlockStmt () Int)
(declare-fun T_javafe_ast_Stmt () Int)
(declare-fun T_java_lang_System () Int)
(declare-fun T_javafe_ast_CompilationUnit () Int)
(declare-fun T_java_io_Serializable () Int)
(declare-fun T_javafe_tc_EnvForCU () Int)
(declare-fun T_javafe_ast_RoutineDecl () Int)
(declare-fun T_javafe_util_Location () Int)
(declare-fun T_javafe_tc_EnvForTypeSig () Int)
(declare-fun T_javafe_tc_TypeSig () Int)
(declare-fun T_javafe_ast_MethodDecl () Int)
(declare-fun T_java_util_Map () Int)
(declare-fun T_javafe_ast_BlockStmt () Int)
(declare-fun T_java_util_Dictionary () Int)
(declare-fun T_javafe_ast_FieldDecl () Int)
(declare-fun T_java_io_PrintStream () Int)
(declare-fun DIST_ZERO_1 () Int)
(declare-fun T__TYPE () Int)
(declare-fun keywordStrings_63_181_30 () Int)
(declare-fun STRINGLIT_64_44_26 () Int)
(declare-fun IDENT_64_25_26 () Int)
(declare-fun MODIFIERPRAGMA_63_25_26 () Int)
(declare-fun NULL_63_82_26 () Int)
(declare-fun otherCodes_63_202_27 () Int)
(declare-fun otherStrings_63_193_30 () Int)
(declare-fun LONGLIT_64_40_26 () Int)
(declare-fun noTokens_63_212_27 () Int)
(declare-fun TYPEMODIFIERPRAGMA_63_28_26 () Int)
(declare-fun DOUBLELIT_64_43_26 () Int)
(declare-fun LEXICALPRAGMA_63_24_26 () Int)
(declare-fun out_20_83_49 () Int)
(declare-fun punctuationStrings_63_134_22 () Int)
(declare-fun INTLIT_64_39_26 () Int)
(declare-fun TYPEDECLELEMPRAGMA_63_27_26 () Int)
(declare-fun punctuationCodes_63_164_19 () Int)
(declare-fun FIRST_KEYWORD_63_51_26 () Int)
(declare-fun FLOATLIT_64_42_26 () Int)
(declare-fun PARSED_6_772_28 () Int)
(declare-fun LAST_KEYWORD_63_103_26 () Int)
(declare-fun PREPPED_6_775_28 () Int)
(declare-fun BOOLEANLIT_64_38_26 () Int)
(declare-fun STMTPRAGMA_63_26_26 () Int)
(declare-fun CHARLIT_64_41_26 () Int)
(assert (and (= (PO_LT T_javafe_tc_FieldDeclVec T_java_lang_Object) true_term) (= T_javafe_tc_FieldDeclVec (asChild T_javafe_tc_FieldDeclVec T_java_lang_Object)) (= (PO_LT T_javafe_ast_ASTDecoration T_java_lang_Object) true_term) (= T_javafe_ast_ASTDecoration (asChild T_javafe_ast_ASTDecoration T_java_lang_Object)) (= (PO_LT T_javafe_parser_TagConstants T_javafe_ast_TagConstants) true_term) (= T_javafe_parser_TagConstants (asChild T_javafe_parser_TagConstants T_javafe_ast_TagConstants)) (= (PO_LT T_javafe_ast_Identifier T_java_lang_Object) true_term) (= T_javafe_ast_Identifier (asChild T_javafe_ast_Identifier T_java_lang_Object)) (forall ((?t Int)) (= (= (PO_LT ?t T_javafe_ast_Identifier) true_term) (= ?t T_javafe_ast_Identifier))) (= (PO_LT T_javafe_tc_MethodDeclVec T_java_lang_Object) true_term) (= T_javafe_tc_MethodDeclVec (asChild T_javafe_tc_MethodDeclVec T_java_lang_Object)) (= (PO_LT T_java_io_FilterOutputStream T_java_io_OutputStream) true_term) (= T_java_io_FilterOutputStream (asChild T_java_io_FilterOutputStream T_java_io_OutputStream)) (= (PO_LT T_java_lang_Comparable T_java_lang_Object) true_term) (= (PO_LT T_java_util_Properties T_java_util_Hashtable) true_term) (= T_java_util_Properties (asChild T_java_util_Properties T_java_util_Hashtable)) (= (PO_LT T_javafe_ast_GenericVarDecl T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_GenericVarDecl (asChild T_javafe_ast_GenericVarDecl T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_Type T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_Type (asChild T_javafe_ast_Type T_javafe_ast_ASTNode)) (= (PO_LT T_java_util_EscjavaKeyValue T_java_lang_Object) true_term) (= (PO_LT T_javafe_ast_TypeDecl T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_TypeDecl (asChild T_javafe_ast_TypeDecl T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_TypeDecl T_javafe_ast_TypeDeclElem) true_term) (= (PO_LT T_javafe_tc_Env T_java_lang_Object) true_term) (= T_javafe_tc_Env (asChild T_javafe_tc_Env T_java_lang_Object)) (= (PO_LT T_javafe_ast_OperatorTags T_java_lang_Object) true_term) (= T_javafe_ast_OperatorTags (asChild T_javafe_ast_OperatorTags T_java_lang_Object)) (= (PO_LT T_javafe_ast_OperatorTags T_javafe_ast_GeneratedTags) true_term) (= (PO_LT T_javafe_ast_TagConstants T_javafe_ast_OperatorTags) true_term) (= T_javafe_ast_TagConstants (asChild T_javafe_ast_TagConstants T_javafe_ast_OperatorTags)) (= (PO_LT T_javafe_ast_GenericBlockStmt T_javafe_ast_Stmt) true_term) (= T_javafe_ast_GenericBlockStmt (asChild T_javafe_ast_GenericBlockStmt T_javafe_ast_Stmt)) (= (PO_LT T_java_lang_System T_java_lang_Object) true_term) (= T_java_lang_System (asChild T_java_lang_System T_java_lang_Object)) (forall ((?t Int)) (= (= (PO_LT ?t T_java_lang_System) true_term) (= ?t T_java_lang_System))) (= (PO_LT T_javafe_ast_CompilationUnit T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_CompilationUnit (asChild T_javafe_ast_CompilationUnit T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_Stmt T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_Stmt (asChild T_javafe_ast_Stmt T_javafe_ast_ASTNode)) (= (PO_LT T_java_lang_String T_java_lang_Object) true_term) (= T_java_lang_String (asChild T_java_lang_String T_java_lang_Object)) (forall ((?t Int)) (= (= (PO_LT ?t T_java_lang_String) true_term) (= ?t T_java_lang_String))) (= (PO_LT T_java_lang_String T_java_io_Serializable) true_term) (= (PO_LT T_java_lang_String T_java_lang_Comparable) true_term) (= (PO_LT T_javafe_tc_EnvForCU T_javafe_tc_Env) true_term) (= T_javafe_tc_EnvForCU (asChild T_javafe_tc_EnvForCU T_javafe_tc_Env)) (= (PO_LT T_java_io_Serializable T_java_lang_Object) true_term) (= (PO_LT T_javafe_ast_RoutineDecl T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_RoutineDecl (asChild T_javafe_ast_RoutineDecl T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_RoutineDecl T_javafe_ast_TypeDeclElem) true_term) (= (PO_LT T_javafe_ast_GeneratedTags T_java_lang_Object) true_term) (= (PO_LT T_javafe_util_Location T_java_lang_Object) true_term) (= T_javafe_util_Location (asChild T_javafe_util_Location T_java_lang_Object)) (= (PO_LT T_java_lang_Cloneable T_java_lang_Object) true_term) (= (PO_LT T_javafe_tc_EnvForTypeSig T_javafe_tc_Env) true_term) (= T_javafe_tc_EnvForTypeSig (asChild T_javafe_tc_EnvForTypeSig T_javafe_tc_Env)) (= (PO_LT T_javafe_tc_TypeSig T_javafe_ast_Type) true_term) (= T_javafe_tc_TypeSig (asChild T_javafe_tc_TypeSig T_javafe_ast_Type)) (= (PO_LT T_javafe_ast_MethodDecl T_javafe_ast_RoutineDecl) true_term) (= T_javafe_ast_MethodDecl (asChild T_javafe_ast_MethodDecl T_javafe_ast_RoutineDecl)) (= (PO_LT T_javafe_ast_TypeDeclElem T_java_lang_Object) true_term) (= (PO_LT T_java_util_Map T_java_lang_Object) true_term) (= (PO_LT T_java_util_Map T_java_util_EscjavaKeyValue) true_term) (= (PO_LT T_javafe_ast_BlockStmt T_javafe_ast_GenericBlockStmt) true_term) (= T_javafe_ast_BlockStmt (asChild T_javafe_ast_BlockStmt T_javafe_ast_GenericBlockStmt)) (= (PO_LT T_java_util_Hashtable T_java_util_Dictionary) true_term) (= T_java_util_Hashtable (asChild T_java_util_Hashtable T_java_util_Dictionary)) (= (PO_LT T_java_util_Hashtable T_java_util_Map) true_term) (= (PO_LT T_java_util_Hashtable T_java_lang_Cloneable) true_term) (= (PO_LT T_java_util_Hashtable T_java_io_Serializable) true_term) (= (PO_LT T_javafe_ast_ASTNode T_java_lang_Object) true_term) (= T_javafe_ast_ASTNode (asChild T_javafe_ast_ASTNode T_java_lang_Object)) (= (PO_LT T_javafe_ast_ASTNode T_java_lang_Cloneable) true_term) (= (PO_LT T_javafe_ast_FieldDecl T_javafe_ast_GenericVarDecl) true_term) (= T_javafe_ast_FieldDecl (asChild T_javafe_ast_FieldDecl T_javafe_ast_GenericVarDecl)) (= (PO_LT T_javafe_ast_FieldDecl T_javafe_ast_TypeDeclElem) true_term) (= (PO_LT T_java_io_OutputStream T_java_lang_Object) true_term) (= T_java_io_OutputStream (asChild T_java_io_OutputStream T_java_lang_Object)) (= (PO_LT T_java_util_Dictionary T_java_lang_Object) true_term) (= T_java_util_Dictionary (asChild T_java_util_Dictionary T_java_lang_Object)) (= (PO_LT T_java_util_Dictionary T_java_util_EscjavaKeyValue) true_term) (= (PO_LT T_java_io_PrintStream T_java_io_FilterOutputStream) true_term) (= T_java_io_PrintStream (asChild T_java_io_PrintStream T_java_io_FilterOutputStream)) (and (= arrayType (+ DIST_ZERO_1 GEN31)) (= T_boolean (+ DIST_ZERO_1 GEN32)) (= T_char (+ DIST_ZERO_1 GEN33)) (= T_byte (+ DIST_ZERO_1 GEN34)) (= T_short (+ DIST_ZERO_1 GEN35)) (= T_int (+ DIST_ZERO_1 GEN36)) (= T_long (+ DIST_ZERO_1 GEN37)) (= T_float (+ DIST_ZERO_1 GEN38)) (= T_double (+ DIST_ZERO_1 GEN39)) (= T__TYPE (+ DIST_ZERO_1 GEN40)) (= T_javafe_tc_FieldDeclVec (+ DIST_ZERO_1 GEN41)) (= T_javafe_ast_ASTDecoration (+ DIST_ZERO_1 GEN42)) (= T_javafe_parser_TagConstants (+ DIST_ZERO_1 GEN43)) (= T_javafe_ast_Identifier (+ DIST_ZERO_1 GEN44)) (= T_javafe_tc_MethodDeclVec (+ DIST_ZERO_1 GEN45)) (= T_java_io_FilterOutputStream (+ DIST_ZERO_1 GEN46)) (= T_java_lang_Comparable (+ DIST_ZERO_1 GEN47)) (= T_java_util_Properties (+ DIST_ZERO_1 GEN48)) (= T_javafe_ast_GenericVarDecl (+ DIST_ZERO_1 GEN49)) (= T_javafe_ast_Type (+ DIST_ZERO_1 GEN50)) (= T_java_util_EscjavaKeyValue (+ DIST_ZERO_1 GEN51)) (= T_javafe_ast_TypeDecl (+ DIST_ZERO_1 GEN52)) (= T_javafe_tc_Env (+ DIST_ZERO_1 GEN53)) (= T_javafe_ast_OperatorTags (+ DIST_ZERO_1 GEN54)) (= T_javafe_ast_TagConstants (+ DIST_ZERO_1 GEN55)) (= T_javafe_ast_GenericBlockStmt (+ DIST_ZERO_1 GEN56)) (= T_java_lang_System (+ DIST_ZERO_1 GEN57)) (= T_javafe_ast_CompilationUnit (+ DIST_ZERO_1 GEN58)) (= T_javafe_ast_Stmt (+ DIST_ZERO_1 GEN59)) (= T_java_lang_String (+ DIST_ZERO_1 29)) (= T_javafe_tc_EnvForCU (+ DIST_ZERO_1 30)) (= T_java_io_Serializable (+ DIST_ZERO_1 31)) (= T_javafe_ast_RoutineDecl (+ DIST_ZERO_1 32)) (= T_javafe_ast_GeneratedTags (+ DIST_ZERO_1 33)) (= T_javafe_util_Location (+ DIST_ZERO_1 34)) (= T_java_lang_Cloneable (+ DIST_ZERO_1 35)) (= T_javafe_tc_EnvForTypeSig (+ DIST_ZERO_1 36)) (= T_javafe_tc_TypeSig (+ DIST_ZERO_1 37)) (= T_javafe_ast_MethodDecl (+ DIST_ZERO_1 38)) (= T_javafe_ast_TypeDeclElem (+ DIST_ZERO_1 39)) (= T_java_lang_Object (+ DIST_ZERO_1 40)) (= T_java_util_Map (+ DIST_ZERO_1 41)) (= T_javafe_ast_BlockStmt (+ DIST_ZERO_1 42)) (= T_java_util_Hashtable (+ DIST_ZERO_1 43)) (= T_javafe_ast_ASTNode (+ DIST_ZERO_1 44)) (= T_javafe_ast_FieldDecl (+ DIST_ZERO_1 45)) (= T_java_io_OutputStream (+ DIST_ZERO_1 46)) (= T_java_util_Dictionary (+ DIST_ZERO_1 47)) (= T_java_io_PrintStream (+ DIST_ZERO_1 48))) (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String))) (not (= keywordStrings_63_181_30 null)) (= (typeof keywordStrings_63_181_30) (array T_java_lang_String)) (= (arrayLength keywordStrings_63_181_30) 51) (= true_term (is STRINGLIT_64_44_26 T_int)) (= STRINGLIT_64_44_26 110) (= true_term (is IDENT_64_25_26 T_int)) (= IDENT_64_25_26 93) (= true_term (is MODIFIERPRAGMA_63_25_26 T_int)) (= MODIFIERPRAGMA_63_25_26 115) (= true_term (is NULL_63_82_26 T_int)) (= NULL_63_82_26 163) (= true_term (is otherCodes_63_202_27 (array T_int))) (not (= otherCodes_63_202_27 null)) (= (typeof otherCodes_63_202_27) (array T_int)) (= (arrayLength otherCodes_63_202_27) 15) (= true_term (is otherStrings_63_193_30 (array T_java_lang_String))) (not (= otherStrings_63_193_30 null)) (= (typeof otherStrings_63_193_30) (array T_java_lang_String)) (= (arrayLength otherStrings_63_193_30) 15) (= true_term (is LONGLIT_64_40_26 T_int)) (= LONGLIT_64_40_26 106) (= true_term (is noTokens_63_212_27 T_int)) (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int)) (= TYPEMODIFIERPRAGMA_63_28_26 118) (= true_term (is DOUBLELIT_64_43_26 T_int)) (= DOUBLELIT_64_43_26 109) (= true_term (is LEXICALPRAGMA_63_24_26 T_int)) (= LEXICALPRAGMA_63_24_26 114) (= true_term (is out_20_83_49 T_java_io_PrintStream)) (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String))) (not (= punctuationStrings_63_134_22 null)) (= (typeof punctuationStrings_63_134_22) (array T_java_lang_String)) (= (arrayLength punctuationStrings_63_134_22) 48) (= true_term (is INTLIT_64_39_26 T_int)) (= INTLIT_64_39_26 105) (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int)) (= TYPEDECLELEMPRAGMA_63_27_26 117) (= true_term (is punctuationCodes_63_164_19 (array T_int))) (not (= punctuationCodes_63_164_19 null)) (= (typeof punctuationCodes_63_164_19) (array T_int)) (= (arrayLength punctuationCodes_63_164_19) 48) (= true_term (is FIRST_KEYWORD_63_51_26 T_int)) (= FIRST_KEYWORD_63_51_26 133) (= true_term (is FLOATLIT_64_42_26 T_int)) (= FLOATLIT_64_42_26 108) (= true_term (is PARSED_6_772_28 T_int)) (= PARSED_6_772_28 2) (= true_term (is LAST_KEYWORD_63_103_26 T_int)) (= LAST_KEYWORD_63_103_26 183) (= true_term (is PREPPED_6_775_28 T_int)) (= PREPPED_6_775_28 5) (= true_term (is BOOLEANLIT_64_38_26 T_int)) (= BOOLEANLIT_64_38_26 104) (= true_term (is STMTPRAGMA_63_26_26 T_int)) (= STMTPRAGMA_63_26_26 116) (= true_term (is CHARLIT_64_41_26 T_int)) (= CHARLIT_64_41_26 107)))
(declare-fun staticContext_pre_46_22 () Int)
(declare-fun staticContext_46_22 () Int)
(declare-fun keywordStrings_pre_63_181_30 () Int)
(declare-fun STRINGLIT_pre_64_44_26 () Int)
(declare-fun enclosingEnv_pre_6_52_36 () Int)
(declare-fun enclosingEnv_6_52_36 () Int)
(declare-fun id_pre_16_15_34 () Int)
(declare-fun id_16_15_34 () Int)
(declare-fun IDENT_pre_64_25_26 () Int)
(declare-fun CU_pre_6_71_30 () Int)
(declare-fun CU_6_71_30 () Int)
(declare-fun MODIFIERPRAGMA_pre_63_25_26 () Int)
(declare-fun NULL_pre_63_82_26 () Int)
(declare-fun otherCodes_pre_63_202_27 () Int)
(declare-fun member_pre_6_44_39 () Int)
(declare-fun member_6_44_39 () Int)
(declare-fun methods_pre_6_883_26 () Int)
(declare-fun methods_6_883_26 () Int)
(declare-fun otherStrings_pre_63_193_30 () Int)
(declare-fun LONGLIT_pre_64_40_26 () Int)
(declare-fun simpleName_pre_6_37_38 () Int)
(declare-fun simpleName_6_37_38 () Int)
(declare-fun noTokens_pre_63_212_27 () Int)
(declare-fun elements_pre_15_61_39 () Int)
(declare-fun elements_15_61_39 () Int)
(declare-fun TYPEMODIFIERPRAGMA_pre_63_28_26 () Int)
(declare-fun id_pre_28_32_34 () Int)
(declare-fun id_28_32_34 () Int)
(declare-fun DOUBLELIT_pre_64_43_26 () Int)
(declare-fun fields_pre_6_875_27 () Int)
(declare-fun fields_6_875_27 () Int)
(declare-fun LEXICALPRAGMA_pre_63_24_26 () Int)
(declare-fun owner_pre_5_35_28 () Int)
(declare-fun owner_5_35_28 () Int)
(declare-fun out_pre_20_83_49 () Int)
(declare-fun parent_pre_33_32 () Int)
(declare-fun parent_33_32 () Int)
(declare-fun punctuationStrings_pre_63_134_22 () Int)
(declare-fun INTLIT_pre_64_39_26 () Int)
(declare-fun count_pre_56_67_33 () Int)
(declare-fun count_56_67_33 () Int)
(declare-fun TYPEDECLELEMPRAGMA_pre_63_27_26 () Int)
(declare-fun punctuationCodes_pre_63_164_19 () Int)
(declare-fun FIRST_KEYWORD_pre_63_51_26 () Int)
(declare-fun peer_pre_38_36 () Int)
(declare-fun peer_38_36 () Int)
(declare-fun FLOATLIT_pre_64_42_26 () Int)
(declare-fun state_pre_6_787_15 () Int)
(declare-fun state_6_787_15 () Int)
(declare-fun myTypeDecl_pre_6_63_40 () Int)
(declare-fun myTypeDecl_6_63_40 () Int)
(declare-fun enclosingType_pre_6_32_39 () Int)
(declare-fun enclosingType_6_32_39 () Int)
(declare-fun PARSED_pre_6_772_28 () Int)
(declare-fun LAST_KEYWORD_pre_63_103_26 () Int)
(declare-fun tokenType_pre_19_90_8 () Int)
(declare-fun tokenType_19_90_8 () Int)
(declare-fun count_pre_15_67_33 () Int)
(declare-fun count_15_67_33 () Int)
(declare-fun PREPPED_pre_6_775_28 () Int)
(declare-fun BOOLEANLIT_pre_64_38_26 () Int)
(declare-fun STMTPRAGMA_pre_63_26_26 () Int)
(declare-fun elements_pre_56_61_38 () Int)
(declare-fun elements_56_61_38 () Int)
(declare-fun CHARLIT_pre_64_41_26 () Int)
(declare-fun elems_pre () Int)
(declare-fun elems () Int)
(declare-fun LS () Int)
(declare-fun alloc_pre () Int)
(declare-fun this () Int)
(declare-fun RES () Int)
(declare-fun ecReturn () Int)
(assert (not (=> true (=> (and (= staticContext_pre_46_22 staticContext_46_22) (= staticContext_46_22 (asField staticContext_46_22 T_boolean)) (= keywordStrings_pre_63_181_30 keywordStrings_63_181_30) (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String))) (= true_term (isAllocated keywordStrings_63_181_30 alloc)) (= STRINGLIT_pre_64_44_26 STRINGLIT_64_44_26) (= true_term (is STRINGLIT_64_44_26 T_int)) (= enclosingEnv_pre_6_52_36 enclosingEnv_6_52_36) (= enclosingEnv_6_52_36 (asField enclosingEnv_6_52_36 T_javafe_tc_Env)) (< (fClosedTime enclosingEnv_6_52_36) alloc) (= id_pre_16_15_34 id_16_15_34) (= id_16_15_34 (asField id_16_15_34 T_javafe_ast_Identifier)) (< (fClosedTime id_16_15_34) alloc) (forall ((?s Int)) (=> (not (= ?s null)) (not (= (S_select id_16_15_34 ?s) null)))) (= IDENT_pre_64_25_26 IDENT_64_25_26) (= true_term (is IDENT_64_25_26 T_int)) (= CU_pre_6_71_30 CU_6_71_30) (= CU_6_71_30 (asField CU_6_71_30 T_javafe_ast_CompilationUnit)) (< (fClosedTime CU_6_71_30) alloc) (= MODIFIERPRAGMA_pre_63_25_26 MODIFIERPRAGMA_63_25_26) (= true_term (is MODIFIERPRAGMA_63_25_26 T_int)) (= NULL_pre_63_82_26 NULL_63_82_26) (= true_term (is NULL_63_82_26 T_int)) (= otherCodes_pre_63_202_27 otherCodes_63_202_27) (= true_term (is otherCodes_63_202_27 (array T_int))) (= true_term (isAllocated otherCodes_63_202_27 alloc)) (= member_pre_6_44_39 member_6_44_39) (= member_6_44_39 (asField member_6_44_39 T_boolean)) (= methods_pre_6_883_26 methods_6_883_26) (= methods_6_883_26 (asField methods_6_883_26 T_javafe_tc_MethodDeclVec)) (< (fClosedTime methods_6_883_26) alloc) (= otherStrings_pre_63_193_30 otherStrings_63_193_30) (= true_term (is otherStrings_63_193_30 (array T_java_lang_String))) (= true_term (isAllocated otherStrings_63_193_30 alloc)) (= LONGLIT_pre_64_40_26 LONGLIT_64_40_26) (= true_term (is LONGLIT_64_40_26 T_int)) (= simpleName_pre_6_37_38 simpleName_6_37_38) (= simpleName_6_37_38 (asField simpleName_6_37_38 T_java_lang_String)) (< (fClosedTime simpleName_6_37_38) alloc) (= noTokens_pre_63_212_27 noTokens_63_212_27) (= true_term (is noTokens_63_212_27 T_int)) (= elements_pre_15_61_39 elements_15_61_39) (= elements_15_61_39 (asField elements_15_61_39 (array T_javafe_ast_MethodDecl))) (< (fClosedTime elements_15_61_39) alloc) (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (S_select elements_15_61_39 ?s_1_) null)))) (= TYPEMODIFIERPRAGMA_pre_63_28_26 TYPEMODIFIERPRAGMA_63_28_26) (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int)) (= id_pre_28_32_34 id_28_32_34) (= id_28_32_34 (asField id_28_32_34 T_javafe_ast_Identifier)) (< (fClosedTime id_28_32_34) alloc) (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (S_select id_28_32_34 ?s_2_) null)))) (= DOUBLELIT_pre_64_43_26 DOUBLELIT_64_43_26) (= true_term (is DOUBLELIT_64_43_26 T_int)) (= fields_pre_6_875_27 fields_6_875_27) (= fields_6_875_27 (asField fields_6_875_27 T_javafe_tc_FieldDeclVec)) (< (fClosedTime fields_6_875_27) alloc) (= LEXICALPRAGMA_pre_63_24_26 LEXICALPRAGMA_63_24_26) (= true_term (is LEXICALPRAGMA_63_24_26 T_int)) (= owner_pre_5_35_28 owner_5_35_28) (= owner_5_35_28 (asField owner_5_35_28 T_java_lang_Object)) (< (fClosedTime owner_5_35_28) alloc) (= out_pre_20_83_49 out_20_83_49) (= true_term (is out_20_83_49 T_java_io_PrintStream)) (= true_term (isAllocated out_20_83_49 alloc)) (not (= out_20_83_49 null)) (= parent_pre_33_32 parent_33_32) (= parent_33_32 (asField parent_33_32 T_javafe_tc_Env)) (< (fClosedTime parent_33_32) alloc) (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (S_select parent_33_32 ?s_3_) null)))) (= punctuationStrings_pre_63_134_22 punctuationStrings_63_134_22) (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String))) (= true_term (isAllocated punctuationStrings_63_134_22 alloc)) (= INTLIT_pre_64_39_26 INTLIT_64_39_26) (= true_term (is INTLIT_64_39_26 T_int)) (= count_pre_56_67_33 count_56_67_33) (= count_56_67_33 (asField count_56_67_33 T_int)) (= TYPEDECLELEMPRAGMA_pre_63_27_26 TYPEDECLELEMPRAGMA_63_27_26) (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int)) (= punctuationCodes_pre_63_164_19 punctuationCodes_63_164_19) (= true_term (is punctuationCodes_63_164_19 (array T_int))) (= true_term (isAllocated punctuationCodes_63_164_19 alloc)) (= FIRST_KEYWORD_pre_63_51_26 FIRST_KEYWORD_63_51_26) (= true_term (is FIRST_KEYWORD_63_51_26 T_int)) (= peer_pre_38_36 peer_38_36) (= peer_38_36 (asField peer_38_36 T_javafe_tc_TypeSig)) (< (fClosedTime peer_38_36) alloc) (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (S_select peer_38_36 ?s_4_) null)))) (= FLOATLIT_pre_64_42_26 FLOATLIT_64_42_26) (= true_term (is FLOATLIT_64_42_26 T_int)) (= state_pre_6_787_15 state_6_787_15) (= state_6_787_15 (asField state_6_787_15 T_int)) (= myTypeDecl_pre_6_63_40 myTypeDecl_6_63_40) (= myTypeDecl_6_63_40 (asField myTypeDecl_6_63_40 T_javafe_ast_TypeDecl)) (< (fClosedTime myTypeDecl_6_63_40) alloc) (= enclosingType_pre_6_32_39 enclosingType_6_32_39) (= enclosingType_6_32_39 (asField enclosingType_6_32_39 T_javafe_tc_TypeSig)) (< (fClosedTime enclosingType_6_32_39) alloc) (= PARSED_pre_6_772_28 PARSED_6_772_28) (= true_term (is PARSED_6_772_28 T_int)) (= LAST_KEYWORD_pre_63_103_26 LAST_KEYWORD_63_103_26) (= true_term (is LAST_KEYWORD_63_103_26 T_int)) (= tokenType_pre_19_90_8 tokenType_19_90_8) (= tokenType_19_90_8 (asField tokenType_19_90_8 T_int)) (= count_pre_15_67_33 count_15_67_33) (= count_15_67_33 (asField count_15_67_33 T_int)) (= PREPPED_pre_6_775_28 PREPPED_6_775_28) (= true_term (is PREPPED_6_775_28 T_int)) (= BOOLEANLIT_pre_64_38_26 BOOLEANLIT_64_38_26) (= true_term (is BOOLEANLIT_64_38_26 T_int)) (= STMTPRAGMA_pre_63_26_26 STMTPRAGMA_63_26_26) (= true_term (is STMTPRAGMA_63_26_26 T_int)) (= elements_pre_56_61_38 elements_56_61_38) (= elements_56_61_38 (asField elements_56_61_38 (array T_javafe_ast_FieldDecl))) (< (fClosedTime elements_56_61_38) alloc) (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (S_select elements_56_61_38 ?s_5_) null)))) (= CHARLIT_pre_64_41_26 CHARLIT_64_41_26) (= true_term (is CHARLIT_64_41_26 T_int)) (= elems_pre elems) (= elems (asElems elems)) (< (eClosedTime elems) alloc) (= LS (asLockSet LS)) (= alloc_pre alloc)) (not (and (= true_term (is this T_javafe_tc_EnvForTypeSig)) (= true_term (isAllocated this alloc)) (not (= this null)) (= RES (S_select peer_38_36 this)) (= true_term true_term) (or (not (= ecReturn ecReturn)) (and (= ecReturn ecReturn) (not (=> (= ecReturn ecReturn) (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null))))))))))))
(assert (= BAV1 (= true_term GEN1)))
(assert (= BAV2 (= false_term GEN2)))
(assert (= BAV3 (forall ((?m Int)(?i Int)(?x Int)) (= (S_select (S_store ?m ?i ?x) ?i) ?x))))
(assert (= BAV4 (forall ((?m Int)(?i Int)(?j Int)(?x Int)) (=> (not (= ?i ?j)) (= (S_select (S_store ?m ?i ?x) ?j) (S_select ?m ?j))))))
(assert (= BAV5 (forall ((?m Int)(?i Int)(?j Int)(?x Int)) (= ?i ?j))))
(assert (= BAV6 (forall ((?m Int)(?i Int)(?j Int)(?x Int)) (= (S_select (S_store ?m ?i ?x) ?j) (S_select ?m ?j)))))
(assert (= BAV7 (forall ((?t Int)) (= (PO_LT ?t ?t) true_term))))
(assert (= BAV8 (= (PO_LT T_java_lang_Object T_java_lang_Object) true_term)))
(assert (= BAV9 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (=> (and (= (PO_LT ?t0 ?t1) true_term) (= (PO_LT ?t1 ?t2) true_term)) (= (PO_LT ?t0 ?t2) true_term)))))
(assert (= BAV10 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (and (= (PO_LT ?t0 ?t1) true_term) (= (PO_LT ?t1 ?t2) true_term)))))
(assert (= BAV11 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (= (PO_LT ?t0 ?t1) true_term))))
(assert (= BAV12 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (= (PO_LT ?t1 ?t2) true_term))))
(assert (= BAV13 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (= (PO_LT ?t0 ?t2) true_term))))
(assert (= BAV14 (forall ((?t0 Int)(?t1 Int)) (=> (and (= (PO_LT ?t0 ?t1) true_term) (= (PO_LT ?t1 ?t0) true_term)) (= ?t0 ?t1)))))
(assert (= BAV15 (forall ((?t0 Int)(?t1 Int)) (and (= (PO_LT ?t0 ?t1) true_term) (= (PO_LT ?t1 ?t0) true_term)))))
(assert (= BAV16 (forall ((?t0 Int)(?t1 Int)) (= (PO_LT ?t0 ?t1) true_term))))
(assert (= BAV17 (forall ((?t0 Int)(?t1 Int)) (= (PO_LT ?t1 ?t0) true_term))))
(assert (= BAV18 (forall ((?t0 Int)(?t1 Int)) (= ?t0 ?t1))))
(assert (= BAV19 (forall ((?t Int)) (=> (= (PO_LT ?t T_boolean) true_term) (= ?t T_boolean)))))
(assert (= BAV20 (forall ((?t Int)) (= (PO_LT ?t T_boolean) true_term))))
(assert (= BAV21 (forall ((?t Int)) (= ?t T_boolean))))
(assert (= BAV22 (forall ((?t Int)) (=> (= (PO_LT ?t T_char) true_term) (= ?t T_char)))))
(assert (= BAV23 (forall ((?t Int)) (= (PO_LT ?t T_char) true_term))))
(assert (= BAV24 (forall ((?t Int)) (= ?t T_char))))
(assert (= BAV25 (forall ((?t Int)) (=> (= (PO_LT ?t T_byte) true_term) (= ?t T_byte)))))
(assert (= BAV26 (forall ((?t Int)) (= (PO_LT ?t T_byte) true_term))))
(assert (= BAV27 (forall ((?t Int)) (= ?t T_byte))))
(assert (= BAV28 (forall ((?t Int)) (=> (= (PO_LT ?t T_short) true_term) (= ?t T_short)))))
(assert (= BAV29 (forall ((?t Int)) (= (PO_LT ?t T_short) true_term))))
(assert (= BAV30 (forall ((?t Int)) (= ?t T_short))))
(assert (= BAV31 (forall ((?t Int)) (=> (= (PO_LT ?t T_int) true_term) (= ?t T_int)))))
(assert (= BAV32 (forall ((?t Int)) (= (PO_LT ?t T_int) true_term))))
(assert (= BAV33 (forall ((?t Int)) (= ?t T_int))))
(assert (= BAV34 (forall ((?t Int)) (=> (= (PO_LT ?t T_long) true_term) (= ?t T_long)))))
(assert (= BAV35 (forall ((?t Int)) (= (PO_LT ?t T_long) true_term))))
(assert (= BAV36 (forall ((?t Int)) (= ?t T_long))))
(assert (= BAV37 (forall ((?t Int)) (=> (= (PO_LT ?t T_float) true_term) (= ?t T_float)))))
(assert (= BAV38 (forall ((?t Int)) (= (PO_LT ?t T_float) true_term))))
(assert (= BAV39 (forall ((?t Int)) (= ?t T_float))))
(assert (= BAV40 (forall ((?t Int)) (=> (= (PO_LT ?t T_double) true_term) (= ?t T_double)))))
(assert (= BAV41 (forall ((?t Int)) (= (PO_LT ?t T_double) true_term))))
(assert (= BAV42 (forall ((?t Int)) (= ?t T_double))))
(assert (= BAV43 (forall ((?t Int)) (=> (= (PO_LT T_boolean ?t) true_term) (= ?t T_boolean)))))
(assert (= BAV44 (forall ((?t Int)) (= (PO_LT T_boolean ?t) true_term))))
(assert (= BAV45 (forall ((?t Int)) (= ?t T_boolean))))
(assert (= BAV46 (forall ((?t Int)) (=> (= (PO_LT T_char ?t) true_term) (= ?t T_char)))))
(assert (= BAV47 (forall ((?t Int)) (= (PO_LT T_char ?t) true_term))))
(assert (= BAV48 (forall ((?t Int)) (= ?t T_char))))
(assert (= BAV49 (forall ((?t Int)) (=> (= (PO_LT T_byte ?t) true_term) (= ?t T_byte)))))
(assert (= BAV50 (forall ((?t Int)) (= (PO_LT T_byte ?t) true_term))))
(assert (= BAV51 (forall ((?t Int)) (= ?t T_byte))))
(assert (= BAV52 (forall ((?t Int)) (=> (= (PO_LT T_short ?t) true_term) (= ?t T_short)))))
(assert (= BAV53 (forall ((?t Int)) (= (PO_LT T_short ?t) true_term))))
(assert (= BAV54 (forall ((?t Int)) (= ?t T_short))))
(assert (= BAV55 (forall ((?t Int)) (=> (= (PO_LT T_int ?t) true_term) (= ?t T_int)))))
(assert (= BAV56 (forall ((?t Int)) (= (PO_LT T_int ?t) true_term))))
(assert (= BAV57 (forall ((?t Int)) (= ?t T_int))))
(assert (= BAV58 (forall ((?t Int)) (=> (= (PO_LT T_long ?t) true_term) (= ?t T_long)))))
(assert (= BAV59 (forall ((?t Int)) (= (PO_LT T_long ?t) true_term))))
(assert (= BAV60 (forall ((?t Int)) (= ?t T_long))))
(assert (= BAV61 (forall ((?t Int)) (=> (= (PO_LT T_float ?t) true_term) (= ?t T_float)))))
(assert (= BAV62 (forall ((?t Int)) (= (PO_LT T_float ?t) true_term))))
(assert (= BAV63 (forall ((?t Int)) (= ?t T_float))))
(assert (= BAV64 (forall ((?t Int)) (=> (= (PO_LT T_double ?t) true_term) (= ?t T_double)))))
(assert (= BAV65 (forall ((?t Int)) (= (PO_LT T_double ?t) true_term))))
(assert (= BAV66 (forall ((?t Int)) (= ?t T_double))))
(assert (= BAV67 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (=> (= (PO_LT ?t0 (asChild ?t1 ?t2)) true_term) (= (classDown ?t2 ?t0) (asChild ?t1 ?t2))))))
(assert (= BAV68 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (= (PO_LT ?t0 (asChild ?t1 ?t2)) true_term))))
(assert (= BAV69 (forall ((?t0 Int)(?t1 Int)(?t2 Int)) (= (classDown ?t2 ?t0) (asChild ?t1 ?t2)))))
(assert (= BAV70 (= (PO_LT T_java_lang_Cloneable T_java_lang_Object) true_term)))
(assert (= BAV71 (forall ((?t Int)) (= (PO_LT (array ?t) T_java_lang_Cloneable) true_term))))
(assert (= BAV72 (forall ((?t Int)) (= (elemtype (array ?t)) ?t))))
(assert (= BAV73 (forall ((?t0 Int)(?t1 Int)) (= (= (PO_LT ?t0 (array ?t1)) true_term) (and (= ?t0 (array (elemtype ?t0))) (= (PO_LT (elemtype ?t0) ?t1) true_term))))))
(assert (= BAV74 (forall ((?t0 Int)(?t1 Int)) (= (PO_LT ?t0 (array ?t1)) true_term))))
(assert (= BAV75 (forall ((?t0 Int)(?t1 Int)) (and (= ?t0 (array (elemtype ?t0))) (= (PO_LT (elemtype ?t0) ?t1) true_term)))))
(assert (= BAV76 (forall ((?t0 Int)(?t1 Int)) (= ?t0 (array (elemtype ?t0))))))
(assert (= BAV77 (forall ((?t0 Int)(?t1 Int)) (= (PO_LT (elemtype ?t0) ?t1) true_term))))
(assert (= BAV78 (forall ((?x Int)(?t Int)) (= (is (cast ?x ?t) ?t) true_term))))
(assert (= BAV79 (forall ((?x Int)(?t Int)) (=> (= (is ?x ?t) true_term) (= (cast ?x ?t) ?x)))))
(assert (= BAV80 (forall ((?x Int)(?t Int)) (= (is ?x ?t) true_term))))
(assert (= BAV81 (forall ((?x Int)(?t Int)) (= (cast ?x ?t) ?x))))
(assert (= BAV82 (forall ((?x Int)) (= (= (is ?x T_char) true_term) (and (<= GEN3 ?x) (<= ?x GEN4))))))
(assert (= BAV83 (forall ((?x Int)) (= (is ?x T_char) true_term))))
(assert (= BAV84 (forall ((?x Int)) (and (<= GEN3 ?x) (<= ?x GEN4)))))
(assert (= BAV85 (forall ((?x Int)) (<= GEN3 ?x))))
(assert (= BAV86 (forall ((?x Int)) (<= ?x GEN4))))
(assert (= BAV87 (forall ((?x Int)) (= (= (is ?x T_byte) true_term) (and (<= (- GEN5) ?x) (<= ?x GEN6))))))
(assert (= BAV88 (forall ((?x Int)) (= (is ?x T_byte) true_term))))
(assert (= BAV89 (forall ((?x Int)) (and (<= (- GEN5) ?x) (<= ?x GEN6)))))
(assert (= BAV90 (forall ((?x Int)) (<= (- GEN5) ?x))))
(assert (= BAV91 (forall ((?x Int)) (<= ?x GEN6))))
(assert (= BAV92 (forall ((?x Int)) (= (= (is ?x T_short) true_term) (and (<= (- GEN7) ?x) (<= ?x GEN8))))))
(assert (= BAV93 (forall ((?x Int)) (= (is ?x T_short) true_term))))
(assert (= BAV94 (forall ((?x Int)) (and (<= (- GEN7) ?x) (<= ?x GEN8)))))
(assert (= BAV95 (forall ((?x Int)) (<= (- GEN7) ?x))))
(assert (= BAV96 (forall ((?x Int)) (<= ?x GEN8))))
(assert (= BAV97 (forall ((?x Int)) (= (= (is ?x T_int) true_term) (and (<= intFirst ?x) (<= ?x intLast))))))
(assert (= BAV98 (forall ((?x Int)) (= (is ?x T_int) true_term))))
(assert (= BAV99 (forall ((?x Int)) (and (<= intFirst ?x) (<= ?x intLast)))))
(assert (= BAV100 (forall ((?x Int)) (<= intFirst ?x))))
(assert (= BAV101 (forall ((?x Int)) (<= ?x intLast))))
(assert (= BAV102 (forall ((?x Int)) (= (= (is ?x T_long) true_term) (and (<= longFirst ?x) (<= ?x longLast))))))
(assert (= BAV103 (forall ((?x Int)) (= (is ?x T_long) true_term))))
(assert (= BAV104 (forall ((?x Int)) (and (<= longFirst ?x) (<= ?x longLast)))))
(assert (= BAV105 (forall ((?x Int)) (<= longFirst ?x))))
(assert (= BAV106 (forall ((?x Int)) (<= ?x longLast))))
(assert (= BAV107 (< longFirst intFirst)))
(assert (= BAV108 (< intFirst (- GEN9))))
(assert (= BAV109 (< GEN10 intLast)))
(assert (= BAV110 (< intLast longLast)))
(assert (= BAV111 (forall ((?x Int)(?t Int)) (=> (= (PO_LT ?t T_java_lang_Object) true_term) (= (= (is ?x ?t) true_term) (or (= ?x null) (= (PO_LT (typeof ?x) ?t) true_term)))))))
(assert (= BAV112 (forall ((?x Int)(?t Int)) (= (PO_LT ?t T_java_lang_Object) true_term))))
(assert (= BAV113 (forall ((?x Int)(?t Int)) (= (= (is ?x ?t) true_term) (or (= ?x null) (= (PO_LT (typeof ?x) ?t) true_term))))))
(assert (= BAV114 (forall ((?x Int)(?t Int)) (= (is ?x ?t) true_term))))
(assert (= BAV115 (forall ((?x Int)(?t Int)) (or (= ?x null) (= (PO_LT (typeof ?x) ?t) true_term)))))
(assert (= BAV116 (forall ((?x Int)(?t Int)) (= ?x null))))
(assert (= BAV117 (forall ((?x Int)(?t Int)) (= (PO_LT (typeof ?x) ?t) true_term))))
(assert (= BAV118 (forall ((?f Int)(?t Int)(?x Int)) (= (is (S_select (asField ?f ?t) ?x) ?t) true_term))))
(assert (= BAV119 (forall ((?e Int)(?a Int)(?i Int)) (= (is (S_select (S_select (asElems ?e) ?a) ?i) (elemtype (typeof ?a))) true_term))))
(assert (= BAV120 (forall ((?x Int)(?a0 Int)) (= (= (isAllocated ?x ?a0) true_term) (< (vAllocTime ?x) ?a0)))))
(assert (= BAV121 (forall ((?x Int)(?a0 Int)) (= (isAllocated ?x ?a0) true_term))))
(assert (= BAV122 (forall ((?x Int)(?a0 Int)) (< (vAllocTime ?x) ?a0))))
(assert (= BAV123 (forall ((?x Int)(?f Int)(?a0 Int)) (=> (and (< (fClosedTime ?f) ?a0) (= (isAllocated ?x ?a0) true_term)) (= (isAllocated (S_select ?f ?x) ?a0) true_term)))))
(assert (= BAV124 (forall ((?x Int)(?f Int)(?a0 Int)) (and (< (fClosedTime ?f) ?a0) (= (isAllocated ?x ?a0) true_term)))))
(assert (= BAV125 (forall ((?x Int)(?f Int)(?a0 Int)) (< (fClosedTime ?f) ?a0))))
(assert (= BAV126 (forall ((?x Int)(?f Int)(?a0 Int)) (= (isAllocated ?x ?a0) true_term))))
(assert (= BAV127 (forall ((?x Int)(?f Int)(?a0 Int)) (= (isAllocated (S_select ?f ?x) ?a0) true_term))))
(assert (= BAV128 (forall ((?a Int)(?e Int)(?i Int)(?a0 Int)) (=> (and (< (eClosedTime ?e) ?a0) (= (isAllocated ?a ?a0) true_term)) (= (isAllocated (S_select (S_select ?e ?a) ?i) ?a0) true_term)))))
(assert (= BAV129 (forall ((?a Int)(?e Int)(?i Int)(?a0 Int)) (and (< (eClosedTime ?e) ?a0) (= (isAllocated ?a ?a0) true_term)))))
(assert (= BAV130 (forall ((?a Int)(?e Int)(?i Int)(?a0 Int)) (< (eClosedTime ?e) ?a0))))
(assert (= BAV131 (forall ((?a Int)(?e Int)(?i Int)(?a0 Int)) (= (isAllocated ?a ?a0) true_term))))
(assert (= BAV132 (forall ((?a Int)(?e Int)(?i Int)(?a0 Int)) (= (isAllocated (S_select (S_select ?e ?a) ?i) ?a0) true_term))))
(assert (= BAV133 (forall ((?S Int)) (= (S_select (asLockSet ?S) (max (asLockSet ?S))) true_term))))
(assert (= BAV134 (forall ((?S Int)) (= (S_select (asLockSet ?S) null) true_term))))
(assert (= BAV135 (forall ((?x Int)(?y Int)) (= (= (lockLE ?x ?y) true_term) (<= ?x ?y)))))
(assert (= BAV136 (forall ((?x Int)(?y Int)) (= (lockLE ?x ?y) true_term))))
(assert (= BAV137 (forall ((?x Int)(?y Int)) (<= ?x ?y))))
(assert (= BAV138 (forall ((?x Int)(?y Int)) (= (= (lockLT ?x ?y) true_term) (< ?x ?y)))))
(assert (= BAV139 (forall ((?x Int)(?y Int)) (= (lockLT ?x ?y) true_term))))
(assert (= BAV140 (forall ((?x Int)(?y Int)) (< ?x ?y))))
(assert (= BAV141 (forall ((?S Int)(?mu Int)) (=> (= (S_select (asLockSet ?S) ?mu) true_term) (= (lockLE ?mu (max (asLockSet ?S))) true_term)))))
(assert (= BAV142 (forall ((?S Int)(?mu Int)) (= (S_select (asLockSet ?S) ?mu) true_term))))
(assert (= BAV143 (forall ((?S Int)(?mu Int)) (= (lockLE ?mu (max (asLockSet ?S))) true_term))))
(assert (= BAV144 (forall ((?x Int)) (=> (= (PO_LT (typeof ?x) T_java_lang_Object) true_term) (= (lockLE null ?x) true_term)))))
(assert (= BAV145 (forall ((?x Int)) (= (PO_LT (typeof ?x) T_java_lang_Object) true_term))))
(assert (= BAV146 (forall ((?x Int)) (= (lockLE null ?x) true_term))))
(assert (= BAV147 (forall ((?a Int)) (and (<= GEN11 (arrayLength ?a)) (= (is (arrayLength ?a) T_int) true_term)))))
(assert (= BAV148 (forall ((?a Int)) (<= GEN11 (arrayLength ?a)))))
(assert (= BAV149 (forall ((?a Int)) (= (is (arrayLength ?a) T_int) true_term))))
(assert (= BAV150 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (= (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeMore ?n ?s) ?T ?v) true_term) (and (<= ?a0 (vAllocTime ?a)) (= (isAllocated ?a ?b0) true_term) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (and (= (arrayFresh (S_select (S_select ?e ?a) ?i) ?a0 ?b0 ?e ?s (elemtype ?T) ?v) true_term) (= (arrayParent (S_select (S_select ?e ?a) ?i)) ?a) (= (arrayPosition (S_select (S_select ?e ?a) ?i)) ?i))))))))
(assert (= BAV151 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeMore ?n ?s) ?T ?v) true_term))))
(assert (= BAV152 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (and (<= ?a0 (vAllocTime ?a)) (= (isAllocated ?a ?b0) true_term) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (and (= (arrayFresh (S_select (S_select ?e ?a) ?i) ?a0 ?b0 ?e ?s (elemtype ?T) ?v) true_term) (= (arrayParent (S_select (S_select ?e ?a) ?i)) ?a) (= (arrayPosition (S_select (S_select ?e ?a) ?i)) ?i)))))))
(assert (= BAV153 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (<= ?a0 (vAllocTime ?a)))))
(assert (= BAV154 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (= (isAllocated ?a ?b0) true_term))))
(assert (= BAV155 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (= ?a null))))
(assert (= BAV156 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (= (typeof ?a) ?T))))
(assert (= BAV157 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)) (= (arrayLength ?a) ?n))))
(assert (= BAV158 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)(?i Int)) (and (= (arrayFresh (S_select (S_select ?e ?a) ?i) ?a0 ?b0 ?e ?s (elemtype ?T) ?v) true_term) (= (arrayParent (S_select (S_select ?e ?a) ?i)) ?a) (= (arrayPosition (S_select (S_select ?e ?a) ?i)) ?i)))))
(assert (= BAV159 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)(?i Int)) (= (arrayFresh (S_select (S_select ?e ?a) ?i) ?a0 ?b0 ?e ?s (elemtype ?T) ?v) true_term))))
(assert (= BAV160 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)(?i Int)) (= (arrayParent (S_select (S_select ?e ?a) ?i)) ?a))))
(assert (= BAV161 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?s Int)(?T Int)(?v Int)(?i Int)) (= (arrayPosition (S_select (S_select ?e ?a) ?i)) ?i))))
(assert (= BAV162 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (= (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeOne ?n) ?T ?v) true_term) (and (<= ?a0 (vAllocTime ?a)) (= (isAllocated ?a ?b0) true_term) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (= (S_select (S_select ?e ?a) ?i) ?v)))))))
(assert (= BAV163 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (= (arrayFresh ?a ?a0 ?b0 ?e (arrayShapeOne ?n) ?T ?v) true_term))))
(assert (= BAV164 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (and (<= ?a0 (vAllocTime ?a)) (= (isAllocated ?a ?b0) true_term) (not (= ?a null)) (= (typeof ?a) ?T) (= (arrayLength ?a) ?n) (forall ((?i Int)) (= (S_select (S_select ?e ?a) ?i) ?v))))))
(assert (= BAV165 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (<= ?a0 (vAllocTime ?a)))))
(assert (= BAV166 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (= (isAllocated ?a ?b0) true_term))))
(assert (= BAV167 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (= ?a null))))
(assert (= BAV168 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (= (typeof ?a) ?T))))
(assert (= BAV169 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)) (= (arrayLength ?a) ?n))))
(assert (= BAV170 (forall ((?a Int)(?a0 Int)(?b0 Int)(?e Int)(?n Int)(?T Int)(?v Int)(?i Int)) (= (S_select (S_select ?e ?a) ?i) ?v))))
(assert (= BAV171 (= arrayType (asChild arrayType T_java_lang_Object))))
(assert (= BAV172 (forall ((?t Int)) (= (PO_LT (array ?t) arrayType) true_term))))
(assert (= BAV173 (forall ((?s Int)) (=> (= true_term (isNewArray ?s)) (= (PO_LT (typeof ?s) arrayType) true_term)))))
(assert (= BAV174 (forall ((?s Int)) (= true_term (isNewArray ?s)))))
(assert (= BAV175 (forall ((?s Int)) (= (PO_LT (typeof ?s) arrayType) true_term))))
(assert (= BAV176 (forall ((?a Int)(?b Int)) (= (= (boolAnd ?a ?b) true_term) (and (= ?a true_term) (= ?b true_term))))))
(assert (= BAV177 (forall ((?a Int)(?b Int)) (= (boolAnd ?a ?b) true_term))))
(assert (= BAV178 (forall ((?a Int)(?b Int)) (and (= ?a true_term) (= ?b true_term)))))
(assert (= BAV179 (forall ((?a Int)(?b Int)) (= ?a true_term))))
(assert (= BAV180 (forall ((?a Int)(?b Int)) (= ?b true_term))))
(assert (= BAV181 (forall ((?a Int)(?b Int)) (= (= (boolEq ?a ?b) true_term) (= (= ?a true_term) (= ?b true_term))))))
(assert (= BAV182 (forall ((?a Int)(?b Int)) (= (boolEq ?a ?b) true_term))))
(assert (= BAV183 (forall ((?a Int)(?b Int)) (= (= ?a true_term) (= ?b true_term)))))
(assert (= BAV184 (forall ((?a Int)(?b Int)) (= ?a true_term))))
(assert (= BAV185 (forall ((?a Int)(?b Int)) (= ?b true_term))))
(assert (= BAV186 (forall ((?a Int)(?b Int)) (= (= (boolImplies ?a ?b) true_term) (=> (= ?a true_term) (= ?b true_term))))))
(assert (= BAV187 (forall ((?a Int)(?b Int)) (= (boolImplies ?a ?b) true_term))))
(assert (= BAV188 (forall ((?a Int)(?b Int)) (=> (= ?a true_term) (= ?b true_term)))))
(assert (= BAV189 (forall ((?a Int)(?b Int)) (= ?a true_term))))
(assert (= BAV190 (forall ((?a Int)(?b Int)) (= ?b true_term))))
(assert (= BAV191 (forall ((?a Int)(?b Int)) (= (= (boolNE ?a ?b) true_term) (not (= (= ?a true_term) (= ?b true_term)))))))
(assert (= BAV192 (forall ((?a Int)(?b Int)) (= (boolNE ?a ?b) true_term))))
(assert (= BAV193 (forall ((?a Int)(?b Int)) (= (= ?a true_term) (= ?b true_term)))))
(assert (= BAV194 (forall ((?a Int)(?b Int)) (= ?a true_term))))
(assert (= BAV195 (forall ((?a Int)(?b Int)) (= ?b true_term))))
(assert (= BAV196 (forall ((?a Int)) (= (= (boolNot ?a) true_term) (not (= ?a true_term))))))
(assert (= BAV197 (forall ((?a Int)) (= (boolNot ?a) true_term))))
(assert (= BAV198 (forall ((?a Int)) (= ?a true_term))))
(assert (= BAV199 (forall ((?a Int)(?b Int)) (= (= (boolOr ?a ?b) true_term) (or (= ?a true_term) (= ?b true_term))))))
(assert (= BAV200 (forall ((?a Int)(?b Int)) (= (boolOr ?a ?b) true_term))))
(assert (= BAV201 (forall ((?a Int)(?b Int)) (or (= ?a true_term) (= ?b true_term)))))
(assert (= BAV202 (forall ((?a Int)(?b Int)) (= ?a true_term))))
(assert (= BAV203 (forall ((?a Int)(?b Int)) (= ?b true_term))))
(assert (= BAV204 (forall ((?x Int)(?y Int)) (= (= (integralEQ ?x ?y) true_term) (= ?x ?y)))))
(assert (= BAV205 (forall ((?x Int)(?y Int)) (= (integralEQ ?x ?y) true_term))))
(assert (= BAV206 (forall ((?x Int)(?y Int)) (= ?x ?y))))
(assert (= BAV207 (forall ((?x Int)(?y Int)) (and (not (= (stringCat ?x ?y) null)) (= (PO_LT (typeof (stringCat ?x ?y)) T_java_lang_String) true_term)))))
(assert (= BAV208 (forall ((?x Int)(?y Int)) (= (stringCat ?x ?y) null))))
(assert (= BAV209 (forall ((?x Int)(?y Int)) (= (PO_LT (typeof (stringCat ?x ?y)) T_java_lang_String) true_term))))
(assert (= BAV210 (forall ((?x Int)(?y Int)) (= (= (integralGE ?x ?y) true_term) (>= ?x ?y)))))
(assert (= BAV211 (forall ((?x Int)(?y Int)) (= (integralGE ?x ?y) true_term))))
(assert (= BAV212 (forall ((?x Int)(?y Int)) (>= ?x ?y))))
(assert (= BAV213 (forall ((?x Int)(?y Int)) (= (= (integralGT ?x ?y) true_term) (> ?x ?y)))))
(assert (= BAV214 (forall ((?x Int)(?y Int)) (= (integralGT ?x ?y) true_term))))
(assert (= BAV215 (forall ((?x Int)(?y Int)) (> ?x ?y))))
(assert (= BAV216 (forall ((?x Int)(?y Int)) (= (= (integralLE ?x ?y) true_term) (<= ?x ?y)))))
(assert (= BAV217 (forall ((?x Int)(?y Int)) (= (integralLE ?x ?y) true_term))))
(assert (= BAV218 (forall ((?x Int)(?y Int)) (<= ?x ?y))))
(assert (= BAV219 (forall ((?x Int)(?y Int)) (= (= (integralLT ?x ?y) true_term) (< ?x ?y)))))
(assert (= BAV220 (forall ((?x Int)(?y Int)) (= (integralLT ?x ?y) true_term))))
(assert (= BAV221 (forall ((?x Int)(?y Int)) (< ?x ?y))))
(assert (= BAV222 (forall ((?x Int)(?y Int)) (= (= (integralNE ?x ?y) true_term) (not (= ?x ?y))))))
(assert (= BAV223 (forall ((?x Int)(?y Int)) (= (integralNE ?x ?y) true_term))))
(assert (= BAV224 (forall ((?x Int)(?y Int)) (= ?x ?y))))
(assert (= BAV225 (forall ((?x Int)(?y Int)) (= (= (refEQ ?x ?y) true_term) (= ?x ?y)))))
(assert (= BAV226 (forall ((?x Int)(?y Int)) (= (refEQ ?x ?y) true_term))))
(assert (= BAV227 (forall ((?x Int)(?y Int)) (= ?x ?y))))
(assert (= BAV228 (forall ((?x Int)(?y Int)) (= (= (refNE ?x ?y) true_term) (not (= ?x ?y))))))
(assert (= BAV229 (forall ((?x Int)(?y Int)) (= (refNE ?x ?y) true_term))))
(assert (= BAV230 (forall ((?x Int)(?y Int)) (= ?x ?y))))
(assert (= BAV231 (forall ((?x Int)(?e Int)) (= (= (nonnullelements ?x ?e) true_term) (and (not (= ?x null)) (forall ((?i Int)) (=> (and (<= GEN12 ?i) (< ?i (arrayLength ?x))) (not (= (S_select (S_select ?e ?x) ?i) null)))))))))
(assert (= BAV232 (forall ((?x Int)(?e Int)) (= (nonnullelements ?x ?e) true_term))))
(assert (= BAV233 (forall ((?x Int)(?e Int)) (and (not (= ?x null)) (forall ((?i Int)) (=> (and (<= GEN12 ?i) (< ?i (arrayLength ?x))) (not (= (S_select (S_select ?e ?x) ?i) null))))))))
(assert (= BAV234 (forall ((?x Int)(?e Int)) (= ?x null))))
(assert (= BAV235 (forall ((?x Int)(?e Int)(?i Int)) (=> (and (<= GEN12 ?i) (< ?i (arrayLength ?x))) (not (= (S_select (S_select ?e ?x) ?i) null))))))
(assert (= BAV236 (forall ((?x Int)(?e Int)(?i Int)) (and (<= GEN12 ?i) (< ?i (arrayLength ?x))))))
(assert (= BAV237 (forall ((?x Int)(?e Int)(?i Int)) (<= GEN12 ?i))))
(assert (= BAV238 (forall ((?x Int)(?e Int)(?i Int)) (< ?i (arrayLength ?x)))))
(assert (= BAV239 (forall ((?x Int)(?e Int)(?i Int)) (= (S_select (S_select ?e ?x) ?i) null))))
(assert (= BAV240 (forall ((?t Int)) (and (not (= (classLiteral ?t) null)) (= (is (classLiteral ?t) T_java_lang_Class) true_term) (= (isAllocated (classLiteral ?t) alloc) true_term)))))
(assert (= BAV241 (forall ((?t Int)) (= (classLiteral ?t) null))))
(assert (= BAV242 (forall ((?t Int)) (= (is (classLiteral ?t) T_java_lang_Class) true_term))))
(assert (= BAV243 (forall ((?t Int)) (= (isAllocated (classLiteral ?t) alloc) true_term))))
(assert (= BAV244 (forall ((?x Int)(?y Int)) (=> (or (<= GEN13 ?x) (<= GEN14 ?y)) (<= GEN15 (integralAnd ?x ?y))))))
(assert (= BAV245 (forall ((?x Int)(?y Int)) (or (<= GEN13 ?x) (<= GEN14 ?y)))))
(assert (= BAV246 (forall ((?x Int)(?y Int)) (<= GEN13 ?x))))
(assert (= BAV247 (forall ((?x Int)(?y Int)) (<= GEN14 ?y))))
(assert (= BAV248 (forall ((?x Int)(?y Int)) (<= GEN15 (integralAnd ?x ?y)))))
(assert (= BAV249 (forall ((?x Int)(?y Int)) (=> (<= GEN16 ?x) (<= (integralAnd ?x ?y) ?x)))))
(assert (= BAV250 (forall ((?x Int)(?y Int)) (<= GEN16 ?x))))
(assert (= BAV251 (forall ((?x Int)(?y Int)) (<= (integralAnd ?x ?y) ?x))))
(assert (= BAV252 (forall ((?x Int)(?y Int)) (=> (<= GEN17 ?y) (<= (integralAnd ?x ?y) ?y)))))
(assert (= BAV253 (forall ((?x Int)(?y Int)) (<= GEN17 ?y))))
(assert (= BAV254 (forall ((?x Int)(?y Int)) (<= (integralAnd ?x ?y) ?y))))
(assert (= BAV255 (forall ((?x Int)(?y Int)) (=> (and (<= GEN18 ?x) (<= GEN19 ?y)) (and (<= ?x (integralOr ?x ?y)) (<= ?y (integralOr ?x ?y)))))))
(assert (= BAV256 (forall ((?x Int)(?y Int)) (and (<= GEN18 ?x) (<= GEN19 ?y)))))
(assert (= BAV257 (forall ((?x Int)(?y Int)) (<= GEN18 ?x))))
(assert (= BAV258 (forall ((?x Int)(?y Int)) (<= GEN19 ?y))))
(assert (= BAV259 (forall ((?x Int)(?y Int)) (and (<= ?x (integralOr ?x ?y)) (<= ?y (integralOr ?x ?y))))))
(assert (= BAV260 (forall ((?x Int)(?y Int)) (<= ?x (integralOr ?x ?y)))))
(assert (= BAV261 (forall ((?x Int)(?y Int)) (<= ?y (integralOr ?x ?y)))))
(assert (= BAV262 (forall ((?x Int)(?y Int)) (=> (and (<= GEN20 ?x) (<= GEN21 ?y)) (<= GEN22 (integralXor ?x ?y))))))
(assert (= BAV263 (forall ((?x Int)(?y Int)) (and (<= GEN20 ?x) (<= GEN21 ?y)))))
(assert (= BAV264 (forall ((?x Int)(?y Int)) (<= GEN20 ?x))))
(assert (= BAV265 (forall ((?x Int)(?y Int)) (<= GEN21 ?y))))
(assert (= BAV266 (forall ((?x Int)(?y Int)) (<= GEN22 (integralXor ?x ?y)))))
(assert (= BAV267 (forall ((?n Int)) (=> (and (<= GEN23 ?n) (< ?n GEN24)) (<= GEN25 (intShiftL GEN26 ?n))))))
(assert (= BAV268 (forall ((?n Int)) (and (<= GEN23 ?n) (< ?n GEN24)))))
(assert (= BAV269 (forall ((?n Int)) (<= GEN23 ?n))))
(assert (= BAV270 (forall ((?n Int)) (< ?n GEN24))))
(assert (= BAV271 (forall ((?n Int)) (<= GEN25 (intShiftL GEN26 ?n)))))
(assert (= BAV272 (forall ((?n Int)) (=> (and (<= GEN27 ?n) (< ?n GEN28)) (<= GEN29 (longShiftL GEN30 ?n))))))
(assert (= BAV273 (forall ((?n Int)) (and (<= GEN27 ?n) (< ?n GEN28)))))
(assert (= BAV274 (forall ((?n Int)) (<= GEN27 ?n))))
(assert (= BAV275 (forall ((?n Int)) (< ?n GEN28))))
(assert (= BAV276 (forall ((?n Int)) (<= GEN29 (longShiftL GEN30 ?n)))))
(assert (= BAV277 (and (= (PO_LT T_javafe_tc_FieldDeclVec T_java_lang_Object) true_term) (= T_javafe_tc_FieldDeclVec (asChild T_javafe_tc_FieldDeclVec T_java_lang_Object)) (= (PO_LT T_javafe_ast_ASTDecoration T_java_lang_Object) true_term) (= T_javafe_ast_ASTDecoration (asChild T_javafe_ast_ASTDecoration T_java_lang_Object)) (= (PO_LT T_javafe_parser_TagConstants T_javafe_ast_TagConstants) true_term) (= T_javafe_parser_TagConstants (asChild T_javafe_parser_TagConstants T_javafe_ast_TagConstants)) (= (PO_LT T_javafe_ast_Identifier T_java_lang_Object) true_term) (= T_javafe_ast_Identifier (asChild T_javafe_ast_Identifier T_java_lang_Object)) (forall ((?t Int)) (= (= (PO_LT ?t T_javafe_ast_Identifier) true_term) (= ?t T_javafe_ast_Identifier))) (= (PO_LT T_javafe_tc_MethodDeclVec T_java_lang_Object) true_term) (= T_javafe_tc_MethodDeclVec (asChild T_javafe_tc_MethodDeclVec T_java_lang_Object)) (= (PO_LT T_java_io_FilterOutputStream T_java_io_OutputStream) true_term) (= T_java_io_FilterOutputStream (asChild T_java_io_FilterOutputStream T_java_io_OutputStream)) (= (PO_LT T_java_lang_Comparable T_java_lang_Object) true_term) (= (PO_LT T_java_util_Properties T_java_util_Hashtable) true_term) (= T_java_util_Properties (asChild T_java_util_Properties T_java_util_Hashtable)) (= (PO_LT T_javafe_ast_GenericVarDecl T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_GenericVarDecl (asChild T_javafe_ast_GenericVarDecl T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_Type T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_Type (asChild T_javafe_ast_Type T_javafe_ast_ASTNode)) (= (PO_LT T_java_util_EscjavaKeyValue T_java_lang_Object) true_term) (= (PO_LT T_javafe_ast_TypeDecl T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_TypeDecl (asChild T_javafe_ast_TypeDecl T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_TypeDecl T_javafe_ast_TypeDeclElem) true_term) (= (PO_LT T_javafe_tc_Env T_java_lang_Object) true_term) (= T_javafe_tc_Env (asChild T_javafe_tc_Env T_java_lang_Object)) (= (PO_LT T_javafe_ast_OperatorTags T_java_lang_Object) true_term) (= T_javafe_ast_OperatorTags (asChild T_javafe_ast_OperatorTags T_java_lang_Object)) (= (PO_LT T_javafe_ast_OperatorTags T_javafe_ast_GeneratedTags) true_term) (= (PO_LT T_javafe_ast_TagConstants T_javafe_ast_OperatorTags) true_term) (= T_javafe_ast_TagConstants (asChild T_javafe_ast_TagConstants T_javafe_ast_OperatorTags)) (= (PO_LT T_javafe_ast_GenericBlockStmt T_javafe_ast_Stmt) true_term) (= T_javafe_ast_GenericBlockStmt (asChild T_javafe_ast_GenericBlockStmt T_javafe_ast_Stmt)) (= (PO_LT T_java_lang_System T_java_lang_Object) true_term) (= T_java_lang_System (asChild T_java_lang_System T_java_lang_Object)) (forall ((?t Int)) (= (= (PO_LT ?t T_java_lang_System) true_term) (= ?t T_java_lang_System))) (= (PO_LT T_javafe_ast_CompilationUnit T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_CompilationUnit (asChild T_javafe_ast_CompilationUnit T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_Stmt T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_Stmt (asChild T_javafe_ast_Stmt T_javafe_ast_ASTNode)) (= (PO_LT T_java_lang_String T_java_lang_Object) true_term) (= T_java_lang_String (asChild T_java_lang_String T_java_lang_Object)) (forall ((?t Int)) (= (= (PO_LT ?t T_java_lang_String) true_term) (= ?t T_java_lang_String))) (= (PO_LT T_java_lang_String T_java_io_Serializable) true_term) (= (PO_LT T_java_lang_String T_java_lang_Comparable) true_term) (= (PO_LT T_javafe_tc_EnvForCU T_javafe_tc_Env) true_term) (= T_javafe_tc_EnvForCU (asChild T_javafe_tc_EnvForCU T_javafe_tc_Env)) (= (PO_LT T_java_io_Serializable T_java_lang_Object) true_term) (= (PO_LT T_javafe_ast_RoutineDecl T_javafe_ast_ASTNode) true_term) (= T_javafe_ast_RoutineDecl (asChild T_javafe_ast_RoutineDecl T_javafe_ast_ASTNode)) (= (PO_LT T_javafe_ast_RoutineDecl T_javafe_ast_TypeDeclElem) true_term) (= (PO_LT T_javafe_ast_GeneratedTags T_java_lang_Object) true_term) (= (PO_LT T_javafe_util_Location T_java_lang_Object) true_term) (= T_javafe_util_Location (asChild T_javafe_util_Location T_java_lang_Object)) (= (PO_LT T_java_lang_Cloneable T_java_lang_Object) true_term) (= (PO_LT T_javafe_tc_EnvForTypeSig T_javafe_tc_Env) true_term) (= T_javafe_tc_EnvForTypeSig (asChild T_javafe_tc_EnvForTypeSig T_javafe_tc_Env)) (= (PO_LT T_javafe_tc_TypeSig T_javafe_ast_Type) true_term) (= T_javafe_tc_TypeSig (asChild T_javafe_tc_TypeSig T_javafe_ast_Type)) (= (PO_LT T_javafe_ast_MethodDecl T_javafe_ast_RoutineDecl) true_term) (= T_javafe_ast_MethodDecl (asChild T_javafe_ast_MethodDecl T_javafe_ast_RoutineDecl)) (= (PO_LT T_javafe_ast_TypeDeclElem T_java_lang_Object) true_term) (= (PO_LT T_java_util_Map T_java_lang_Object) true_term) (= (PO_LT T_java_util_Map T_java_util_EscjavaKeyValue) true_term) (= (PO_LT T_javafe_ast_BlockStmt T_javafe_ast_GenericBlockStmt) true_term) (= T_javafe_ast_BlockStmt (asChild T_javafe_ast_BlockStmt T_javafe_ast_GenericBlockStmt)) (= (PO_LT T_java_util_Hashtable T_java_util_Dictionary) true_term) (= T_java_util_Hashtable (asChild T_java_util_Hashtable T_java_util_Dictionary)) (= (PO_LT T_java_util_Hashtable T_java_util_Map) true_term) (= (PO_LT T_java_util_Hashtable T_java_lang_Cloneable) true_term) (= (PO_LT T_java_util_Hashtable T_java_io_Serializable) true_term) (= (PO_LT T_javafe_ast_ASTNode T_java_lang_Object) true_term) (= T_javafe_ast_ASTNode (asChild T_javafe_ast_ASTNode T_java_lang_Object)) (= (PO_LT T_javafe_ast_ASTNode T_java_lang_Cloneable) true_term) (= (PO_LT T_javafe_ast_FieldDecl T_javafe_ast_GenericVarDecl) true_term) (= T_javafe_ast_FieldDecl (asChild T_javafe_ast_FieldDecl T_javafe_ast_GenericVarDecl)) (= (PO_LT T_javafe_ast_FieldDecl T_javafe_ast_TypeDeclElem) true_term) (= (PO_LT T_java_io_OutputStream T_java_lang_Object) true_term) (= T_java_io_OutputStream (asChild T_java_io_OutputStream T_java_lang_Object)) (= (PO_LT T_java_util_Dictionary T_java_lang_Object) true_term) (= T_java_util_Dictionary (asChild T_java_util_Dictionary T_java_lang_Object)) (= (PO_LT T_java_util_Dictionary T_java_util_EscjavaKeyValue) true_term) (= (PO_LT T_java_io_PrintStream T_java_io_FilterOutputStream) true_term) (= T_java_io_PrintStream (asChild T_java_io_PrintStream T_java_io_FilterOutputStream)) (and (= arrayType (+ DIST_ZERO_1 GEN31)) (= T_boolean (+ DIST_ZERO_1 GEN32)) (= T_char (+ DIST_ZERO_1 GEN33)) (= T_byte (+ DIST_ZERO_1 GEN34)) (= T_short (+ DIST_ZERO_1 GEN35)) (= T_int (+ DIST_ZERO_1 GEN36)) (= T_long (+ DIST_ZERO_1 GEN37)) (= T_float (+ DIST_ZERO_1 GEN38)) (= T_double (+ DIST_ZERO_1 GEN39)) (= T__TYPE (+ DIST_ZERO_1 GEN40)) (= T_javafe_tc_FieldDeclVec (+ DIST_ZERO_1 GEN41)) (= T_javafe_ast_ASTDecoration (+ DIST_ZERO_1 GEN42)) (= T_javafe_parser_TagConstants (+ DIST_ZERO_1 GEN43)) (= T_javafe_ast_Identifier (+ DIST_ZERO_1 GEN44)) (= T_javafe_tc_MethodDeclVec (+ DIST_ZERO_1 GEN45)) (= T_java_io_FilterOutputStream (+ DIST_ZERO_1 GEN46)) (= T_java_lang_Comparable (+ DIST_ZERO_1 GEN47)) (= T_java_util_Properties (+ DIST_ZERO_1 GEN48)) (= T_javafe_ast_GenericVarDecl (+ DIST_ZERO_1 GEN49)) (= T_javafe_ast_Type (+ DIST_ZERO_1 GEN50)) (= T_java_util_EscjavaKeyValue (+ DIST_ZERO_1 GEN51)) (= T_javafe_ast_TypeDecl (+ DIST_ZERO_1 GEN52)) (= T_javafe_tc_Env (+ DIST_ZERO_1 GEN53)) (= T_javafe_ast_OperatorTags (+ DIST_ZERO_1 GEN54)) (= T_javafe_ast_TagConstants (+ DIST_ZERO_1 GEN55)) (= T_javafe_ast_GenericBlockStmt (+ DIST_ZERO_1 GEN56)) (= T_java_lang_System (+ DIST_ZERO_1 GEN57)) (= T_javafe_ast_CompilationUnit (+ DIST_ZERO_1 GEN58)) (= T_javafe_ast_Stmt (+ DIST_ZERO_1 GEN59)) (= T_java_lang_String (+ DIST_ZERO_1 29)) (= T_javafe_tc_EnvForCU (+ DIST_ZERO_1 30)) (= T_java_io_Serializable (+ DIST_ZERO_1 31)) (= T_javafe_ast_RoutineDecl (+ DIST_ZERO_1 32)) (= T_javafe_ast_GeneratedTags (+ DIST_ZERO_1 33)) (= T_javafe_util_Location (+ DIST_ZERO_1 34)) (= T_java_lang_Cloneable (+ DIST_ZERO_1 35)) (= T_javafe_tc_EnvForTypeSig (+ DIST_ZERO_1 36)) (= T_javafe_tc_TypeSig (+ DIST_ZERO_1 37)) (= T_javafe_ast_MethodDecl (+ DIST_ZERO_1 38)) (= T_javafe_ast_TypeDeclElem (+ DIST_ZERO_1 39)) (= T_java_lang_Object (+ DIST_ZERO_1 40)) (= T_java_util_Map (+ DIST_ZERO_1 41)) (= T_javafe_ast_BlockStmt (+ DIST_ZERO_1 42)) (= T_java_util_Hashtable (+ DIST_ZERO_1 43)) (= T_javafe_ast_ASTNode (+ DIST_ZERO_1 44)) (= T_javafe_ast_FieldDecl (+ DIST_ZERO_1 45)) (= T_java_io_OutputStream (+ DIST_ZERO_1 46)) (= T_java_util_Dictionary (+ DIST_ZERO_1 47)) (= T_java_io_PrintStream (+ DIST_ZERO_1 48))) (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String))) (not (= keywordStrings_63_181_30 null)) (= (typeof keywordStrings_63_181_30) (array T_java_lang_String)) (= (arrayLength keywordStrings_63_181_30) 51) (= true_term (is STRINGLIT_64_44_26 T_int)) (= STRINGLIT_64_44_26 110) (= true_term (is IDENT_64_25_26 T_int)) (= IDENT_64_25_26 93) (= true_term (is MODIFIERPRAGMA_63_25_26 T_int)) (= MODIFIERPRAGMA_63_25_26 115) (= true_term (is NULL_63_82_26 T_int)) (= NULL_63_82_26 163) (= true_term (is otherCodes_63_202_27 (array T_int))) (not (= otherCodes_63_202_27 null)) (= (typeof otherCodes_63_202_27) (array T_int)) (= (arrayLength otherCodes_63_202_27) 15) (= true_term (is otherStrings_63_193_30 (array T_java_lang_String))) (not (= otherStrings_63_193_30 null)) (= (typeof otherStrings_63_193_30) (array T_java_lang_String)) (= (arrayLength otherStrings_63_193_30) 15) (= true_term (is LONGLIT_64_40_26 T_int)) (= LONGLIT_64_40_26 106) (= true_term (is noTokens_63_212_27 T_int)) (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int)) (= TYPEMODIFIERPRAGMA_63_28_26 118) (= true_term (is DOUBLELIT_64_43_26 T_int)) (= DOUBLELIT_64_43_26 109) (= true_term (is LEXICALPRAGMA_63_24_26 T_int)) (= LEXICALPRAGMA_63_24_26 114) (= true_term (is out_20_83_49 T_java_io_PrintStream)) (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String))) (not (= punctuationStrings_63_134_22 null)) (= (typeof punctuationStrings_63_134_22) (array T_java_lang_String)) (= (arrayLength punctuationStrings_63_134_22) 48) (= true_term (is INTLIT_64_39_26 T_int)) (= INTLIT_64_39_26 105) (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int)) (= TYPEDECLELEMPRAGMA_63_27_26 117) (= true_term (is punctuationCodes_63_164_19 (array T_int))) (not (= punctuationCodes_63_164_19 null)) (= (typeof punctuationCodes_63_164_19) (array T_int)) (= (arrayLength punctuationCodes_63_164_19) 48) (= true_term (is FIRST_KEYWORD_63_51_26 T_int)) (= FIRST_KEYWORD_63_51_26 133) (= true_term (is FLOATLIT_64_42_26 T_int)) (= FLOATLIT_64_42_26 108) (= true_term (is PARSED_6_772_28 T_int)) (= PARSED_6_772_28 2) (= true_term (is LAST_KEYWORD_63_103_26 T_int)) (= LAST_KEYWORD_63_103_26 183) (= true_term (is PREPPED_6_775_28 T_int)) (= PREPPED_6_775_28 5) (= true_term (is BOOLEANLIT_64_38_26 T_int)) (= BOOLEANLIT_64_38_26 104) (= true_term (is STMTPRAGMA_63_26_26 T_int)) (= STMTPRAGMA_63_26_26 116) (= true_term (is CHARLIT_64_41_26 T_int)) (= CHARLIT_64_41_26 107))))
(assert (= BAV278 (= (PO_LT T_javafe_tc_FieldDeclVec T_java_lang_Object) true_term)))
(assert (= BAV279 (= T_javafe_tc_FieldDeclVec (asChild T_javafe_tc_FieldDeclVec T_java_lang_Object))))
(assert (= BAV280 (= (PO_LT T_javafe_ast_ASTDecoration T_java_lang_Object) true_term)))
(assert (= BAV281 (= T_javafe_ast_ASTDecoration (asChild T_javafe_ast_ASTDecoration T_java_lang_Object))))
(assert (= BAV282 (= (PO_LT T_javafe_parser_TagConstants T_javafe_ast_TagConstants) true_term)))
(assert (= BAV283 (= T_javafe_parser_TagConstants (asChild T_javafe_parser_TagConstants T_javafe_ast_TagConstants))))
(assert (= BAV284 (= (PO_LT T_javafe_ast_Identifier T_java_lang_Object) true_term)))
(assert (= BAV285 (= T_javafe_ast_Identifier (asChild T_javafe_ast_Identifier T_java_lang_Object))))
(assert (= BAV286 (forall ((?t Int)) (= (= (PO_LT ?t T_javafe_ast_Identifier) true_term) (= ?t T_javafe_ast_Identifier)))))
(assert (= BAV287 (forall ((?t Int)) (= (PO_LT ?t T_javafe_ast_Identifier) true_term))))
(assert (= BAV288 (forall ((?t Int)) (= ?t T_javafe_ast_Identifier))))
(assert (= BAV289 (= (PO_LT T_javafe_tc_MethodDeclVec T_java_lang_Object) true_term)))
(assert (= BAV290 (= T_javafe_tc_MethodDeclVec (asChild T_javafe_tc_MethodDeclVec T_java_lang_Object))))
(assert (= BAV291 (= (PO_LT T_java_io_FilterOutputStream T_java_io_OutputStream) true_term)))
(assert (= BAV292 (= T_java_io_FilterOutputStream (asChild T_java_io_FilterOutputStream T_java_io_OutputStream))))
(assert (= BAV293 (= (PO_LT T_java_lang_Comparable T_java_lang_Object) true_term)))
(assert (= BAV294 (= (PO_LT T_java_util_Properties T_java_util_Hashtable) true_term)))
(assert (= BAV295 (= T_java_util_Properties (asChild T_java_util_Properties T_java_util_Hashtable))))
(assert (= BAV296 (= (PO_LT T_javafe_ast_GenericVarDecl T_javafe_ast_ASTNode) true_term)))
(assert (= BAV297 (= T_javafe_ast_GenericVarDecl (asChild T_javafe_ast_GenericVarDecl T_javafe_ast_ASTNode))))
(assert (= BAV298 (= (PO_LT T_javafe_ast_Type T_javafe_ast_ASTNode) true_term)))
(assert (= BAV299 (= T_javafe_ast_Type (asChild T_javafe_ast_Type T_javafe_ast_ASTNode))))
(assert (= BAV300 (= (PO_LT T_java_util_EscjavaKeyValue T_java_lang_Object) true_term)))
(assert (= BAV301 (= (PO_LT T_javafe_ast_TypeDecl T_javafe_ast_ASTNode) true_term)))
(assert (= BAV302 (= T_javafe_ast_TypeDecl (asChild T_javafe_ast_TypeDecl T_javafe_ast_ASTNode))))
(assert (= BAV303 (= (PO_LT T_javafe_ast_TypeDecl T_javafe_ast_TypeDeclElem) true_term)))
(assert (= BAV304 (= (PO_LT T_javafe_tc_Env T_java_lang_Object) true_term)))
(assert (= BAV305 (= T_javafe_tc_Env (asChild T_javafe_tc_Env T_java_lang_Object))))
(assert (= BAV306 (= (PO_LT T_javafe_ast_OperatorTags T_java_lang_Object) true_term)))
(assert (= BAV307 (= T_javafe_ast_OperatorTags (asChild T_javafe_ast_OperatorTags T_java_lang_Object))))
(assert (= BAV308 (= (PO_LT T_javafe_ast_OperatorTags T_javafe_ast_GeneratedTags) true_term)))
(assert (= BAV309 (= (PO_LT T_javafe_ast_TagConstants T_javafe_ast_OperatorTags) true_term)))
(assert (= BAV310 (= T_javafe_ast_TagConstants (asChild T_javafe_ast_TagConstants T_javafe_ast_OperatorTags))))
(assert (= BAV311 (= (PO_LT T_javafe_ast_GenericBlockStmt T_javafe_ast_Stmt) true_term)))
(assert (= BAV312 (= T_javafe_ast_GenericBlockStmt (asChild T_javafe_ast_GenericBlockStmt T_javafe_ast_Stmt))))
(assert (= BAV313 (= (PO_LT T_java_lang_System T_java_lang_Object) true_term)))
(assert (= BAV314 (= T_java_lang_System (asChild T_java_lang_System T_java_lang_Object))))
(assert (= BAV315 (forall ((?t Int)) (= (= (PO_LT ?t T_java_lang_System) true_term) (= ?t T_java_lang_System)))))
(assert (= BAV316 (forall ((?t Int)) (= (PO_LT ?t T_java_lang_System) true_term))))
(assert (= BAV317 (forall ((?t Int)) (= ?t T_java_lang_System))))
(assert (= BAV318 (= (PO_LT T_javafe_ast_CompilationUnit T_javafe_ast_ASTNode) true_term)))
(assert (= BAV319 (= T_javafe_ast_CompilationUnit (asChild T_javafe_ast_CompilationUnit T_javafe_ast_ASTNode))))
(assert (= BAV320 (= (PO_LT T_javafe_ast_Stmt T_javafe_ast_ASTNode) true_term)))
(assert (= BAV321 (= T_javafe_ast_Stmt (asChild T_javafe_ast_Stmt T_javafe_ast_ASTNode))))
(assert (= BAV322 (= (PO_LT T_java_lang_String T_java_lang_Object) true_term)))
(assert (= BAV323 (= T_java_lang_String (asChild T_java_lang_String T_java_lang_Object))))
(assert (= BAV324 (forall ((?t Int)) (= (= (PO_LT ?t T_java_lang_String) true_term) (= ?t T_java_lang_String)))))
(assert (= BAV325 (forall ((?t Int)) (= (PO_LT ?t T_java_lang_String) true_term))))
(assert (= BAV326 (forall ((?t Int)) (= ?t T_java_lang_String))))
(assert (= BAV327 (= (PO_LT T_java_lang_String T_java_io_Serializable) true_term)))
(assert (= BAV328 (= (PO_LT T_java_lang_String T_java_lang_Comparable) true_term)))
(assert (= BAV329 (= (PO_LT T_javafe_tc_EnvForCU T_javafe_tc_Env) true_term)))
(assert (= BAV330 (= T_javafe_tc_EnvForCU (asChild T_javafe_tc_EnvForCU T_javafe_tc_Env))))
(assert (= BAV331 (= (PO_LT T_java_io_Serializable T_java_lang_Object) true_term)))
(assert (= BAV332 (= (PO_LT T_javafe_ast_RoutineDecl T_javafe_ast_ASTNode) true_term)))
(assert (= BAV333 (= T_javafe_ast_RoutineDecl (asChild T_javafe_ast_RoutineDecl T_javafe_ast_ASTNode))))
(assert (= BAV334 (= (PO_LT T_javafe_ast_RoutineDecl T_javafe_ast_TypeDeclElem) true_term)))
(assert (= BAV335 (= (PO_LT T_javafe_ast_GeneratedTags T_java_lang_Object) true_term)))
(assert (= BAV336 (= (PO_LT T_javafe_util_Location T_java_lang_Object) true_term)))
(assert (= BAV337 (= T_javafe_util_Location (asChild T_javafe_util_Location T_java_lang_Object))))
(assert (= BAV338 (= (PO_LT T_java_lang_Cloneable T_java_lang_Object) true_term)))
(assert (= BAV339 (= (PO_LT T_javafe_tc_EnvForTypeSig T_javafe_tc_Env) true_term)))
(assert (= BAV340 (= T_javafe_tc_EnvForTypeSig (asChild T_javafe_tc_EnvForTypeSig T_javafe_tc_Env))))
(assert (= BAV341 (= (PO_LT T_javafe_tc_TypeSig T_javafe_ast_Type) true_term)))
(assert (= BAV342 (= T_javafe_tc_TypeSig (asChild T_javafe_tc_TypeSig T_javafe_ast_Type))))
(assert (= BAV343 (= (PO_LT T_javafe_ast_MethodDecl T_javafe_ast_RoutineDecl) true_term)))
(assert (= BAV344 (= T_javafe_ast_MethodDecl (asChild T_javafe_ast_MethodDecl T_javafe_ast_RoutineDecl))))
(assert (= BAV345 (= (PO_LT T_javafe_ast_TypeDeclElem T_java_lang_Object) true_term)))
(assert (= BAV346 (= (PO_LT T_java_util_Map T_java_lang_Object) true_term)))
(assert (= BAV347 (= (PO_LT T_java_util_Map T_java_util_EscjavaKeyValue) true_term)))
(assert (= BAV348 (= (PO_LT T_javafe_ast_BlockStmt T_javafe_ast_GenericBlockStmt) true_term)))
(assert (= BAV349 (= T_javafe_ast_BlockStmt (asChild T_javafe_ast_BlockStmt T_javafe_ast_GenericBlockStmt))))
(assert (= BAV350 (= (PO_LT T_java_util_Hashtable T_java_util_Dictionary) true_term)))
(assert (= BAV351 (= T_java_util_Hashtable (asChild T_java_util_Hashtable T_java_util_Dictionary))))
(assert (= BAV352 (= (PO_LT T_java_util_Hashtable T_java_util_Map) true_term)))
(assert (= BAV353 (= (PO_LT T_java_util_Hashtable T_java_lang_Cloneable) true_term)))
(assert (= BAV354 (= (PO_LT T_java_util_Hashtable T_java_io_Serializable) true_term)))
(assert (= BAV355 (= (PO_LT T_javafe_ast_ASTNode T_java_lang_Object) true_term)))
(assert (= BAV356 (= T_javafe_ast_ASTNode (asChild T_javafe_ast_ASTNode T_java_lang_Object))))
(assert (= BAV357 (= (PO_LT T_javafe_ast_ASTNode T_java_lang_Cloneable) true_term)))
(assert (= BAV358 (= (PO_LT T_javafe_ast_FieldDecl T_javafe_ast_GenericVarDecl) true_term)))
(assert (= BAV359 (= T_javafe_ast_FieldDecl (asChild T_javafe_ast_FieldDecl T_javafe_ast_GenericVarDecl))))
(assert (= BAV360 (= (PO_LT T_javafe_ast_FieldDecl T_javafe_ast_TypeDeclElem) true_term)))
(assert (= BAV361 (= (PO_LT T_java_io_OutputStream T_java_lang_Object) true_term)))
(assert (= BAV362 (= T_java_io_OutputStream (asChild T_java_io_OutputStream T_java_lang_Object))))
(assert (= BAV363 (= (PO_LT T_java_util_Dictionary T_java_lang_Object) true_term)))
(assert (= BAV364 (= T_java_util_Dictionary (asChild T_java_util_Dictionary T_java_lang_Object))))
(assert (= BAV365 (= (PO_LT T_java_util_Dictionary T_java_util_EscjavaKeyValue) true_term)))
(assert (= BAV366 (= (PO_LT T_java_io_PrintStream T_java_io_FilterOutputStream) true_term)))
(assert (= BAV367 (= T_java_io_PrintStream (asChild T_java_io_PrintStream T_java_io_FilterOutputStream))))
(assert (= BAV368 (and (= arrayType (+ DIST_ZERO_1 GEN31)) (= T_boolean (+ DIST_ZERO_1 GEN32)) (= T_char (+ DIST_ZERO_1 GEN33)) (= T_byte (+ DIST_ZERO_1 GEN34)) (= T_short (+ DIST_ZERO_1 GEN35)) (= T_int (+ DIST_ZERO_1 GEN36)) (= T_long (+ DIST_ZERO_1 GEN37)) (= T_float (+ DIST_ZERO_1 GEN38)) (= T_double (+ DIST_ZERO_1 GEN39)) (= T__TYPE (+ DIST_ZERO_1 GEN40)) (= T_javafe_tc_FieldDeclVec (+ DIST_ZERO_1 GEN41)) (= T_javafe_ast_ASTDecoration (+ DIST_ZERO_1 GEN42)) (= T_javafe_parser_TagConstants (+ DIST_ZERO_1 GEN43)) (= T_javafe_ast_Identifier (+ DIST_ZERO_1 GEN44)) (= T_javafe_tc_MethodDeclVec (+ DIST_ZERO_1 GEN45)) (= T_java_io_FilterOutputStream (+ DIST_ZERO_1 GEN46)) (= T_java_lang_Comparable (+ DIST_ZERO_1 GEN47)) (= T_java_util_Properties (+ DIST_ZERO_1 GEN48)) (= T_javafe_ast_GenericVarDecl (+ DIST_ZERO_1 GEN49)) (= T_javafe_ast_Type (+ DIST_ZERO_1 GEN50)) (= T_java_util_EscjavaKeyValue (+ DIST_ZERO_1 GEN51)) (= T_javafe_ast_TypeDecl (+ DIST_ZERO_1 GEN52)) (= T_javafe_tc_Env (+ DIST_ZERO_1 GEN53)) (= T_javafe_ast_OperatorTags (+ DIST_ZERO_1 GEN54)) (= T_javafe_ast_TagConstants (+ DIST_ZERO_1 GEN55)) (= T_javafe_ast_GenericBlockStmt (+ DIST_ZERO_1 GEN56)) (= T_java_lang_System (+ DIST_ZERO_1 GEN57)) (= T_javafe_ast_CompilationUnit (+ DIST_ZERO_1 GEN58)) (= T_javafe_ast_Stmt (+ DIST_ZERO_1 GEN59)) (= T_java_lang_String (+ DIST_ZERO_1 29)) (= T_javafe_tc_EnvForCU (+ DIST_ZERO_1 30)) (= T_java_io_Serializable (+ DIST_ZERO_1 31)) (= T_javafe_ast_RoutineDecl (+ DIST_ZERO_1 32)) (= T_javafe_ast_GeneratedTags (+ DIST_ZERO_1 33)) (= T_javafe_util_Location (+ DIST_ZERO_1 34)) (= T_java_lang_Cloneable (+ DIST_ZERO_1 35)) (= T_javafe_tc_EnvForTypeSig (+ DIST_ZERO_1 36)) (= T_javafe_tc_TypeSig (+ DIST_ZERO_1 37)) (= T_javafe_ast_MethodDecl (+ DIST_ZERO_1 38)) (= T_javafe_ast_TypeDeclElem (+ DIST_ZERO_1 39)) (= T_java_lang_Object (+ DIST_ZERO_1 40)) (= T_java_util_Map (+ DIST_ZERO_1 41)) (= T_javafe_ast_BlockStmt (+ DIST_ZERO_1 42)) (= T_java_util_Hashtable (+ DIST_ZERO_1 43)) (= T_javafe_ast_ASTNode (+ DIST_ZERO_1 44)) (= T_javafe_ast_FieldDecl (+ DIST_ZERO_1 45)) (= T_java_io_OutputStream (+ DIST_ZERO_1 46)) (= T_java_util_Dictionary (+ DIST_ZERO_1 47)) (= T_java_io_PrintStream (+ DIST_ZERO_1 48)))))
(assert (= BAV369 (= arrayType (+ DIST_ZERO_1 GEN31))))
(assert (= BAV370 (= T_boolean (+ DIST_ZERO_1 GEN32))))
(assert (= BAV371 (= T_char (+ DIST_ZERO_1 GEN33))))
(assert (= BAV372 (= T_byte (+ DIST_ZERO_1 GEN34))))
(assert (= BAV373 (= T_short (+ DIST_ZERO_1 GEN35))))
(assert (= BAV374 (= T_int (+ DIST_ZERO_1 GEN36))))
(assert (= BAV375 (= T_long (+ DIST_ZERO_1 GEN37))))
(assert (= BAV376 (= T_float (+ DIST_ZERO_1 GEN38))))
(assert (= BAV377 (= T_double (+ DIST_ZERO_1 GEN39))))
(assert (= BAV378 (= T__TYPE (+ DIST_ZERO_1 GEN40))))
(assert (= BAV379 (= T_javafe_tc_FieldDeclVec (+ DIST_ZERO_1 GEN41))))
(assert (= BAV380 (= T_javafe_ast_ASTDecoration (+ DIST_ZERO_1 GEN42))))
(assert (= BAV381 (= T_javafe_parser_TagConstants (+ DIST_ZERO_1 GEN43))))
(assert (= BAV382 (= T_javafe_ast_Identifier (+ DIST_ZERO_1 GEN44))))
(assert (= BAV383 (= T_javafe_tc_MethodDeclVec (+ DIST_ZERO_1 GEN45))))
(assert (= BAV384 (= T_java_io_FilterOutputStream (+ DIST_ZERO_1 GEN46))))
(assert (= BAV385 (= T_java_lang_Comparable (+ DIST_ZERO_1 GEN47))))
(assert (= BAV386 (= T_java_util_Properties (+ DIST_ZERO_1 GEN48))))
(assert (= BAV387 (= T_javafe_ast_GenericVarDecl (+ DIST_ZERO_1 GEN49))))
(assert (= BAV388 (= T_javafe_ast_Type (+ DIST_ZERO_1 GEN50))))
(assert (= BAV389 (= T_java_util_EscjavaKeyValue (+ DIST_ZERO_1 GEN51))))
(assert (= BAV390 (= T_javafe_ast_TypeDecl (+ DIST_ZERO_1 GEN52))))
(assert (= BAV391 (= T_javafe_tc_Env (+ DIST_ZERO_1 GEN53))))
(assert (= BAV392 (= T_javafe_ast_OperatorTags (+ DIST_ZERO_1 GEN54))))
(assert (= BAV393 (= T_javafe_ast_TagConstants (+ DIST_ZERO_1 GEN55))))
(assert (= BAV394 (= T_javafe_ast_GenericBlockStmt (+ DIST_ZERO_1 GEN56))))
(assert (= BAV395 (= T_java_lang_System (+ DIST_ZERO_1 GEN57))))
(assert (= BAV396 (= T_javafe_ast_CompilationUnit (+ DIST_ZERO_1 GEN58))))
(assert (= BAV397 (= T_javafe_ast_Stmt (+ DIST_ZERO_1 GEN59))))
(assert (= BAV398 (= T_java_lang_String (+ DIST_ZERO_1 29))))
(assert (= BAV399 (= T_javafe_tc_EnvForCU (+ DIST_ZERO_1 30))))
(assert (= BAV400 (= T_java_io_Serializable (+ DIST_ZERO_1 31))))
(assert (= BAV401 (= T_javafe_ast_RoutineDecl (+ DIST_ZERO_1 32))))
(assert (= BAV402 (= T_javafe_ast_GeneratedTags (+ DIST_ZERO_1 33))))
(assert (= BAV403 (= T_javafe_util_Location (+ DIST_ZERO_1 34))))
(assert (= BAV404 (= T_java_lang_Cloneable (+ DIST_ZERO_1 35))))
(assert (= BAV405 (= T_javafe_tc_EnvForTypeSig (+ DIST_ZERO_1 36))))
(assert (= BAV406 (= T_javafe_tc_TypeSig (+ DIST_ZERO_1 37))))
(assert (= BAV407 (= T_javafe_ast_MethodDecl (+ DIST_ZERO_1 38))))
(assert (= BAV408 (= T_javafe_ast_TypeDeclElem (+ DIST_ZERO_1 39))))
(assert (= BAV409 (= T_java_lang_Object (+ DIST_ZERO_1 40))))
(assert (= BAV410 (= T_java_util_Map (+ DIST_ZERO_1 41))))
(assert (= BAV411 (= T_javafe_ast_BlockStmt (+ DIST_ZERO_1 42))))
(assert (= BAV412 (= T_java_util_Hashtable (+ DIST_ZERO_1 43))))
(assert (= BAV413 (= T_javafe_ast_ASTNode (+ DIST_ZERO_1 44))))
(assert (= BAV414 (= T_javafe_ast_FieldDecl (+ DIST_ZERO_1 45))))
(assert (= BAV415 (= T_java_io_OutputStream (+ DIST_ZERO_1 46))))
(assert (= BAV416 (= T_java_util_Dictionary (+ DIST_ZERO_1 47))))
(assert (= BAV417 (= T_java_io_PrintStream (+ DIST_ZERO_1 48))))
(assert (= BAV418 (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String)))))
(assert (= BAV419 (= keywordStrings_63_181_30 null)))
(assert (= BAV420 (= (typeof keywordStrings_63_181_30) (array T_java_lang_String))))
(assert (= BAV421 (= (arrayLength keywordStrings_63_181_30) 51)))
(assert (= BAV422 (= true_term (is STRINGLIT_64_44_26 T_int))))
(assert (= BAV423 (= STRINGLIT_64_44_26 110)))
(assert (= BAV424 (= true_term (is IDENT_64_25_26 T_int))))
(assert (= BAV425 (= IDENT_64_25_26 93)))
(assert (= BAV426 (= true_term (is MODIFIERPRAGMA_63_25_26 T_int))))
(assert (= BAV427 (= MODIFIERPRAGMA_63_25_26 115)))
(assert (= BAV428 (= true_term (is NULL_63_82_26 T_int))))
(assert (= BAV429 (= NULL_63_82_26 163)))
(assert (= BAV430 (= true_term (is otherCodes_63_202_27 (array T_int)))))
(assert (= BAV431 (= otherCodes_63_202_27 null)))
(assert (= BAV432 (= (typeof otherCodes_63_202_27) (array T_int))))
(assert (= BAV433 (= (arrayLength otherCodes_63_202_27) 15)))
(assert (= BAV434 (= true_term (is otherStrings_63_193_30 (array T_java_lang_String)))))
(assert (= BAV435 (= otherStrings_63_193_30 null)))
(assert (= BAV436 (= (typeof otherStrings_63_193_30) (array T_java_lang_String))))
(assert (= BAV437 (= (arrayLength otherStrings_63_193_30) 15)))
(assert (= BAV438 (= true_term (is LONGLIT_64_40_26 T_int))))
(assert (= BAV439 (= LONGLIT_64_40_26 106)))
(assert (= BAV440 (= true_term (is noTokens_63_212_27 T_int))))
(assert (= BAV441 (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int))))
(assert (= BAV442 (= TYPEMODIFIERPRAGMA_63_28_26 118)))
(assert (= BAV443 (= true_term (is DOUBLELIT_64_43_26 T_int))))
(assert (= BAV444 (= DOUBLELIT_64_43_26 109)))
(assert (= BAV445 (= true_term (is LEXICALPRAGMA_63_24_26 T_int))))
(assert (= BAV446 (= LEXICALPRAGMA_63_24_26 114)))
(assert (= BAV447 (= true_term (is out_20_83_49 T_java_io_PrintStream))))
(assert (= BAV448 (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String)))))
(assert (= BAV449 (= punctuationStrings_63_134_22 null)))
(assert (= BAV450 (= (typeof punctuationStrings_63_134_22) (array T_java_lang_String))))
(assert (= BAV451 (= (arrayLength punctuationStrings_63_134_22) 48)))
(assert (= BAV452 (= true_term (is INTLIT_64_39_26 T_int))))
(assert (= BAV453 (= INTLIT_64_39_26 105)))
(assert (= BAV454 (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int))))
(assert (= BAV455 (= TYPEDECLELEMPRAGMA_63_27_26 117)))
(assert (= BAV456 (= true_term (is punctuationCodes_63_164_19 (array T_int)))))
(assert (= BAV457 (= punctuationCodes_63_164_19 null)))
(assert (= BAV458 (= (typeof punctuationCodes_63_164_19) (array T_int))))
(assert (= BAV459 (= (arrayLength punctuationCodes_63_164_19) 48)))
(assert (= BAV460 (= true_term (is FIRST_KEYWORD_63_51_26 T_int))))
(assert (= BAV461 (= FIRST_KEYWORD_63_51_26 133)))
(assert (= BAV462 (= true_term (is FLOATLIT_64_42_26 T_int))))
(assert (= BAV463 (= FLOATLIT_64_42_26 108)))
(assert (= BAV464 (= true_term (is PARSED_6_772_28 T_int))))
(assert (= BAV465 (= PARSED_6_772_28 2)))
(assert (= BAV466 (= true_term (is LAST_KEYWORD_63_103_26 T_int))))
(assert (= BAV467 (= LAST_KEYWORD_63_103_26 183)))
(assert (= BAV468 (= true_term (is PREPPED_6_775_28 T_int))))
(assert (= BAV469 (= PREPPED_6_775_28 5)))
(assert (= BAV470 (= true_term (is BOOLEANLIT_64_38_26 T_int))))
(assert (= BAV471 (= BOOLEANLIT_64_38_26 104)))
(assert (= BAV472 (= true_term (is STMTPRAGMA_63_26_26 T_int))))
(assert (= BAV473 (= STMTPRAGMA_63_26_26 116)))
(assert (= BAV474 (= true_term (is CHARLIT_64_41_26 T_int))))
(assert (= BAV475 (= CHARLIT_64_41_26 107)))
(assert (= BAV476 (=> true (=> (and (= staticContext_pre_46_22 staticContext_46_22) (= staticContext_46_22 (asField staticContext_46_22 T_boolean)) (= keywordStrings_pre_63_181_30 keywordStrings_63_181_30) (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String))) (= true_term (isAllocated keywordStrings_63_181_30 alloc)) (= STRINGLIT_pre_64_44_26 STRINGLIT_64_44_26) (= true_term (is STRINGLIT_64_44_26 T_int)) (= enclosingEnv_pre_6_52_36 enclosingEnv_6_52_36) (= enclosingEnv_6_52_36 (asField enclosingEnv_6_52_36 T_javafe_tc_Env)) (< (fClosedTime enclosingEnv_6_52_36) alloc) (= id_pre_16_15_34 id_16_15_34) (= id_16_15_34 (asField id_16_15_34 T_javafe_ast_Identifier)) (< (fClosedTime id_16_15_34) alloc) (forall ((?s Int)) (=> (not (= ?s null)) (not (= (S_select id_16_15_34 ?s) null)))) (= IDENT_pre_64_25_26 IDENT_64_25_26) (= true_term (is IDENT_64_25_26 T_int)) (= CU_pre_6_71_30 CU_6_71_30) (= CU_6_71_30 (asField CU_6_71_30 T_javafe_ast_CompilationUnit)) (< (fClosedTime CU_6_71_30) alloc) (= MODIFIERPRAGMA_pre_63_25_26 MODIFIERPRAGMA_63_25_26) (= true_term (is MODIFIERPRAGMA_63_25_26 T_int)) (= NULL_pre_63_82_26 NULL_63_82_26) (= true_term (is NULL_63_82_26 T_int)) (= otherCodes_pre_63_202_27 otherCodes_63_202_27) (= true_term (is otherCodes_63_202_27 (array T_int))) (= true_term (isAllocated otherCodes_63_202_27 alloc)) (= member_pre_6_44_39 member_6_44_39) (= member_6_44_39 (asField member_6_44_39 T_boolean)) (= methods_pre_6_883_26 methods_6_883_26) (= methods_6_883_26 (asField methods_6_883_26 T_javafe_tc_MethodDeclVec)) (< (fClosedTime methods_6_883_26) alloc) (= otherStrings_pre_63_193_30 otherStrings_63_193_30) (= true_term (is otherStrings_63_193_30 (array T_java_lang_String))) (= true_term (isAllocated otherStrings_63_193_30 alloc)) (= LONGLIT_pre_64_40_26 LONGLIT_64_40_26) (= true_term (is LONGLIT_64_40_26 T_int)) (= simpleName_pre_6_37_38 simpleName_6_37_38) (= simpleName_6_37_38 (asField simpleName_6_37_38 T_java_lang_String)) (< (fClosedTime simpleName_6_37_38) alloc) (= noTokens_pre_63_212_27 noTokens_63_212_27) (= true_term (is noTokens_63_212_27 T_int)) (= elements_pre_15_61_39 elements_15_61_39) (= elements_15_61_39 (asField elements_15_61_39 (array T_javafe_ast_MethodDecl))) (< (fClosedTime elements_15_61_39) alloc) (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (S_select elements_15_61_39 ?s_1_) null)))) (= TYPEMODIFIERPRAGMA_pre_63_28_26 TYPEMODIFIERPRAGMA_63_28_26) (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int)) (= id_pre_28_32_34 id_28_32_34) (= id_28_32_34 (asField id_28_32_34 T_javafe_ast_Identifier)) (< (fClosedTime id_28_32_34) alloc) (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (S_select id_28_32_34 ?s_2_) null)))) (= DOUBLELIT_pre_64_43_26 DOUBLELIT_64_43_26) (= true_term (is DOUBLELIT_64_43_26 T_int)) (= fields_pre_6_875_27 fields_6_875_27) (= fields_6_875_27 (asField fields_6_875_27 T_javafe_tc_FieldDeclVec)) (< (fClosedTime fields_6_875_27) alloc) (= LEXICALPRAGMA_pre_63_24_26 LEXICALPRAGMA_63_24_26) (= true_term (is LEXICALPRAGMA_63_24_26 T_int)) (= owner_pre_5_35_28 owner_5_35_28) (= owner_5_35_28 (asField owner_5_35_28 T_java_lang_Object)) (< (fClosedTime owner_5_35_28) alloc) (= out_pre_20_83_49 out_20_83_49) (= true_term (is out_20_83_49 T_java_io_PrintStream)) (= true_term (isAllocated out_20_83_49 alloc)) (not (= out_20_83_49 null)) (= parent_pre_33_32 parent_33_32) (= parent_33_32 (asField parent_33_32 T_javafe_tc_Env)) (< (fClosedTime parent_33_32) alloc) (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (S_select parent_33_32 ?s_3_) null)))) (= punctuationStrings_pre_63_134_22 punctuationStrings_63_134_22) (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String))) (= true_term (isAllocated punctuationStrings_63_134_22 alloc)) (= INTLIT_pre_64_39_26 INTLIT_64_39_26) (= true_term (is INTLIT_64_39_26 T_int)) (= count_pre_56_67_33 count_56_67_33) (= count_56_67_33 (asField count_56_67_33 T_int)) (= TYPEDECLELEMPRAGMA_pre_63_27_26 TYPEDECLELEMPRAGMA_63_27_26) (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int)) (= punctuationCodes_pre_63_164_19 punctuationCodes_63_164_19) (= true_term (is punctuationCodes_63_164_19 (array T_int))) (= true_term (isAllocated punctuationCodes_63_164_19 alloc)) (= FIRST_KEYWORD_pre_63_51_26 FIRST_KEYWORD_63_51_26) (= true_term (is FIRST_KEYWORD_63_51_26 T_int)) (= peer_pre_38_36 peer_38_36) (= peer_38_36 (asField peer_38_36 T_javafe_tc_TypeSig)) (< (fClosedTime peer_38_36) alloc) (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (S_select peer_38_36 ?s_4_) null)))) (= FLOATLIT_pre_64_42_26 FLOATLIT_64_42_26) (= true_term (is FLOATLIT_64_42_26 T_int)) (= state_pre_6_787_15 state_6_787_15) (= state_6_787_15 (asField state_6_787_15 T_int)) (= myTypeDecl_pre_6_63_40 myTypeDecl_6_63_40) (= myTypeDecl_6_63_40 (asField myTypeDecl_6_63_40 T_javafe_ast_TypeDecl)) (< (fClosedTime myTypeDecl_6_63_40) alloc) (= enclosingType_pre_6_32_39 enclosingType_6_32_39) (= enclosingType_6_32_39 (asField enclosingType_6_32_39 T_javafe_tc_TypeSig)) (< (fClosedTime enclosingType_6_32_39) alloc) (= PARSED_pre_6_772_28 PARSED_6_772_28) (= true_term (is PARSED_6_772_28 T_int)) (= LAST_KEYWORD_pre_63_103_26 LAST_KEYWORD_63_103_26) (= true_term (is LAST_KEYWORD_63_103_26 T_int)) (= tokenType_pre_19_90_8 tokenType_19_90_8) (= tokenType_19_90_8 (asField tokenType_19_90_8 T_int)) (= count_pre_15_67_33 count_15_67_33) (= count_15_67_33 (asField count_15_67_33 T_int)) (= PREPPED_pre_6_775_28 PREPPED_6_775_28) (= true_term (is PREPPED_6_775_28 T_int)) (= BOOLEANLIT_pre_64_38_26 BOOLEANLIT_64_38_26) (= true_term (is BOOLEANLIT_64_38_26 T_int)) (= STMTPRAGMA_pre_63_26_26 STMTPRAGMA_63_26_26) (= true_term (is STMTPRAGMA_63_26_26 T_int)) (= elements_pre_56_61_38 elements_56_61_38) (= elements_56_61_38 (asField elements_56_61_38 (array T_javafe_ast_FieldDecl))) (< (fClosedTime elements_56_61_38) alloc) (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (S_select elements_56_61_38 ?s_5_) null)))) (= CHARLIT_pre_64_41_26 CHARLIT_64_41_26) (= true_term (is CHARLIT_64_41_26 T_int)) (= elems_pre elems) (= elems (asElems elems)) (< (eClosedTime elems) alloc) (= LS (asLockSet LS)) (= alloc_pre alloc)) (not (and (= true_term (is this T_javafe_tc_EnvForTypeSig)) (= true_term (isAllocated this alloc)) (not (= this null)) (= RES (S_select peer_38_36 this)) (= true_term true_term) (or (not (= ecReturn ecReturn)) (and (= ecReturn ecReturn) (not (=> (= ecReturn ecReturn) (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null))))))))))))
(assert (= BAV477 (=> (and (= staticContext_pre_46_22 staticContext_46_22) (= staticContext_46_22 (asField staticContext_46_22 T_boolean)) (= keywordStrings_pre_63_181_30 keywordStrings_63_181_30) (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String))) (= true_term (isAllocated keywordStrings_63_181_30 alloc)) (= STRINGLIT_pre_64_44_26 STRINGLIT_64_44_26) (= true_term (is STRINGLIT_64_44_26 T_int)) (= enclosingEnv_pre_6_52_36 enclosingEnv_6_52_36) (= enclosingEnv_6_52_36 (asField enclosingEnv_6_52_36 T_javafe_tc_Env)) (< (fClosedTime enclosingEnv_6_52_36) alloc) (= id_pre_16_15_34 id_16_15_34) (= id_16_15_34 (asField id_16_15_34 T_javafe_ast_Identifier)) (< (fClosedTime id_16_15_34) alloc) (forall ((?s Int)) (=> (not (= ?s null)) (not (= (S_select id_16_15_34 ?s) null)))) (= IDENT_pre_64_25_26 IDENT_64_25_26) (= true_term (is IDENT_64_25_26 T_int)) (= CU_pre_6_71_30 CU_6_71_30) (= CU_6_71_30 (asField CU_6_71_30 T_javafe_ast_CompilationUnit)) (< (fClosedTime CU_6_71_30) alloc) (= MODIFIERPRAGMA_pre_63_25_26 MODIFIERPRAGMA_63_25_26) (= true_term (is MODIFIERPRAGMA_63_25_26 T_int)) (= NULL_pre_63_82_26 NULL_63_82_26) (= true_term (is NULL_63_82_26 T_int)) (= otherCodes_pre_63_202_27 otherCodes_63_202_27) (= true_term (is otherCodes_63_202_27 (array T_int))) (= true_term (isAllocated otherCodes_63_202_27 alloc)) (= member_pre_6_44_39 member_6_44_39) (= member_6_44_39 (asField member_6_44_39 T_boolean)) (= methods_pre_6_883_26 methods_6_883_26) (= methods_6_883_26 (asField methods_6_883_26 T_javafe_tc_MethodDeclVec)) (< (fClosedTime methods_6_883_26) alloc) (= otherStrings_pre_63_193_30 otherStrings_63_193_30) (= true_term (is otherStrings_63_193_30 (array T_java_lang_String))) (= true_term (isAllocated otherStrings_63_193_30 alloc)) (= LONGLIT_pre_64_40_26 LONGLIT_64_40_26) (= true_term (is LONGLIT_64_40_26 T_int)) (= simpleName_pre_6_37_38 simpleName_6_37_38) (= simpleName_6_37_38 (asField simpleName_6_37_38 T_java_lang_String)) (< (fClosedTime simpleName_6_37_38) alloc) (= noTokens_pre_63_212_27 noTokens_63_212_27) (= true_term (is noTokens_63_212_27 T_int)) (= elements_pre_15_61_39 elements_15_61_39) (= elements_15_61_39 (asField elements_15_61_39 (array T_javafe_ast_MethodDecl))) (< (fClosedTime elements_15_61_39) alloc) (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (S_select elements_15_61_39 ?s_1_) null)))) (= TYPEMODIFIERPRAGMA_pre_63_28_26 TYPEMODIFIERPRAGMA_63_28_26) (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int)) (= id_pre_28_32_34 id_28_32_34) (= id_28_32_34 (asField id_28_32_34 T_javafe_ast_Identifier)) (< (fClosedTime id_28_32_34) alloc) (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (S_select id_28_32_34 ?s_2_) null)))) (= DOUBLELIT_pre_64_43_26 DOUBLELIT_64_43_26) (= true_term (is DOUBLELIT_64_43_26 T_int)) (= fields_pre_6_875_27 fields_6_875_27) (= fields_6_875_27 (asField fields_6_875_27 T_javafe_tc_FieldDeclVec)) (< (fClosedTime fields_6_875_27) alloc) (= LEXICALPRAGMA_pre_63_24_26 LEXICALPRAGMA_63_24_26) (= true_term (is LEXICALPRAGMA_63_24_26 T_int)) (= owner_pre_5_35_28 owner_5_35_28) (= owner_5_35_28 (asField owner_5_35_28 T_java_lang_Object)) (< (fClosedTime owner_5_35_28) alloc) (= out_pre_20_83_49 out_20_83_49) (= true_term (is out_20_83_49 T_java_io_PrintStream)) (= true_term (isAllocated out_20_83_49 alloc)) (not (= out_20_83_49 null)) (= parent_pre_33_32 parent_33_32) (= parent_33_32 (asField parent_33_32 T_javafe_tc_Env)) (< (fClosedTime parent_33_32) alloc) (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (S_select parent_33_32 ?s_3_) null)))) (= punctuationStrings_pre_63_134_22 punctuationStrings_63_134_22) (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String))) (= true_term (isAllocated punctuationStrings_63_134_22 alloc)) (= INTLIT_pre_64_39_26 INTLIT_64_39_26) (= true_term (is INTLIT_64_39_26 T_int)) (= count_pre_56_67_33 count_56_67_33) (= count_56_67_33 (asField count_56_67_33 T_int)) (= TYPEDECLELEMPRAGMA_pre_63_27_26 TYPEDECLELEMPRAGMA_63_27_26) (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int)) (= punctuationCodes_pre_63_164_19 punctuationCodes_63_164_19) (= true_term (is punctuationCodes_63_164_19 (array T_int))) (= true_term (isAllocated punctuationCodes_63_164_19 alloc)) (= FIRST_KEYWORD_pre_63_51_26 FIRST_KEYWORD_63_51_26) (= true_term (is FIRST_KEYWORD_63_51_26 T_int)) (= peer_pre_38_36 peer_38_36) (= peer_38_36 (asField peer_38_36 T_javafe_tc_TypeSig)) (< (fClosedTime peer_38_36) alloc) (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (S_select peer_38_36 ?s_4_) null)))) (= FLOATLIT_pre_64_42_26 FLOATLIT_64_42_26) (= true_term (is FLOATLIT_64_42_26 T_int)) (= state_pre_6_787_15 state_6_787_15) (= state_6_787_15 (asField state_6_787_15 T_int)) (= myTypeDecl_pre_6_63_40 myTypeDecl_6_63_40) (= myTypeDecl_6_63_40 (asField myTypeDecl_6_63_40 T_javafe_ast_TypeDecl)) (< (fClosedTime myTypeDecl_6_63_40) alloc) (= enclosingType_pre_6_32_39 enclosingType_6_32_39) (= enclosingType_6_32_39 (asField enclosingType_6_32_39 T_javafe_tc_TypeSig)) (< (fClosedTime enclosingType_6_32_39) alloc) (= PARSED_pre_6_772_28 PARSED_6_772_28) (= true_term (is PARSED_6_772_28 T_int)) (= LAST_KEYWORD_pre_63_103_26 LAST_KEYWORD_63_103_26) (= true_term (is LAST_KEYWORD_63_103_26 T_int)) (= tokenType_pre_19_90_8 tokenType_19_90_8) (= tokenType_19_90_8 (asField tokenType_19_90_8 T_int)) (= count_pre_15_67_33 count_15_67_33) (= count_15_67_33 (asField count_15_67_33 T_int)) (= PREPPED_pre_6_775_28 PREPPED_6_775_28) (= true_term (is PREPPED_6_775_28 T_int)) (= BOOLEANLIT_pre_64_38_26 BOOLEANLIT_64_38_26) (= true_term (is BOOLEANLIT_64_38_26 T_int)) (= STMTPRAGMA_pre_63_26_26 STMTPRAGMA_63_26_26) (= true_term (is STMTPRAGMA_63_26_26 T_int)) (= elements_pre_56_61_38 elements_56_61_38) (= elements_56_61_38 (asField elements_56_61_38 (array T_javafe_ast_FieldDecl))) (< (fClosedTime elements_56_61_38) alloc) (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (S_select elements_56_61_38 ?s_5_) null)))) (= CHARLIT_pre_64_41_26 CHARLIT_64_41_26) (= true_term (is CHARLIT_64_41_26 T_int)) (= elems_pre elems) (= elems (asElems elems)) (< (eClosedTime elems) alloc) (= LS (asLockSet LS)) (= alloc_pre alloc)) (not (and (= true_term (is this T_javafe_tc_EnvForTypeSig)) (= true_term (isAllocated this alloc)) (not (= this null)) (= RES (S_select peer_38_36 this)) (= true_term true_term) (or (not (= ecReturn ecReturn)) (and (= ecReturn ecReturn) (not (=> (= ecReturn ecReturn) (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null)))))))))))
(assert (= BAV478 (and (= staticContext_pre_46_22 staticContext_46_22) (= staticContext_46_22 (asField staticContext_46_22 T_boolean)) (= keywordStrings_pre_63_181_30 keywordStrings_63_181_30) (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String))) (= true_term (isAllocated keywordStrings_63_181_30 alloc)) (= STRINGLIT_pre_64_44_26 STRINGLIT_64_44_26) (= true_term (is STRINGLIT_64_44_26 T_int)) (= enclosingEnv_pre_6_52_36 enclosingEnv_6_52_36) (= enclosingEnv_6_52_36 (asField enclosingEnv_6_52_36 T_javafe_tc_Env)) (< (fClosedTime enclosingEnv_6_52_36) alloc) (= id_pre_16_15_34 id_16_15_34) (= id_16_15_34 (asField id_16_15_34 T_javafe_ast_Identifier)) (< (fClosedTime id_16_15_34) alloc) (forall ((?s Int)) (=> (not (= ?s null)) (not (= (S_select id_16_15_34 ?s) null)))) (= IDENT_pre_64_25_26 IDENT_64_25_26) (= true_term (is IDENT_64_25_26 T_int)) (= CU_pre_6_71_30 CU_6_71_30) (= CU_6_71_30 (asField CU_6_71_30 T_javafe_ast_CompilationUnit)) (< (fClosedTime CU_6_71_30) alloc) (= MODIFIERPRAGMA_pre_63_25_26 MODIFIERPRAGMA_63_25_26) (= true_term (is MODIFIERPRAGMA_63_25_26 T_int)) (= NULL_pre_63_82_26 NULL_63_82_26) (= true_term (is NULL_63_82_26 T_int)) (= otherCodes_pre_63_202_27 otherCodes_63_202_27) (= true_term (is otherCodes_63_202_27 (array T_int))) (= true_term (isAllocated otherCodes_63_202_27 alloc)) (= member_pre_6_44_39 member_6_44_39) (= member_6_44_39 (asField member_6_44_39 T_boolean)) (= methods_pre_6_883_26 methods_6_883_26) (= methods_6_883_26 (asField methods_6_883_26 T_javafe_tc_MethodDeclVec)) (< (fClosedTime methods_6_883_26) alloc) (= otherStrings_pre_63_193_30 otherStrings_63_193_30) (= true_term (is otherStrings_63_193_30 (array T_java_lang_String))) (= true_term (isAllocated otherStrings_63_193_30 alloc)) (= LONGLIT_pre_64_40_26 LONGLIT_64_40_26) (= true_term (is LONGLIT_64_40_26 T_int)) (= simpleName_pre_6_37_38 simpleName_6_37_38) (= simpleName_6_37_38 (asField simpleName_6_37_38 T_java_lang_String)) (< (fClosedTime simpleName_6_37_38) alloc) (= noTokens_pre_63_212_27 noTokens_63_212_27) (= true_term (is noTokens_63_212_27 T_int)) (= elements_pre_15_61_39 elements_15_61_39) (= elements_15_61_39 (asField elements_15_61_39 (array T_javafe_ast_MethodDecl))) (< (fClosedTime elements_15_61_39) alloc) (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (S_select elements_15_61_39 ?s_1_) null)))) (= TYPEMODIFIERPRAGMA_pre_63_28_26 TYPEMODIFIERPRAGMA_63_28_26) (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int)) (= id_pre_28_32_34 id_28_32_34) (= id_28_32_34 (asField id_28_32_34 T_javafe_ast_Identifier)) (< (fClosedTime id_28_32_34) alloc) (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (S_select id_28_32_34 ?s_2_) null)))) (= DOUBLELIT_pre_64_43_26 DOUBLELIT_64_43_26) (= true_term (is DOUBLELIT_64_43_26 T_int)) (= fields_pre_6_875_27 fields_6_875_27) (= fields_6_875_27 (asField fields_6_875_27 T_javafe_tc_FieldDeclVec)) (< (fClosedTime fields_6_875_27) alloc) (= LEXICALPRAGMA_pre_63_24_26 LEXICALPRAGMA_63_24_26) (= true_term (is LEXICALPRAGMA_63_24_26 T_int)) (= owner_pre_5_35_28 owner_5_35_28) (= owner_5_35_28 (asField owner_5_35_28 T_java_lang_Object)) (< (fClosedTime owner_5_35_28) alloc) (= out_pre_20_83_49 out_20_83_49) (= true_term (is out_20_83_49 T_java_io_PrintStream)) (= true_term (isAllocated out_20_83_49 alloc)) (not (= out_20_83_49 null)) (= parent_pre_33_32 parent_33_32) (= parent_33_32 (asField parent_33_32 T_javafe_tc_Env)) (< (fClosedTime parent_33_32) alloc) (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (S_select parent_33_32 ?s_3_) null)))) (= punctuationStrings_pre_63_134_22 punctuationStrings_63_134_22) (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String))) (= true_term (isAllocated punctuationStrings_63_134_22 alloc)) (= INTLIT_pre_64_39_26 INTLIT_64_39_26) (= true_term (is INTLIT_64_39_26 T_int)) (= count_pre_56_67_33 count_56_67_33) (= count_56_67_33 (asField count_56_67_33 T_int)) (= TYPEDECLELEMPRAGMA_pre_63_27_26 TYPEDECLELEMPRAGMA_63_27_26) (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int)) (= punctuationCodes_pre_63_164_19 punctuationCodes_63_164_19) (= true_term (is punctuationCodes_63_164_19 (array T_int))) (= true_term (isAllocated punctuationCodes_63_164_19 alloc)) (= FIRST_KEYWORD_pre_63_51_26 FIRST_KEYWORD_63_51_26) (= true_term (is FIRST_KEYWORD_63_51_26 T_int)) (= peer_pre_38_36 peer_38_36) (= peer_38_36 (asField peer_38_36 T_javafe_tc_TypeSig)) (< (fClosedTime peer_38_36) alloc) (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (S_select peer_38_36 ?s_4_) null)))) (= FLOATLIT_pre_64_42_26 FLOATLIT_64_42_26) (= true_term (is FLOATLIT_64_42_26 T_int)) (= state_pre_6_787_15 state_6_787_15) (= state_6_787_15 (asField state_6_787_15 T_int)) (= myTypeDecl_pre_6_63_40 myTypeDecl_6_63_40) (= myTypeDecl_6_63_40 (asField myTypeDecl_6_63_40 T_javafe_ast_TypeDecl)) (< (fClosedTime myTypeDecl_6_63_40) alloc) (= enclosingType_pre_6_32_39 enclosingType_6_32_39) (= enclosingType_6_32_39 (asField enclosingType_6_32_39 T_javafe_tc_TypeSig)) (< (fClosedTime enclosingType_6_32_39) alloc) (= PARSED_pre_6_772_28 PARSED_6_772_28) (= true_term (is PARSED_6_772_28 T_int)) (= LAST_KEYWORD_pre_63_103_26 LAST_KEYWORD_63_103_26) (= true_term (is LAST_KEYWORD_63_103_26 T_int)) (= tokenType_pre_19_90_8 tokenType_19_90_8) (= tokenType_19_90_8 (asField tokenType_19_90_8 T_int)) (= count_pre_15_67_33 count_15_67_33) (= count_15_67_33 (asField count_15_67_33 T_int)) (= PREPPED_pre_6_775_28 PREPPED_6_775_28) (= true_term (is PREPPED_6_775_28 T_int)) (= BOOLEANLIT_pre_64_38_26 BOOLEANLIT_64_38_26) (= true_term (is BOOLEANLIT_64_38_26 T_int)) (= STMTPRAGMA_pre_63_26_26 STMTPRAGMA_63_26_26) (= true_term (is STMTPRAGMA_63_26_26 T_int)) (= elements_pre_56_61_38 elements_56_61_38) (= elements_56_61_38 (asField elements_56_61_38 (array T_javafe_ast_FieldDecl))) (< (fClosedTime elements_56_61_38) alloc) (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (S_select elements_56_61_38 ?s_5_) null)))) (= CHARLIT_pre_64_41_26 CHARLIT_64_41_26) (= true_term (is CHARLIT_64_41_26 T_int)) (= elems_pre elems) (= elems (asElems elems)) (< (eClosedTime elems) alloc) (= LS (asLockSet LS)) (= alloc_pre alloc))))
(assert (= BAV479 (= staticContext_pre_46_22 staticContext_46_22)))
(assert (= BAV480 (= staticContext_46_22 (asField staticContext_46_22 T_boolean))))
(assert (= BAV481 (= keywordStrings_pre_63_181_30 keywordStrings_63_181_30)))
(assert (= BAV482 (= true_term (is keywordStrings_63_181_30 (array T_java_lang_String)))))
(assert (= BAV483 (= true_term (isAllocated keywordStrings_63_181_30 alloc))))
(assert (= BAV484 (= STRINGLIT_pre_64_44_26 STRINGLIT_64_44_26)))
(assert (= BAV485 (= true_term (is STRINGLIT_64_44_26 T_int))))
(assert (= BAV486 (= enclosingEnv_pre_6_52_36 enclosingEnv_6_52_36)))
(assert (= BAV487 (= enclosingEnv_6_52_36 (asField enclosingEnv_6_52_36 T_javafe_tc_Env))))
(assert (= BAV488 (< (fClosedTime enclosingEnv_6_52_36) alloc)))
(assert (= BAV489 (= id_pre_16_15_34 id_16_15_34)))
(assert (= BAV490 (= id_16_15_34 (asField id_16_15_34 T_javafe_ast_Identifier))))
(assert (= BAV491 (< (fClosedTime id_16_15_34) alloc)))
(assert (= BAV492 (forall ((?s Int)) (=> (not (= ?s null)) (not (= (S_select id_16_15_34 ?s) null))))))
(assert (= BAV493 (forall ((?s Int)) (= ?s null))))
(assert (= BAV494 (forall ((?s Int)) (= (S_select id_16_15_34 ?s) null))))
(assert (= BAV495 (= IDENT_pre_64_25_26 IDENT_64_25_26)))
(assert (= BAV496 (= true_term (is IDENT_64_25_26 T_int))))
(assert (= BAV497 (= CU_pre_6_71_30 CU_6_71_30)))
(assert (= BAV498 (= CU_6_71_30 (asField CU_6_71_30 T_javafe_ast_CompilationUnit))))
(assert (= BAV499 (< (fClosedTime CU_6_71_30) alloc)))
(assert (= BAV500 (= MODIFIERPRAGMA_pre_63_25_26 MODIFIERPRAGMA_63_25_26)))
(assert (= BAV501 (= true_term (is MODIFIERPRAGMA_63_25_26 T_int))))
(assert (= BAV502 (= NULL_pre_63_82_26 NULL_63_82_26)))
(assert (= BAV503 (= true_term (is NULL_63_82_26 T_int))))
(assert (= BAV504 (= otherCodes_pre_63_202_27 otherCodes_63_202_27)))
(assert (= BAV505 (= true_term (is otherCodes_63_202_27 (array T_int)))))
(assert (= BAV506 (= true_term (isAllocated otherCodes_63_202_27 alloc))))
(assert (= BAV507 (= member_pre_6_44_39 member_6_44_39)))
(assert (= BAV508 (= member_6_44_39 (asField member_6_44_39 T_boolean))))
(assert (= BAV509 (= methods_pre_6_883_26 methods_6_883_26)))
(assert (= BAV510 (= methods_6_883_26 (asField methods_6_883_26 T_javafe_tc_MethodDeclVec))))
(assert (= BAV511 (< (fClosedTime methods_6_883_26) alloc)))
(assert (= BAV512 (= otherStrings_pre_63_193_30 otherStrings_63_193_30)))
(assert (= BAV513 (= true_term (is otherStrings_63_193_30 (array T_java_lang_String)))))
(assert (= BAV514 (= true_term (isAllocated otherStrings_63_193_30 alloc))))
(assert (= BAV515 (= LONGLIT_pre_64_40_26 LONGLIT_64_40_26)))
(assert (= BAV516 (= true_term (is LONGLIT_64_40_26 T_int))))
(assert (= BAV517 (= simpleName_pre_6_37_38 simpleName_6_37_38)))
(assert (= BAV518 (= simpleName_6_37_38 (asField simpleName_6_37_38 T_java_lang_String))))
(assert (= BAV519 (< (fClosedTime simpleName_6_37_38) alloc)))
(assert (= BAV520 (= noTokens_pre_63_212_27 noTokens_63_212_27)))
(assert (= BAV521 (= true_term (is noTokens_63_212_27 T_int))))
(assert (= BAV522 (= elements_pre_15_61_39 elements_15_61_39)))
(assert (= BAV523 (= elements_15_61_39 (asField elements_15_61_39 (array T_javafe_ast_MethodDecl)))))
(assert (= BAV524 (< (fClosedTime elements_15_61_39) alloc)))
(assert (= BAV525 (forall ((?s_1_ Int)) (=> (not (= ?s_1_ null)) (not (= (S_select elements_15_61_39 ?s_1_) null))))))
(assert (= BAV526 (forall ((?s_1_ Int)) (= ?s_1_ null))))
(assert (= BAV527 (forall ((?s_1_ Int)) (= (S_select elements_15_61_39 ?s_1_) null))))
(assert (= BAV528 (= TYPEMODIFIERPRAGMA_pre_63_28_26 TYPEMODIFIERPRAGMA_63_28_26)))
(assert (= BAV529 (= true_term (is TYPEMODIFIERPRAGMA_63_28_26 T_int))))
(assert (= BAV530 (= id_pre_28_32_34 id_28_32_34)))
(assert (= BAV531 (= id_28_32_34 (asField id_28_32_34 T_javafe_ast_Identifier))))
(assert (= BAV532 (< (fClosedTime id_28_32_34) alloc)))
(assert (= BAV533 (forall ((?s_2_ Int)) (=> (not (= ?s_2_ null)) (not (= (S_select id_28_32_34 ?s_2_) null))))))
(assert (= BAV534 (forall ((?s_2_ Int)) (= ?s_2_ null))))
(assert (= BAV535 (forall ((?s_2_ Int)) (= (S_select id_28_32_34 ?s_2_) null))))
(assert (= BAV536 (= DOUBLELIT_pre_64_43_26 DOUBLELIT_64_43_26)))
(assert (= BAV537 (= true_term (is DOUBLELIT_64_43_26 T_int))))
(assert (= BAV538 (= fields_pre_6_875_27 fields_6_875_27)))
(assert (= BAV539 (= fields_6_875_27 (asField fields_6_875_27 T_javafe_tc_FieldDeclVec))))
(assert (= BAV540 (< (fClosedTime fields_6_875_27) alloc)))
(assert (= BAV541 (= LEXICALPRAGMA_pre_63_24_26 LEXICALPRAGMA_63_24_26)))
(assert (= BAV542 (= true_term (is LEXICALPRAGMA_63_24_26 T_int))))
(assert (= BAV543 (= owner_pre_5_35_28 owner_5_35_28)))
(assert (= BAV544 (= owner_5_35_28 (asField owner_5_35_28 T_java_lang_Object))))
(assert (= BAV545 (< (fClosedTime owner_5_35_28) alloc)))
(assert (= BAV546 (= out_pre_20_83_49 out_20_83_49)))
(assert (= BAV547 (= true_term (is out_20_83_49 T_java_io_PrintStream))))
(assert (= BAV548 (= true_term (isAllocated out_20_83_49 alloc))))
(assert (= BAV549 (= out_20_83_49 null)))
(assert (= BAV550 (= parent_pre_33_32 parent_33_32)))
(assert (= BAV551 (= parent_33_32 (asField parent_33_32 T_javafe_tc_Env))))
(assert (= BAV552 (< (fClosedTime parent_33_32) alloc)))
(assert (= BAV553 (forall ((?s_3_ Int)) (=> (not (= ?s_3_ null)) (not (= (S_select parent_33_32 ?s_3_) null))))))
(assert (= BAV554 (forall ((?s_3_ Int)) (= ?s_3_ null))))
(assert (= BAV555 (forall ((?s_3_ Int)) (= (S_select parent_33_32 ?s_3_) null))))
(assert (= BAV556 (= punctuationStrings_pre_63_134_22 punctuationStrings_63_134_22)))
(assert (= BAV557 (= true_term (is punctuationStrings_63_134_22 (array T_java_lang_String)))))
(assert (= BAV558 (= true_term (isAllocated punctuationStrings_63_134_22 alloc))))
(assert (= BAV559 (= INTLIT_pre_64_39_26 INTLIT_64_39_26)))
(assert (= BAV560 (= true_term (is INTLIT_64_39_26 T_int))))
(assert (= BAV561 (= count_pre_56_67_33 count_56_67_33)))
(assert (= BAV562 (= count_56_67_33 (asField count_56_67_33 T_int))))
(assert (= BAV563 (= TYPEDECLELEMPRAGMA_pre_63_27_26 TYPEDECLELEMPRAGMA_63_27_26)))
(assert (= BAV564 (= true_term (is TYPEDECLELEMPRAGMA_63_27_26 T_int))))
(assert (= BAV565 (= punctuationCodes_pre_63_164_19 punctuationCodes_63_164_19)))
(assert (= BAV566 (= true_term (is punctuationCodes_63_164_19 (array T_int)))))
(assert (= BAV567 (= true_term (isAllocated punctuationCodes_63_164_19 alloc))))
(assert (= BAV568 (= FIRST_KEYWORD_pre_63_51_26 FIRST_KEYWORD_63_51_26)))
(assert (= BAV569 (= true_term (is FIRST_KEYWORD_63_51_26 T_int))))
(assert (= BAV570 (= peer_pre_38_36 peer_38_36)))
(assert (= BAV571 (= peer_38_36 (asField peer_38_36 T_javafe_tc_TypeSig))))
(assert (= BAV572 (< (fClosedTime peer_38_36) alloc)))
(assert (= BAV573 (forall ((?s_4_ Int)) (=> (not (= ?s_4_ null)) (not (= (S_select peer_38_36 ?s_4_) null))))))
(assert (= BAV574 (forall ((?s_4_ Int)) (= ?s_4_ null))))
(assert (= BAV575 (forall ((?s_4_ Int)) (= (S_select peer_38_36 ?s_4_) null))))
(assert (= BAV576 (= FLOATLIT_pre_64_42_26 FLOATLIT_64_42_26)))
(assert (= BAV577 (= true_term (is FLOATLIT_64_42_26 T_int))))
(assert (= BAV578 (= state_pre_6_787_15 state_6_787_15)))
(assert (= BAV579 (= state_6_787_15 (asField state_6_787_15 T_int))))
(assert (= BAV580 (= myTypeDecl_pre_6_63_40 myTypeDecl_6_63_40)))
(assert (= BAV581 (= myTypeDecl_6_63_40 (asField myTypeDecl_6_63_40 T_javafe_ast_TypeDecl))))
(assert (= BAV582 (< (fClosedTime myTypeDecl_6_63_40) alloc)))
(assert (= BAV583 (= enclosingType_pre_6_32_39 enclosingType_6_32_39)))
(assert (= BAV584 (= enclosingType_6_32_39 (asField enclosingType_6_32_39 T_javafe_tc_TypeSig))))
(assert (= BAV585 (< (fClosedTime enclosingType_6_32_39) alloc)))
(assert (= BAV586 (= PARSED_pre_6_772_28 PARSED_6_772_28)))
(assert (= BAV587 (= true_term (is PARSED_6_772_28 T_int))))
(assert (= BAV588 (= LAST_KEYWORD_pre_63_103_26 LAST_KEYWORD_63_103_26)))
(assert (= BAV589 (= true_term (is LAST_KEYWORD_63_103_26 T_int))))
(assert (= BAV590 (= tokenType_pre_19_90_8 tokenType_19_90_8)))
(assert (= BAV591 (= tokenType_19_90_8 (asField tokenType_19_90_8 T_int))))
(assert (= BAV592 (= count_pre_15_67_33 count_15_67_33)))
(assert (= BAV593 (= count_15_67_33 (asField count_15_67_33 T_int))))
(assert (= BAV594 (= PREPPED_pre_6_775_28 PREPPED_6_775_28)))
(assert (= BAV595 (= true_term (is PREPPED_6_775_28 T_int))))
(assert (= BAV596 (= BOOLEANLIT_pre_64_38_26 BOOLEANLIT_64_38_26)))
(assert (= BAV597 (= true_term (is BOOLEANLIT_64_38_26 T_int))))
(assert (= BAV598 (= STMTPRAGMA_pre_63_26_26 STMTPRAGMA_63_26_26)))
(assert (= BAV599 (= true_term (is STMTPRAGMA_63_26_26 T_int))))
(assert (= BAV600 (= elements_pre_56_61_38 elements_56_61_38)))
(assert (= BAV601 (= elements_56_61_38 (asField elements_56_61_38 (array T_javafe_ast_FieldDecl)))))
(assert (= BAV602 (< (fClosedTime elements_56_61_38) alloc)))
(assert (= BAV603 (forall ((?s_5_ Int)) (=> (not (= ?s_5_ null)) (not (= (S_select elements_56_61_38 ?s_5_) null))))))
(assert (= BAV604 (forall ((?s_5_ Int)) (= ?s_5_ null))))
(assert (= BAV605 (forall ((?s_5_ Int)) (= (S_select elements_56_61_38 ?s_5_) null))))
(assert (= BAV606 (= CHARLIT_pre_64_41_26 CHARLIT_64_41_26)))
(assert (= BAV607 (= true_term (is CHARLIT_64_41_26 T_int))))
(assert (= BAV608 (= elems_pre elems)))
(assert (= BAV609 (= elems (asElems elems))))
(assert (= BAV610 (< (eClosedTime elems) alloc)))
(assert (= BAV611 (= LS (asLockSet LS))))
(assert (= BAV612 (= alloc_pre alloc)))
(assert (= BAV613 (and (= true_term (is this T_javafe_tc_EnvForTypeSig)) (= true_term (isAllocated this alloc)) (not (= this null)) (= RES (S_select peer_38_36 this)) (= true_term true_term) (or (not (= ecReturn ecReturn)) (and (= ecReturn ecReturn) (not (=> (= ecReturn ecReturn) (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null)))))))))
(assert (= BAV614 (= true_term (is this T_javafe_tc_EnvForTypeSig))))
(assert (= BAV615 (= true_term (isAllocated this alloc))))
(assert (= BAV616 (= this null)))
(assert (= BAV617 (= RES (S_select peer_38_36 this))))
(assert (= BAV618 (= true_term true_term)))
(assert (= BAV619 (or (not (= ecReturn ecReturn)) (and (= ecReturn ecReturn) (not (=> (= ecReturn ecReturn) (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null))))))))
(assert (= BAV620 (= ecReturn ecReturn)))
(assert (= BAV621 (and (= ecReturn ecReturn) (not (=> (= ecReturn ecReturn) (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null)))))))
(assert (= BAV622 (= ecReturn ecReturn)))
(assert (= BAV623 (=> (= ecReturn ecReturn) (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null)))))
(assert (= BAV624 (= ecReturn ecReturn)))
(assert (= BAV625 (= (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null))) (= RES null))))
(assert (= BAV626 (and (= true_term (is this T_javafe_tc_EnvForCU)) (not (= this null)))))
(assert (= BAV627 (= true_term (is this T_javafe_tc_EnvForCU))))
(assert (= BAV628 (= this null)))
(assert (= BAV629 (= RES null)))
(check-sat)
(get-model)
(exit)