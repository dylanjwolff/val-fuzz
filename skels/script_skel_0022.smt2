(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-fun v0 () Bool)
(declare-fun v1 () Bool)
(declare-fun v2 () Bool)
(assert (and (or (not v2) (not v2) v0) (or v0 v2 v2) (or (not v2) (not v2) (not v2)) (or v0 v2 (not v1)) (or (not v2) (not v0) v0) (or v0 v2 v0) (or (not v2) v1 v2) (or v2 v1 (not v0)) (or (not v2) v2 (not v0)) (or (not v0) (not v0) (not v0)) (or (not v0) v2 v2) (or v1 v1 (not v1)) (or (not v2) v2 (not v0)) (or v1 v1 (not v2)) (or v2 (not v0) v0)))
(assert (= BAV1 (and (or (not v2) (not v2) v0) (or v0 v2 v2) (or (not v2) (not v2) (not v2)) (or v0 v2 (not v1)) (or (not v2) (not v0) v0) (or v0 v2 v0) (or (not v2) v1 v2) (or v2 v1 (not v0)) (or (not v2) v2 (not v0)) (or (not v0) (not v0) (not v0)) (or (not v0) v2 v2) (or v1 v1 (not v1)) (or (not v2) v2 (not v0)) (or v1 v1 (not v2)) (or v2 (not v0) v0))))
(assert (= BAV2 (or (not v2) (not v2) v0)))
(assert (= BAV3 (or v0 v2 v2)))
(assert (= BAV4 (or (not v2) (not v2) (not v2))))
(assert (= BAV5 (or v0 v2 (not v1))))
(assert (= BAV6 (or (not v2) (not v0) v0)))
(assert (= BAV7 (or v0 v2 v0)))
(assert (= BAV8 (or (not v2) v1 v2)))
(assert (= BAV9 (or v2 v1 (not v0))))
(assert (= BAV10 (or (not v2) v2 (not v0))))
(assert (= BAV11 (or (not v0) (not v0) (not v0))))
(assert (= BAV12 (or (not v0) v2 v2)))
(assert (= BAV13 (or v1 v1 (not v1))))
(assert (= BAV14 (or (not v2) v2 (not v0))))
(assert (= BAV15 (or v1 v1 (not v2))))
(assert (= BAV16 (or v2 (not v0) v0)))
(check-sat)
(get-model)