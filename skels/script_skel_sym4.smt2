(set-info :smt-lib-version 2.6)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-info :category "crafted")
(declare-fun x_0 () Int)
(declare-fun x_1 () Int)
(declare-fun x_2 () Int)
(declare-fun x_3 () Int)
(declare-fun x_4 () Int)
(declare-fun x_5 () Int)
(declare-fun x_6 () Int)
(declare-fun x_7 () Int)
(declare-fun x_8 () Int)
(declare-fun x_9 () Int)
(declare-fun x_10 () Int)
(declare-fun x_11 () Int)
(declare-fun x_12 () Int)
(declare-fun x_13 () Int)
(declare-fun x_14 () Int)
(declare-fun x_15 () Int)
(declare-fun x_16 () Int)
(assert (>= x_0 GEN1))
(assert (>= x_1 GEN2))
(assert (>= x_2 GEN3))
(assert (>= x_3 GEN4))
(assert (>= x_4 GEN5))
(assert (>= x_5 GEN6))
(assert (>= x_6 GEN7))
(assert (>= x_7 GEN8))
(assert (>= x_8 GEN9))
(assert (>= x_9 GEN10))
(assert (>= x_10 GEN11))
(assert (>= x_11 GEN12))
(assert (>= x_12 GEN13))
(assert (>= x_13 GEN14))
(assert (>= x_14 GEN15))
(assert (>= x_15 GEN16))
(assert (>= x_16 GEN17))
(assert (<= (+ (* GEN18 x_0) (* GEN19 x_1) (* GEN20 x_2) (* GEN21 x_3) (* GEN22 x_4) (* GEN23 x_5) (* GEN24 x_6) (* GEN25 x_7) (* GEN26 x_8) (* GEN27 x_9) (* GEN28 x_10) (* (- GEN29) x_11) (* GEN30 x_12) (* GEN31 x_13) (* GEN32 x_14) (* GEN33 x_15) (* GEN34 x_16)) GEN35))
(assert (<= (+ (* GEN36 x_0) (* GEN37 x_1) (* GEN38 x_2) (* GEN39 x_3) (* GEN40 x_4) (* GEN41 x_5) (* GEN42 x_6) (* GEN43 x_7) (* GEN44 x_8) (* GEN45 x_9) (* GEN46 x_10) (* GEN47 x_11) (* (- 400) x_12) (* 41 x_13) (* 41 x_14) (* 41 x_15) (* 41 x_16)) 0))
(assert (<= (+ (* 43 x_0) (* 43 x_1) (* 43 x_2) (* 43 x_3) (* 43 x_4) (* 43 x_5) (* 43 x_6) (* 43 x_7) (* 43 x_8) (* 43 x_9) (* 43 x_10) (* 43 x_11) (* 43 x_12) (* (- 398) x_13) (* 43 x_14) (* 43 x_15) (* 43 x_16)) 0))
(assert (<= (+ (* 47 x_0) (* 47 x_1) (* 47 x_2) (* 47 x_3) (* 47 x_4) (* 47 x_5) (* 47 x_6) (* 47 x_7) (* 47 x_8) (* 47 x_9) (* 47 x_10) (* 47 x_11) (* 47 x_12) (* 47 x_13) (* (- 394) x_14) (* 47 x_15) (* 47 x_16)) 0))
(assert (<= (+ (* 53 x_0) (* 53 x_1) (* 53 x_2) (* 53 x_3) (* 53 x_4) (* 53 x_5) (* 53 x_6) (* 53 x_7) (* 53 x_8) (* 53 x_9) (* 53 x_10) (* 53 x_11) (* 53 x_12) (* 53 x_13) (* 53 x_14) (* (- 388) x_15) (* 53 x_16)) 0))
(assert (<= (+ (* 59 x_0) (* 59 x_1) (* 59 x_2) (* 59 x_3) (* 59 x_4) (* 59 x_5) (* 59 x_6) (* 59 x_7) (* 59 x_8) (* 59 x_9) (* 59 x_10) (* 59 x_11) (* 59 x_12) (* 59 x_13) (* 59 x_14) (* 59 x_15) (* (- 382) x_16)) 0))
(assert (>= (+ x_0 x_1 x_2 x_3 x_4 x_5 x_6 x_7 x_8 x_9 x_10 x_11 x_12 x_13 x_14 x_15 x_16) 1))
(assert (= BAV1 (>= x_0 GEN1)))
(assert (= BAV2 (>= x_1 GEN2)))
(assert (= BAV3 (>= x_2 GEN3)))
(assert (= BAV4 (>= x_3 GEN4)))
(assert (= BAV5 (>= x_4 GEN5)))
(assert (= BAV6 (>= x_5 GEN6)))
(assert (= BAV7 (>= x_6 GEN7)))
(assert (= BAV8 (>= x_7 GEN8)))
(assert (= BAV9 (>= x_8 GEN9)))
(assert (= BAV10 (>= x_9 GEN10)))
(assert (= BAV11 (>= x_10 GEN11)))
(assert (= BAV12 (>= x_11 GEN12)))
(assert (= BAV13 (>= x_12 GEN13)))
(assert (= BAV14 (>= x_13 GEN14)))
(assert (= BAV15 (>= x_14 GEN15)))
(assert (= BAV16 (>= x_15 GEN16)))
(assert (= BAV17 (>= x_16 GEN17)))
(assert (= BAV18 (<= (+ (* GEN18 x_0) (* GEN19 x_1) (* GEN20 x_2) (* GEN21 x_3) (* GEN22 x_4) (* GEN23 x_5) (* GEN24 x_6) (* GEN25 x_7) (* GEN26 x_8) (* GEN27 x_9) (* GEN28 x_10) (* (- GEN29) x_11) (* GEN30 x_12) (* GEN31 x_13) (* GEN32 x_14) (* GEN33 x_15) (* GEN34 x_16)) GEN35)))
(assert (= BAV19 (<= (+ (* GEN36 x_0) (* GEN37 x_1) (* GEN38 x_2) (* GEN39 x_3) (* GEN40 x_4) (* GEN41 x_5) (* GEN42 x_6) (* GEN43 x_7) (* GEN44 x_8) (* GEN45 x_9) (* GEN46 x_10) (* GEN47 x_11) (* (- 400) x_12) (* 41 x_13) (* 41 x_14) (* 41 x_15) (* 41 x_16)) 0)))
(assert (= BAV20 (<= (+ (* 43 x_0) (* 43 x_1) (* 43 x_2) (* 43 x_3) (* 43 x_4) (* 43 x_5) (* 43 x_6) (* 43 x_7) (* 43 x_8) (* 43 x_9) (* 43 x_10) (* 43 x_11) (* 43 x_12) (* (- 398) x_13) (* 43 x_14) (* 43 x_15) (* 43 x_16)) 0)))
(assert (= BAV21 (<= (+ (* 47 x_0) (* 47 x_1) (* 47 x_2) (* 47 x_3) (* 47 x_4) (* 47 x_5) (* 47 x_6) (* 47 x_7) (* 47 x_8) (* 47 x_9) (* 47 x_10) (* 47 x_11) (* 47 x_12) (* 47 x_13) (* (- 394) x_14) (* 47 x_15) (* 47 x_16)) 0)))
(assert (= BAV22 (<= (+ (* 53 x_0) (* 53 x_1) (* 53 x_2) (* 53 x_3) (* 53 x_4) (* 53 x_5) (* 53 x_6) (* 53 x_7) (* 53 x_8) (* 53 x_9) (* 53 x_10) (* 53 x_11) (* 53 x_12) (* 53 x_13) (* 53 x_14) (* (- 388) x_15) (* 53 x_16)) 0)))
(assert (= BAV23 (<= (+ (* 59 x_0) (* 59 x_1) (* 59 x_2) (* 59 x_3) (* 59 x_4) (* 59 x_5) (* 59 x_6) (* 59 x_7) (* 59 x_8) (* 59 x_9) (* 59 x_10) (* 59 x_11) (* 59 x_12) (* 59 x_13) (* 59 x_14) (* 59 x_15) (* (- 382) x_16)) 0)))
(assert (= BAV24 (>= (+ x_0 x_1 x_2 x_3 x_4 x_5 x_6 x_7 x_8 x_9 x_10 x_11 x_12 x_13 x_14 x_15 x_16) 1)))
(check-sat)
(get-model)
(exit)