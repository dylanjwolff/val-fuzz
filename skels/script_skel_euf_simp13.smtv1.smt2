(set-option :incremental false)
(set-info :difficulty "unknown")
(set-info :category "crafted")
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-sort U 0)
(declare-sort A 0)
(declare-fun x () A)
(declare-fun f (A) A)
(assert (= BAV1 (=> (or (or (or (and (= (f (f x)) x) (= (f (f (f x))) x)) (and (= (f (f x)) x) (= (f (f (f (f (f x))))) x))) (and (= (f (f (f x))) x) (= (f (f (f (f x)))) (f (f (f x)))))) (and (= (f (f (f x))) x) (= (f (f (f (f (f x))))) (f (f (f x)))))) (= (f x) x))))
(assert (= BAV2 (or (or (or (and (= (f (f x)) x) (= (f (f (f x))) x)) (and (= (f (f x)) x) (= (f (f (f (f (f x))))) x))) (and (= (f (f (f x))) x) (= (f (f (f (f x)))) (f (f (f x)))))) (and (= (f (f (f x))) x) (= (f (f (f (f (f x))))) (f (f (f x))))))))
(assert (= BAV3 (or (or (and (= (f (f x)) x) (= (f (f (f x))) x)) (and (= (f (f x)) x) (= (f (f (f (f (f x))))) x))) (and (= (f (f (f x))) x) (= (f (f (f (f x)))) (f (f (f x))))))))
(assert (= BAV4 (or (and (= (f (f x)) x) (= (f (f (f x))) x)) (and (= (f (f x)) x) (= (f (f (f (f (f x))))) x)))))
(assert (= BAV5 (and (= (f (f x)) x) (= (f (f (f x))) x))))
(assert (= BAV6 (= (f (f x)) x)))
(assert (= BAV7 (= (f (f (f x))) x)))
(assert (= BAV8 (and (= (f (f x)) x) (= (f (f (f (f (f x))))) x))))
(assert (= BAV9 (= (f (f x)) x)))
(assert (= BAV10 (= (f (f (f (f (f x))))) x)))
(assert (= BAV11 (and (= (f (f (f x))) x) (= (f (f (f (f x)))) (f (f (f x)))))))
(assert (= BAV12 (= (f (f (f x))) x)))
(assert (= BAV13 (= (f (f (f (f x)))) (f (f (f x))))))
(assert (= BAV14 (and (= (f (f (f x))) x) (= (f (f (f (f (f x))))) (f (f (f x)))))))
(assert (= BAV15 (= (f (f (f x))) x)))
(assert (= BAV16 (= (f (f (f (f (f x))))) (f (f (f x))))))
(assert (= BAV17 (= (f x) x)))
(check-sat-assuming ((not (=> (or (or (or (and (= (f (f x)) x) (= (f (f (f x))) x)) (and (= (f (f x)) x) (= (f (f (f (f (f x))))) x))) (and (= (f (f (f x))) x) (= (f (f (f (f x)))) (f (f (f x)))))) (and (= (f (f (f x))) x) (= (f (f (f (f (f x))))) (f (f (f x)))))) (= (f x) x)))))
(get-model)