(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () Real)
(declare-fun v1 () Real)
(declare-fun v2 () Real)
(assert (and (or (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))) (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))))) (not (and (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))))) (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1)))))))))))
(assert (= BAV1 (and (or (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))) (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))))) (not (and (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))))) (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))))))))))
(assert (= BAV2 (or (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))) (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))))))
(assert (= BAV3 (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))))))
(assert (= BAV4 (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))))
(assert (= BAV5 (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))))
(assert (= BAV6 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV7 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV8 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV9 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV10 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV11 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV12 (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV13 (<= v2 v1)))
(assert (= BAV14 (<= v2 v1)))
(assert (= BAV15 (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))))
(assert (= BAV16 (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))))
(assert (= BAV17 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV18 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV19 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV20 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV21 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV22 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV23 (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV24 (<= v2 v1)))
(assert (= BAV25 (<= v2 v1)))
(assert (= BAV26 (=> (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))) (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1))))))
(assert (= BAV27 (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))))
(assert (= BAV28 (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))))
(assert (= BAV29 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV30 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV31 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV32 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV33 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV34 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV35 (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV36 (<= v2 v1)))
(assert (= BAV37 (<= v2 v1)))
(assert (= BAV38 (xor (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))) (ite (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= v2 v1) (<= v2 v1)))))
(assert (= BAV39 (=> (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (not (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))))
(assert (= BAV40 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV41 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV42 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV43 (and (= (* v2 GEN2) (* v2 GEN2)) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV44 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV45 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV46 (< (* v2 GEN2) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV47 (<= v2 v1)))
(assert (= BAV48 (<= v2 v1)))
(assert (= BAV49 (and (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))))) (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))))))))
(assert (= BAV50 (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1)))))))))
(assert (= BAV51 (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))))
(assert (= BAV52 (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))))))
(assert (= BAV53 (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))))
(assert (= BAV54 (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))))))
(assert (= BAV55 (distinct v0 v0)))
(assert (= BAV56 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV57 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV58 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV59 (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))))
(assert (= BAV60 (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV61 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV62 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV63 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV64 (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))))
(assert (= BAV65 (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))))))
(assert (= BAV66 (distinct v0 v0)))
(assert (= BAV67 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV68 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV69 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV70 (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))))
(assert (= BAV71 (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV72 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV73 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV74 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV75 (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV76 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV77 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV78 (<= v2 (* v2 GEN2))))
(assert (= BAV79 (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))))))
(assert (= BAV80 (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2))))
(assert (= BAV81 (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1))))))
(assert (= BAV82 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV83 (<= v2 v1)))
(assert (= BAV84 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)))
(assert (= BAV85 (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV86 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV87 (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))))
(assert (= BAV88 (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2))))
(assert (= BAV89 (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV90 (distinct v0 v0)))
(assert (= BAV91 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV92 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV93 (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)))
(assert (= BAV94 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV95 (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1)))))
(assert (= BAV96 (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1)))))))
(assert (= BAV97 (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1))))
(assert (= BAV98 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV99 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV100 (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))))
(assert (= BAV101 (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1)))))
(assert (= BAV102 (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1))))
(assert (= BAV103 (<= v2 (* v2 GEN2))))
(assert (= BAV104 (= (+ v0 v1) (+ v0 v1))))
(assert (= BAV105 (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1)))))
(assert (= BAV106 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV107 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV108 (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))
(assert (= BAV109 (distinct v0 v0)))
(assert (= BAV110 (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1)))
(assert (= BAV111 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV112 (=> (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))) (ite (<= v2 (* v2 GEN2)) (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (not (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1)))))))))
(assert (= BAV113 (=> (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))) (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))))
(assert (= BAV114 (= (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))) (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))))))
(assert (= BAV115 (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))))
(assert (= BAV116 (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))))))
(assert (= BAV117 (distinct v0 v0)))
(assert (= BAV118 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV119 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV120 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV121 (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))))
(assert (= BAV122 (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV123 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV124 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV125 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV126 (and (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))))
(assert (= BAV127 (<= (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))))))
(assert (= BAV128 (distinct v0 v0)))
(assert (= BAV129 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV130 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV131 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV132 (=> (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)))))
(assert (= BAV133 (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) v2 (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV134 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV135 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV136 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV137 (=> (not (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0))))
(assert (= BAV138 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV139 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v0)))
(assert (= BAV140 (<= v2 (* v2 GEN2))))
(assert (= BAV141 (xor (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))))))
(assert (= BAV142 (= (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1)))) (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2))))
(assert (= BAV143 (>= (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (ite (<= v2 v1) v0 (/ GEN3 (~ GEN1))))))
(assert (= BAV144 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV145 (<= v2 v1)))
(assert (= BAV146 (= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)))
(assert (= BAV147 (= (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV148 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV149 (xor (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)) (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))))
(assert (= BAV150 (and (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1))) (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2))))
(assert (= BAV151 (distinct (ite (distinct v0 v0) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (* v2 GEN2)) (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)))))
(assert (= BAV152 (distinct v0 v0)))
(assert (= BAV153 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV154 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV155 (> (ite (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1)) (/ GEN3 (~ GEN1)) (+ v0 v1)) v2)))
(assert (= BAV156 (<= (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ v0 v1))))
(assert (= BAV157 (and (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))) (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1)))))
(assert (= BAV158 (or (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1)) (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1)))))))
(assert (= BAV159 (< (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ v0 v1))))
(assert (= BAV160 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV161 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV162 (=> (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1))) (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1))))))
(assert (= BAV163 (xor (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1)) (= (+ v0 v1) (+ v0 v1)))))
(assert (= BAV164 (distinct (+ v0 v1) (ite (<= v2 (* v2 GEN2)) (* v2 GEN2) v1))))
(assert (= BAV165 (<= v2 (* v2 GEN2))))
(assert (= BAV166 (= (+ v0 v1) (+ v0 v1))))
(assert (= BAV167 (= (ite (= (* v2 GEN2) (* v2 GEN2)) (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) (/ GEN3 (~ GEN1)))))
(assert (= BAV168 (= (* v2 GEN2) (* v2 GEN2))))
(assert (= BAV169 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(assert (= BAV170 (xor (distinct v0 v0) (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1))))
(assert (= BAV171 (distinct v0 v0)))
(assert (= BAV172 (distinct (ite (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1))) (+ (/ GEN3 (~ GEN1)) (+ v0 v1)) (+ (/ GEN3 (~ GEN1)) (+ v0 v1))) v1)))
(assert (= BAV173 (> (/ GEN3 (~ GEN1)) (/ GEN3 (~ GEN1)))))
(check-sat)
(get-model)