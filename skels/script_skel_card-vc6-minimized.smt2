(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN1 Int)
(declare-fun x () Int)
(declare-fun c () (Set Int))
(declare-fun alloc0 () (Set Int))
(declare-fun alloc1 () (Set Int))
(declare-fun alloc2 () (Set Int))
(assert (and (member x c) (<= (card (setminus alloc1 alloc0)) GEN1) (<= (card (setminus alloc2 alloc1)) (card (setminus c (singleton x)))) (> (card (setminus alloc2 alloc0)) (card c))))
(assert (= BAV1 (and (member x c) (<= (card (setminus alloc1 alloc0)) GEN1) (<= (card (setminus alloc2 alloc1)) (card (setminus c (singleton x)))) (> (card (setminus alloc2 alloc0)) (card c)))))
(assert (= BAV2 (<= (card (setminus alloc1 alloc0)) GEN1)))
(assert (= BAV3 (<= (card (setminus alloc2 alloc1)) (card (setminus c (singleton x))))))
(assert (= BAV4 (> (card (setminus alloc2 alloc0)) (card c))))
(check-sat)
(get-model)