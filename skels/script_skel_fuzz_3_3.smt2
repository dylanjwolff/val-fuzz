(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const GEN11 Int)
(declare-const GEN12 Int)
(declare-const GEN13 Int)
(declare-const GEN14 Int)
(declare-const GEN15 Int)
(declare-const GEN16 Int)
(declare-const GEN17 Int)
(declare-const GEN18 Int)
(declare-const GEN19 Int)
(declare-const GEN20 Int)
(declare-const GEN21 Int)
(declare-const GEN22 Int)
(declare-const GEN23 Int)
(declare-const GEN24 Int)
(declare-const GEN25 Int)
(declare-const GEN26 Int)
(declare-const GEN27 Int)
(declare-const GEN28 Int)
(declare-const GEN29 Int)
(declare-const GEN30 Int)
(declare-const GEN31 Int)
(declare-const GEN32 Int)
(declare-const GEN33 Int)
(declare-const GEN34 Int)
(declare-const GEN35 Int)
(declare-const GEN36 Int)
(declare-const GEN37 Int)
(declare-const GEN38 Int)
(declare-const GEN39 Int)
(declare-const GEN40 Int)
(declare-const GEN41 Int)
(declare-const GEN42 Int)
(declare-const GEN43 Int)
(declare-const GEN44 Int)
(declare-const GEN45 Int)
(declare-const GEN46 Int)
(declare-const GEN47 Int)
(declare-const GEN48 Int)
(declare-const GEN49 Int)
(declare-const GEN50 Int)
(declare-const GEN51 Int)
(declare-const GEN52 Int)
(declare-const GEN53 Int)
(declare-const GEN54 Int)
(declare-const GEN55 Int)
(declare-const GEN56 Int)
(declare-const GEN57 Int)
(declare-const GEN58 Int)
(declare-const GEN59 Int)
(declare-const GEN60 Int)
(declare-const GEN61 Int)
(declare-const GEN62 Int)
(declare-const GEN63 Int)
(declare-const GEN64 Int)
(declare-const GEN65 Int)
(declare-const GEN66 Int)
(declare-const GEN67 Int)
(declare-const GEN68 Int)
(declare-const GEN69 Int)
(declare-const GEN70 Int)
(declare-const GEN71 Int)
(declare-const GEN72 Int)
(declare-const GEN73 Int)
(declare-const GEN74 Int)
(declare-const GEN75 Int)
(declare-const GEN76 Int)
(declare-const GEN77 Int)
(declare-const GEN78 Int)
(declare-const GEN79 Int)
(declare-const GEN80 Int)
(declare-const GEN81 Int)
(declare-const GEN82 Int)
(declare-const GEN83 Int)
(declare-const GEN84 Int)
(declare-const GEN85 Int)
(declare-const GEN86 Int)
(declare-const GEN87 Int)
(declare-const GEN88 Int)
(declare-const GEN89 Int)
(declare-const GEN90 Int)
(declare-const GEN91 Int)
(declare-const GEN92 Int)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-fun x0 () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(assert (or (= (+ (* (- GEN1) x1) (* GEN2 x2)) (- GEN3)) (< (+ (* GEN4 x2) (* GEN5 x2)) GEN6) (not (= (+ (* (- GEN7) x2) (* (- GEN8) x2) (* GEN9 x1) (* (- GEN10) x0)) (- GEN11)))))
(assert (or (= (+ (* (- GEN12) x2) (* GEN13 x2)) (- GEN14)) (not (>= (+ (* GEN15 x1) (* (- GEN16) x0) (* (- GEN17) x0) (* GEN18 x0)) GEN19)) (not (<= (+ (* (- GEN20) x0) (* GEN21 x0) (* (- GEN22) x1) (* (- GEN23) x2)) (- GEN24)))))
(assert (= BAV93 (or (= (+ (* (- GEN1) x1) (* GEN2 x2)) (- GEN3)) (< (+ (* GEN4 x2) (* GEN5 x2)) GEN6) (not (= (+ (* (- GEN7) x2) (* (- GEN8) x2) (* GEN9 x1) (* (- GEN10) x0)) (- GEN11))))))
(assert (= BAV94 (= (+ (* (- GEN1) x1) (* GEN2 x2)) (- GEN3))))
(assert (= BAV95 (< (+ (* GEN4 x2) (* GEN5 x2)) GEN6)))
(assert (= BAV96 (= (+ (* (- GEN7) x2) (* (- GEN8) x2) (* GEN9 x1) (* (- GEN10) x0)) (- GEN11))))
(assert (= BAV97 (or (= (+ (* (- GEN12) x2) (* GEN13 x2)) (- GEN14)) (not (>= (+ (* GEN15 x1) (* (- GEN16) x0) (* (- GEN17) x0) (* GEN18 x0)) GEN19)) (not (<= (+ (* (- GEN20) x0) (* GEN21 x0) (* (- GEN22) x1) (* (- GEN23) x2)) (- GEN24))))))
(assert (= BAV98 (= (+ (* (- GEN12) x2) (* GEN13 x2)) (- GEN14))))
(assert (= BAV99 (>= (+ (* GEN15 x1) (* (- GEN16) x0) (* (- GEN17) x0) (* GEN18 x0)) GEN19)))
(assert (= BAV100 (<= (+ (* (- GEN20) x0) (* GEN21 x0) (* (- GEN22) x1) (* (- GEN23) x2)) (- GEN24))))
(assert (= BAV101 (or (not (<= (+ (* GEN25 x2) (* GEN26 x2)) (- GEN27))) (not (= (+ (* GEN28 x2) (* (- GEN29) x1) (* GEN30 x0)) GEN31)) (> (+ (* (- GEN32) x0) (* GEN33 x2) (* GEN34 x1) (* GEN35 x1)) GEN36))))
(assert (= BAV102 (<= (+ (* GEN25 x2) (* GEN26 x2)) (- GEN27))))
(assert (= BAV103 (= (+ (* GEN28 x2) (* (- GEN29) x1) (* GEN30 x0)) GEN31)))
(assert (= BAV104 (> (+ (* (- GEN32) x0) (* GEN33 x2) (* GEN34 x1) (* GEN35 x1)) GEN36)))
(assert (= BAV105 (or (not (<= (+ (* (- GEN37) x1) (* GEN38 x0) (* GEN39 x2)) (- GEN40))) (not (> (+ (* (- GEN41) x1) (* GEN42 x2) (* GEN43 x2)) GEN44)))))
(assert (= BAV106 (<= (+ (* (- GEN37) x1) (* GEN38 x0) (* GEN39 x2)) (- GEN40))))
(assert (= BAV107 (> (+ (* (- GEN41) x1) (* GEN42 x2) (* GEN43 x2)) GEN44)))
(assert (= BAV108 (or (not (<= (+ (* GEN45 x0) (* (- GEN46) x0) (* GEN47 x2) (* GEN48 x0)) GEN49)) (>= (+ (* GEN50 x2) (* GEN51 x1) (* GEN52 x1)) GEN53))))
(assert (= BAV109 (<= (+ (* GEN45 x0) (* (- GEN46) x0) (* GEN47 x2) (* GEN48 x0)) GEN49)))
(assert (= BAV110 (>= (+ (* GEN50 x2) (* GEN51 x1) (* GEN52 x1)) GEN53)))
(assert (= BAV111 (> (+ (* GEN54 x0) (* (- GEN55) x2) (* (- GEN56) x0)) GEN57)))
(assert (= BAV112 (or (>= (+ (* (- GEN58) x0) (* GEN59 x2) (* (- GEN60) x2)) (- GEN61)) (>= (+ (* (- GEN62) x2) (* GEN63 x2) (* GEN64 x1)) (- GEN65)))))
(assert (= BAV113 (>= (+ (* (- GEN58) x0) (* GEN59 x2) (* (- GEN60) x2)) (- GEN61))))
(assert (= BAV114 (>= (+ (* (- GEN62) x2) (* GEN63 x2) (* GEN64 x1)) (- GEN65))))
(assert (= BAV115 (or (not (< (+ (* (- GEN66) x0) (* (- GEN67) x1)) GEN68)) (= (+ (* (- GEN69) x2) (* (- GEN70) x0)) GEN71) (not (< (+ (* (- GEN72) x0) (* GEN73 x2) (* (- GEN74) x1) (* (- GEN75) x2)) GEN76)))))
(assert (= BAV116 (< (+ (* (- GEN66) x0) (* (- GEN67) x1)) GEN68)))
(assert (= BAV117 (= (+ (* (- GEN69) x2) (* (- GEN70) x0)) GEN71)))
(assert (= BAV118 (< (+ (* (- GEN72) x0) (* GEN73 x2) (* (- GEN74) x1) (* (- GEN75) x2)) GEN76)))
(assert (= BAV119 (or (not (<= (+ (* (- GEN77) x2) (* GEN78 x1)) GEN79)) (not (<= (+ (* GEN80 x2) (* GEN81 x2) (* (- GEN82) x1) (* (- GEN83) x1)) GEN84)))))
(assert (= BAV120 (<= (+ (* (- GEN77) x2) (* GEN78 x1)) GEN79)))
(assert (= BAV121 (<= (+ (* GEN80 x2) (* GEN81 x2) (* (- GEN82) x1) (* (- GEN83) x1)) GEN84)))
(assert (= BAV122 (= (+ (* GEN85 x1) (* (- GEN86) x2) (* GEN87 x1)) (- GEN88))))
(assert (= BAV123 (<= (+ (* (- GEN89) x1) (* GEN90 x2) (* (- GEN91) x2)) (- GEN92))))
(check-sat)
(push 1)
(assert (or (not (<= (+ (* GEN25 x2) (* GEN26 x2)) (- GEN27))) (not (= (+ (* GEN28 x2) (* (- GEN29) x1) (* GEN30 x0)) GEN31)) (> (+ (* (- GEN32) x0) (* GEN33 x2) (* GEN34 x1) (* GEN35 x1)) GEN36)))
(assert (or (not (<= (+ (* (- GEN37) x1) (* GEN38 x0) (* GEN39 x2)) (- GEN40))) (not (> (+ (* (- GEN41) x1) (* GEN42 x2) (* GEN43 x2)) GEN44))))
(assert (or (not (<= (+ (* GEN45 x0) (* (- GEN46) x0) (* GEN47 x2) (* GEN48 x0)) GEN49)) (>= (+ (* GEN50 x2) (* GEN51 x1) (* GEN52 x1)) GEN53)))
(assert (> (+ (* GEN54 x0) (* (- GEN55) x2) (* (- GEN56) x0)) GEN57))
(assert (or (>= (+ (* (- GEN58) x0) (* GEN59 x2) (* (- GEN60) x2)) (- GEN61)) (>= (+ (* (- GEN62) x2) (* GEN63 x2) (* GEN64 x1)) (- GEN65))))
(assert (or (not (< (+ (* (- GEN66) x0) (* (- GEN67) x1)) GEN68)) (= (+ (* (- GEN69) x2) (* (- GEN70) x0)) GEN71) (not (< (+ (* (- GEN72) x0) (* GEN73 x2) (* (- GEN74) x1) (* (- GEN75) x2)) GEN76))))
(assert (or (not (<= (+ (* (- GEN77) x2) (* GEN78 x1)) GEN79)) (not (<= (+ (* GEN80 x2) (* GEN81 x2) (* (- GEN82) x1) (* (- GEN83) x1)) GEN84))))
(assert (not (= (+ (* GEN85 x1) (* (- GEN86) x2) (* GEN87 x1)) (- GEN88))))
(check-sat)
(push 1)
(assert (not (<= (+ (* (- GEN89) x1) (* GEN90 x2) (* (- GEN91) x2)) (- GEN92))))
(check-sat)
(pop 1)
(check-sat)