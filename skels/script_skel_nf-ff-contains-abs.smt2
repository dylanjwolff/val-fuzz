(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const GEN9 String)
(declare-const GEN8 String)
(declare-const GEN7 String)
(declare-const GEN6 String)
(declare-const GEN5 String)
(declare-const GEN4 String)
(declare-const GEN3 String)
(declare-const GEN2 String)
(declare-const GEN1 String)
(declare-fun a () String)
(declare-fun b () String)
(declare-fun c () String)
(declare-fun d () String)
(declare-fun e () String)
(declare-fun f () String)
(declare-fun g () String)
(assert (= (str.++ GEN1 a GEN2 b GEN3 c) (str.++ e g f)))
(assert (or (= a GEN4) (= a GEN5)))
(assert (or (= b GEN6) (= b GEN7)))
(assert (or (= c GEN8) (= c GEN9)))
(assert (= BAV1 (= (str.++ GEN1 a GEN2 b GEN3 c) (str.++ e g f))))
(assert (= BAV2 (or (= a GEN4) (= a GEN5))))
(assert (= BAV3 (= a GEN4)))
(assert (= BAV4 (= a GEN5)))
(assert (= BAV5 (or (= b GEN6) (= b GEN7))))
(assert (= BAV6 (= b GEN6)))
(assert (= BAV7 (= b GEN7)))
(assert (= BAV8 (or (= c GEN8) (= c GEN9))))
(assert (= BAV9 (= c GEN8)))
(assert (= BAV10 (= c GEN9)))