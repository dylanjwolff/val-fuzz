(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(get-model)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun base () Int)
(declare-fun n () Int)
(declare-fun g (Int) Bool)
(declare-fun f (Int) Bool)
(push 1)
(assert (<= GEN1 n))
(assert (f n))
(assert (= (f n) (or (= (- n base) GEN2) (g n))))
(assert (= BAV1 (<= GEN1 n)))
(assert (= BAV2 (= (f n) (or (= (- n base) GEN2) (g n)))))
(assert (= BAV3 (or (= (- n base) GEN2) (g n))))
(assert (= BAV4 (= (- n base) GEN2)))
(assert (= BAV5 (<= GEN3 n)))
(assert (= BAV6 (or (= (- n base) GEN4) (g n))))
(assert (= BAV7 (= (- n base) GEN4)))
(assert (= BAV8 (= base (- GEN5))))
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (<= GEN3 n))
(assert (or (= (- n base) GEN4) (g n)))
(assert (not (g n)))
(assert (= base (- GEN5)))
(check-sat)
(pop 1)