(set-option :auto-config true)
(set-option :produce-models true)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(get-model)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const GEN18 Int)
(get-model)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun A ((_ BitVec 32)) (_ BitVec 32))
(assert (= (A (_ bv0 32)) (_ bv1 32)))
(assert (= BAV1 (= (A (_ bv0 32)) (_ bv1 32))))
(assert (= BAV2 (= (A (_ bv0 32)) (_ bv1 32))))
(assert (= BAV3 (= (A (_ bv1 32)) (_ bv2 32))))
(assert (= BAV4 (= (A (_ bv2 32)) (_ bv2 32))))
(assert (= BAV5 (= (A (_ bv3 32)) (_ bv0 32))))
(assert (= BAV6 (= (A (_ bv0 32)) (_ bv1 32))))
(assert (= BAV7 (= (A (_ bv1 32)) (_ bv2 32))))
(assert (= BAV8 (= (A (_ bv2 32)) (_ bv2 32))))
(assert (= BAV9 (= (A (_ bv3 32)) (_ bv0 32))))
(check-sat)
(get-model)
(reset)
(set-logic QF_UFBV)
(declare-fun A ((_ BitVec 32)) (_ BitVec 32))
(assert (= (A (_ bv0 32)) (_ bv1 32)))
(assert (= (A (_ bv1 32)) (_ bv2 32)))
(assert (= (A (_ bv2 32)) (_ bv2 32)))
(assert (= (A (_ bv3 32)) (_ bv0 32)))
(check-sat)
(get-model)
(eval (= (A (_ bv0 32)) (_ bv1 32)) )
(eval (= (A (_ bv1 32)) (_ bv2 32)) )
(eval (= (A (_ bv2 32)) (_ bv2 32)) )
(eval (= (A (_ bv3 32)) (_ bv0 32)) )
(reset)
(set-option :auto-config false)
(set-logic QF_UFBV)
(declare-fun A ((_ BitVec 32)) (_ BitVec 32))
(assert (= (A (_ bv0 32)) (_ bv1 32)))
(assert (= (A (_ bv1 32)) (_ bv2 32)))
(assert (= (A (_ bv2 32)) (_ bv2 32)))
(assert (= (A (_ bv3 32)) (_ bv0 32)))
(check-sat)
(get-model)