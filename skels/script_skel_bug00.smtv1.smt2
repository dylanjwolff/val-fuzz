(set-option :incremental false)
(set-info :status unknown)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun member_6_curr_2 () (_ BitVec 32))
(declare-fun arr_next_15 () (Array (_ BitVec 32) (_ BitVec 32)))
(declare-fun member_3_curr_4 () (_ BitVec 32))
(declare-fun main_0_x_3 () (_ BitVec 32))
(declare-fun member_3_curr_5 () (_ BitVec 32))
(declare-fun arr_val_8 () (Array (_ BitVec 32) (_ BitVec 32)))
(assert (= BAV1 (and (= (_ bv0 32) (ite (= (_ bv1 32) (select arr_val_8 member_6_curr_2)) (_ bv1 32) (_ bv0 32))) (= (_ bv0 32) (select arr_next_15 member_3_curr_5)) (= (select arr_next_15 (_ bv1 32)) member_3_curr_4) (= (_ bv1 32) (select arr_next_15 (_ bv0 32))) (= member_3_curr_5 (ite (and (= (_ bv0 32) main_0_x_3) (= (_ bv1 32) member_3_curr_4)) (_ bv0 32) member_3_curr_4)) (= member_6_curr_2 (select arr_next_15 (_ bv0 32))) true (= (_ bv0 32) (select arr_next_15 member_6_curr_2)))))
(assert (= BAV2 (= (_ bv0 32) (ite (= (_ bv1 32) (select arr_val_8 member_6_curr_2)) (_ bv1 32) (_ bv0 32)))))
(assert (= BAV3 (= (_ bv1 32) (select arr_val_8 member_6_curr_2))))
(assert (= BAV4 (= (_ bv0 32) (select arr_next_15 member_3_curr_5))))
(assert (= BAV5 (= (select arr_next_15 (_ bv1 32)) member_3_curr_4)))
(assert (= BAV6 (= (_ bv1 32) (select arr_next_15 (_ bv0 32)))))
(assert (= BAV7 (= member_3_curr_5 (ite (and (= (_ bv0 32) main_0_x_3) (= (_ bv1 32) member_3_curr_4)) (_ bv0 32) member_3_curr_4))))
(assert (= BAV8 (and (= (_ bv0 32) main_0_x_3) (= (_ bv1 32) member_3_curr_4))))
(assert (= BAV9 (= (_ bv0 32) main_0_x_3)))
(assert (= BAV10 (= (_ bv1 32) member_3_curr_4)))
(assert (= BAV11 (= member_6_curr_2 (select arr_next_15 (_ bv0 32)))))
(assert (= BAV12 (= (_ bv0 32) (select arr_next_15 member_6_curr_2))))
(check-sat-assuming ((and (= (_ bv0 32) (ite (= (_ bv1 32) (select arr_val_8 member_6_curr_2)) (_ bv1 32) (_ bv0 32))) (= (_ bv0 32) (select arr_next_15 member_3_curr_5)) (= (select arr_next_15 (_ bv1 32)) member_3_curr_4) (= (_ bv1 32) (select arr_next_15 (_ bv0 32))) (= member_3_curr_5 (ite (and (= (_ bv0 32) main_0_x_3) (= (_ bv1 32) member_3_curr_4)) (_ bv0 32) member_3_curr_4)) (= member_6_curr_2 (select arr_next_15 (_ bv0 32))) true (= (_ bv0 32) (select arr_next_15 member_6_curr_2)))))
(get-model)