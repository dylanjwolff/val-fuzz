(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x4 () Real)
(declare-fun x3 () Real)
(assert (forall ((?lambda Real)) (and (<= (+ ?lambda (* (/ GEN4 GEN5) x4)) (/ GEN6 GEN7)) (<= (+ (* (- GEN8) ?lambda) (* (/ (- GEN9) GEN10) x4)) (/ (- GEN11) GEN12)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN13) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN14) (<= (* (- GEN1) x4) (- GEN15)) (<= (* (- GEN1) x4) (- GEN16)) (<= (* (- GEN1) x4) (- GEN17)))))
(assert (= BAV1 (forall ((?lambda Real)) (and (<= (+ ?lambda (* (/ GEN4 GEN5) x4)) (/ GEN6 GEN7)) (<= (+ (* (- GEN8) ?lambda) (* (/ (- GEN9) GEN10) x4)) (/ (- GEN11) GEN12)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN13) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN14) (<= (* (- GEN1) x4) (- GEN15)) (<= (* (- GEN1) x4) (- GEN16)) (<= (* (- GEN1) x4) (- GEN17))))))
(assert (= BAV2 (forall ((?lambda Real)) (<= (+ ?lambda (* (/ GEN4 GEN5) x4)) (/ GEN6 GEN7)))))
(assert (= BAV3 (forall ((?lambda Real)) (<= (+ (* (- GEN8) ?lambda) (* (/ (- GEN9) GEN10) x4)) (/ (- GEN11) GEN12)))))
(assert (= BAV4 (forall ((?lambda Real)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN13))))
(assert (= BAV5 (forall ((?lambda Real)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN14))))
(assert (= BAV6 (forall ((?lambda Real)) (<= (* (- GEN1) x4) (- GEN15)))))
(assert (= BAV7 (forall ((?lambda Real)) (<= (* (- GEN1) x4) (- GEN16)))))
(assert (= BAV8 (forall ((?lambda Real)) (<= (* (- GEN1) x4) (- GEN17)))))
(check-sat)
(get-model)
(exit)