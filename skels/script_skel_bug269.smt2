(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const GEN11 Int)
(declare-const GEN12 Int)
(declare-const GEN13 Int)
(declare-const GEN14 Int)
(declare-const GEN15 Int)
(declare-const GEN16 Int)
(declare-const GEN17 Int)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-fun x4 () Real)
(declare-fun x3 () Real)
(assert (forall ((?lambda Real)) (and (<= (+ ?lambda (* (/ GEN4 GEN5) x4)) (/ GEN6 GEN7)) (<= (+ (* (- GEN8) ?lambda) (* (/ (- GEN9) GEN10) x4)) (/ (- GEN11) GEN12)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN13) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN14) (<= (* (- GEN1) x4) (- GEN15)) (<= (* (- GEN1) x4) (- GEN16)) (<= (* (- GEN1) x4) (- GEN17)))))
(assert (= BAV18 (forall ((?lambda Real)) (and (<= (+ ?lambda (* (/ GEN4 GEN5) x4)) (/ GEN6 GEN7)) (<= (+ (* (- GEN8) ?lambda) (* (/ (- GEN9) GEN10) x4)) (/ (- GEN11) GEN12)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN13) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN14) (<= (* (- GEN1) x4) (- GEN15)) (<= (* (- GEN1) x4) (- GEN16)) (<= (* (- GEN1) x4) (- GEN17))))))
(assert (= BAV19 (forall ((?lambda Real)) (<= (+ ?lambda (* (/ GEN4 GEN5) x4)) (/ GEN6 GEN7)))))
(assert (= BAV20 (forall ((?lambda Real)) (<= (+ (* (- GEN8) ?lambda) (* (/ (- GEN9) GEN10) x4)) (/ (- GEN11) GEN12)))))
(assert (= BAV21 (forall ((?lambda Real)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN13))))
(assert (= BAV22 (forall ((?lambda Real)) (<= (+ ?lambda (* (/ GEN2 GEN3) x4)) GEN14))))
(assert (= BAV23 (forall ((?lambda Real)) (<= (* (- GEN1) x4) (- GEN15)))))
(assert (= BAV24 (forall ((?lambda Real)) (<= (* (- GEN1) x4) (- GEN16)))))
(assert (= BAV25 (forall ((?lambda Real)) (<= (* (- GEN1) x4) (- GEN17)))))
(check-sat)
(exit)