(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(get-model)
(get-model)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const GEN10 String)
(declare-const GEN9 String)
(declare-const GEN8 String)
(declare-const GEN7 String)
(declare-const GEN6 String)
(declare-const GEN5 String)
(declare-const GEN4 String)
(declare-const GEN3 String)
(declare-const GEN2 String)
(declare-const GEN1 String)
(declare-const x String)
(declare-const y String)
(declare-const z String)
(push 1)
(assert (not (= (str.replace (str.replace x GEN1 x) x GEN2) (str.replace (str.replace x GEN3 GEN4) x GEN5))))
(assert (= BAV1 (= (str.replace (str.replace x GEN1 x) x GEN2) (str.replace (str.replace x GEN3 GEN4) x GEN5))))
(assert (= BAV2 (= (str.replace (str.replace x GEN6 x) x GEN7) (str.replace (str.replace x GEN8 GEN9) x GEN10))))
(assert (= BAV3 (= (str.replace (str.replace x z x) x y) (str.replace (str.replace x z y) x y))))
(assert (= BAV4 (= (str.replace (str.replace x z x) x y) (str.replace (str.replace x z y) x y))))
(assert (= BAV5 (<= (str.len y) (str.len z))))
(assert (= BAV6 (= (str.replace (str.replace x z x) x y) (str.replace (str.replace x z y) x y))))
(assert (= BAV7 (= y z)))
(check-sat)
(get-model)
(pop 1)
(push 1)
(assert (not (= (str.replace (str.replace x GEN6 x) x GEN7) (str.replace (str.replace x GEN8 GEN9) x GEN10))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (str.replace (str.replace x z x) x y) (str.replace (str.replace x z y) x y))))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (str.replace (str.replace x z x) x y) (str.replace (str.replace x z y) x y))))
(assert (<= (str.len y) (str.len z)))
(check-sat)
(pop 1)
(push 1)
(assert (not (= (str.replace (str.replace x z x) x y) (str.replace (str.replace x z y) x y))))
(assert (not (= y z)))
(check-sat)
(pop 1)