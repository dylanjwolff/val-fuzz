(set-option :incremental false)
(set-info :source "Generating minimum transitivity constraints in P-time for deciding Equality Logic,
Ofer Strichman and Mirron Rozanov,
SMT Workshop 2005.

Translator: Leonardo de Moura.")
(set-info :category "crafted")
(set-info :difficulty "2")
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-sort U 0)
(declare-fun x0 () U)
(declare-fun y0 () U)
(declare-fun z0 () U)
(declare-fun x1 () U)
(declare-fun y1 () U)
(declare-fun z1 () U)
(declare-fun x2 () U)
(declare-fun y2 () U)
(declare-fun z2 () U)
(declare-fun x3 () U)
(declare-fun y3 () U)
(declare-fun z3 () U)
(declare-fun x4 () U)
(declare-fun y4 () U)
(declare-fun z4 () U)
(declare-fun x5 () U)
(declare-fun y5 () U)
(declare-fun z5 () U)
(declare-fun x6 () U)
(declare-fun y6 () U)
(declare-fun z6 () U)
(declare-fun x7 () U)
(declare-fun y7 () U)
(declare-fun z7 () U)
(declare-fun x8 () U)
(declare-fun y8 () U)
(declare-fun z8 () U)
(declare-fun x9 () U)
(declare-fun y9 () U)
(declare-fun z9 () U)
(declare-fun x10 () U)
(declare-fun y10 () U)
(declare-fun z10 () U)
(declare-fun x11 () U)
(declare-fun y11 () U)
(declare-fun z11 () U)
(declare-fun x12 () U)
(declare-fun y12 () U)
(declare-fun z12 () U)
(declare-fun x13 () U)
(declare-fun y13 () U)
(declare-fun z13 () U)
(declare-fun x14 () U)
(declare-fun y14 () U)
(declare-fun z14 () U)
(declare-fun x15 () U)
(declare-fun y15 () U)
(declare-fun z15 () U)
(declare-fun x16 () U)
(declare-fun y16 () U)
(declare-fun z16 () U)
(declare-fun x17 () U)
(declare-fun y17 () U)
(declare-fun z17 () U)
(declare-fun x18 () U)
(declare-fun y18 () U)
(declare-fun z18 () U)
(declare-fun x19 () U)
(declare-fun y19 () U)
(declare-fun z19 () U)
(declare-fun x20 () U)
(declare-fun y20 () U)
(declare-fun z20 () U)
(declare-fun x21 () U)
(declare-fun y21 () U)
(declare-fun z21 () U)
(declare-fun x22 () U)
(declare-fun y22 () U)
(declare-fun z22 () U)
(assert (= BAV1 (and (or (and (= x0 y0) (= y0 x1)) (and (= x0 z0) (= z0 x1))) (or (and (= x1 y1) (= y1 x2)) (and (= x1 z1) (= z1 x2))) (or (and (= x2 y2) (= y2 x3)) (and (= x2 z2) (= z2 x3))) (or (and (= x3 y3) (= y3 x4)) (and (= x3 z3) (= z3 x4))) (or (and (= x4 y4) (= y4 x5)) (and (= x4 z4) (= z4 x5))) (or (and (= x5 y5) (= y5 x6)) (and (= x5 z5) (= z5 x6))) (or (and (= x6 y6) (= y6 x7)) (and (= x6 z6) (= z6 x7))) (or (and (= x7 y7) (= y7 x8)) (and (= x7 z7) (= z7 x8))) (or (and (= x8 y8) (= y8 x9)) (and (= x8 z8) (= z8 x9))) (or (and (= x9 y9) (= y9 x10)) (and (= x9 z9) (= z9 x10))) (or (and (= x10 y10) (= y10 x11)) (and (= x10 z10) (= z10 x11))) (or (and (= x11 y11) (= y11 x12)) (and (= x11 z11) (= z11 x12))) (or (and (= x12 y12) (= y12 x13)) (and (= x12 z12) (= z12 x13))) (or (and (= x13 y13) (= y13 x14)) (and (= x13 z13) (= z13 x14))) (or (and (= x14 y14) (= y14 x15)) (and (= x14 z14) (= z14 x15))) (or (and (= x15 y15) (= y15 x16)) (and (= x15 z15) (= z15 x16))) (or (and (= x16 y16) (= y16 x17)) (and (= x16 z16) (= z16 x17))) (or (and (= x17 y17) (= y17 x18)) (and (= x17 z17) (= z17 x18))) (or (and (= x18 y18) (= y18 x19)) (and (= x18 z18) (= z18 x19))) (or (and (= x19 y19) (= y19 x20)) (and (= x19 z19) (= z19 x20))) (or (and (= x20 y20) (= y20 x21)) (and (= x20 z20) (= z20 x21))) (or (and (= x21 y21) (= y21 x22)) (and (= x21 z21) (= z21 x22))) (not (= x0 x22)))))
(assert (= BAV2 (or (and (= x0 y0) (= y0 x1)) (and (= x0 z0) (= z0 x1)))))
(assert (= BAV3 (and (= x0 y0) (= y0 x1))))
(assert (= BAV4 (= x0 y0)))
(assert (= BAV5 (= y0 x1)))
(assert (= BAV6 (and (= x0 z0) (= z0 x1))))
(assert (= BAV7 (= x0 z0)))
(assert (= BAV8 (= z0 x1)))
(assert (= BAV9 (or (and (= x1 y1) (= y1 x2)) (and (= x1 z1) (= z1 x2)))))
(assert (= BAV10 (and (= x1 y1) (= y1 x2))))
(assert (= BAV11 (= x1 y1)))
(assert (= BAV12 (= y1 x2)))
(assert (= BAV13 (and (= x1 z1) (= z1 x2))))
(assert (= BAV14 (= x1 z1)))
(assert (= BAV15 (= z1 x2)))
(assert (= BAV16 (or (and (= x2 y2) (= y2 x3)) (and (= x2 z2) (= z2 x3)))))
(assert (= BAV17 (and (= x2 y2) (= y2 x3))))
(assert (= BAV18 (= x2 y2)))
(assert (= BAV19 (= y2 x3)))
(assert (= BAV20 (and (= x2 z2) (= z2 x3))))
(assert (= BAV21 (= x2 z2)))
(assert (= BAV22 (= z2 x3)))
(assert (= BAV23 (or (and (= x3 y3) (= y3 x4)) (and (= x3 z3) (= z3 x4)))))
(assert (= BAV24 (and (= x3 y3) (= y3 x4))))
(assert (= BAV25 (= x3 y3)))
(assert (= BAV26 (= y3 x4)))
(assert (= BAV27 (and (= x3 z3) (= z3 x4))))
(assert (= BAV28 (= x3 z3)))
(assert (= BAV29 (= z3 x4)))
(assert (= BAV30 (or (and (= x4 y4) (= y4 x5)) (and (= x4 z4) (= z4 x5)))))
(assert (= BAV31 (and (= x4 y4) (= y4 x5))))
(assert (= BAV32 (= x4 y4)))
(assert (= BAV33 (= y4 x5)))
(assert (= BAV34 (and (= x4 z4) (= z4 x5))))
(assert (= BAV35 (= x4 z4)))
(assert (= BAV36 (= z4 x5)))
(assert (= BAV37 (or (and (= x5 y5) (= y5 x6)) (and (= x5 z5) (= z5 x6)))))
(assert (= BAV38 (and (= x5 y5) (= y5 x6))))
(assert (= BAV39 (= x5 y5)))
(assert (= BAV40 (= y5 x6)))
(assert (= BAV41 (and (= x5 z5) (= z5 x6))))
(assert (= BAV42 (= x5 z5)))
(assert (= BAV43 (= z5 x6)))
(assert (= BAV44 (or (and (= x6 y6) (= y6 x7)) (and (= x6 z6) (= z6 x7)))))
(assert (= BAV45 (and (= x6 y6) (= y6 x7))))
(assert (= BAV46 (= x6 y6)))
(assert (= BAV47 (= y6 x7)))
(assert (= BAV48 (and (= x6 z6) (= z6 x7))))
(assert (= BAV49 (= x6 z6)))
(assert (= BAV50 (= z6 x7)))
(assert (= BAV51 (or (and (= x7 y7) (= y7 x8)) (and (= x7 z7) (= z7 x8)))))
(assert (= BAV52 (and (= x7 y7) (= y7 x8))))
(assert (= BAV53 (= x7 y7)))
(assert (= BAV54 (= y7 x8)))
(assert (= BAV55 (and (= x7 z7) (= z7 x8))))
(assert (= BAV56 (= x7 z7)))
(assert (= BAV57 (= z7 x8)))
(assert (= BAV58 (or (and (= x8 y8) (= y8 x9)) (and (= x8 z8) (= z8 x9)))))
(assert (= BAV59 (and (= x8 y8) (= y8 x9))))
(assert (= BAV60 (= x8 y8)))
(assert (= BAV61 (= y8 x9)))
(assert (= BAV62 (and (= x8 z8) (= z8 x9))))
(assert (= BAV63 (= x8 z8)))
(assert (= BAV64 (= z8 x9)))
(assert (= BAV65 (or (and (= x9 y9) (= y9 x10)) (and (= x9 z9) (= z9 x10)))))
(assert (= BAV66 (and (= x9 y9) (= y9 x10))))
(assert (= BAV67 (= x9 y9)))
(assert (= BAV68 (= y9 x10)))
(assert (= BAV69 (and (= x9 z9) (= z9 x10))))
(assert (= BAV70 (= x9 z9)))
(assert (= BAV71 (= z9 x10)))
(assert (= BAV72 (or (and (= x10 y10) (= y10 x11)) (and (= x10 z10) (= z10 x11)))))
(assert (= BAV73 (and (= x10 y10) (= y10 x11))))
(assert (= BAV74 (= x10 y10)))
(assert (= BAV75 (= y10 x11)))
(assert (= BAV76 (and (= x10 z10) (= z10 x11))))
(assert (= BAV77 (= x10 z10)))
(assert (= BAV78 (= z10 x11)))
(assert (= BAV79 (or (and (= x11 y11) (= y11 x12)) (and (= x11 z11) (= z11 x12)))))
(assert (= BAV80 (and (= x11 y11) (= y11 x12))))
(assert (= BAV81 (= x11 y11)))
(assert (= BAV82 (= y11 x12)))
(assert (= BAV83 (and (= x11 z11) (= z11 x12))))
(assert (= BAV84 (= x11 z11)))
(assert (= BAV85 (= z11 x12)))
(assert (= BAV86 (or (and (= x12 y12) (= y12 x13)) (and (= x12 z12) (= z12 x13)))))
(assert (= BAV87 (and (= x12 y12) (= y12 x13))))
(assert (= BAV88 (= x12 y12)))
(assert (= BAV89 (= y12 x13)))
(assert (= BAV90 (and (= x12 z12) (= z12 x13))))
(assert (= BAV91 (= x12 z12)))
(assert (= BAV92 (= z12 x13)))
(assert (= BAV93 (or (and (= x13 y13) (= y13 x14)) (and (= x13 z13) (= z13 x14)))))
(assert (= BAV94 (and (= x13 y13) (= y13 x14))))
(assert (= BAV95 (= x13 y13)))
(assert (= BAV96 (= y13 x14)))
(assert (= BAV97 (and (= x13 z13) (= z13 x14))))
(assert (= BAV98 (= x13 z13)))
(assert (= BAV99 (= z13 x14)))
(assert (= BAV100 (or (and (= x14 y14) (= y14 x15)) (and (= x14 z14) (= z14 x15)))))
(assert (= BAV101 (and (= x14 y14) (= y14 x15))))
(assert (= BAV102 (= x14 y14)))
(assert (= BAV103 (= y14 x15)))
(assert (= BAV104 (and (= x14 z14) (= z14 x15))))
(assert (= BAV105 (= x14 z14)))
(assert (= BAV106 (= z14 x15)))
(assert (= BAV107 (or (and (= x15 y15) (= y15 x16)) (and (= x15 z15) (= z15 x16)))))
(assert (= BAV108 (and (= x15 y15) (= y15 x16))))
(assert (= BAV109 (= x15 y15)))
(assert (= BAV110 (= y15 x16)))
(assert (= BAV111 (and (= x15 z15) (= z15 x16))))
(assert (= BAV112 (= x15 z15)))
(assert (= BAV113 (= z15 x16)))
(assert (= BAV114 (or (and (= x16 y16) (= y16 x17)) (and (= x16 z16) (= z16 x17)))))
(assert (= BAV115 (and (= x16 y16) (= y16 x17))))
(assert (= BAV116 (= x16 y16)))
(assert (= BAV117 (= y16 x17)))
(assert (= BAV118 (and (= x16 z16) (= z16 x17))))
(assert (= BAV119 (= x16 z16)))
(assert (= BAV120 (= z16 x17)))
(assert (= BAV121 (or (and (= x17 y17) (= y17 x18)) (and (= x17 z17) (= z17 x18)))))
(assert (= BAV122 (and (= x17 y17) (= y17 x18))))
(assert (= BAV123 (= x17 y17)))
(assert (= BAV124 (= y17 x18)))
(assert (= BAV125 (and (= x17 z17) (= z17 x18))))
(assert (= BAV126 (= x17 z17)))
(assert (= BAV127 (= z17 x18)))
(assert (= BAV128 (or (and (= x18 y18) (= y18 x19)) (and (= x18 z18) (= z18 x19)))))
(assert (= BAV129 (and (= x18 y18) (= y18 x19))))
(assert (= BAV130 (= x18 y18)))
(assert (= BAV131 (= y18 x19)))
(assert (= BAV132 (and (= x18 z18) (= z18 x19))))
(assert (= BAV133 (= x18 z18)))
(assert (= BAV134 (= z18 x19)))
(assert (= BAV135 (or (and (= x19 y19) (= y19 x20)) (and (= x19 z19) (= z19 x20)))))
(assert (= BAV136 (and (= x19 y19) (= y19 x20))))
(assert (= BAV137 (= x19 y19)))
(assert (= BAV138 (= y19 x20)))
(assert (= BAV139 (and (= x19 z19) (= z19 x20))))
(assert (= BAV140 (= x19 z19)))
(assert (= BAV141 (= z19 x20)))
(assert (= BAV142 (or (and (= x20 y20) (= y20 x21)) (and (= x20 z20) (= z20 x21)))))
(assert (= BAV143 (and (= x20 y20) (= y20 x21))))
(assert (= BAV144 (= x20 y20)))
(assert (= BAV145 (= y20 x21)))
(assert (= BAV146 (and (= x20 z20) (= z20 x21))))
(assert (= BAV147 (= x20 z20)))
(assert (= BAV148 (= z20 x21)))
(assert (= BAV149 (or (and (= x21 y21) (= y21 x22)) (and (= x21 z21) (= z21 x22)))))
(assert (= BAV150 (and (= x21 y21) (= y21 x22))))
(assert (= BAV151 (= x21 y21)))
(assert (= BAV152 (= y21 x22)))
(assert (= BAV153 (and (= x21 z21) (= z21 x22))))
(assert (= BAV154 (= x21 z21)))
(assert (= BAV155 (= z21 x22)))
(assert (= BAV156 (= x0 x22)))
(check-sat-assuming ((and (or (and (= x0 y0) (= y0 x1)) (and (= x0 z0) (= z0 x1))) (or (and (= x1 y1) (= y1 x2)) (and (= x1 z1) (= z1 x2))) (or (and (= x2 y2) (= y2 x3)) (and (= x2 z2) (= z2 x3))) (or (and (= x3 y3) (= y3 x4)) (and (= x3 z3) (= z3 x4))) (or (and (= x4 y4) (= y4 x5)) (and (= x4 z4) (= z4 x5))) (or (and (= x5 y5) (= y5 x6)) (and (= x5 z5) (= z5 x6))) (or (and (= x6 y6) (= y6 x7)) (and (= x6 z6) (= z6 x7))) (or (and (= x7 y7) (= y7 x8)) (and (= x7 z7) (= z7 x8))) (or (and (= x8 y8) (= y8 x9)) (and (= x8 z8) (= z8 x9))) (or (and (= x9 y9) (= y9 x10)) (and (= x9 z9) (= z9 x10))) (or (and (= x10 y10) (= y10 x11)) (and (= x10 z10) (= z10 x11))) (or (and (= x11 y11) (= y11 x12)) (and (= x11 z11) (= z11 x12))) (or (and (= x12 y12) (= y12 x13)) (and (= x12 z12) (= z12 x13))) (or (and (= x13 y13) (= y13 x14)) (and (= x13 z13) (= z13 x14))) (or (and (= x14 y14) (= y14 x15)) (and (= x14 z14) (= z14 x15))) (or (and (= x15 y15) (= y15 x16)) (and (= x15 z15) (= z15 x16))) (or (and (= x16 y16) (= y16 x17)) (and (= x16 z16) (= z16 x17))) (or (and (= x17 y17) (= y17 x18)) (and (= x17 z17) (= z17 x18))) (or (and (= x18 y18) (= y18 x19)) (and (= x18 z18) (= z18 x19))) (or (and (= x19 y19) (= y19 x20)) (and (= x19 z19) (= z19 x20))) (or (and (= x20 y20) (= y20 x21)) (and (= x20 z20) (= z20 x21))) (or (and (= x21 y21) (= y21 x22)) (and (= x21 z21) (= z21 x22))) (not (= x0 x22)))))
(get-model)