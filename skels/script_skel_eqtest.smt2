(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-fun A () (Set Int) )
(declare-fun B () (Set Int) )
(declare-fun C () (Set Int) )
(declare-fun D () (Set Int) )
(declare-fun E () (Set Int) )
(declare-fun F () (Set Int) )
(declare-fun G () (Set Int) )
(declare-fun H () (Set Int) )
(declare-fun I () (Set Int) )
(declare-fun x () Int)
(assert (member x (intersection (union A B) C)))
(assert (not (member x G)))
(assert (= (union A B) D))
(assert (= C (intersection E F)))
(assert (and (= F H) (= G H) (= H I)))
(assert (= BAV1 (= (union A B) D)))
(assert (= BAV2 (= C (intersection E F))))
(assert (= BAV3 (and (= F H) (= G H) (= H I))))
(assert (= BAV4 (= F H)))
(assert (= BAV5 (= G H)))
(assert (= BAV6 (= H I)))
(check-sat)
(get-model)