(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(define-fun-rec pow ((a Int)(b Int)) Int 
    (ite (<= b 0) 
         1 
         (* a (pow a (- b 1)))))
(declare-fun x () Int)
(assert (>= x GEN1))
(assert (< x (pow GEN2 GEN3)))
(assert (>= (mod (div x (pow GEN4 GEN5)) (pow GEN6 GEN7)) GEN8))
(assert (= BAV9 (>= x GEN1)))
(assert (= BAV10 (< x (pow GEN2 GEN3))))
(assert (= BAV11 (>= (mod (div x (pow GEN4 GEN5)) (pow GEN6 GEN7)) GEN8)))
(check-sat)