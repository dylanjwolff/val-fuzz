(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const GEN6 Int)
(declare-const GEN5 String)
(declare-const GEN4 String)
(get-model)
(declare-const GEN3 Int)
(declare-const GEN2 String)
(declare-const GEN1 String)
(set-option :smt.string_solver z3str3)
(declare-fun tmp_int2 () Int)
(assert (= (str.indexof GEN1 GEN2 tmp_int2) (- GEN3)))
(assert (= BAV1 (= (str.indexof GEN1 GEN2 tmp_int2) (- GEN3))))
(assert (= BAV2 (= (str.indexof GEN4 "" tmp_int2) (- GEN6))))
(check-sat)
(get-model)
(reset)
(set-option :smt.string_solver seq)
(declare-fun tmp_int2 () Int)
(assert (= (str.indexof GEN4 "" tmp_int2) (- GEN6)))
(check-sat)