(set-option :incremental false)
(set-info :status unknown)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v4 () (_ BitVec 16))
(declare-fun dummy4 () (_ BitVec 1))
(declare-fun a () (_ BitVec 16))
(assert (= BAV1 (and true true true (and (= ((_ extract 15 13) a) (concat ((_ extract 15 14) v4) dummy4)) (= ((_ extract 14 12) a) (concat dummy4 ((_ extract 13 12) v4)))) (not (= ((_ extract 14 14) v4) ((_ extract 13 13) v4))))))
(assert (= BAV2 (and (= ((_ extract 15 13) a) (concat ((_ extract 15 14) v4) dummy4)) (= ((_ extract 14 12) a) (concat dummy4 ((_ extract 13 12) v4))))))
(assert (= BAV3 (= ((_ extract 15 13) a) (concat ((_ extract 15 14) v4) dummy4))))
(assert (= BAV4 (= ((_ extract 14 12) a) (concat dummy4 ((_ extract 13 12) v4)))))
(assert (= BAV5 (= ((_ extract 14 14) v4) ((_ extract 13 13) v4))))
(check-sat-assuming ((and true true true (and (= ((_ extract 15 13) a) (concat ((_ extract 15 14) v4) dummy4)) (= ((_ extract 14 12) a) (concat dummy4 ((_ extract 13 12) v4)))) (not (= ((_ extract 14 14) v4) ((_ extract 13 13) v4))))))
(get-model)