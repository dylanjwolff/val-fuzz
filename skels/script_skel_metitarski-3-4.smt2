(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const GEN7 Int)
(declare-const GEN8 Int)
(declare-const GEN9 Int)
(declare-const GEN10 Int)
(declare-const GEN11 Int)
(declare-const GEN12 Int)
(declare-const GEN13 Int)
(declare-const GEN14 Int)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(set-info :source |
These benchmarks used in the paper:

  Dejan Jovanovic and Leonardo de Moura.  Solving Non-Linear Arithmetic.
  In IJCAR 2012, published as LNCS volume 7364, pp. 339--354.

The meti-tarski benchmarks are proof obligations extracted from the
Meti-Tarski project, see:

  B. Akbarpour and L. C. Paulson. MetiTarski: An automatic theorem prover
  for real-valued special functions. Journal of Automated Reasoning,
  44(3):175-205, 2010.

Submitted by Dejan Jovanovic for SMT-LIB.


|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(declare-fun skoX () Real)
(declare-fun skoY () Real)
(declare-fun skoZ () Real)
(assert (and (<= (- GEN5) skoY) (and (not (= skoY GEN6)) (and (or (not (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY))) (<= GEN1 skoY)) (and (or (<= GEN1 skoY) (<= (* skoZ (+ GEN7 (* skoY (* skoX (- GEN3))))) (+ (+ GEN8 (* skoX (- GEN3))) (* skoY (+ (- GEN9) (* skoX (- GEN3))))))) (and (or (not (<= GEN1 skoY)) (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))))))) (and (not (<= skoZ GEN12)) (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX)))))))))))
(assert (= BAV15 (and (<= (- GEN5) skoY) (and (not (= skoY GEN6)) (and (or (not (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY))) (<= GEN1 skoY)) (and (or (<= GEN1 skoY) (<= (* skoZ (+ GEN7 (* skoY (* skoX (- GEN3))))) (+ (+ GEN8 (* skoX (- GEN3))) (* skoY (+ (- GEN9) (* skoX (- GEN3))))))) (and (or (not (<= GEN1 skoY)) (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))))))) (and (not (<= skoZ GEN12)) (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX))))))))))))
(assert (= BAV16 (<= (- GEN5) skoY)))
(assert (= BAV17 (and (not (= skoY GEN6)) (and (or (not (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY))) (<= GEN1 skoY)) (and (or (<= GEN1 skoY) (<= (* skoZ (+ GEN7 (* skoY (* skoX (- GEN3))))) (+ (+ GEN8 (* skoX (- GEN3))) (* skoY (+ (- GEN9) (* skoX (- GEN3))))))) (and (or (not (<= GEN1 skoY)) (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))))))) (and (not (<= skoZ GEN12)) (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX)))))))))))
(assert (= BAV18 (= skoY GEN6)))
(assert (= BAV19 (and (or (not (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY))) (<= GEN1 skoY)) (and (or (<= GEN1 skoY) (<= (* skoZ (+ GEN7 (* skoY (* skoX (- GEN3))))) (+ (+ GEN8 (* skoX (- GEN3))) (* skoY (+ (- GEN9) (* skoX (- GEN3))))))) (and (or (not (<= GEN1 skoY)) (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))))))) (and (not (<= skoZ GEN12)) (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX))))))))))
(assert (= BAV20 (or (not (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY))) (<= GEN1 skoY))))
(assert (= BAV21 (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY))))
(assert (= BAV22 (<= GEN1 skoY)))
(assert (= BAV23 (and (or (<= GEN1 skoY) (<= (* skoZ (+ GEN7 (* skoY (* skoX (- GEN3))))) (+ (+ GEN8 (* skoX (- GEN3))) (* skoY (+ (- GEN9) (* skoX (- GEN3))))))) (and (or (not (<= GEN1 skoY)) (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))))))) (and (not (<= skoZ GEN12)) (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX)))))))))
(assert (= BAV24 (or (<= GEN1 skoY) (<= (* skoZ (+ GEN7 (* skoY (* skoX (- GEN3))))) (+ (+ GEN8 (* skoX (- GEN3))) (* skoY (+ (- GEN9) (* skoX (- GEN3)))))))))
(assert (= BAV25 (<= GEN1 skoY)))
(assert (= BAV26 (<= (* skoZ (+ GEN7 (* skoY (* skoX (- GEN3))))) (+ (+ GEN8 (* skoX (- GEN3))) (* skoY (+ (- GEN9) (* skoX (- GEN3))))))))
(assert (= BAV27 (and (or (not (<= GEN1 skoY)) (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))))))) (and (not (<= skoZ GEN12)) (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX))))))))
(assert (= BAV28 (or (not (<= GEN1 skoY)) (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3))))))))))))))
(assert (= BAV29 (<= GEN1 skoY)))
(assert (= BAV30 (or (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY)) (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))))))))
(assert (= BAV31 (<= (* skoZ (+ (- GEN2) (* skoY skoX))) (+ skoX skoY))))
(assert (= BAV32 (<= (* skoZ (+ (+ GEN10 (* skoX skoX)) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3)))))))) (+ (* skoX (* skoX (* skoX (- GEN3)))) (* skoY (+ (* skoX (* skoX (- GEN11))) (* skoY (* skoX (+ (- GEN4) (* skoX (* skoX (- GEN3))))))))))))
(assert (= BAV33 (and (not (<= skoZ GEN12)) (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX)))))))
(assert (= BAV34 (<= skoZ GEN12)))
(assert (= BAV35 (and (not (<= skoX (- GEN13))) (and (not (<= GEN14 skoY)) (not (<= skoY skoX))))))
(assert (= BAV36 (<= skoX (- GEN13))))
(assert (= BAV37 (and (not (<= GEN14 skoY)) (not (<= skoY skoX)))))
(assert (= BAV38 (<= GEN14 skoY)))
(assert (= BAV39 (<= skoY skoX)))
(check-sat)
(get-model)
(exit)