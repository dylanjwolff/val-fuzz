(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun i () Int)
(declare-fun n () Int)
(declare-fun s () Int)
(assert (and (= i (+ (* (- GEN1) s) (* i i))) (>= (+ i (* (- GEN2) n)) GEN3) (not (>= (+ i (* (- GEN4) n)) GEN5))))
(assert (not (= n (+ (* GEN6 s) (* (- GEN7) (* n n))))))
(assert (= BAV1 (and (= i (+ (* (- GEN1) s) (* i i))) (>= (+ i (* (- GEN2) n)) GEN3) (not (>= (+ i (* (- GEN4) n)) GEN5)))))
(assert (= BAV2 (= i (+ (* (- GEN1) s) (* i i)))))
(assert (= BAV3 (>= (+ i (* (- GEN2) n)) GEN3)))
(assert (= BAV4 (>= (+ i (* (- GEN4) n)) GEN5)))
(assert (= BAV5 (= n (+ (* GEN6 s) (* (- GEN7) (* n n))))))
(check-sat)
(get-model)