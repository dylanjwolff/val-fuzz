(set-logic ALL)
(declare-const GEN1 String)
(declare-const GEN2 String)
(declare-const GEN3 String)
(declare-const GEN4 String)
(declare-const GEN5 String)
(declare-const GEN6 String)
(declare-const GEN7 String)
(declare-const GEN8 String)
(declare-const GEN9 String)
(declare-const GEN10 String)
(declare-const GEN11 String)
(declare-const GEN12 String)
(declare-const GEN13 String)
(declare-const GEN14 String)
(declare-const GEN15 String)
(declare-const GEN16 String)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-fun var () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)
(assert (= true (= sv1 sv2)))
(assert (= true (str.in.re var (re.++ (re.++ (re.++ (re.++ (re.* re.allchar) (re.++ (str.to.re GEN1) (re.++ (re.+ (str.to.re GEN2)) (re.++ (re.union (str.to.re GEN3) (str.to.re GEN4)) (re.++ (re.union (str.to.re GEN5) (str.to.re GEN6)) (re.++ (re.+ (str.to.re GEN7)) (str.to.re GEN8))))))) (str.to.re sv1)) (re.++ (re.++ (str.to.re GEN9) (re.++ (re.* re.allchar) (re.++ (str.to.re GEN10) (re.++ (re.* re.allchar) (str.to.re GEN11))))) (str.to.re sv2))) (re.++ (str.to.re GEN12) (re.++ (re.* (str.to.re GEN13)) (re.union (re.++ (str.to.re GEN14) (str.to.re GEN15)) (str.to.re GEN16))))))))
(assert (= BAV17 (= true (= sv1 sv2))))
(assert (= BAV18 (= sv1 sv2)))
(assert (= BAV19 (= true (str.in.re var (re.++ (re.++ (re.++ (re.++ (re.* re.allchar) (re.++ (str.to.re GEN1) (re.++ (re.+ (str.to.re GEN2)) (re.++ (re.union (str.to.re GEN3) (str.to.re GEN4)) (re.++ (re.union (str.to.re GEN5) (str.to.re GEN6)) (re.++ (re.+ (str.to.re GEN7)) (str.to.re GEN8))))))) (str.to.re sv1)) (re.++ (re.++ (str.to.re GEN9) (re.++ (re.* re.allchar) (re.++ (str.to.re GEN10) (re.++ (re.* re.allchar) (str.to.re GEN11))))) (str.to.re sv2))) (re.++ (str.to.re GEN12) (re.++ (re.* (str.to.re GEN13)) (re.union (re.++ (str.to.re GEN14) (str.to.re GEN15)) (str.to.re GEN16)))))))))
(check-sat)