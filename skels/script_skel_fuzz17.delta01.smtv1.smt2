(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v13 () (_ BitVec 16))
(declare-fun v9 () (_ BitVec 14))
(declare-fun v11 () (_ BitVec 13))
(declare-fun v3 () (_ BitVec 11))
(declare-fun v8 () (_ BitVec 9))
(declare-fun v4 () (_ BitVec 14))
(assert (= BAV1 (and (not (= (_ bv0 1) (ite (distinct (_ bv1 16) (bvsub (bvneg (bvnand (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) ((_ sign_extend 3) (bvxnor ((_ sign_extend 9) ((_ extract 5 2) v8)) v11)))) ((_ zero_extend 7) (bvashr ((_ zero_extend 8) (ite (bvugt (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) (_ bv0 16)) (_ bv1 1) (_ bv0 1))) ((_ extract 13 5) v9))))) (_ bv1 1) (_ bv0 1)))) (bvsle ((_ extract 5 2) v8) ((_ sign_extend 3) (ite (bvslt (bvand ((_ sign_extend 14) (ite (bvugt (ite (bvugt ((_ sign_extend 1) v11) v4) (_ bv1 1) (_ bv0 1)) (ite (bvuge ((_ zero_extend 1) (_ bv21 8)) v8) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 2) v11)) (_ bv0 15)) (_ bv1 1) (_ bv0 1)))) (or false (bvult (_ bv0 14) ((_ zero_extend 13) (bvcomp (ite (bvslt v4 (_ bv0 14)) (_ bv1 1) (_ bv0 1)) (ite (distinct (_ bv0 16) ((_ zero_extend 1) (bvshl (bvand ((_ sign_extend 14) (ite (bvugt (ite (bvugt ((_ sign_extend 1) v11) v4) (_ bv1 1) (_ bv0 1)) (ite (bvuge ((_ zero_extend 1) (_ bv21 8)) v8) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 2) v11)) ((_ zero_extend 6) (bvsub ((_ zero_extend 8) (ite (= (bvsub (_ bv1 16) (bvand ((_ zero_extend 7) v8) v13)) ((_ sign_extend 7) v8)) (_ bv1 1) (_ bv0 1))) (bvnor (_ bv1 9) (_ bv1 9))))))) (_ bv1 1) (_ bv0 1))))) (= (bvadd ((_ sign_extend 8) (ite (bvsgt (bvand ((_ zero_extend 7) v8) v13) ((_ zero_extend 7) v8)) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 8) (_ bv1 1))) (_ bv0 9))) (= (_ bv0 1) (ite (bvsle ((_ zero_extend 2) v9) (bvand ((_ zero_extend 7) v8) v13)) (_ bv1 1) (_ bv0 1))) (bvsge ((_ zero_extend 15) (ite (bvsge ((_ sign_extend 10) (ite (= (bvxnor ((_ sign_extend 9) ((_ extract 5 2) v8)) v11) (_ bv1 13)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (_ bv0 16)) (not (distinct (_ bv1 16) (bvxnor ((_ zero_extend 3) (bvxnor v11 (_ bv1 13))) (ite (= (_ bv1 1) (ite (bvsgt (_ bv1 14) v9) (_ bv1 1) (_ bv0 1))) v13 (_ bv0 16))))))))
(assert (= BAV2 (= (_ bv0 1) (ite (distinct (_ bv1 16) (bvsub (bvneg (bvnand (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) ((_ sign_extend 3) (bvxnor ((_ sign_extend 9) ((_ extract 5 2) v8)) v11)))) ((_ zero_extend 7) (bvashr ((_ zero_extend 8) (ite (bvugt (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) (_ bv0 16)) (_ bv1 1) (_ bv0 1))) ((_ extract 13 5) v9))))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV3 (distinct (_ bv1 16) (bvsub (bvneg (bvnand (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) ((_ sign_extend 3) (bvxnor ((_ sign_extend 9) ((_ extract 5 2) v8)) v11)))) ((_ zero_extend 7) (bvashr ((_ zero_extend 8) (ite (bvugt (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) (_ bv0 16)) (_ bv1 1) (_ bv0 1))) ((_ extract 13 5) v9)))))))
(assert (= BAV4 (or false (bvult (_ bv0 14) ((_ zero_extend 13) (bvcomp (ite (bvslt v4 (_ bv0 14)) (_ bv1 1) (_ bv0 1)) (ite (distinct (_ bv0 16) ((_ zero_extend 1) (bvshl (bvand ((_ sign_extend 14) (ite (bvugt (ite (bvugt ((_ sign_extend 1) v11) v4) (_ bv1 1) (_ bv0 1)) (ite (bvuge ((_ zero_extend 1) (_ bv21 8)) v8) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 2) v11)) ((_ zero_extend 6) (bvsub ((_ zero_extend 8) (ite (= (bvsub (_ bv1 16) (bvand ((_ zero_extend 7) v8) v13)) ((_ sign_extend 7) v8)) (_ bv1 1) (_ bv0 1))) (bvnor (_ bv1 9) (_ bv1 9))))))) (_ bv1 1) (_ bv0 1))))) (= (bvadd ((_ sign_extend 8) (ite (bvsgt (bvand ((_ zero_extend 7) v8) v13) ((_ zero_extend 7) v8)) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 8) (_ bv1 1))) (_ bv0 9)))))
(assert (= BAV5 (distinct (_ bv0 16) ((_ zero_extend 1) (bvshl (bvand ((_ sign_extend 14) (ite (bvugt (ite (bvugt ((_ sign_extend 1) v11) v4) (_ bv1 1) (_ bv0 1)) (ite (bvuge ((_ zero_extend 1) (_ bv21 8)) v8) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 2) v11)) ((_ zero_extend 6) (bvsub ((_ zero_extend 8) (ite (= (bvsub (_ bv1 16) (bvand ((_ zero_extend 7) v8) v13)) ((_ sign_extend 7) v8)) (_ bv1 1) (_ bv0 1))) (bvnor (_ bv1 9) (_ bv1 9)))))))))
(assert (= BAV6 (= (bvsub (_ bv1 16) (bvand ((_ zero_extend 7) v8) v13)) ((_ sign_extend 7) v8))))
(assert (= BAV7 (= (bvadd ((_ sign_extend 8) (ite (bvsgt (bvand ((_ zero_extend 7) v8) v13) ((_ zero_extend 7) v8)) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 8) (_ bv1 1))) (_ bv0 9))))
(assert (= BAV8 (= (_ bv0 1) (ite (bvsle ((_ zero_extend 2) v9) (bvand ((_ zero_extend 7) v8) v13)) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV9 (= (bvxnor ((_ sign_extend 9) ((_ extract 5 2) v8)) v11) (_ bv1 13))))
(assert (= BAV10 (distinct (_ bv1 16) (bvxnor ((_ zero_extend 3) (bvxnor v11 (_ bv1 13))) (ite (= (_ bv1 1) (ite (bvsgt (_ bv1 14) v9) (_ bv1 1) (_ bv0 1))) v13 (_ bv0 16))))))
(assert (= BAV11 (= (_ bv1 1) (ite (bvsgt (_ bv1 14) v9) (_ bv1 1) (_ bv0 1)))))
(check-sat-assuming ((and (not (= (_ bv0 1) (ite (distinct (_ bv1 16) (bvsub (bvneg (bvnand (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) ((_ sign_extend 3) (bvxnor ((_ sign_extend 9) ((_ extract 5 2) v8)) v11)))) ((_ zero_extend 7) (bvashr ((_ zero_extend 8) (ite (bvugt (bvshl (_ bv1 16) ((_ sign_extend 2) v4)) (_ bv0 16)) (_ bv1 1) (_ bv0 1))) ((_ extract 13 5) v9))))) (_ bv1 1) (_ bv0 1)))) (bvsle ((_ extract 5 2) v8) ((_ sign_extend 3) (ite (bvslt (bvand ((_ sign_extend 14) (ite (bvugt (ite (bvugt ((_ sign_extend 1) v11) v4) (_ bv1 1) (_ bv0 1)) (ite (bvuge ((_ zero_extend 1) (_ bv21 8)) v8) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 2) v11)) (_ bv0 15)) (_ bv1 1) (_ bv0 1)))) (or false (bvult (_ bv0 14) ((_ zero_extend 13) (bvcomp (ite (bvslt v4 (_ bv0 14)) (_ bv1 1) (_ bv0 1)) (ite (distinct (_ bv0 16) ((_ zero_extend 1) (bvshl (bvand ((_ sign_extend 14) (ite (bvugt (ite (bvugt ((_ sign_extend 1) v11) v4) (_ bv1 1) (_ bv0 1)) (ite (bvuge ((_ zero_extend 1) (_ bv21 8)) v8) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 2) v11)) ((_ zero_extend 6) (bvsub ((_ zero_extend 8) (ite (= (bvsub (_ bv1 16) (bvand ((_ zero_extend 7) v8) v13)) ((_ sign_extend 7) v8)) (_ bv1 1) (_ bv0 1))) (bvnor (_ bv1 9) (_ bv1 9))))))) (_ bv1 1) (_ bv0 1))))) (= (bvadd ((_ sign_extend 8) (ite (bvsgt (bvand ((_ zero_extend 7) v8) v13) ((_ zero_extend 7) v8)) (_ bv1 1) (_ bv0 1))) ((_ sign_extend 8) (_ bv1 1))) (_ bv0 9))) (= (_ bv0 1) (ite (bvsle ((_ zero_extend 2) v9) (bvand ((_ zero_extend 7) v8) v13)) (_ bv1 1) (_ bv0 1))) (bvsge ((_ zero_extend 15) (ite (bvsge ((_ sign_extend 10) (ite (= (bvxnor ((_ sign_extend 9) ((_ extract 5 2) v8)) v11) (_ bv1 13)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (_ bv0 16)) (not (distinct (_ bv1 16) (bvxnor ((_ zero_extend 3) (bvxnor v11 (_ bv1 13))) (ite (= (_ bv1 1) (ite (bvsgt (_ bv1 14) v9) (_ bv1 1) (_ bv0 1))) v13 (_ bv0 16))))))))
(get-model)