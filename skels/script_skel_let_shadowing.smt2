(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-const _let_0 Int)
(declare-const x Int)
(declare-const y Int)
(declare-const a Bool)
(declare-const b Bool)
(assert (= (* x y) (* x y) _let_0))
(assert (= (and a b) (and a b) (forall ((_let_0 Int)) (= GEN1 _let_0))))
(assert (= (and a b) (and a b) (forall ((x Int)) (forall ((y Int)) (and (and a b) (and b a) (and b a) (= GEN2 _let_0))))))
(assert (= BAV1 (= (* x y) (* x y) _let_0)))
(assert (= BAV2 (= (and a b) (and a b) (forall ((_let_0 Int)) (= GEN1 _let_0)))))
(assert (= BAV3 (and a b)))
(assert (= BAV4 (and a b)))
(assert (= BAV5 (forall ((_let_0 Int)) (= GEN1 _let_0))))
(assert (= BAV6 (= (and a b) (and a b) (forall ((x Int)) (forall ((y Int)) (and (and a b) (and b a) (and b a) (= GEN2 _let_0)))))))
(assert (= BAV7 (and a b)))
(assert (= BAV8 (and a b)))
(assert (= BAV9 (forall ((x Int)(y Int)) (and (and a b) (and b a) (and b a) (= GEN2 _let_0)))))
(assert (= BAV10 (forall ((x Int)(y Int)) (and a b))))
(assert (= BAV11 (forall ((x Int)(y Int)) (and b a))))
(assert (= BAV12 (forall ((x Int)(y Int)) (and b a))))
(assert (= BAV13 (forall ((x Int)(y Int)) (= GEN2 _let_0))))
(check-sat)
(get-model)