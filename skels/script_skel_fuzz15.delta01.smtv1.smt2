(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v11 () (_ BitVec 8))
(declare-fun v12 () (_ BitVec 8))
(declare-fun v10 () (_ BitVec 12))
(declare-fun v2 () (_ BitVec 10))
(declare-fun v8 () (_ BitVec 11))
(declare-fun v17 () (_ BitVec 8))
(declare-fun v5 () (_ BitVec 13))
(declare-fun v0 () (_ BitVec 15))
(declare-fun v14 () (_ BitVec 14))
(declare-fun v19 () (_ BitVec 10))
(assert (= BAV1 (and (not (bvult ((_ sign_extend 6) ((_ sign_extend 2) v11)) ((_ zero_extend 2) v14))) (not (bvugt (bvsub ((_ sign_extend 15) (ite (bvslt (_ bv0 12) v10) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 2) (ite (= (_ bv1 1) (ite (bvslt (_ bv0 10) v19) (_ bv1 1) (_ bv0 1))) (bvxnor v14 (_ bv0 14)) (bvxnor ((_ sign_extend 4) ((_ extract 9 0) v0)) (_ bv6240 14))))) (_ bv0 16))) (or false (not (bvugt (bvshl ((_ zero_extend 2) v8) ((_ zero_extend 12) (ite (bvsle v0 (_ bv0 15)) (_ bv1 1) (_ bv0 1)))) ((_ zero_extend 12) (ite (bvsge (_ bv0 16) ((_ zero_extend 2) v14)) (_ bv1 1) (_ bv0 1))))) (bvsge ((_ sign_extend 14) (ite (distinct ((_ zero_extend 2) v14) (_ bv0 16)) (_ bv1 1) (_ bv0 1))) (_ bv0 15))) (or false (bvult ((_ sign_extend 14) (ite (distinct (_ bv0 13) ((_ zero_extend 3) ((_ sign_extend 2) v17))) (_ bv1 1) (_ bv0 1))) (bvnot (_ bv0 15))) (not (bvuge (_ bv0 16) ((_ sign_extend 2) v14)))) (bvugt (_ bv1 1) (ite (bvsgt ((_ sign_extend 6) v12) (bvxnor ((_ sign_extend 4) ((_ extract 9 0) v0)) (_ bv6240 14))) (_ bv1 1) (_ bv0 1))) (not (bvule (bvmul (_ bv6240 14) ((_ zero_extend 1) ((_ zero_extend 2) v8))) ((_ zero_extend 13) (ite (bvsgt (_ bv0 13) v5) (_ bv1 1) (_ bv0 1))))) (= (bvxnor (_ bv0 14) ((_ sign_extend 4) v2)) ((_ zero_extend 2) ((_ zero_extend 2) ((_ sign_extend 2) v17)))) (or false (bvsle (_ bv0 16) ((_ sign_extend 12) ((_ extract 6 3) ((_ zero_extend 2) v8)))) (= (_ bv0 14) ((_ zero_extend 1) ((_ zero_extend 12) (ite (bvult (ite (= (_ bv1 1) ((_ extract 3 3) (bvxnor v2 ((_ sign_extend 9) (ite (bvslt (_ bv0 12) v10) (_ bv1 1) (_ bv0 1)))))) (_ bv0 14) ((_ sign_extend 6) v12)) ((_ zero_extend 13) (bvnot (ite (bvugt ((_ sign_extend 2) v11) (_ bv0 10)) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV2 (= (_ bv1 1) (ite (bvslt (_ bv0 10) v19) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV3 (or false (not (bvugt (bvshl ((_ zero_extend 2) v8) ((_ zero_extend 12) (ite (bvsle v0 (_ bv0 15)) (_ bv1 1) (_ bv0 1)))) ((_ zero_extend 12) (ite (bvsge (_ bv0 16) ((_ zero_extend 2) v14)) (_ bv1 1) (_ bv0 1))))) (bvsge ((_ sign_extend 14) (ite (distinct ((_ zero_extend 2) v14) (_ bv0 16)) (_ bv1 1) (_ bv0 1))) (_ bv0 15)))))
(assert (= BAV4 (distinct ((_ zero_extend 2) v14) (_ bv0 16))))
(assert (= BAV5 (or false (bvult ((_ sign_extend 14) (ite (distinct (_ bv0 13) ((_ zero_extend 3) ((_ sign_extend 2) v17))) (_ bv1 1) (_ bv0 1))) (bvnot (_ bv0 15))) (not (bvuge (_ bv0 16) ((_ sign_extend 2) v14))))))
(assert (= BAV6 (distinct (_ bv0 13) ((_ zero_extend 3) ((_ sign_extend 2) v17)))))
(assert (= BAV7 (= (bvxnor (_ bv0 14) ((_ sign_extend 4) v2)) ((_ zero_extend 2) ((_ zero_extend 2) ((_ sign_extend 2) v17))))))
(assert (= BAV8 (or false (bvsle (_ bv0 16) ((_ sign_extend 12) ((_ extract 6 3) ((_ zero_extend 2) v8)))) (= (_ bv0 14) ((_ zero_extend 1) ((_ zero_extend 12) (ite (bvult (ite (= (_ bv1 1) ((_ extract 3 3) (bvxnor v2 ((_ sign_extend 9) (ite (bvslt (_ bv0 12) v10) (_ bv1 1) (_ bv0 1)))))) (_ bv0 14) ((_ sign_extend 6) v12)) ((_ zero_extend 13) (bvnot (ite (bvugt ((_ sign_extend 2) v11) (_ bv0 10)) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV9 (= (_ bv0 14) ((_ zero_extend 1) ((_ zero_extend 12) (ite (bvult (ite (= (_ bv1 1) ((_ extract 3 3) (bvxnor v2 ((_ sign_extend 9) (ite (bvslt (_ bv0 12) v10) (_ bv1 1) (_ bv0 1)))))) (_ bv0 14) ((_ sign_extend 6) v12)) ((_ zero_extend 13) (bvnot (ite (bvugt ((_ sign_extend 2) v11) (_ bv0 10)) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV10 (= (_ bv1 1) ((_ extract 3 3) (bvxnor v2 ((_ sign_extend 9) (ite (bvslt (_ bv0 12) v10) (_ bv1 1) (_ bv0 1))))))))
(check-sat-assuming ((and (not (bvult ((_ sign_extend 6) ((_ sign_extend 2) v11)) ((_ zero_extend 2) v14))) (not (bvugt (bvsub ((_ sign_extend 15) (ite (bvslt (_ bv0 12) v10) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 2) (ite (= (_ bv1 1) (ite (bvslt (_ bv0 10) v19) (_ bv1 1) (_ bv0 1))) (bvxnor v14 (_ bv0 14)) (bvxnor ((_ sign_extend 4) ((_ extract 9 0) v0)) (_ bv6240 14))))) (_ bv0 16))) (or false (not (bvugt (bvshl ((_ zero_extend 2) v8) ((_ zero_extend 12) (ite (bvsle v0 (_ bv0 15)) (_ bv1 1) (_ bv0 1)))) ((_ zero_extend 12) (ite (bvsge (_ bv0 16) ((_ zero_extend 2) v14)) (_ bv1 1) (_ bv0 1))))) (bvsge ((_ sign_extend 14) (ite (distinct ((_ zero_extend 2) v14) (_ bv0 16)) (_ bv1 1) (_ bv0 1))) (_ bv0 15))) (or false (bvult ((_ sign_extend 14) (ite (distinct (_ bv0 13) ((_ zero_extend 3) ((_ sign_extend 2) v17))) (_ bv1 1) (_ bv0 1))) (bvnot (_ bv0 15))) (not (bvuge (_ bv0 16) ((_ sign_extend 2) v14)))) (bvugt (_ bv1 1) (ite (bvsgt ((_ sign_extend 6) v12) (bvxnor ((_ sign_extend 4) ((_ extract 9 0) v0)) (_ bv6240 14))) (_ bv1 1) (_ bv0 1))) (not (bvule (bvmul (_ bv6240 14) ((_ zero_extend 1) ((_ zero_extend 2) v8))) ((_ zero_extend 13) (ite (bvsgt (_ bv0 13) v5) (_ bv1 1) (_ bv0 1))))) (= (bvxnor (_ bv0 14) ((_ sign_extend 4) v2)) ((_ zero_extend 2) ((_ zero_extend 2) ((_ sign_extend 2) v17)))) (or false (bvsle (_ bv0 16) ((_ sign_extend 12) ((_ extract 6 3) ((_ zero_extend 2) v8)))) (= (_ bv0 14) ((_ zero_extend 1) ((_ zero_extend 12) (ite (bvult (ite (= (_ bv1 1) ((_ extract 3 3) (bvxnor v2 ((_ sign_extend 9) (ite (bvslt (_ bv0 12) v10) (_ bv1 1) (_ bv0 1)))))) (_ bv0 14) ((_ sign_extend 6) v12)) ((_ zero_extend 13) (bvnot (ite (bvugt ((_ sign_extend 2) v11) (_ bv0 10)) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))))))))
(get-model)