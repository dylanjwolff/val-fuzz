(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN8 (_ BitVec 32))
(declare-const GEN7 (_ BitVec 32))
(declare-const GEN6 (_ BitVec 24))
(declare-const GEN5 (_ BitVec 8))
(declare-const GEN4 (_ BitVec 16))
(declare-const GEN3 (_ BitVec 8))
(declare-const GEN2 (_ BitVec 8))
(declare-const GEN1 (_ BitVec 8))
(declare-fun T4_16 () (_ BitVec 32))
(declare-fun T1_19 () (_ BitVec 8))
(declare-fun T1_18 () (_ BitVec 8))
(declare-fun T1_17 () (_ BitVec 8))
(declare-fun T1_16 () (_ BitVec 8))
(simplify (and
           (= T4_16
              (bvor (concat (bvor (concat (bvor (concat T1_19 #x00) (concat #x00 T1_18))
                                          #x00)
                                  (concat #x0000 T1_17))
                            #x00)
                    (concat #x000000 T1_16))) 
           (not (= T4_16 #x00000044))
           (= #x000000c0 T4_16))
          :split-concat-eq true)
(assert (and (= T4_16 (bvor (concat (bvor (concat (bvor (concat T1_19 GEN1) (concat GEN2 T1_18)) GEN3) (concat GEN4 T1_17)) GEN5) (concat GEN6 T1_16))) (not (= T4_16 GEN7)) (= GEN8 T4_16)))
(apply propagate-values)
(assert (= BAV1 (and (= T4_16 (bvor (concat (bvor (concat (bvor (concat T1_19 GEN1) (concat GEN2 T1_18)) GEN3) (concat GEN4 T1_17)) GEN5) (concat GEN6 T1_16))) (not (= T4_16 GEN7)) (= GEN8 T4_16))))
(assert (= BAV2 (= T4_16 (bvor (concat (bvor (concat (bvor (concat T1_19 GEN1) (concat GEN2 T1_18)) GEN3) (concat GEN4 T1_17)) GEN5) (concat GEN6 T1_16)))))
(assert (= BAV3 (= T4_16 GEN7)))
(assert (= BAV4 (= GEN8 T4_16)))