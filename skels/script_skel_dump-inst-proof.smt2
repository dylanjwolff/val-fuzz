(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun P (Int) Bool)
(declare-fun Q (Int) Bool)
(declare-fun R (Int) Bool)
(declare-fun S (Int) Bool)
(declare-fun W (Int) Bool)
(declare-fun U (Int) Bool)
(assert (forall ((x Int)) (or (P x) (Q x))))
(assert (forall ((x Int)) (or (R x) (W x))))
(assert (forall ((x Int)) (or (S x) (U x))))
(assert (forall ((x Int)) (or (not (S x)) (not (Q x)))))
(assert (and (not (R GEN1)) (not (R GEN2)) (not (S GEN3)) (not (P GEN4))))
(assert (S GEN5))
(assert (= BAV1 (forall ((x Int)) (or (P x) (Q x)))))
(assert (= BAV2 (forall ((x Int)) (or (R x) (W x)))))
(assert (= BAV3 (forall ((x Int)) (or (S x) (U x)))))
(assert (= BAV4 (forall ((x Int)) (or (not (S x)) (not (Q x))))))
(assert (= BAV5 (and (not (R GEN1)) (not (R GEN2)) (not (S GEN3)) (not (P GEN4)))))
(check-sat)
(get-model)