(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(set-info :source | An Optimal Algorithm for Mutual Exclusion in Computer Networks. Glenn Ricart and Ashok K. Agrawala. Communications of the ACM Vol.: 24 Number: 1. This is a benchmark of the haRVey theorem prover. It was translated to SMT-LIB by Leonardo  de Moura |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(declare-fun p () Int)
(declare-fun q () Int)
(declare-fun r () Int)
(declare-fun s () Int)
(declare-fun s0 (Int) Bool)
(declare-fun s1 (Int) Bool)
(declare-fun s2 (Int) Bool)
(declare-fun s3 (Int) Bool)
(declare-fun s4 (Int) Bool)
(declare-fun s5 (Int) Bool)
(declare-fun s6 (Int) Bool)
(declare-fun rcs1 (Int) Bool)
(declare-fun rcs2 (Int) Bool)
(declare-fun x (Int Int) Bool)
(declare-fun ro (Int Int) Bool)
(declare-fun rd (Int Int) Bool)
(declare-fun sn (Int) Int)
(declare-fun time () Int)
(assert (not (=> (and (forall ((?p Int)) (forall ((?q Int)) (=> (or (s0 ?p) (s5 ?p)) (not (x ?p ?q))))) (forall ((?p Int)) (= (or (s0 ?p) (s6 ?p)) (not (rcs2 ?p)))) (forall ((?p Int)) (< (sn ?p) time)) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (not (= (sn ?p) (sn ?q)))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (not (= ?p ?q)) (or (and (s4 ?p) (x ?p ?q)) (s5 ?p)) (rcs2 ?q)) (< (sn ?p) (sn ?q))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (not (= ?p ?q)) (rd ?q ?p)) (ro ?p ?q)))) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (= (not (or (and (s2 ?p) (x ?p ?q)) (and (s3 ?p) (not (x ?p ?q))))) (=> (ro ?p ?q) (rd ?q ?p)))))) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (or (and (s6 ?p) (not (x ?p ?q)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p))))) (= (rd ?p ?q) (and (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))) (rcs2 ?p) (< (sn ?p) (sn ?q)))))))) (forall ((?p Int)) (=> (s0 ?p) (not (or (s2 ?p) (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s2 ?p) (not (or (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s3 ?p) (not (or (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s4 ?p) (not (or (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s5 ?p) (not (s6 ?p)))) (forall ((?r Int)) (=> (s0 ?r) (not (or (s2 ?r) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (s2 ?r) (not (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (not (or (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (=> (not (= ?r p)) (s4 ?r)) (not (or (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (s5 ?r) (not (s6 ?r)))) (s3 p) (forall ((?q Int)) (=> (not (= ?q p)) (x p ?q)))) (and (forall ((?s Int)) (forall ((?r Int)) (=> (or (s0 ?s) (s5 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (forall ((?s Int)) (= (or (s0 ?s) (s6 ?s)) (not (rcs2 ?s)))) (forall ((?s Int)) (< (sn ?s) time)) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (not (= (sn ?s) (sn ?r)))))) (forall ((?s Int)) (forall ((?r Int)) (=> (and (not (= ?s ?r)) (or (and (=> (not (= ?s p)) (s4 ?s)) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (s5 ?s)) (rcs2 ?r)) (< (sn ?s) (sn ?r))))) (forall ((?s Int)) (forall ((?r Int)) (=> (and (not (= ?s ?r)) (rd ?r ?s)) (ro ?s ?r)))) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (= (not (or (and (s2 ?s) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (and (not (= ?s p)) (=> (not (= ?s p)) (s3 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (=> (ro ?s ?r) (rd ?r ?s)))))) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (or (and (s6 ?s) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r)))) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))) (= (rd ?s ?r) (and (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))) (rcs2 ?s) (< (sn ?s) (sn ?r))))))))))))
(assert (= BAV1 (=> (and (forall ((?p Int)) (forall ((?q Int)) (=> (or (s0 ?p) (s5 ?p)) (not (x ?p ?q))))) (forall ((?p Int)) (= (or (s0 ?p) (s6 ?p)) (not (rcs2 ?p)))) (forall ((?p Int)) (< (sn ?p) time)) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (not (= (sn ?p) (sn ?q)))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (not (= ?p ?q)) (or (and (s4 ?p) (x ?p ?q)) (s5 ?p)) (rcs2 ?q)) (< (sn ?p) (sn ?q))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (not (= ?p ?q)) (rd ?q ?p)) (ro ?p ?q)))) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (= (not (or (and (s2 ?p) (x ?p ?q)) (and (s3 ?p) (not (x ?p ?q))))) (=> (ro ?p ?q) (rd ?q ?p)))))) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (or (and (s6 ?p) (not (x ?p ?q)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p))))) (= (rd ?p ?q) (and (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))) (rcs2 ?p) (< (sn ?p) (sn ?q)))))))) (forall ((?p Int)) (=> (s0 ?p) (not (or (s2 ?p) (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s2 ?p) (not (or (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s3 ?p) (not (or (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s4 ?p) (not (or (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s5 ?p) (not (s6 ?p)))) (forall ((?r Int)) (=> (s0 ?r) (not (or (s2 ?r) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (s2 ?r) (not (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (not (or (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (=> (not (= ?r p)) (s4 ?r)) (not (or (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (s5 ?r) (not (s6 ?r)))) (s3 p) (forall ((?q Int)) (=> (not (= ?q p)) (x p ?q)))) (and (forall ((?s Int)) (forall ((?r Int)) (=> (or (s0 ?s) (s5 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (forall ((?s Int)) (= (or (s0 ?s) (s6 ?s)) (not (rcs2 ?s)))) (forall ((?s Int)) (< (sn ?s) time)) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (not (= (sn ?s) (sn ?r)))))) (forall ((?s Int)) (forall ((?r Int)) (=> (and (not (= ?s ?r)) (or (and (=> (not (= ?s p)) (s4 ?s)) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (s5 ?s)) (rcs2 ?r)) (< (sn ?s) (sn ?r))))) (forall ((?s Int)) (forall ((?r Int)) (=> (and (not (= ?s ?r)) (rd ?r ?s)) (ro ?s ?r)))) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (= (not (or (and (s2 ?s) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (and (not (= ?s p)) (=> (not (= ?s p)) (s3 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (=> (ro ?s ?r) (rd ?r ?s)))))) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (or (and (s6 ?s) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r)))) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))) (= (rd ?s ?r) (and (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))) (rcs2 ?s) (< (sn ?s) (sn ?r))))))))))))
(assert (= BAV2 (and (forall ((?p Int)) (forall ((?q Int)) (=> (or (s0 ?p) (s5 ?p)) (not (x ?p ?q))))) (forall ((?p Int)) (= (or (s0 ?p) (s6 ?p)) (not (rcs2 ?p)))) (forall ((?p Int)) (< (sn ?p) time)) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (not (= (sn ?p) (sn ?q)))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (not (= ?p ?q)) (or (and (s4 ?p) (x ?p ?q)) (s5 ?p)) (rcs2 ?q)) (< (sn ?p) (sn ?q))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (not (= ?p ?q)) (rd ?q ?p)) (ro ?p ?q)))) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (= (not (or (and (s2 ?p) (x ?p ?q)) (and (s3 ?p) (not (x ?p ?q))))) (=> (ro ?p ?q) (rd ?q ?p)))))) (forall ((?p Int)) (forall ((?q Int)) (=> (not (= ?p ?q)) (or (and (s6 ?p) (not (x ?p ?q)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p))))) (= (rd ?p ?q) (and (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))) (rcs2 ?p) (< (sn ?p) (sn ?q)))))))) (forall ((?p Int)) (=> (s0 ?p) (not (or (s2 ?p) (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s2 ?p) (not (or (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s3 ?p) (not (or (s4 ?p) (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s4 ?p) (not (or (s5 ?p) (s6 ?p))))) (forall ((?p Int)) (=> (s5 ?p) (not (s6 ?p)))) (forall ((?r Int)) (=> (s0 ?r) (not (or (s2 ?r) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (s2 ?r) (not (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (not (or (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (=> (not (= ?r p)) (s4 ?r)) (not (or (s5 ?r) (s6 ?r))))) (forall ((?r Int)) (=> (s5 ?r) (not (s6 ?r)))) (s3 p) (forall ((?q Int)) (=> (not (= ?q p)) (x p ?q))))))
(assert (= BAV3 (forall ((?p Int)(?q Int)) (=> (or (s0 ?p) (s5 ?p)) (not (x ?p ?q))))))
(assert (= BAV4 (forall ((?p Int)(?q Int)) (or (s0 ?p) (s5 ?p)))))
(assert (= BAV5 (forall ((?p Int)) (= (or (s0 ?p) (s6 ?p)) (not (rcs2 ?p))))))
(assert (= BAV6 (forall ((?p Int)) (or (s0 ?p) (s6 ?p)))))
(assert (= BAV7 (forall ((?p Int)) (< (sn ?p) time))))
(assert (= BAV8 (forall ((?p Int)(?q Int)) (=> (not (= ?p ?q)) (not (= (sn ?p) (sn ?q)))))))
(assert (= BAV9 (forall ((?p Int)(?q Int)) (= ?p ?q))))
(assert (= BAV10 (forall ((?p Int)(?q Int)) (= (sn ?p) (sn ?q)))))
(assert (= BAV11 (forall ((?p Int)(?q Int)) (=> (and (not (= ?p ?q)) (or (and (s4 ?p) (x ?p ?q)) (s5 ?p)) (rcs2 ?q)) (< (sn ?p) (sn ?q))))))
(assert (= BAV12 (forall ((?p Int)(?q Int)) (and (not (= ?p ?q)) (or (and (s4 ?p) (x ?p ?q)) (s5 ?p)) (rcs2 ?q)))))
(assert (= BAV13 (forall ((?p Int)(?q Int)) (= ?p ?q))))
(assert (= BAV14 (forall ((?p Int)(?q Int)) (or (and (s4 ?p) (x ?p ?q)) (s5 ?p)))))
(assert (= BAV15 (forall ((?p Int)(?q Int)) (and (s4 ?p) (x ?p ?q)))))
(assert (= BAV16 (forall ((?p Int)(?q Int)) (< (sn ?p) (sn ?q)))))
(assert (= BAV17 (forall ((?p Int)(?q Int)) (=> (and (not (= ?p ?q)) (rd ?q ?p)) (ro ?p ?q)))))
(assert (= BAV18 (forall ((?p Int)(?q Int)) (and (not (= ?p ?q)) (rd ?q ?p)))))
(assert (= BAV19 (forall ((?p Int)(?q Int)) (= ?p ?q))))
(assert (= BAV20 (forall ((?p Int)(?q Int)) (=> (not (= ?p ?q)) (= (not (or (and (s2 ?p) (x ?p ?q)) (and (s3 ?p) (not (x ?p ?q))))) (=> (ro ?p ?q) (rd ?q ?p)))))))
(assert (= BAV21 (forall ((?p Int)(?q Int)) (= ?p ?q))))
(assert (= BAV22 (forall ((?p Int)(?q Int)) (= (not (or (and (s2 ?p) (x ?p ?q)) (and (s3 ?p) (not (x ?p ?q))))) (=> (ro ?p ?q) (rd ?q ?p))))))
(assert (= BAV23 (forall ((?p Int)(?q Int)) (or (and (s2 ?p) (x ?p ?q)) (and (s3 ?p) (not (x ?p ?q)))))))
(assert (= BAV24 (forall ((?p Int)(?q Int)) (and (s2 ?p) (x ?p ?q)))))
(assert (= BAV25 (forall ((?p Int)(?q Int)) (and (s3 ?p) (not (x ?p ?q))))))
(assert (= BAV26 (forall ((?p Int)(?q Int)) (=> (ro ?p ?q) (rd ?q ?p)))))
(assert (= BAV27 (forall ((?p Int)(?q Int)) (=> (not (= ?p ?q)) (or (and (s6 ?p) (not (x ?p ?q)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p))))) (= (rd ?p ?q) (and (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))) (rcs2 ?p) (< (sn ?p) (sn ?q)))))))))
(assert (= BAV28 (forall ((?p Int)(?q Int)) (= ?p ?q))))
(assert (= BAV29 (forall ((?p Int)(?q Int)) (or (and (s6 ?p) (not (x ?p ?q)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p))))) (= (rd ?p ?q) (and (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))) (rcs2 ?p) (< (sn ?p) (sn ?q))))))))
(assert (= BAV30 (forall ((?p Int)(?q Int)) (and (s6 ?p) (not (x ?p ?q)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p))))))))
(assert (= BAV31 (forall ((?p Int)(?q Int)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))))))
(assert (= BAV32 (forall ((?p Int)(?q Int)) (and (s3 ?q) (x ?q ?p)))))
(assert (= BAV33 (forall ((?p Int)(?q Int)) (and (s4 ?q) (not (x ?q ?p))))))
(assert (= BAV34 (forall ((?p Int)(?q Int)) (= (rd ?p ?q) (and (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))) (rcs2 ?p) (< (sn ?p) (sn ?q)))))))
(assert (= BAV35 (forall ((?p Int)(?q Int)) (and (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))) (rcs2 ?p) (< (sn ?p) (sn ?q))))))
(assert (= BAV36 (forall ((?p Int)(?q Int)) (or (and (s3 ?q) (x ?q ?p)) (and (s4 ?q) (not (x ?q ?p)))))))
(assert (= BAV37 (forall ((?p Int)(?q Int)) (and (s3 ?q) (x ?q ?p)))))
(assert (= BAV38 (forall ((?p Int)(?q Int)) (and (s4 ?q) (not (x ?q ?p))))))
(assert (= BAV39 (forall ((?p Int)(?q Int)) (< (sn ?p) (sn ?q)))))
(assert (= BAV40 (forall ((?p Int)) (=> (s0 ?p) (not (or (s2 ?p) (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p)))))))
(assert (= BAV41 (forall ((?p Int)) (or (s2 ?p) (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p)))))
(assert (= BAV42 (forall ((?p Int)) (=> (s2 ?p) (not (or (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p)))))))
(assert (= BAV43 (forall ((?p Int)) (or (s3 ?p) (s4 ?p) (s5 ?p) (s6 ?p)))))
(assert (= BAV44 (forall ((?p Int)) (=> (s3 ?p) (not (or (s4 ?p) (s5 ?p) (s6 ?p)))))))
(assert (= BAV45 (forall ((?p Int)) (or (s4 ?p) (s5 ?p) (s6 ?p)))))
(assert (= BAV46 (forall ((?p Int)) (=> (s4 ?p) (not (or (s5 ?p) (s6 ?p)))))))
(assert (= BAV47 (forall ((?p Int)) (or (s5 ?p) (s6 ?p)))))
(assert (= BAV48 (forall ((?p Int)) (=> (s5 ?p) (not (s6 ?p))))))
(assert (= BAV49 (forall ((?r Int)) (=> (s0 ?r) (not (or (s2 ?r) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r)))))))
(assert (= BAV50 (forall ((?r Int)) (or (s2 ?r) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r)))))
(assert (= BAV51 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))))))
(assert (= BAV52 (forall ((?r Int)) (= ?r p))))
(assert (= BAV53 (forall ((?r Int)) (=> (not (= ?r p)) (s3 ?r)))))
(assert (= BAV54 (forall ((?r Int)) (= ?r p))))
(assert (= BAV55 (forall ((?r Int)) (=> (not (= ?r p)) (s4 ?r)))))
(assert (= BAV56 (forall ((?r Int)) (= ?r p))))
(assert (= BAV57 (forall ((?r Int)) (=> (s2 ?r) (not (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r)))))))
(assert (= BAV58 (forall ((?r Int)) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r)))))
(assert (= BAV59 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))))))
(assert (= BAV60 (forall ((?r Int)) (= ?r p))))
(assert (= BAV61 (forall ((?r Int)) (=> (not (= ?r p)) (s3 ?r)))))
(assert (= BAV62 (forall ((?r Int)) (= ?r p))))
(assert (= BAV63 (forall ((?r Int)) (=> (not (= ?r p)) (s4 ?r)))))
(assert (= BAV64 (forall ((?r Int)) (= ?r p))))
(assert (= BAV65 (forall ((?r Int)) (=> (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))) (not (or (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r)))))))
(assert (= BAV66 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r))))))
(assert (= BAV67 (forall ((?r Int)) (= ?r p))))
(assert (= BAV68 (forall ((?r Int)) (=> (not (= ?r p)) (s3 ?r)))))
(assert (= BAV69 (forall ((?r Int)) (= ?r p))))
(assert (= BAV70 (forall ((?r Int)) (or (=> (not (= ?r p)) (s4 ?r)) (s5 ?r) (s6 ?r)))))
(assert (= BAV71 (forall ((?r Int)) (=> (not (= ?r p)) (s4 ?r)))))
(assert (= BAV72 (forall ((?r Int)) (= ?r p))))
(assert (= BAV73 (forall ((?r Int)) (=> (=> (not (= ?r p)) (s4 ?r)) (not (or (s5 ?r) (s6 ?r)))))))
(assert (= BAV74 (forall ((?r Int)) (=> (not (= ?r p)) (s4 ?r)))))
(assert (= BAV75 (forall ((?r Int)) (= ?r p))))
(assert (= BAV76 (forall ((?r Int)) (or (s5 ?r) (s6 ?r)))))
(assert (= BAV77 (forall ((?r Int)) (=> (s5 ?r) (not (s6 ?r))))))
(assert (= BAV78 (forall ((?q Int)) (=> (not (= ?q p)) (x p ?q)))))
(assert (= BAV79 (forall ((?q Int)) (= ?q p))))
(assert (= BAV80 (and (forall ((?s Int)) (forall ((?r Int)) (=> (or (s0 ?s) (s5 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (forall ((?s Int)) (= (or (s0 ?s) (s6 ?s)) (not (rcs2 ?s)))) (forall ((?s Int)) (< (sn ?s) time)) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (not (= (sn ?s) (sn ?r)))))) (forall ((?s Int)) (forall ((?r Int)) (=> (and (not (= ?s ?r)) (or (and (=> (not (= ?s p)) (s4 ?s)) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (s5 ?s)) (rcs2 ?r)) (< (sn ?s) (sn ?r))))) (forall ((?s Int)) (forall ((?r Int)) (=> (and (not (= ?s ?r)) (rd ?r ?s)) (ro ?s ?r)))) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (= (not (or (and (s2 ?s) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (and (not (= ?s p)) (=> (not (= ?s p)) (s3 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (=> (ro ?s ?r) (rd ?r ?s)))))) (forall ((?s Int)) (forall ((?r Int)) (=> (not (= ?s ?r)) (or (and (s6 ?s) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r)))) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))) (= (rd ?s ?r) (and (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))) (rcs2 ?s) (< (sn ?s) (sn ?r)))))))))))
(assert (= BAV81 (forall ((?s Int)(?r Int)) (=> (or (s0 ?s) (s5 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))))
(assert (= BAV82 (forall ((?s Int)(?r Int)) (or (s0 ?s) (s5 ?s)))))
(assert (= BAV83 (forall ((?s Int)(?r Int)) (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))
(assert (= BAV84 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV85 (forall ((?s Int)(?r Int)) (=> (not (= ?s p)) (x ?s ?r)))))
(assert (= BAV86 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV87 (forall ((?s Int)) (= (or (s0 ?s) (s6 ?s)) (not (rcs2 ?s))))))
(assert (= BAV88 (forall ((?s Int)) (or (s0 ?s) (s6 ?s)))))
(assert (= BAV89 (forall ((?s Int)) (< (sn ?s) time))))
(assert (= BAV90 (forall ((?s Int)(?r Int)) (=> (not (= ?s ?r)) (not (= (sn ?s) (sn ?r)))))))
(assert (= BAV91 (forall ((?s Int)(?r Int)) (= ?s ?r))))
(assert (= BAV92 (forall ((?s Int)(?r Int)) (= (sn ?s) (sn ?r)))))
(assert (= BAV93 (forall ((?s Int)(?r Int)) (=> (and (not (= ?s ?r)) (or (and (=> (not (= ?s p)) (s4 ?s)) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (s5 ?s)) (rcs2 ?r)) (< (sn ?s) (sn ?r))))))
(assert (= BAV94 (forall ((?s Int)(?r Int)) (and (not (= ?s ?r)) (or (and (=> (not (= ?s p)) (s4 ?s)) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (s5 ?s)) (rcs2 ?r)))))
(assert (= BAV95 (forall ((?s Int)(?r Int)) (= ?s ?r))))
(assert (= BAV96 (forall ((?s Int)(?r Int)) (or (and (=> (not (= ?s p)) (s4 ?s)) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (s5 ?s)))))
(assert (= BAV97 (forall ((?s Int)(?r Int)) (and (=> (not (= ?s p)) (s4 ?s)) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))
(assert (= BAV98 (forall ((?s Int)(?r Int)) (=> (not (= ?s p)) (s4 ?s)))))
(assert (= BAV99 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV100 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV101 (forall ((?s Int)(?r Int)) (=> (not (= ?s p)) (x ?s ?r)))))
(assert (= BAV102 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV103 (forall ((?s Int)(?r Int)) (< (sn ?s) (sn ?r)))))
(assert (= BAV104 (forall ((?s Int)(?r Int)) (=> (and (not (= ?s ?r)) (rd ?r ?s)) (ro ?s ?r)))))
(assert (= BAV105 (forall ((?s Int)(?r Int)) (and (not (= ?s ?r)) (rd ?r ?s)))))
(assert (= BAV106 (forall ((?s Int)(?r Int)) (= ?s ?r))))
(assert (= BAV107 (forall ((?s Int)(?r Int)) (=> (not (= ?s ?r)) (= (not (or (and (s2 ?s) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (and (not (= ?s p)) (=> (not (= ?s p)) (s3 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (=> (ro ?s ?r) (rd ?r ?s)))))))
(assert (= BAV108 (forall ((?s Int)(?r Int)) (= ?s ?r))))
(assert (= BAV109 (forall ((?s Int)(?r Int)) (= (not (or (and (s2 ?s) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (and (not (= ?s p)) (=> (not (= ?s p)) (s3 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))) (=> (ro ?s ?r) (rd ?r ?s))))))
(assert (= BAV110 (forall ((?s Int)(?r Int)) (or (and (s2 ?s) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))) (and (not (= ?s p)) (=> (not (= ?s p)) (s3 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r)))))))))
(assert (= BAV111 (forall ((?s Int)(?r Int)) (and (s2 ?s) (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))
(assert (= BAV112 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV113 (forall ((?s Int)(?r Int)) (=> (not (= ?s p)) (x ?s ?r)))))
(assert (= BAV114 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV115 (forall ((?s Int)(?r Int)) (and (not (= ?s p)) (=> (not (= ?s p)) (s3 ?s)) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))))
(assert (= BAV116 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV117 (forall ((?s Int)(?r Int)) (=> (not (= ?s p)) (s3 ?s)))))
(assert (= BAV118 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV119 (forall ((?s Int)(?r Int)) (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))
(assert (= BAV120 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV121 (forall ((?s Int)(?r Int)) (=> (not (= ?s p)) (x ?s ?r)))))
(assert (= BAV122 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV123 (forall ((?s Int)(?r Int)) (=> (ro ?s ?r) (rd ?r ?s)))))
(assert (= BAV124 (forall ((?s Int)(?r Int)) (=> (not (= ?s ?r)) (or (and (s6 ?s) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r)))) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))) (= (rd ?s ?r) (and (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))) (rcs2 ?s) (< (sn ?s) (sn ?r)))))))))
(assert (= BAV125 (forall ((?s Int)(?r Int)) (= ?s ?r))))
(assert (= BAV126 (forall ((?s Int)(?r Int)) (or (and (s6 ?s) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r)))) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))) (= (rd ?s ?r) (and (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))) (rcs2 ?s) (< (sn ?s) (sn ?r))))))))
(assert (= BAV127 (forall ((?s Int)(?r Int)) (and (s6 ?s) (not (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r)))) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))))))
(assert (= BAV128 (forall ((?s Int)(?r Int)) (and (not (= ?s p)) (=> (not (= ?s p)) (x ?s ?r))))))
(assert (= BAV129 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV130 (forall ((?s Int)(?r Int)) (=> (not (= ?s p)) (x ?s ?r)))))
(assert (= BAV131 (forall ((?s Int)(?r Int)) (= ?s p))))
(assert (= BAV132 (forall ((?s Int)(?r Int)) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))))))
(assert (= BAV133 (forall ((?s Int)(?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))
(assert (= BAV134 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV135 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (s3 ?r)))))
(assert (= BAV136 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV137 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV138 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (x ?r ?s)))))
(assert (= BAV139 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV140 (forall ((?s Int)(?r Int)) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))))
(assert (= BAV141 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (s4 ?r)))))
(assert (= BAV142 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV143 (forall ((?s Int)(?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))
(assert (= BAV144 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV145 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (x ?r ?s)))))
(assert (= BAV146 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV147 (forall ((?s Int)(?r Int)) (= (rd ?s ?r) (and (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))) (rcs2 ?s) (< (sn ?s) (sn ?r)))))))
(assert (= BAV148 (forall ((?s Int)(?r Int)) (and (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))) (rcs2 ?s) (< (sn ?s) (sn ?r))))))
(assert (= BAV149 (forall ((?s Int)(?r Int)) (or (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s)))))))))
(assert (= BAV150 (forall ((?s Int)(?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s3 ?r)) (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))
(assert (= BAV151 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV152 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (s3 ?r)))))
(assert (= BAV153 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV154 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV155 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (x ?r ?s)))))
(assert (= BAV156 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV157 (forall ((?s Int)(?r Int)) (and (=> (not (= ?r p)) (s4 ?r)) (not (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))))
(assert (= BAV158 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (s4 ?r)))))
(assert (= BAV159 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV160 (forall ((?s Int)(?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (x ?r ?s))))))
(assert (= BAV161 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV162 (forall ((?s Int)(?r Int)) (=> (not (= ?r p)) (x ?r ?s)))))
(assert (= BAV163 (forall ((?s Int)(?r Int)) (= ?r p))))
(assert (= BAV164 (forall ((?s Int)(?r Int)) (< (sn ?s) (sn ?r)))))
(check-sat)
(exit)