(set-option :incremental false)
(set-info :source "CADE ATP System competition. See http://www.cs.miami.edu/~tptp/CASC
 for more information. 

This benchmark was obtained by trying to find a finite model of a first-order 
formula (Albert Oliveras).")
(set-info :category "crafted")
(set-info :difficulty "0")
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const BAV184 Bool)
(declare-const BAV185 Bool)
(declare-const BAV186 Bool)
(declare-const BAV187 Bool)
(declare-const BAV188 Bool)
(declare-const BAV189 Bool)
(declare-const BAV190 Bool)
(declare-const BAV191 Bool)
(declare-const BAV192 Bool)
(declare-const BAV193 Bool)
(declare-const BAV194 Bool)
(declare-const BAV195 Bool)
(declare-const BAV196 Bool)
(declare-const BAV197 Bool)
(declare-const BAV198 Bool)
(declare-const BAV199 Bool)
(declare-const BAV200 Bool)
(declare-const BAV201 Bool)
(declare-const BAV202 Bool)
(declare-const BAV203 Bool)
(declare-const BAV204 Bool)
(declare-const BAV205 Bool)
(declare-const BAV206 Bool)
(declare-const BAV207 Bool)
(declare-const BAV208 Bool)
(declare-const BAV209 Bool)
(declare-const BAV210 Bool)
(declare-const BAV211 Bool)
(declare-const BAV212 Bool)
(declare-const BAV213 Bool)
(declare-const BAV214 Bool)
(declare-const BAV215 Bool)
(declare-const BAV216 Bool)
(declare-const BAV217 Bool)
(declare-const BAV218 Bool)
(declare-const BAV219 Bool)
(declare-const BAV220 Bool)
(declare-const BAV221 Bool)
(declare-const BAV222 Bool)
(declare-const BAV223 Bool)
(declare-const BAV224 Bool)
(declare-const BAV225 Bool)
(declare-const BAV226 Bool)
(declare-const BAV227 Bool)
(declare-const BAV228 Bool)
(declare-const BAV229 Bool)
(declare-const BAV230 Bool)
(declare-const BAV231 Bool)
(declare-const BAV232 Bool)
(declare-const BAV233 Bool)
(declare-const BAV234 Bool)
(declare-const BAV235 Bool)
(declare-const BAV236 Bool)
(declare-const BAV237 Bool)
(declare-const BAV238 Bool)
(declare-const BAV239 Bool)
(declare-const BAV240 Bool)
(declare-const BAV241 Bool)
(declare-const BAV242 Bool)
(declare-const BAV243 Bool)
(declare-const BAV244 Bool)
(declare-const BAV245 Bool)
(declare-const BAV246 Bool)
(declare-const BAV247 Bool)
(declare-const BAV248 Bool)
(declare-const BAV249 Bool)
(declare-const BAV250 Bool)
(declare-const BAV251 Bool)
(declare-const BAV252 Bool)
(declare-const BAV253 Bool)
(declare-const BAV254 Bool)
(declare-const BAV255 Bool)
(declare-const BAV256 Bool)
(declare-const BAV257 Bool)
(declare-const BAV258 Bool)
(declare-const BAV259 Bool)
(declare-const BAV260 Bool)
(declare-const BAV261 Bool)
(declare-const BAV262 Bool)
(declare-const BAV263 Bool)
(declare-const BAV264 Bool)
(declare-const BAV265 Bool)
(declare-const BAV266 Bool)
(declare-const BAV267 Bool)
(declare-const BAV268 Bool)
(declare-const BAV269 Bool)
(declare-const BAV270 Bool)
(declare-const BAV271 Bool)
(declare-const BAV272 Bool)
(declare-const BAV273 Bool)
(declare-const BAV274 Bool)
(declare-const BAV275 Bool)
(declare-const BAV276 Bool)
(declare-const BAV277 Bool)
(declare-const BAV278 Bool)
(declare-const BAV279 Bool)
(declare-const BAV280 Bool)
(declare-const BAV281 Bool)
(declare-const BAV282 Bool)
(declare-const BAV283 Bool)
(declare-const BAV284 Bool)
(declare-const BAV285 Bool)
(declare-const BAV286 Bool)
(declare-const BAV287 Bool)
(declare-const BAV288 Bool)
(declare-const BAV289 Bool)
(declare-const BAV290 Bool)
(declare-const BAV291 Bool)
(declare-const BAV292 Bool)
(declare-const BAV293 Bool)
(declare-const BAV294 Bool)
(declare-const BAV295 Bool)
(declare-const BAV296 Bool)
(declare-const BAV297 Bool)
(declare-const BAV298 Bool)
(declare-const BAV299 Bool)
(declare-const BAV300 Bool)
(declare-const BAV301 Bool)
(declare-const BAV302 Bool)
(declare-const BAV303 Bool)
(declare-const BAV304 Bool)
(declare-const BAV305 Bool)
(declare-const BAV306 Bool)
(declare-const BAV307 Bool)
(declare-const BAV308 Bool)
(declare-const BAV309 Bool)
(declare-const BAV310 Bool)
(declare-const BAV311 Bool)
(declare-const BAV312 Bool)
(declare-const BAV313 Bool)
(declare-const BAV314 Bool)
(declare-const BAV315 Bool)
(declare-const BAV316 Bool)
(declare-const BAV317 Bool)
(declare-const BAV318 Bool)
(declare-const BAV319 Bool)
(declare-const BAV320 Bool)
(declare-const BAV321 Bool)
(declare-const BAV322 Bool)
(declare-const BAV323 Bool)
(declare-const BAV324 Bool)
(declare-const BAV325 Bool)
(declare-const BAV326 Bool)
(declare-const BAV327 Bool)
(declare-const BAV328 Bool)
(declare-const BAV329 Bool)
(declare-const BAV330 Bool)
(declare-const BAV331 Bool)
(declare-const BAV332 Bool)
(declare-const BAV333 Bool)
(declare-const BAV334 Bool)
(declare-const BAV335 Bool)
(declare-const BAV336 Bool)
(declare-const BAV337 Bool)
(declare-const BAV338 Bool)
(declare-const BAV339 Bool)
(declare-const BAV340 Bool)
(declare-const BAV341 Bool)
(declare-const BAV342 Bool)
(declare-const BAV343 Bool)
(declare-const BAV344 Bool)
(declare-const BAV345 Bool)
(declare-const BAV346 Bool)
(declare-const BAV347 Bool)
(declare-const BAV348 Bool)
(declare-const BAV349 Bool)
(declare-const BAV350 Bool)
(declare-const BAV351 Bool)
(declare-const BAV352 Bool)
(declare-const BAV353 Bool)
(declare-const BAV354 Bool)
(declare-const BAV355 Bool)
(declare-const BAV356 Bool)
(declare-const BAV357 Bool)
(declare-const BAV358 Bool)
(declare-const BAV359 Bool)
(declare-const BAV360 Bool)
(declare-const BAV361 Bool)
(declare-const BAV362 Bool)
(declare-const BAV363 Bool)
(declare-const BAV364 Bool)
(declare-const BAV365 Bool)
(declare-const BAV366 Bool)
(declare-const BAV367 Bool)
(declare-const BAV368 Bool)
(declare-const BAV369 Bool)
(declare-const BAV370 Bool)
(declare-const BAV371 Bool)
(declare-const BAV372 Bool)
(declare-const BAV373 Bool)
(declare-const BAV374 Bool)
(declare-const BAV375 Bool)
(declare-const BAV376 Bool)
(declare-const BAV377 Bool)
(declare-const BAV378 Bool)
(declare-const BAV379 Bool)
(declare-const BAV380 Bool)
(declare-const BAV381 Bool)
(declare-const BAV382 Bool)
(declare-const BAV383 Bool)
(declare-const BAV384 Bool)
(declare-const BAV385 Bool)
(declare-const BAV386 Bool)
(declare-const BAV387 Bool)
(declare-const BAV388 Bool)
(declare-const BAV389 Bool)
(declare-const BAV390 Bool)
(declare-sort U 0)
(declare-fun p2 (U) Bool)
(declare-fun f1 (U U) U)
(declare-fun p4 (U) Bool)
(declare-fun p3 (U) Bool)
(declare-fun c6 () U)
(declare-fun c5 () U)
(declare-fun c7 () U)
(declare-fun c_0 () U)
(declare-fun c_1 () U)
(declare-fun c_2 () U)
(declare-fun c_3 () U)
(declare-fun c_4 () U)
(assert (= BAV1 (and (distinct c_0 c_1 c_2 c_3 c_4) (or (not (p2 c_0)) (not (p2 c_0)) (p4 (f1 c_0 c_0)) (p3 (f1 c_0 c_0))) (or (not (p2 c_0)) (not (p2 c_1)) (p4 (f1 c_1 c_0)) (p3 (f1 c_1 c_0))) (or (not (p2 c_0)) (not (p2 c_2)) (p4 (f1 c_2 c_0)) (p3 (f1 c_2 c_0))) (or (not (p2 c_0)) (not (p2 c_3)) (p4 (f1 c_3 c_0)) (p3 (f1 c_3 c_0))) (or (not (p2 c_0)) (not (p2 c_4)) (p4 (f1 c_4 c_0)) (p3 (f1 c_4 c_0))) (or (not (p2 c_1)) (not (p2 c_0)) (p4 (f1 c_0 c_1)) (p3 (f1 c_0 c_1))) (or (not (p2 c_1)) (not (p2 c_1)) (p4 (f1 c_1 c_1)) (p3 (f1 c_1 c_1))) (or (not (p2 c_1)) (not (p2 c_2)) (p4 (f1 c_2 c_1)) (p3 (f1 c_2 c_1))) (or (not (p2 c_1)) (not (p2 c_3)) (p4 (f1 c_3 c_1)) (p3 (f1 c_3 c_1))) (or (not (p2 c_1)) (not (p2 c_4)) (p4 (f1 c_4 c_1)) (p3 (f1 c_4 c_1))) (or (not (p2 c_2)) (not (p2 c_0)) (p4 (f1 c_0 c_2)) (p3 (f1 c_0 c_2))) (or (not (p2 c_2)) (not (p2 c_1)) (p4 (f1 c_1 c_2)) (p3 (f1 c_1 c_2))) (or (not (p2 c_2)) (not (p2 c_2)) (p4 (f1 c_2 c_2)) (p3 (f1 c_2 c_2))) (or (not (p2 c_2)) (not (p2 c_3)) (p4 (f1 c_3 c_2)) (p3 (f1 c_3 c_2))) (or (not (p2 c_2)) (not (p2 c_4)) (p4 (f1 c_4 c_2)) (p3 (f1 c_4 c_2))) (or (not (p2 c_3)) (not (p2 c_0)) (p4 (f1 c_0 c_3)) (p3 (f1 c_0 c_3))) (or (not (p2 c_3)) (not (p2 c_1)) (p4 (f1 c_1 c_3)) (p3 (f1 c_1 c_3))) (or (not (p2 c_3)) (not (p2 c_2)) (p4 (f1 c_2 c_3)) (p3 (f1 c_2 c_3))) (or (not (p2 c_3)) (not (p2 c_3)) (p4 (f1 c_3 c_3)) (p3 (f1 c_3 c_3))) (or (not (p2 c_3)) (not (p2 c_4)) (p4 (f1 c_4 c_3)) (p3 (f1 c_4 c_3))) (or (not (p2 c_4)) (not (p2 c_0)) (p4 (f1 c_0 c_4)) (p3 (f1 c_0 c_4))) (or (not (p2 c_4)) (not (p2 c_1)) (p4 (f1 c_1 c_4)) (p3 (f1 c_1 c_4))) (or (not (p2 c_4)) (not (p2 c_2)) (p4 (f1 c_2 c_4)) (p3 (f1 c_2 c_4))) (or (not (p2 c_4)) (not (p2 c_3)) (p4 (f1 c_3 c_4)) (p3 (f1 c_3 c_4))) (or (not (p2 c_4)) (not (p2 c_4)) (p4 (f1 c_4 c_4)) (p3 (f1 c_4 c_4))) (or (not (p2 c_0)) (not (p3 c_0))) (or (not (p2 c_1)) (not (p3 c_1))) (or (not (p2 c_2)) (not (p3 c_2))) (or (not (p2 c_3)) (not (p3 c_3))) (or (not (p2 c_4)) (not (p3 c_4))) (or (p4 c_0) (p3 c_0) (p2 c_0)) (or (p4 c_1) (p3 c_1) (p2 c_1)) (or (p4 c_2) (p3 c_2) (p2 c_2)) (or (p4 c_3) (p3 c_3) (p2 c_3)) (or (p4 c_4) (p3 c_4) (p2 c_4)) (p3 c6) (p2 c5) (or (not (p4 c_0)) (not (p4 c_0)) (p2 (f1 c_0 c_0))) (or (not (p4 c_0)) (not (p4 c_1)) (p2 (f1 c_1 c_0))) (or (not (p4 c_0)) (not (p4 c_2)) (p2 (f1 c_2 c_0))) (or (not (p4 c_0)) (not (p4 c_3)) (p2 (f1 c_3 c_0))) (or (not (p4 c_0)) (not (p4 c_4)) (p2 (f1 c_4 c_0))) (or (not (p4 c_1)) (not (p4 c_0)) (p2 (f1 c_0 c_1))) (or (not (p4 c_1)) (not (p4 c_1)) (p2 (f1 c_1 c_1))) (or (not (p4 c_1)) (not (p4 c_2)) (p2 (f1 c_2 c_1))) (or (not (p4 c_1)) (not (p4 c_3)) (p2 (f1 c_3 c_1))) (or (not (p4 c_1)) (not (p4 c_4)) (p2 (f1 c_4 c_1))) (or (not (p4 c_2)) (not (p4 c_0)) (p2 (f1 c_0 c_2))) (or (not (p4 c_2)) (not (p4 c_1)) (p2 (f1 c_1 c_2))) (or (not (p4 c_2)) (not (p4 c_2)) (p2 (f1 c_2 c_2))) (or (not (p4 c_2)) (not (p4 c_3)) (p2 (f1 c_3 c_2))) (or (not (p4 c_2)) (not (p4 c_4)) (p2 (f1 c_4 c_2))) (or (not (p4 c_3)) (not (p4 c_0)) (p2 (f1 c_0 c_3))) (or (not (p4 c_3)) (not (p4 c_1)) (p2 (f1 c_1 c_3))) (or (not (p4 c_3)) (not (p4 c_2)) (p2 (f1 c_2 c_3))) (or (not (p4 c_3)) (not (p4 c_3)) (p2 (f1 c_3 c_3))) (or (not (p4 c_3)) (not (p4 c_4)) (p2 (f1 c_4 c_3))) (or (not (p4 c_4)) (not (p4 c_0)) (p2 (f1 c_0 c_4))) (or (not (p4 c_4)) (not (p4 c_1)) (p2 (f1 c_1 c_4))) (or (not (p4 c_4)) (not (p4 c_2)) (p2 (f1 c_2 c_4))) (or (not (p4 c_4)) (not (p4 c_3)) (p2 (f1 c_3 c_4))) (or (not (p4 c_4)) (not (p4 c_4)) (p2 (f1 c_4 c_4))) (= (f1 c_0 (f1 c_0 c_0)) (f1 (f1 c_0 c_0) c_0)) (= (f1 c_0 (f1 c_0 c_1)) (f1 (f1 c_0 c_0) c_1)) (= (f1 c_0 (f1 c_0 c_2)) (f1 (f1 c_0 c_0) c_2)) (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3)) (= (f1 c_0 (f1 c_0 c_4)) (f1 (f1 c_0 c_0) c_4)) (= (f1 c_0 (f1 c_1 c_0)) (f1 (f1 c_0 c_1) c_0)) (= (f1 c_0 (f1 c_1 c_1)) (f1 (f1 c_0 c_1) c_1)) (= (f1 c_0 (f1 c_1 c_2)) (f1 (f1 c_0 c_1) c_2)) (= (f1 c_0 (f1 c_1 c_3)) (f1 (f1 c_0 c_1) c_3)) (= (f1 c_0 (f1 c_1 c_4)) (f1 (f1 c_0 c_1) c_4)) (= (f1 c_0 (f1 c_2 c_0)) (f1 (f1 c_0 c_2) c_0)) (= (f1 c_0 (f1 c_2 c_1)) (f1 (f1 c_0 c_2) c_1)) (= (f1 c_0 (f1 c_2 c_2)) (f1 (f1 c_0 c_2) c_2)) (= (f1 c_0 (f1 c_2 c_3)) (f1 (f1 c_0 c_2) c_3)) (= (f1 c_0 (f1 c_2 c_4)) (f1 (f1 c_0 c_2) c_4)) (= (f1 c_0 (f1 c_3 c_0)) (f1 (f1 c_0 c_3) c_0)) (= (f1 c_0 (f1 c_3 c_1)) (f1 (f1 c_0 c_3) c_1)) (= (f1 c_0 (f1 c_3 c_2)) (f1 (f1 c_0 c_3) c_2)) (= (f1 c_0 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_3)) (= (f1 c_0 (f1 c_3 c_4)) (f1 (f1 c_0 c_3) c_4)) (= (f1 c_0 (f1 c_4 c_0)) (f1 (f1 c_0 c_4) c_0)) (= (f1 c_0 (f1 c_4 c_1)) (f1 (f1 c_0 c_4) c_1)) (= (f1 c_0 (f1 c_4 c_2)) (f1 (f1 c_0 c_4) c_2)) (= (f1 c_0 (f1 c_4 c_3)) (f1 (f1 c_0 c_4) c_3)) (= (f1 c_0 (f1 c_4 c_4)) (f1 (f1 c_0 c_4) c_4)) (= (f1 c_1 (f1 c_0 c_0)) (f1 (f1 c_1 c_0) c_0)) (= (f1 c_1 (f1 c_0 c_1)) (f1 (f1 c_1 c_0) c_1)) (= (f1 c_1 (f1 c_0 c_2)) (f1 (f1 c_1 c_0) c_2)) (= (f1 c_1 (f1 c_0 c_3)) (f1 (f1 c_1 c_0) c_3)) (= (f1 c_1 (f1 c_0 c_4)) (f1 (f1 c_1 c_0) c_4)) (= (f1 c_1 (f1 c_1 c_0)) (f1 (f1 c_1 c_1) c_0)) (= (f1 c_1 (f1 c_1 c_1)) (f1 (f1 c_1 c_1) c_1)) (= (f1 c_1 (f1 c_1 c_2)) (f1 (f1 c_1 c_1) c_2)) (= (f1 c_1 (f1 c_1 c_3)) (f1 (f1 c_1 c_1) c_3)) (= (f1 c_1 (f1 c_1 c_4)) (f1 (f1 c_1 c_1) c_4)) (= (f1 c_1 (f1 c_2 c_0)) (f1 (f1 c_1 c_2) c_0)) (= (f1 c_1 (f1 c_2 c_1)) (f1 (f1 c_1 c_2) c_1)) (= (f1 c_1 (f1 c_2 c_2)) (f1 (f1 c_1 c_2) c_2)) (= (f1 c_1 (f1 c_2 c_3)) (f1 (f1 c_1 c_2) c_3)) (= (f1 c_1 (f1 c_2 c_4)) (f1 (f1 c_1 c_2) c_4)) (= (f1 c_1 (f1 c_3 c_0)) (f1 (f1 c_1 c_3) c_0)) (= (f1 c_1 (f1 c_3 c_1)) (f1 (f1 c_1 c_3) c_1)) (= (f1 c_1 (f1 c_3 c_2)) (f1 (f1 c_1 c_3) c_2)) (= (f1 c_1 (f1 c_3 c_3)) (f1 (f1 c_1 c_3) c_3)) (= (f1 c_1 (f1 c_3 c_4)) (f1 (f1 c_1 c_3) c_4)) (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0)) (= (f1 c_1 (f1 c_4 c_1)) (f1 (f1 c_1 c_4) c_1)) (= (f1 c_1 (f1 c_4 c_2)) (f1 (f1 c_1 c_4) c_2)) (= (f1 c_1 (f1 c_4 c_3)) (f1 (f1 c_1 c_4) c_3)) (= (f1 c_1 (f1 c_4 c_4)) (f1 (f1 c_1 c_4) c_4)) (= (f1 c_2 (f1 c_0 c_0)) (f1 (f1 c_2 c_0) c_0)) (= (f1 c_2 (f1 c_0 c_1)) (f1 (f1 c_2 c_0) c_1)) (= (f1 c_2 (f1 c_0 c_2)) (f1 (f1 c_2 c_0) c_2)) (= (f1 c_2 (f1 c_0 c_3)) (f1 (f1 c_2 c_0) c_3)) (= (f1 c_2 (f1 c_0 c_4)) (f1 (f1 c_2 c_0) c_4)) (= (f1 c_2 (f1 c_1 c_0)) (f1 (f1 c_2 c_1) c_0)) (= (f1 c_2 (f1 c_1 c_1)) (f1 (f1 c_2 c_1) c_1)) (= (f1 c_2 (f1 c_1 c_2)) (f1 (f1 c_2 c_1) c_2)) (= (f1 c_2 (f1 c_1 c_3)) (f1 (f1 c_2 c_1) c_3)) (= (f1 c_2 (f1 c_1 c_4)) (f1 (f1 c_2 c_1) c_4)) (= (f1 c_2 (f1 c_2 c_0)) (f1 (f1 c_2 c_2) c_0)) (= (f1 c_2 (f1 c_2 c_1)) (f1 (f1 c_2 c_2) c_1)) (= (f1 c_2 (f1 c_2 c_2)) (f1 (f1 c_2 c_2) c_2)) (= (f1 c_2 (f1 c_2 c_3)) (f1 (f1 c_2 c_2) c_3)) (= (f1 c_2 (f1 c_2 c_4)) (f1 (f1 c_2 c_2) c_4)) (= (f1 c_2 (f1 c_3 c_0)) (f1 (f1 c_2 c_3) c_0)) (= (f1 c_2 (f1 c_3 c_1)) (f1 (f1 c_2 c_3) c_1)) (= (f1 c_2 (f1 c_3 c_2)) (f1 (f1 c_2 c_3) c_2)) (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3)) (= (f1 c_2 (f1 c_3 c_4)) (f1 (f1 c_2 c_3) c_4)) (= (f1 c_2 (f1 c_4 c_0)) (f1 (f1 c_2 c_4) c_0)) (= (f1 c_2 (f1 c_4 c_1)) (f1 (f1 c_2 c_4) c_1)) (= (f1 c_2 (f1 c_4 c_2)) (f1 (f1 c_2 c_4) c_2)) (= (f1 c_2 (f1 c_4 c_3)) (f1 (f1 c_2 c_4) c_3)) (= (f1 c_2 (f1 c_4 c_4)) (f1 (f1 c_2 c_4) c_4)) (= (f1 c_3 (f1 c_0 c_0)) (f1 (f1 c_3 c_0) c_0)) (= (f1 c_3 (f1 c_0 c_1)) (f1 (f1 c_3 c_0) c_1)) (= (f1 c_3 (f1 c_0 c_2)) (f1 (f1 c_3 c_0) c_2)) (= (f1 c_3 (f1 c_0 c_3)) (f1 (f1 c_3 c_0) c_3)) (= (f1 c_3 (f1 c_0 c_4)) (f1 (f1 c_3 c_0) c_4)) (= (f1 c_3 (f1 c_1 c_0)) (f1 (f1 c_3 c_1) c_0)) (= (f1 c_3 (f1 c_1 c_1)) (f1 (f1 c_3 c_1) c_1)) (= (f1 c_3 (f1 c_1 c_2)) (f1 (f1 c_3 c_1) c_2)) (= (f1 c_3 (f1 c_1 c_3)) (f1 (f1 c_3 c_1) c_3)) (= (f1 c_3 (f1 c_1 c_4)) (f1 (f1 c_3 c_1) c_4)) (= (f1 c_3 (f1 c_2 c_0)) (f1 (f1 c_3 c_2) c_0)) (= (f1 c_3 (f1 c_2 c_1)) (f1 (f1 c_3 c_2) c_1)) (= (f1 c_3 (f1 c_2 c_2)) (f1 (f1 c_3 c_2) c_2)) (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3)) (= (f1 c_3 (f1 c_2 c_4)) (f1 (f1 c_3 c_2) c_4)) (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0)) (= (f1 c_3 (f1 c_3 c_1)) (f1 (f1 c_3 c_3) c_1)) (= (f1 c_3 (f1 c_3 c_2)) (f1 (f1 c_3 c_3) c_2)) (= (f1 c_3 (f1 c_3 c_3)) (f1 (f1 c_3 c_3) c_3)) (= (f1 c_3 (f1 c_3 c_4)) (f1 (f1 c_3 c_3) c_4)) (= (f1 c_3 (f1 c_4 c_0)) (f1 (f1 c_3 c_4) c_0)) (= (f1 c_3 (f1 c_4 c_1)) (f1 (f1 c_3 c_4) c_1)) (= (f1 c_3 (f1 c_4 c_2)) (f1 (f1 c_3 c_4) c_2)) (= (f1 c_3 (f1 c_4 c_3)) (f1 (f1 c_3 c_4) c_3)) (= (f1 c_3 (f1 c_4 c_4)) (f1 (f1 c_3 c_4) c_4)) (= (f1 c_4 (f1 c_0 c_0)) (f1 (f1 c_4 c_0) c_0)) (= (f1 c_4 (f1 c_0 c_1)) (f1 (f1 c_4 c_0) c_1)) (= (f1 c_4 (f1 c_0 c_2)) (f1 (f1 c_4 c_0) c_2)) (= (f1 c_4 (f1 c_0 c_3)) (f1 (f1 c_4 c_0) c_3)) (= (f1 c_4 (f1 c_0 c_4)) (f1 (f1 c_4 c_0) c_4)) (= (f1 c_4 (f1 c_1 c_0)) (f1 (f1 c_4 c_1) c_0)) (= (f1 c_4 (f1 c_1 c_1)) (f1 (f1 c_4 c_1) c_1)) (= (f1 c_4 (f1 c_1 c_2)) (f1 (f1 c_4 c_1) c_2)) (= (f1 c_4 (f1 c_1 c_3)) (f1 (f1 c_4 c_1) c_3)) (= (f1 c_4 (f1 c_1 c_4)) (f1 (f1 c_4 c_1) c_4)) (= (f1 c_4 (f1 c_2 c_0)) (f1 (f1 c_4 c_2) c_0)) (= (f1 c_4 (f1 c_2 c_1)) (f1 (f1 c_4 c_2) c_1)) (= (f1 c_4 (f1 c_2 c_2)) (f1 (f1 c_4 c_2) c_2)) (= (f1 c_4 (f1 c_2 c_3)) (f1 (f1 c_4 c_2) c_3)) (= (f1 c_4 (f1 c_2 c_4)) (f1 (f1 c_4 c_2) c_4)) (= (f1 c_4 (f1 c_3 c_0)) (f1 (f1 c_4 c_3) c_0)) (= (f1 c_4 (f1 c_3 c_1)) (f1 (f1 c_4 c_3) c_1)) (= (f1 c_4 (f1 c_3 c_2)) (f1 (f1 c_4 c_3) c_2)) (= (f1 c_4 (f1 c_3 c_3)) (f1 (f1 c_4 c_3) c_3)) (= (f1 c_4 (f1 c_3 c_4)) (f1 (f1 c_4 c_3) c_4)) (= (f1 c_4 (f1 c_4 c_0)) (f1 (f1 c_4 c_4) c_0)) (= (f1 c_4 (f1 c_4 c_1)) (f1 (f1 c_4 c_4) c_1)) (= (f1 c_4 (f1 c_4 c_2)) (f1 (f1 c_4 c_4) c_2)) (= (f1 c_4 (f1 c_4 c_3)) (f1 (f1 c_4 c_4) c_3)) (= (f1 c_4 (f1 c_4 c_4)) (f1 (f1 c_4 c_4) c_4)) (or (p2 (f1 c_0 c_0)) (not (p3 c_0)) (not (p3 c_0))) (or (p2 (f1 c_0 c_1)) (not (p3 c_0)) (not (p3 c_1))) (or (p2 (f1 c_0 c_2)) (not (p3 c_0)) (not (p3 c_2))) (or (p2 (f1 c_0 c_3)) (not (p3 c_0)) (not (p3 c_3))) (or (p2 (f1 c_0 c_4)) (not (p3 c_0)) (not (p3 c_4))) (or (p2 (f1 c_1 c_0)) (not (p3 c_1)) (not (p3 c_0))) (or (p2 (f1 c_1 c_1)) (not (p3 c_1)) (not (p3 c_1))) (or (p2 (f1 c_1 c_2)) (not (p3 c_1)) (not (p3 c_2))) (or (p2 (f1 c_1 c_3)) (not (p3 c_1)) (not (p3 c_3))) (or (p2 (f1 c_1 c_4)) (not (p3 c_1)) (not (p3 c_4))) (or (p2 (f1 c_2 c_0)) (not (p3 c_2)) (not (p3 c_0))) (or (p2 (f1 c_2 c_1)) (not (p3 c_2)) (not (p3 c_1))) (or (p2 (f1 c_2 c_2)) (not (p3 c_2)) (not (p3 c_2))) (or (p2 (f1 c_2 c_3)) (not (p3 c_2)) (not (p3 c_3))) (or (p2 (f1 c_2 c_4)) (not (p3 c_2)) (not (p3 c_4))) (or (p2 (f1 c_3 c_0)) (not (p3 c_3)) (not (p3 c_0))) (or (p2 (f1 c_3 c_1)) (not (p3 c_3)) (not (p3 c_1))) (or (p2 (f1 c_3 c_2)) (not (p3 c_3)) (not (p3 c_2))) (or (p2 (f1 c_3 c_3)) (not (p3 c_3)) (not (p3 c_3))) (or (p2 (f1 c_3 c_4)) (not (p3 c_3)) (not (p3 c_4))) (or (p2 (f1 c_4 c_0)) (not (p3 c_4)) (not (p3 c_0))) (or (p2 (f1 c_4 c_1)) (not (p3 c_4)) (not (p3 c_1))) (or (p2 (f1 c_4 c_2)) (not (p3 c_4)) (not (p3 c_2))) (or (p2 (f1 c_4 c_3)) (not (p3 c_4)) (not (p3 c_3))) (or (p2 (f1 c_4 c_4)) (not (p3 c_4)) (not (p3 c_4))) (p4 c7) (or (not (p4 c_0)) (not (p2 c_0))) (or (not (p4 c_1)) (not (p2 c_1))) (or (not (p4 c_2)) (not (p2 c_2))) (or (not (p4 c_3)) (not (p2 c_3))) (or (not (p4 c_4)) (not (p2 c_4))) (or (not (p3 c_0)) (not (p4 c_0))) (or (not (p3 c_1)) (not (p4 c_1))) (or (not (p3 c_2)) (not (p4 c_2))) (or (not (p3 c_3)) (not (p4 c_3))) (or (not (p3 c_4)) (not (p4 c_4))) (or (= (f1 c_0 c_0) c_0) (= (f1 c_0 c_0) c_1) (= (f1 c_0 c_0) c_2) (= (f1 c_0 c_0) c_3) (= (f1 c_0 c_0) c_4)) (or (= (f1 c_0 c_1) c_0) (= (f1 c_0 c_1) c_1) (= (f1 c_0 c_1) c_2) (= (f1 c_0 c_1) c_3) (= (f1 c_0 c_1) c_4)) (or (= (f1 c_0 c_2) c_0) (= (f1 c_0 c_2) c_1) (= (f1 c_0 c_2) c_2) (= (f1 c_0 c_2) c_3) (= (f1 c_0 c_2) c_4)) (or (= (f1 c_0 c_3) c_0) (= (f1 c_0 c_3) c_1) (= (f1 c_0 c_3) c_2) (= (f1 c_0 c_3) c_3) (= (f1 c_0 c_3) c_4)) (or (= (f1 c_0 c_4) c_0) (= (f1 c_0 c_4) c_1) (= (f1 c_0 c_4) c_2) (= (f1 c_0 c_4) c_3) (= (f1 c_0 c_4) c_4)) (or (= (f1 c_1 c_0) c_0) (= (f1 c_1 c_0) c_1) (= (f1 c_1 c_0) c_2) (= (f1 c_1 c_0) c_3) (= (f1 c_1 c_0) c_4)) (or (= (f1 c_1 c_1) c_0) (= (f1 c_1 c_1) c_1) (= (f1 c_1 c_1) c_2) (= (f1 c_1 c_1) c_3) (= (f1 c_1 c_1) c_4)) (or (= (f1 c_1 c_2) c_0) (= (f1 c_1 c_2) c_1) (= (f1 c_1 c_2) c_2) (= (f1 c_1 c_2) c_3) (= (f1 c_1 c_2) c_4)) (or (= (f1 c_1 c_3) c_0) (= (f1 c_1 c_3) c_1) (= (f1 c_1 c_3) c_2) (= (f1 c_1 c_3) c_3) (= (f1 c_1 c_3) c_4)) (or (= (f1 c_1 c_4) c_0) (= (f1 c_1 c_4) c_1) (= (f1 c_1 c_4) c_2) (= (f1 c_1 c_4) c_3) (= (f1 c_1 c_4) c_4)) (or (= (f1 c_2 c_0) c_0) (= (f1 c_2 c_0) c_1) (= (f1 c_2 c_0) c_2) (= (f1 c_2 c_0) c_3) (= (f1 c_2 c_0) c_4)) (or (= (f1 c_2 c_1) c_0) (= (f1 c_2 c_1) c_1) (= (f1 c_2 c_1) c_2) (= (f1 c_2 c_1) c_3) (= (f1 c_2 c_1) c_4)) (or (= (f1 c_2 c_2) c_0) (= (f1 c_2 c_2) c_1) (= (f1 c_2 c_2) c_2) (= (f1 c_2 c_2) c_3) (= (f1 c_2 c_2) c_4)) (or (= (f1 c_2 c_3) c_0) (= (f1 c_2 c_3) c_1) (= (f1 c_2 c_3) c_2) (= (f1 c_2 c_3) c_3) (= (f1 c_2 c_3) c_4)) (or (= (f1 c_2 c_4) c_0) (= (f1 c_2 c_4) c_1) (= (f1 c_2 c_4) c_2) (= (f1 c_2 c_4) c_3) (= (f1 c_2 c_4) c_4)) (or (= (f1 c_3 c_0) c_0) (= (f1 c_3 c_0) c_1) (= (f1 c_3 c_0) c_2) (= (f1 c_3 c_0) c_3) (= (f1 c_3 c_0) c_4)) (or (= (f1 c_3 c_1) c_0) (= (f1 c_3 c_1) c_1) (= (f1 c_3 c_1) c_2) (= (f1 c_3 c_1) c_3) (= (f1 c_3 c_1) c_4)) (or (= (f1 c_3 c_2) c_0) (= (f1 c_3 c_2) c_1) (= (f1 c_3 c_2) c_2) (= (f1 c_3 c_2) c_3) (= (f1 c_3 c_2) c_4)) (or (= (f1 c_3 c_3) c_0) (= (f1 c_3 c_3) c_1) (= (f1 c_3 c_3) c_2) (= (f1 c_3 c_3) c_3) (= (f1 c_3 c_3) c_4)) (or (= (f1 c_3 c_4) c_0) (= (f1 c_3 c_4) c_1) (= (f1 c_3 c_4) c_2) (= (f1 c_3 c_4) c_3) (= (f1 c_3 c_4) c_4)) (or (= (f1 c_4 c_0) c_0) (= (f1 c_4 c_0) c_1) (= (f1 c_4 c_0) c_2) (= (f1 c_4 c_0) c_3) (= (f1 c_4 c_0) c_4)) (or (= (f1 c_4 c_1) c_0) (= (f1 c_4 c_1) c_1) (= (f1 c_4 c_1) c_2) (= (f1 c_4 c_1) c_3) (= (f1 c_4 c_1) c_4)) (or (= (f1 c_4 c_2) c_0) (= (f1 c_4 c_2) c_1) (= (f1 c_4 c_2) c_2) (= (f1 c_4 c_2) c_3) (= (f1 c_4 c_2) c_4)) (or (= (f1 c_4 c_3) c_0) (= (f1 c_4 c_3) c_1) (= (f1 c_4 c_3) c_2) (= (f1 c_4 c_3) c_3) (= (f1 c_4 c_3) c_4)) (or (= (f1 c_4 c_4) c_0) (= (f1 c_4 c_4) c_1) (= (f1 c_4 c_4) c_2) (= (f1 c_4 c_4) c_3) (= (f1 c_4 c_4) c_4)) (or (= c6 c_0) (= c6 c_1) (= c6 c_2) (= c6 c_3) (= c6 c_4)) (or (= c5 c_0) (= c5 c_1) (= c5 c_2) (= c5 c_3) (= c5 c_4)) (or (= c7 c_0) (= c7 c_1) (= c7 c_2) (= c7 c_3) (= c7 c_4)))))
(assert (= BAV2 (distinct c_0 c_1 c_2 c_3 c_4)))
(assert (= BAV3 (or (not (p2 c_0)) (not (p2 c_0)) (p4 (f1 c_0 c_0)) (p3 (f1 c_0 c_0)))))
(assert (= BAV4 (or (not (p2 c_0)) (not (p2 c_1)) (p4 (f1 c_1 c_0)) (p3 (f1 c_1 c_0)))))
(assert (= BAV5 (or (not (p2 c_0)) (not (p2 c_2)) (p4 (f1 c_2 c_0)) (p3 (f1 c_2 c_0)))))
(assert (= BAV6 (or (not (p2 c_0)) (not (p2 c_3)) (p4 (f1 c_3 c_0)) (p3 (f1 c_3 c_0)))))
(assert (= BAV7 (or (not (p2 c_0)) (not (p2 c_4)) (p4 (f1 c_4 c_0)) (p3 (f1 c_4 c_0)))))
(assert (= BAV8 (or (not (p2 c_1)) (not (p2 c_0)) (p4 (f1 c_0 c_1)) (p3 (f1 c_0 c_1)))))
(assert (= BAV9 (or (not (p2 c_1)) (not (p2 c_1)) (p4 (f1 c_1 c_1)) (p3 (f1 c_1 c_1)))))
(assert (= BAV10 (or (not (p2 c_1)) (not (p2 c_2)) (p4 (f1 c_2 c_1)) (p3 (f1 c_2 c_1)))))
(assert (= BAV11 (or (not (p2 c_1)) (not (p2 c_3)) (p4 (f1 c_3 c_1)) (p3 (f1 c_3 c_1)))))
(assert (= BAV12 (or (not (p2 c_1)) (not (p2 c_4)) (p4 (f1 c_4 c_1)) (p3 (f1 c_4 c_1)))))
(assert (= BAV13 (or (not (p2 c_2)) (not (p2 c_0)) (p4 (f1 c_0 c_2)) (p3 (f1 c_0 c_2)))))
(assert (= BAV14 (or (not (p2 c_2)) (not (p2 c_1)) (p4 (f1 c_1 c_2)) (p3 (f1 c_1 c_2)))))
(assert (= BAV15 (or (not (p2 c_2)) (not (p2 c_2)) (p4 (f1 c_2 c_2)) (p3 (f1 c_2 c_2)))))
(assert (= BAV16 (or (not (p2 c_2)) (not (p2 c_3)) (p4 (f1 c_3 c_2)) (p3 (f1 c_3 c_2)))))
(assert (= BAV17 (or (not (p2 c_2)) (not (p2 c_4)) (p4 (f1 c_4 c_2)) (p3 (f1 c_4 c_2)))))
(assert (= BAV18 (or (not (p2 c_3)) (not (p2 c_0)) (p4 (f1 c_0 c_3)) (p3 (f1 c_0 c_3)))))
(assert (= BAV19 (or (not (p2 c_3)) (not (p2 c_1)) (p4 (f1 c_1 c_3)) (p3 (f1 c_1 c_3)))))
(assert (= BAV20 (or (not (p2 c_3)) (not (p2 c_2)) (p4 (f1 c_2 c_3)) (p3 (f1 c_2 c_3)))))
(assert (= BAV21 (or (not (p2 c_3)) (not (p2 c_3)) (p4 (f1 c_3 c_3)) (p3 (f1 c_3 c_3)))))
(assert (= BAV22 (or (not (p2 c_3)) (not (p2 c_4)) (p4 (f1 c_4 c_3)) (p3 (f1 c_4 c_3)))))
(assert (= BAV23 (or (not (p2 c_4)) (not (p2 c_0)) (p4 (f1 c_0 c_4)) (p3 (f1 c_0 c_4)))))
(assert (= BAV24 (or (not (p2 c_4)) (not (p2 c_1)) (p4 (f1 c_1 c_4)) (p3 (f1 c_1 c_4)))))
(assert (= BAV25 (or (not (p2 c_4)) (not (p2 c_2)) (p4 (f1 c_2 c_4)) (p3 (f1 c_2 c_4)))))
(assert (= BAV26 (or (not (p2 c_4)) (not (p2 c_3)) (p4 (f1 c_3 c_4)) (p3 (f1 c_3 c_4)))))
(assert (= BAV27 (or (not (p2 c_4)) (not (p2 c_4)) (p4 (f1 c_4 c_4)) (p3 (f1 c_4 c_4)))))
(assert (= BAV28 (or (not (p2 c_0)) (not (p3 c_0)))))
(assert (= BAV29 (or (not (p2 c_1)) (not (p3 c_1)))))
(assert (= BAV30 (or (not (p2 c_2)) (not (p3 c_2)))))
(assert (= BAV31 (or (not (p2 c_3)) (not (p3 c_3)))))
(assert (= BAV32 (or (not (p2 c_4)) (not (p3 c_4)))))
(assert (= BAV33 (or (p4 c_0) (p3 c_0) (p2 c_0))))
(assert (= BAV34 (or (p4 c_1) (p3 c_1) (p2 c_1))))
(assert (= BAV35 (or (p4 c_2) (p3 c_2) (p2 c_2))))
(assert (= BAV36 (or (p4 c_3) (p3 c_3) (p2 c_3))))
(assert (= BAV37 (or (p4 c_4) (p3 c_4) (p2 c_4))))
(assert (= BAV38 (or (not (p4 c_0)) (not (p4 c_0)) (p2 (f1 c_0 c_0)))))
(assert (= BAV39 (or (not (p4 c_0)) (not (p4 c_1)) (p2 (f1 c_1 c_0)))))
(assert (= BAV40 (or (not (p4 c_0)) (not (p4 c_2)) (p2 (f1 c_2 c_0)))))
(assert (= BAV41 (or (not (p4 c_0)) (not (p4 c_3)) (p2 (f1 c_3 c_0)))))
(assert (= BAV42 (or (not (p4 c_0)) (not (p4 c_4)) (p2 (f1 c_4 c_0)))))
(assert (= BAV43 (or (not (p4 c_1)) (not (p4 c_0)) (p2 (f1 c_0 c_1)))))
(assert (= BAV44 (or (not (p4 c_1)) (not (p4 c_1)) (p2 (f1 c_1 c_1)))))
(assert (= BAV45 (or (not (p4 c_1)) (not (p4 c_2)) (p2 (f1 c_2 c_1)))))
(assert (= BAV46 (or (not (p4 c_1)) (not (p4 c_3)) (p2 (f1 c_3 c_1)))))
(assert (= BAV47 (or (not (p4 c_1)) (not (p4 c_4)) (p2 (f1 c_4 c_1)))))
(assert (= BAV48 (or (not (p4 c_2)) (not (p4 c_0)) (p2 (f1 c_0 c_2)))))
(assert (= BAV49 (or (not (p4 c_2)) (not (p4 c_1)) (p2 (f1 c_1 c_2)))))
(assert (= BAV50 (or (not (p4 c_2)) (not (p4 c_2)) (p2 (f1 c_2 c_2)))))
(assert (= BAV51 (or (not (p4 c_2)) (not (p4 c_3)) (p2 (f1 c_3 c_2)))))
(assert (= BAV52 (or (not (p4 c_2)) (not (p4 c_4)) (p2 (f1 c_4 c_2)))))
(assert (= BAV53 (or (not (p4 c_3)) (not (p4 c_0)) (p2 (f1 c_0 c_3)))))
(assert (= BAV54 (or (not (p4 c_3)) (not (p4 c_1)) (p2 (f1 c_1 c_3)))))
(assert (= BAV55 (or (not (p4 c_3)) (not (p4 c_2)) (p2 (f1 c_2 c_3)))))
(assert (= BAV56 (or (not (p4 c_3)) (not (p4 c_3)) (p2 (f1 c_3 c_3)))))
(assert (= BAV57 (or (not (p4 c_3)) (not (p4 c_4)) (p2 (f1 c_4 c_3)))))
(assert (= BAV58 (or (not (p4 c_4)) (not (p4 c_0)) (p2 (f1 c_0 c_4)))))
(assert (= BAV59 (or (not (p4 c_4)) (not (p4 c_1)) (p2 (f1 c_1 c_4)))))
(assert (= BAV60 (or (not (p4 c_4)) (not (p4 c_2)) (p2 (f1 c_2 c_4)))))
(assert (= BAV61 (or (not (p4 c_4)) (not (p4 c_3)) (p2 (f1 c_3 c_4)))))
(assert (= BAV62 (or (not (p4 c_4)) (not (p4 c_4)) (p2 (f1 c_4 c_4)))))
(assert (= BAV63 (= (f1 c_0 (f1 c_0 c_0)) (f1 (f1 c_0 c_0) c_0))))
(assert (= BAV64 (= (f1 c_0 (f1 c_0 c_1)) (f1 (f1 c_0 c_0) c_1))))
(assert (= BAV65 (= (f1 c_0 (f1 c_0 c_2)) (f1 (f1 c_0 c_0) c_2))))
(assert (= BAV66 (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3))))
(assert (= BAV67 (= (f1 c_0 (f1 c_0 c_4)) (f1 (f1 c_0 c_0) c_4))))
(assert (= BAV68 (= (f1 c_0 (f1 c_1 c_0)) (f1 (f1 c_0 c_1) c_0))))
(assert (= BAV69 (= (f1 c_0 (f1 c_1 c_1)) (f1 (f1 c_0 c_1) c_1))))
(assert (= BAV70 (= (f1 c_0 (f1 c_1 c_2)) (f1 (f1 c_0 c_1) c_2))))
(assert (= BAV71 (= (f1 c_0 (f1 c_1 c_3)) (f1 (f1 c_0 c_1) c_3))))
(assert (= BAV72 (= (f1 c_0 (f1 c_1 c_4)) (f1 (f1 c_0 c_1) c_4))))
(assert (= BAV73 (= (f1 c_0 (f1 c_2 c_0)) (f1 (f1 c_0 c_2) c_0))))
(assert (= BAV74 (= (f1 c_0 (f1 c_2 c_1)) (f1 (f1 c_0 c_2) c_1))))
(assert (= BAV75 (= (f1 c_0 (f1 c_2 c_2)) (f1 (f1 c_0 c_2) c_2))))
(assert (= BAV76 (= (f1 c_0 (f1 c_2 c_3)) (f1 (f1 c_0 c_2) c_3))))
(assert (= BAV77 (= (f1 c_0 (f1 c_2 c_4)) (f1 (f1 c_0 c_2) c_4))))
(assert (= BAV78 (= (f1 c_0 (f1 c_3 c_0)) (f1 (f1 c_0 c_3) c_0))))
(assert (= BAV79 (= (f1 c_0 (f1 c_3 c_1)) (f1 (f1 c_0 c_3) c_1))))
(assert (= BAV80 (= (f1 c_0 (f1 c_3 c_2)) (f1 (f1 c_0 c_3) c_2))))
(assert (= BAV81 (= (f1 c_0 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_3))))
(assert (= BAV82 (= (f1 c_0 (f1 c_3 c_4)) (f1 (f1 c_0 c_3) c_4))))
(assert (= BAV83 (= (f1 c_0 (f1 c_4 c_0)) (f1 (f1 c_0 c_4) c_0))))
(assert (= BAV84 (= (f1 c_0 (f1 c_4 c_1)) (f1 (f1 c_0 c_4) c_1))))
(assert (= BAV85 (= (f1 c_0 (f1 c_4 c_2)) (f1 (f1 c_0 c_4) c_2))))
(assert (= BAV86 (= (f1 c_0 (f1 c_4 c_3)) (f1 (f1 c_0 c_4) c_3))))
(assert (= BAV87 (= (f1 c_0 (f1 c_4 c_4)) (f1 (f1 c_0 c_4) c_4))))
(assert (= BAV88 (= (f1 c_1 (f1 c_0 c_0)) (f1 (f1 c_1 c_0) c_0))))
(assert (= BAV89 (= (f1 c_1 (f1 c_0 c_1)) (f1 (f1 c_1 c_0) c_1))))
(assert (= BAV90 (= (f1 c_1 (f1 c_0 c_2)) (f1 (f1 c_1 c_0) c_2))))
(assert (= BAV91 (= (f1 c_1 (f1 c_0 c_3)) (f1 (f1 c_1 c_0) c_3))))
(assert (= BAV92 (= (f1 c_1 (f1 c_0 c_4)) (f1 (f1 c_1 c_0) c_4))))
(assert (= BAV93 (= (f1 c_1 (f1 c_1 c_0)) (f1 (f1 c_1 c_1) c_0))))
(assert (= BAV94 (= (f1 c_1 (f1 c_1 c_1)) (f1 (f1 c_1 c_1) c_1))))
(assert (= BAV95 (= (f1 c_1 (f1 c_1 c_2)) (f1 (f1 c_1 c_1) c_2))))
(assert (= BAV96 (= (f1 c_1 (f1 c_1 c_3)) (f1 (f1 c_1 c_1) c_3))))
(assert (= BAV97 (= (f1 c_1 (f1 c_1 c_4)) (f1 (f1 c_1 c_1) c_4))))
(assert (= BAV98 (= (f1 c_1 (f1 c_2 c_0)) (f1 (f1 c_1 c_2) c_0))))
(assert (= BAV99 (= (f1 c_1 (f1 c_2 c_1)) (f1 (f1 c_1 c_2) c_1))))
(assert (= BAV100 (= (f1 c_1 (f1 c_2 c_2)) (f1 (f1 c_1 c_2) c_2))))
(assert (= BAV101 (= (f1 c_1 (f1 c_2 c_3)) (f1 (f1 c_1 c_2) c_3))))
(assert (= BAV102 (= (f1 c_1 (f1 c_2 c_4)) (f1 (f1 c_1 c_2) c_4))))
(assert (= BAV103 (= (f1 c_1 (f1 c_3 c_0)) (f1 (f1 c_1 c_3) c_0))))
(assert (= BAV104 (= (f1 c_1 (f1 c_3 c_1)) (f1 (f1 c_1 c_3) c_1))))
(assert (= BAV105 (= (f1 c_1 (f1 c_3 c_2)) (f1 (f1 c_1 c_3) c_2))))
(assert (= BAV106 (= (f1 c_1 (f1 c_3 c_3)) (f1 (f1 c_1 c_3) c_3))))
(assert (= BAV107 (= (f1 c_1 (f1 c_3 c_4)) (f1 (f1 c_1 c_3) c_4))))
(assert (= BAV108 (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0))))
(assert (= BAV109 (= (f1 c_1 (f1 c_4 c_1)) (f1 (f1 c_1 c_4) c_1))))
(assert (= BAV110 (= (f1 c_1 (f1 c_4 c_2)) (f1 (f1 c_1 c_4) c_2))))
(assert (= BAV111 (= (f1 c_1 (f1 c_4 c_3)) (f1 (f1 c_1 c_4) c_3))))
(assert (= BAV112 (= (f1 c_1 (f1 c_4 c_4)) (f1 (f1 c_1 c_4) c_4))))
(assert (= BAV113 (= (f1 c_2 (f1 c_0 c_0)) (f1 (f1 c_2 c_0) c_0))))
(assert (= BAV114 (= (f1 c_2 (f1 c_0 c_1)) (f1 (f1 c_2 c_0) c_1))))
(assert (= BAV115 (= (f1 c_2 (f1 c_0 c_2)) (f1 (f1 c_2 c_0) c_2))))
(assert (= BAV116 (= (f1 c_2 (f1 c_0 c_3)) (f1 (f1 c_2 c_0) c_3))))
(assert (= BAV117 (= (f1 c_2 (f1 c_0 c_4)) (f1 (f1 c_2 c_0) c_4))))
(assert (= BAV118 (= (f1 c_2 (f1 c_1 c_0)) (f1 (f1 c_2 c_1) c_0))))
(assert (= BAV119 (= (f1 c_2 (f1 c_1 c_1)) (f1 (f1 c_2 c_1) c_1))))
(assert (= BAV120 (= (f1 c_2 (f1 c_1 c_2)) (f1 (f1 c_2 c_1) c_2))))
(assert (= BAV121 (= (f1 c_2 (f1 c_1 c_3)) (f1 (f1 c_2 c_1) c_3))))
(assert (= BAV122 (= (f1 c_2 (f1 c_1 c_4)) (f1 (f1 c_2 c_1) c_4))))
(assert (= BAV123 (= (f1 c_2 (f1 c_2 c_0)) (f1 (f1 c_2 c_2) c_0))))
(assert (= BAV124 (= (f1 c_2 (f1 c_2 c_1)) (f1 (f1 c_2 c_2) c_1))))
(assert (= BAV125 (= (f1 c_2 (f1 c_2 c_2)) (f1 (f1 c_2 c_2) c_2))))
(assert (= BAV126 (= (f1 c_2 (f1 c_2 c_3)) (f1 (f1 c_2 c_2) c_3))))
(assert (= BAV127 (= (f1 c_2 (f1 c_2 c_4)) (f1 (f1 c_2 c_2) c_4))))
(assert (= BAV128 (= (f1 c_2 (f1 c_3 c_0)) (f1 (f1 c_2 c_3) c_0))))
(assert (= BAV129 (= (f1 c_2 (f1 c_3 c_1)) (f1 (f1 c_2 c_3) c_1))))
(assert (= BAV130 (= (f1 c_2 (f1 c_3 c_2)) (f1 (f1 c_2 c_3) c_2))))
(assert (= BAV131 (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3))))
(assert (= BAV132 (= (f1 c_2 (f1 c_3 c_4)) (f1 (f1 c_2 c_3) c_4))))
(assert (= BAV133 (= (f1 c_2 (f1 c_4 c_0)) (f1 (f1 c_2 c_4) c_0))))
(assert (= BAV134 (= (f1 c_2 (f1 c_4 c_1)) (f1 (f1 c_2 c_4) c_1))))
(assert (= BAV135 (= (f1 c_2 (f1 c_4 c_2)) (f1 (f1 c_2 c_4) c_2))))
(assert (= BAV136 (= (f1 c_2 (f1 c_4 c_3)) (f1 (f1 c_2 c_4) c_3))))
(assert (= BAV137 (= (f1 c_2 (f1 c_4 c_4)) (f1 (f1 c_2 c_4) c_4))))
(assert (= BAV138 (= (f1 c_3 (f1 c_0 c_0)) (f1 (f1 c_3 c_0) c_0))))
(assert (= BAV139 (= (f1 c_3 (f1 c_0 c_1)) (f1 (f1 c_3 c_0) c_1))))
(assert (= BAV140 (= (f1 c_3 (f1 c_0 c_2)) (f1 (f1 c_3 c_0) c_2))))
(assert (= BAV141 (= (f1 c_3 (f1 c_0 c_3)) (f1 (f1 c_3 c_0) c_3))))
(assert (= BAV142 (= (f1 c_3 (f1 c_0 c_4)) (f1 (f1 c_3 c_0) c_4))))
(assert (= BAV143 (= (f1 c_3 (f1 c_1 c_0)) (f1 (f1 c_3 c_1) c_0))))
(assert (= BAV144 (= (f1 c_3 (f1 c_1 c_1)) (f1 (f1 c_3 c_1) c_1))))
(assert (= BAV145 (= (f1 c_3 (f1 c_1 c_2)) (f1 (f1 c_3 c_1) c_2))))
(assert (= BAV146 (= (f1 c_3 (f1 c_1 c_3)) (f1 (f1 c_3 c_1) c_3))))
(assert (= BAV147 (= (f1 c_3 (f1 c_1 c_4)) (f1 (f1 c_3 c_1) c_4))))
(assert (= BAV148 (= (f1 c_3 (f1 c_2 c_0)) (f1 (f1 c_3 c_2) c_0))))
(assert (= BAV149 (= (f1 c_3 (f1 c_2 c_1)) (f1 (f1 c_3 c_2) c_1))))
(assert (= BAV150 (= (f1 c_3 (f1 c_2 c_2)) (f1 (f1 c_3 c_2) c_2))))
(assert (= BAV151 (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3))))
(assert (= BAV152 (= (f1 c_3 (f1 c_2 c_4)) (f1 (f1 c_3 c_2) c_4))))
(assert (= BAV153 (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0))))
(assert (= BAV154 (= (f1 c_3 (f1 c_3 c_1)) (f1 (f1 c_3 c_3) c_1))))
(assert (= BAV155 (= (f1 c_3 (f1 c_3 c_2)) (f1 (f1 c_3 c_3) c_2))))
(assert (= BAV156 (= (f1 c_3 (f1 c_3 c_3)) (f1 (f1 c_3 c_3) c_3))))
(assert (= BAV157 (= (f1 c_3 (f1 c_3 c_4)) (f1 (f1 c_3 c_3) c_4))))
(assert (= BAV158 (= (f1 c_3 (f1 c_4 c_0)) (f1 (f1 c_3 c_4) c_0))))
(assert (= BAV159 (= (f1 c_3 (f1 c_4 c_1)) (f1 (f1 c_3 c_4) c_1))))
(assert (= BAV160 (= (f1 c_3 (f1 c_4 c_2)) (f1 (f1 c_3 c_4) c_2))))
(assert (= BAV161 (= (f1 c_3 (f1 c_4 c_3)) (f1 (f1 c_3 c_4) c_3))))
(assert (= BAV162 (= (f1 c_3 (f1 c_4 c_4)) (f1 (f1 c_3 c_4) c_4))))
(assert (= BAV163 (= (f1 c_4 (f1 c_0 c_0)) (f1 (f1 c_4 c_0) c_0))))
(assert (= BAV164 (= (f1 c_4 (f1 c_0 c_1)) (f1 (f1 c_4 c_0) c_1))))
(assert (= BAV165 (= (f1 c_4 (f1 c_0 c_2)) (f1 (f1 c_4 c_0) c_2))))
(assert (= BAV166 (= (f1 c_4 (f1 c_0 c_3)) (f1 (f1 c_4 c_0) c_3))))
(assert (= BAV167 (= (f1 c_4 (f1 c_0 c_4)) (f1 (f1 c_4 c_0) c_4))))
(assert (= BAV168 (= (f1 c_4 (f1 c_1 c_0)) (f1 (f1 c_4 c_1) c_0))))
(assert (= BAV169 (= (f1 c_4 (f1 c_1 c_1)) (f1 (f1 c_4 c_1) c_1))))
(assert (= BAV170 (= (f1 c_4 (f1 c_1 c_2)) (f1 (f1 c_4 c_1) c_2))))
(assert (= BAV171 (= (f1 c_4 (f1 c_1 c_3)) (f1 (f1 c_4 c_1) c_3))))
(assert (= BAV172 (= (f1 c_4 (f1 c_1 c_4)) (f1 (f1 c_4 c_1) c_4))))
(assert (= BAV173 (= (f1 c_4 (f1 c_2 c_0)) (f1 (f1 c_4 c_2) c_0))))
(assert (= BAV174 (= (f1 c_4 (f1 c_2 c_1)) (f1 (f1 c_4 c_2) c_1))))
(assert (= BAV175 (= (f1 c_4 (f1 c_2 c_2)) (f1 (f1 c_4 c_2) c_2))))
(assert (= BAV176 (= (f1 c_4 (f1 c_2 c_3)) (f1 (f1 c_4 c_2) c_3))))
(assert (= BAV177 (= (f1 c_4 (f1 c_2 c_4)) (f1 (f1 c_4 c_2) c_4))))
(assert (= BAV178 (= (f1 c_4 (f1 c_3 c_0)) (f1 (f1 c_4 c_3) c_0))))
(assert (= BAV179 (= (f1 c_4 (f1 c_3 c_1)) (f1 (f1 c_4 c_3) c_1))))
(assert (= BAV180 (= (f1 c_4 (f1 c_3 c_2)) (f1 (f1 c_4 c_3) c_2))))
(assert (= BAV181 (= (f1 c_4 (f1 c_3 c_3)) (f1 (f1 c_4 c_3) c_3))))
(assert (= BAV182 (= (f1 c_4 (f1 c_3 c_4)) (f1 (f1 c_4 c_3) c_4))))
(assert (= BAV183 (= (f1 c_4 (f1 c_4 c_0)) (f1 (f1 c_4 c_4) c_0))))
(assert (= BAV184 (= (f1 c_4 (f1 c_4 c_1)) (f1 (f1 c_4 c_4) c_1))))
(assert (= BAV185 (= (f1 c_4 (f1 c_4 c_2)) (f1 (f1 c_4 c_4) c_2))))
(assert (= BAV186 (= (f1 c_4 (f1 c_4 c_3)) (f1 (f1 c_4 c_4) c_3))))
(assert (= BAV187 (= (f1 c_4 (f1 c_4 c_4)) (f1 (f1 c_4 c_4) c_4))))
(assert (= BAV188 (or (p2 (f1 c_0 c_0)) (not (p3 c_0)) (not (p3 c_0)))))
(assert (= BAV189 (or (p2 (f1 c_0 c_1)) (not (p3 c_0)) (not (p3 c_1)))))
(assert (= BAV190 (or (p2 (f1 c_0 c_2)) (not (p3 c_0)) (not (p3 c_2)))))
(assert (= BAV191 (or (p2 (f1 c_0 c_3)) (not (p3 c_0)) (not (p3 c_3)))))
(assert (= BAV192 (or (p2 (f1 c_0 c_4)) (not (p3 c_0)) (not (p3 c_4)))))
(assert (= BAV193 (or (p2 (f1 c_1 c_0)) (not (p3 c_1)) (not (p3 c_0)))))
(assert (= BAV194 (or (p2 (f1 c_1 c_1)) (not (p3 c_1)) (not (p3 c_1)))))
(assert (= BAV195 (or (p2 (f1 c_1 c_2)) (not (p3 c_1)) (not (p3 c_2)))))
(assert (= BAV196 (or (p2 (f1 c_1 c_3)) (not (p3 c_1)) (not (p3 c_3)))))
(assert (= BAV197 (or (p2 (f1 c_1 c_4)) (not (p3 c_1)) (not (p3 c_4)))))
(assert (= BAV198 (or (p2 (f1 c_2 c_0)) (not (p3 c_2)) (not (p3 c_0)))))
(assert (= BAV199 (or (p2 (f1 c_2 c_1)) (not (p3 c_2)) (not (p3 c_1)))))
(assert (= BAV200 (or (p2 (f1 c_2 c_2)) (not (p3 c_2)) (not (p3 c_2)))))
(assert (= BAV201 (or (p2 (f1 c_2 c_3)) (not (p3 c_2)) (not (p3 c_3)))))
(assert (= BAV202 (or (p2 (f1 c_2 c_4)) (not (p3 c_2)) (not (p3 c_4)))))
(assert (= BAV203 (or (p2 (f1 c_3 c_0)) (not (p3 c_3)) (not (p3 c_0)))))
(assert (= BAV204 (or (p2 (f1 c_3 c_1)) (not (p3 c_3)) (not (p3 c_1)))))
(assert (= BAV205 (or (p2 (f1 c_3 c_2)) (not (p3 c_3)) (not (p3 c_2)))))
(assert (= BAV206 (or (p2 (f1 c_3 c_3)) (not (p3 c_3)) (not (p3 c_3)))))
(assert (= BAV207 (or (p2 (f1 c_3 c_4)) (not (p3 c_3)) (not (p3 c_4)))))
(assert (= BAV208 (or (p2 (f1 c_4 c_0)) (not (p3 c_4)) (not (p3 c_0)))))
(assert (= BAV209 (or (p2 (f1 c_4 c_1)) (not (p3 c_4)) (not (p3 c_1)))))
(assert (= BAV210 (or (p2 (f1 c_4 c_2)) (not (p3 c_4)) (not (p3 c_2)))))
(assert (= BAV211 (or (p2 (f1 c_4 c_3)) (not (p3 c_4)) (not (p3 c_3)))))
(assert (= BAV212 (or (p2 (f1 c_4 c_4)) (not (p3 c_4)) (not (p3 c_4)))))
(assert (= BAV213 (or (not (p4 c_0)) (not (p2 c_0)))))
(assert (= BAV214 (or (not (p4 c_1)) (not (p2 c_1)))))
(assert (= BAV215 (or (not (p4 c_2)) (not (p2 c_2)))))
(assert (= BAV216 (or (not (p4 c_3)) (not (p2 c_3)))))
(assert (= BAV217 (or (not (p4 c_4)) (not (p2 c_4)))))
(assert (= BAV218 (or (not (p3 c_0)) (not (p4 c_0)))))
(assert (= BAV219 (or (not (p3 c_1)) (not (p4 c_1)))))
(assert (= BAV220 (or (not (p3 c_2)) (not (p4 c_2)))))
(assert (= BAV221 (or (not (p3 c_3)) (not (p4 c_3)))))
(assert (= BAV222 (or (not (p3 c_4)) (not (p4 c_4)))))
(assert (= BAV223 (or (= (f1 c_0 c_0) c_0) (= (f1 c_0 c_0) c_1) (= (f1 c_0 c_0) c_2) (= (f1 c_0 c_0) c_3) (= (f1 c_0 c_0) c_4))))
(assert (= BAV224 (= (f1 c_0 c_0) c_0)))
(assert (= BAV225 (= (f1 c_0 c_0) c_1)))
(assert (= BAV226 (= (f1 c_0 c_0) c_2)))
(assert (= BAV227 (= (f1 c_0 c_0) c_3)))
(assert (= BAV228 (= (f1 c_0 c_0) c_4)))
(assert (= BAV229 (or (= (f1 c_0 c_1) c_0) (= (f1 c_0 c_1) c_1) (= (f1 c_0 c_1) c_2) (= (f1 c_0 c_1) c_3) (= (f1 c_0 c_1) c_4))))
(assert (= BAV230 (= (f1 c_0 c_1) c_0)))
(assert (= BAV231 (= (f1 c_0 c_1) c_1)))
(assert (= BAV232 (= (f1 c_0 c_1) c_2)))
(assert (= BAV233 (= (f1 c_0 c_1) c_3)))
(assert (= BAV234 (= (f1 c_0 c_1) c_4)))
(assert (= BAV235 (or (= (f1 c_0 c_2) c_0) (= (f1 c_0 c_2) c_1) (= (f1 c_0 c_2) c_2) (= (f1 c_0 c_2) c_3) (= (f1 c_0 c_2) c_4))))
(assert (= BAV236 (= (f1 c_0 c_2) c_0)))
(assert (= BAV237 (= (f1 c_0 c_2) c_1)))
(assert (= BAV238 (= (f1 c_0 c_2) c_2)))
(assert (= BAV239 (= (f1 c_0 c_2) c_3)))
(assert (= BAV240 (= (f1 c_0 c_2) c_4)))
(assert (= BAV241 (or (= (f1 c_0 c_3) c_0) (= (f1 c_0 c_3) c_1) (= (f1 c_0 c_3) c_2) (= (f1 c_0 c_3) c_3) (= (f1 c_0 c_3) c_4))))
(assert (= BAV242 (= (f1 c_0 c_3) c_0)))
(assert (= BAV243 (= (f1 c_0 c_3) c_1)))
(assert (= BAV244 (= (f1 c_0 c_3) c_2)))
(assert (= BAV245 (= (f1 c_0 c_3) c_3)))
(assert (= BAV246 (= (f1 c_0 c_3) c_4)))
(assert (= BAV247 (or (= (f1 c_0 c_4) c_0) (= (f1 c_0 c_4) c_1) (= (f1 c_0 c_4) c_2) (= (f1 c_0 c_4) c_3) (= (f1 c_0 c_4) c_4))))
(assert (= BAV248 (= (f1 c_0 c_4) c_0)))
(assert (= BAV249 (= (f1 c_0 c_4) c_1)))
(assert (= BAV250 (= (f1 c_0 c_4) c_2)))
(assert (= BAV251 (= (f1 c_0 c_4) c_3)))
(assert (= BAV252 (= (f1 c_0 c_4) c_4)))
(assert (= BAV253 (or (= (f1 c_1 c_0) c_0) (= (f1 c_1 c_0) c_1) (= (f1 c_1 c_0) c_2) (= (f1 c_1 c_0) c_3) (= (f1 c_1 c_0) c_4))))
(assert (= BAV254 (= (f1 c_1 c_0) c_0)))
(assert (= BAV255 (= (f1 c_1 c_0) c_1)))
(assert (= BAV256 (= (f1 c_1 c_0) c_2)))
(assert (= BAV257 (= (f1 c_1 c_0) c_3)))
(assert (= BAV258 (= (f1 c_1 c_0) c_4)))
(assert (= BAV259 (or (= (f1 c_1 c_1) c_0) (= (f1 c_1 c_1) c_1) (= (f1 c_1 c_1) c_2) (= (f1 c_1 c_1) c_3) (= (f1 c_1 c_1) c_4))))
(assert (= BAV260 (= (f1 c_1 c_1) c_0)))
(assert (= BAV261 (= (f1 c_1 c_1) c_1)))
(assert (= BAV262 (= (f1 c_1 c_1) c_2)))
(assert (= BAV263 (= (f1 c_1 c_1) c_3)))
(assert (= BAV264 (= (f1 c_1 c_1) c_4)))
(assert (= BAV265 (or (= (f1 c_1 c_2) c_0) (= (f1 c_1 c_2) c_1) (= (f1 c_1 c_2) c_2) (= (f1 c_1 c_2) c_3) (= (f1 c_1 c_2) c_4))))
(assert (= BAV266 (= (f1 c_1 c_2) c_0)))
(assert (= BAV267 (= (f1 c_1 c_2) c_1)))
(assert (= BAV268 (= (f1 c_1 c_2) c_2)))
(assert (= BAV269 (= (f1 c_1 c_2) c_3)))
(assert (= BAV270 (= (f1 c_1 c_2) c_4)))
(assert (= BAV271 (or (= (f1 c_1 c_3) c_0) (= (f1 c_1 c_3) c_1) (= (f1 c_1 c_3) c_2) (= (f1 c_1 c_3) c_3) (= (f1 c_1 c_3) c_4))))
(assert (= BAV272 (= (f1 c_1 c_3) c_0)))
(assert (= BAV273 (= (f1 c_1 c_3) c_1)))
(assert (= BAV274 (= (f1 c_1 c_3) c_2)))
(assert (= BAV275 (= (f1 c_1 c_3) c_3)))
(assert (= BAV276 (= (f1 c_1 c_3) c_4)))
(assert (= BAV277 (or (= (f1 c_1 c_4) c_0) (= (f1 c_1 c_4) c_1) (= (f1 c_1 c_4) c_2) (= (f1 c_1 c_4) c_3) (= (f1 c_1 c_4) c_4))))
(assert (= BAV278 (= (f1 c_1 c_4) c_0)))
(assert (= BAV279 (= (f1 c_1 c_4) c_1)))
(assert (= BAV280 (= (f1 c_1 c_4) c_2)))
(assert (= BAV281 (= (f1 c_1 c_4) c_3)))
(assert (= BAV282 (= (f1 c_1 c_4) c_4)))
(assert (= BAV283 (or (= (f1 c_2 c_0) c_0) (= (f1 c_2 c_0) c_1) (= (f1 c_2 c_0) c_2) (= (f1 c_2 c_0) c_3) (= (f1 c_2 c_0) c_4))))
(assert (= BAV284 (= (f1 c_2 c_0) c_0)))
(assert (= BAV285 (= (f1 c_2 c_0) c_1)))
(assert (= BAV286 (= (f1 c_2 c_0) c_2)))
(assert (= BAV287 (= (f1 c_2 c_0) c_3)))
(assert (= BAV288 (= (f1 c_2 c_0) c_4)))
(assert (= BAV289 (or (= (f1 c_2 c_1) c_0) (= (f1 c_2 c_1) c_1) (= (f1 c_2 c_1) c_2) (= (f1 c_2 c_1) c_3) (= (f1 c_2 c_1) c_4))))
(assert (= BAV290 (= (f1 c_2 c_1) c_0)))
(assert (= BAV291 (= (f1 c_2 c_1) c_1)))
(assert (= BAV292 (= (f1 c_2 c_1) c_2)))
(assert (= BAV293 (= (f1 c_2 c_1) c_3)))
(assert (= BAV294 (= (f1 c_2 c_1) c_4)))
(assert (= BAV295 (or (= (f1 c_2 c_2) c_0) (= (f1 c_2 c_2) c_1) (= (f1 c_2 c_2) c_2) (= (f1 c_2 c_2) c_3) (= (f1 c_2 c_2) c_4))))
(assert (= BAV296 (= (f1 c_2 c_2) c_0)))
(assert (= BAV297 (= (f1 c_2 c_2) c_1)))
(assert (= BAV298 (= (f1 c_2 c_2) c_2)))
(assert (= BAV299 (= (f1 c_2 c_2) c_3)))
(assert (= BAV300 (= (f1 c_2 c_2) c_4)))
(assert (= BAV301 (or (= (f1 c_2 c_3) c_0) (= (f1 c_2 c_3) c_1) (= (f1 c_2 c_3) c_2) (= (f1 c_2 c_3) c_3) (= (f1 c_2 c_3) c_4))))
(assert (= BAV302 (= (f1 c_2 c_3) c_0)))
(assert (= BAV303 (= (f1 c_2 c_3) c_1)))
(assert (= BAV304 (= (f1 c_2 c_3) c_2)))
(assert (= BAV305 (= (f1 c_2 c_3) c_3)))
(assert (= BAV306 (= (f1 c_2 c_3) c_4)))
(assert (= BAV307 (or (= (f1 c_2 c_4) c_0) (= (f1 c_2 c_4) c_1) (= (f1 c_2 c_4) c_2) (= (f1 c_2 c_4) c_3) (= (f1 c_2 c_4) c_4))))
(assert (= BAV308 (= (f1 c_2 c_4) c_0)))
(assert (= BAV309 (= (f1 c_2 c_4) c_1)))
(assert (= BAV310 (= (f1 c_2 c_4) c_2)))
(assert (= BAV311 (= (f1 c_2 c_4) c_3)))
(assert (= BAV312 (= (f1 c_2 c_4) c_4)))
(assert (= BAV313 (or (= (f1 c_3 c_0) c_0) (= (f1 c_3 c_0) c_1) (= (f1 c_3 c_0) c_2) (= (f1 c_3 c_0) c_3) (= (f1 c_3 c_0) c_4))))
(assert (= BAV314 (= (f1 c_3 c_0) c_0)))
(assert (= BAV315 (= (f1 c_3 c_0) c_1)))
(assert (= BAV316 (= (f1 c_3 c_0) c_2)))
(assert (= BAV317 (= (f1 c_3 c_0) c_3)))
(assert (= BAV318 (= (f1 c_3 c_0) c_4)))
(assert (= BAV319 (or (= (f1 c_3 c_1) c_0) (= (f1 c_3 c_1) c_1) (= (f1 c_3 c_1) c_2) (= (f1 c_3 c_1) c_3) (= (f1 c_3 c_1) c_4))))
(assert (= BAV320 (= (f1 c_3 c_1) c_0)))
(assert (= BAV321 (= (f1 c_3 c_1) c_1)))
(assert (= BAV322 (= (f1 c_3 c_1) c_2)))
(assert (= BAV323 (= (f1 c_3 c_1) c_3)))
(assert (= BAV324 (= (f1 c_3 c_1) c_4)))
(assert (= BAV325 (or (= (f1 c_3 c_2) c_0) (= (f1 c_3 c_2) c_1) (= (f1 c_3 c_2) c_2) (= (f1 c_3 c_2) c_3) (= (f1 c_3 c_2) c_4))))
(assert (= BAV326 (= (f1 c_3 c_2) c_0)))
(assert (= BAV327 (= (f1 c_3 c_2) c_1)))
(assert (= BAV328 (= (f1 c_3 c_2) c_2)))
(assert (= BAV329 (= (f1 c_3 c_2) c_3)))
(assert (= BAV330 (= (f1 c_3 c_2) c_4)))
(assert (= BAV331 (or (= (f1 c_3 c_3) c_0) (= (f1 c_3 c_3) c_1) (= (f1 c_3 c_3) c_2) (= (f1 c_3 c_3) c_3) (= (f1 c_3 c_3) c_4))))
(assert (= BAV332 (= (f1 c_3 c_3) c_0)))
(assert (= BAV333 (= (f1 c_3 c_3) c_1)))
(assert (= BAV334 (= (f1 c_3 c_3) c_2)))
(assert (= BAV335 (= (f1 c_3 c_3) c_3)))
(assert (= BAV336 (= (f1 c_3 c_3) c_4)))
(assert (= BAV337 (or (= (f1 c_3 c_4) c_0) (= (f1 c_3 c_4) c_1) (= (f1 c_3 c_4) c_2) (= (f1 c_3 c_4) c_3) (= (f1 c_3 c_4) c_4))))
(assert (= BAV338 (= (f1 c_3 c_4) c_0)))
(assert (= BAV339 (= (f1 c_3 c_4) c_1)))
(assert (= BAV340 (= (f1 c_3 c_4) c_2)))
(assert (= BAV341 (= (f1 c_3 c_4) c_3)))
(assert (= BAV342 (= (f1 c_3 c_4) c_4)))
(assert (= BAV343 (or (= (f1 c_4 c_0) c_0) (= (f1 c_4 c_0) c_1) (= (f1 c_4 c_0) c_2) (= (f1 c_4 c_0) c_3) (= (f1 c_4 c_0) c_4))))
(assert (= BAV344 (= (f1 c_4 c_0) c_0)))
(assert (= BAV345 (= (f1 c_4 c_0) c_1)))
(assert (= BAV346 (= (f1 c_4 c_0) c_2)))
(assert (= BAV347 (= (f1 c_4 c_0) c_3)))
(assert (= BAV348 (= (f1 c_4 c_0) c_4)))
(assert (= BAV349 (or (= (f1 c_4 c_1) c_0) (= (f1 c_4 c_1) c_1) (= (f1 c_4 c_1) c_2) (= (f1 c_4 c_1) c_3) (= (f1 c_4 c_1) c_4))))
(assert (= BAV350 (= (f1 c_4 c_1) c_0)))
(assert (= BAV351 (= (f1 c_4 c_1) c_1)))
(assert (= BAV352 (= (f1 c_4 c_1) c_2)))
(assert (= BAV353 (= (f1 c_4 c_1) c_3)))
(assert (= BAV354 (= (f1 c_4 c_1) c_4)))
(assert (= BAV355 (or (= (f1 c_4 c_2) c_0) (= (f1 c_4 c_2) c_1) (= (f1 c_4 c_2) c_2) (= (f1 c_4 c_2) c_3) (= (f1 c_4 c_2) c_4))))
(assert (= BAV356 (= (f1 c_4 c_2) c_0)))
(assert (= BAV357 (= (f1 c_4 c_2) c_1)))
(assert (= BAV358 (= (f1 c_4 c_2) c_2)))
(assert (= BAV359 (= (f1 c_4 c_2) c_3)))
(assert (= BAV360 (= (f1 c_4 c_2) c_4)))
(assert (= BAV361 (or (= (f1 c_4 c_3) c_0) (= (f1 c_4 c_3) c_1) (= (f1 c_4 c_3) c_2) (= (f1 c_4 c_3) c_3) (= (f1 c_4 c_3) c_4))))
(assert (= BAV362 (= (f1 c_4 c_3) c_0)))
(assert (= BAV363 (= (f1 c_4 c_3) c_1)))
(assert (= BAV364 (= (f1 c_4 c_3) c_2)))
(assert (= BAV365 (= (f1 c_4 c_3) c_3)))
(assert (= BAV366 (= (f1 c_4 c_3) c_4)))
(assert (= BAV367 (or (= (f1 c_4 c_4) c_0) (= (f1 c_4 c_4) c_1) (= (f1 c_4 c_4) c_2) (= (f1 c_4 c_4) c_3) (= (f1 c_4 c_4) c_4))))
(assert (= BAV368 (= (f1 c_4 c_4) c_0)))
(assert (= BAV369 (= (f1 c_4 c_4) c_1)))
(assert (= BAV370 (= (f1 c_4 c_4) c_2)))
(assert (= BAV371 (= (f1 c_4 c_4) c_3)))
(assert (= BAV372 (= (f1 c_4 c_4) c_4)))
(assert (= BAV373 (or (= c6 c_0) (= c6 c_1) (= c6 c_2) (= c6 c_3) (= c6 c_4))))
(assert (= BAV374 (= c6 c_0)))
(assert (= BAV375 (= c6 c_1)))
(assert (= BAV376 (= c6 c_2)))
(assert (= BAV377 (= c6 c_3)))
(assert (= BAV378 (= c6 c_4)))
(assert (= BAV379 (or (= c5 c_0) (= c5 c_1) (= c5 c_2) (= c5 c_3) (= c5 c_4))))
(assert (= BAV380 (= c5 c_0)))
(assert (= BAV381 (= c5 c_1)))
(assert (= BAV382 (= c5 c_2)))
(assert (= BAV383 (= c5 c_3)))
(assert (= BAV384 (= c5 c_4)))
(assert (= BAV385 (or (= c7 c_0) (= c7 c_1) (= c7 c_2) (= c7 c_3) (= c7 c_4))))
(assert (= BAV386 (= c7 c_0)))
(assert (= BAV387 (= c7 c_1)))
(assert (= BAV388 (= c7 c_2)))
(assert (= BAV389 (= c7 c_3)))
(assert (= BAV390 (= c7 c_4)))
(check-sat-assuming ((and (distinct c_0 c_1 c_2 c_3 c_4) (or (not (p2 c_0)) (not (p2 c_0)) (p4 (f1 c_0 c_0)) (p3 (f1 c_0 c_0))) (or (not (p2 c_0)) (not (p2 c_1)) (p4 (f1 c_1 c_0)) (p3 (f1 c_1 c_0))) (or (not (p2 c_0)) (not (p2 c_2)) (p4 (f1 c_2 c_0)) (p3 (f1 c_2 c_0))) (or (not (p2 c_0)) (not (p2 c_3)) (p4 (f1 c_3 c_0)) (p3 (f1 c_3 c_0))) (or (not (p2 c_0)) (not (p2 c_4)) (p4 (f1 c_4 c_0)) (p3 (f1 c_4 c_0))) (or (not (p2 c_1)) (not (p2 c_0)) (p4 (f1 c_0 c_1)) (p3 (f1 c_0 c_1))) (or (not (p2 c_1)) (not (p2 c_1)) (p4 (f1 c_1 c_1)) (p3 (f1 c_1 c_1))) (or (not (p2 c_1)) (not (p2 c_2)) (p4 (f1 c_2 c_1)) (p3 (f1 c_2 c_1))) (or (not (p2 c_1)) (not (p2 c_3)) (p4 (f1 c_3 c_1)) (p3 (f1 c_3 c_1))) (or (not (p2 c_1)) (not (p2 c_4)) (p4 (f1 c_4 c_1)) (p3 (f1 c_4 c_1))) (or (not (p2 c_2)) (not (p2 c_0)) (p4 (f1 c_0 c_2)) (p3 (f1 c_0 c_2))) (or (not (p2 c_2)) (not (p2 c_1)) (p4 (f1 c_1 c_2)) (p3 (f1 c_1 c_2))) (or (not (p2 c_2)) (not (p2 c_2)) (p4 (f1 c_2 c_2)) (p3 (f1 c_2 c_2))) (or (not (p2 c_2)) (not (p2 c_3)) (p4 (f1 c_3 c_2)) (p3 (f1 c_3 c_2))) (or (not (p2 c_2)) (not (p2 c_4)) (p4 (f1 c_4 c_2)) (p3 (f1 c_4 c_2))) (or (not (p2 c_3)) (not (p2 c_0)) (p4 (f1 c_0 c_3)) (p3 (f1 c_0 c_3))) (or (not (p2 c_3)) (not (p2 c_1)) (p4 (f1 c_1 c_3)) (p3 (f1 c_1 c_3))) (or (not (p2 c_3)) (not (p2 c_2)) (p4 (f1 c_2 c_3)) (p3 (f1 c_2 c_3))) (or (not (p2 c_3)) (not (p2 c_3)) (p4 (f1 c_3 c_3)) (p3 (f1 c_3 c_3))) (or (not (p2 c_3)) (not (p2 c_4)) (p4 (f1 c_4 c_3)) (p3 (f1 c_4 c_3))) (or (not (p2 c_4)) (not (p2 c_0)) (p4 (f1 c_0 c_4)) (p3 (f1 c_0 c_4))) (or (not (p2 c_4)) (not (p2 c_1)) (p4 (f1 c_1 c_4)) (p3 (f1 c_1 c_4))) (or (not (p2 c_4)) (not (p2 c_2)) (p4 (f1 c_2 c_4)) (p3 (f1 c_2 c_4))) (or (not (p2 c_4)) (not (p2 c_3)) (p4 (f1 c_3 c_4)) (p3 (f1 c_3 c_4))) (or (not (p2 c_4)) (not (p2 c_4)) (p4 (f1 c_4 c_4)) (p3 (f1 c_4 c_4))) (or (not (p2 c_0)) (not (p3 c_0))) (or (not (p2 c_1)) (not (p3 c_1))) (or (not (p2 c_2)) (not (p3 c_2))) (or (not (p2 c_3)) (not (p3 c_3))) (or (not (p2 c_4)) (not (p3 c_4))) (or (p4 c_0) (p3 c_0) (p2 c_0)) (or (p4 c_1) (p3 c_1) (p2 c_1)) (or (p4 c_2) (p3 c_2) (p2 c_2)) (or (p4 c_3) (p3 c_3) (p2 c_3)) (or (p4 c_4) (p3 c_4) (p2 c_4)) (p3 c6) (p2 c5) (or (not (p4 c_0)) (not (p4 c_0)) (p2 (f1 c_0 c_0))) (or (not (p4 c_0)) (not (p4 c_1)) (p2 (f1 c_1 c_0))) (or (not (p4 c_0)) (not (p4 c_2)) (p2 (f1 c_2 c_0))) (or (not (p4 c_0)) (not (p4 c_3)) (p2 (f1 c_3 c_0))) (or (not (p4 c_0)) (not (p4 c_4)) (p2 (f1 c_4 c_0))) (or (not (p4 c_1)) (not (p4 c_0)) (p2 (f1 c_0 c_1))) (or (not (p4 c_1)) (not (p4 c_1)) (p2 (f1 c_1 c_1))) (or (not (p4 c_1)) (not (p4 c_2)) (p2 (f1 c_2 c_1))) (or (not (p4 c_1)) (not (p4 c_3)) (p2 (f1 c_3 c_1))) (or (not (p4 c_1)) (not (p4 c_4)) (p2 (f1 c_4 c_1))) (or (not (p4 c_2)) (not (p4 c_0)) (p2 (f1 c_0 c_2))) (or (not (p4 c_2)) (not (p4 c_1)) (p2 (f1 c_1 c_2))) (or (not (p4 c_2)) (not (p4 c_2)) (p2 (f1 c_2 c_2))) (or (not (p4 c_2)) (not (p4 c_3)) (p2 (f1 c_3 c_2))) (or (not (p4 c_2)) (not (p4 c_4)) (p2 (f1 c_4 c_2))) (or (not (p4 c_3)) (not (p4 c_0)) (p2 (f1 c_0 c_3))) (or (not (p4 c_3)) (not (p4 c_1)) (p2 (f1 c_1 c_3))) (or (not (p4 c_3)) (not (p4 c_2)) (p2 (f1 c_2 c_3))) (or (not (p4 c_3)) (not (p4 c_3)) (p2 (f1 c_3 c_3))) (or (not (p4 c_3)) (not (p4 c_4)) (p2 (f1 c_4 c_3))) (or (not (p4 c_4)) (not (p4 c_0)) (p2 (f1 c_0 c_4))) (or (not (p4 c_4)) (not (p4 c_1)) (p2 (f1 c_1 c_4))) (or (not (p4 c_4)) (not (p4 c_2)) (p2 (f1 c_2 c_4))) (or (not (p4 c_4)) (not (p4 c_3)) (p2 (f1 c_3 c_4))) (or (not (p4 c_4)) (not (p4 c_4)) (p2 (f1 c_4 c_4))) (= (f1 c_0 (f1 c_0 c_0)) (f1 (f1 c_0 c_0) c_0)) (= (f1 c_0 (f1 c_0 c_1)) (f1 (f1 c_0 c_0) c_1)) (= (f1 c_0 (f1 c_0 c_2)) (f1 (f1 c_0 c_0) c_2)) (= (f1 c_0 (f1 c_0 c_3)) (f1 (f1 c_0 c_0) c_3)) (= (f1 c_0 (f1 c_0 c_4)) (f1 (f1 c_0 c_0) c_4)) (= (f1 c_0 (f1 c_1 c_0)) (f1 (f1 c_0 c_1) c_0)) (= (f1 c_0 (f1 c_1 c_1)) (f1 (f1 c_0 c_1) c_1)) (= (f1 c_0 (f1 c_1 c_2)) (f1 (f1 c_0 c_1) c_2)) (= (f1 c_0 (f1 c_1 c_3)) (f1 (f1 c_0 c_1) c_3)) (= (f1 c_0 (f1 c_1 c_4)) (f1 (f1 c_0 c_1) c_4)) (= (f1 c_0 (f1 c_2 c_0)) (f1 (f1 c_0 c_2) c_0)) (= (f1 c_0 (f1 c_2 c_1)) (f1 (f1 c_0 c_2) c_1)) (= (f1 c_0 (f1 c_2 c_2)) (f1 (f1 c_0 c_2) c_2)) (= (f1 c_0 (f1 c_2 c_3)) (f1 (f1 c_0 c_2) c_3)) (= (f1 c_0 (f1 c_2 c_4)) (f1 (f1 c_0 c_2) c_4)) (= (f1 c_0 (f1 c_3 c_0)) (f1 (f1 c_0 c_3) c_0)) (= (f1 c_0 (f1 c_3 c_1)) (f1 (f1 c_0 c_3) c_1)) (= (f1 c_0 (f1 c_3 c_2)) (f1 (f1 c_0 c_3) c_2)) (= (f1 c_0 (f1 c_3 c_3)) (f1 (f1 c_0 c_3) c_3)) (= (f1 c_0 (f1 c_3 c_4)) (f1 (f1 c_0 c_3) c_4)) (= (f1 c_0 (f1 c_4 c_0)) (f1 (f1 c_0 c_4) c_0)) (= (f1 c_0 (f1 c_4 c_1)) (f1 (f1 c_0 c_4) c_1)) (= (f1 c_0 (f1 c_4 c_2)) (f1 (f1 c_0 c_4) c_2)) (= (f1 c_0 (f1 c_4 c_3)) (f1 (f1 c_0 c_4) c_3)) (= (f1 c_0 (f1 c_4 c_4)) (f1 (f1 c_0 c_4) c_4)) (= (f1 c_1 (f1 c_0 c_0)) (f1 (f1 c_1 c_0) c_0)) (= (f1 c_1 (f1 c_0 c_1)) (f1 (f1 c_1 c_0) c_1)) (= (f1 c_1 (f1 c_0 c_2)) (f1 (f1 c_1 c_0) c_2)) (= (f1 c_1 (f1 c_0 c_3)) (f1 (f1 c_1 c_0) c_3)) (= (f1 c_1 (f1 c_0 c_4)) (f1 (f1 c_1 c_0) c_4)) (= (f1 c_1 (f1 c_1 c_0)) (f1 (f1 c_1 c_1) c_0)) (= (f1 c_1 (f1 c_1 c_1)) (f1 (f1 c_1 c_1) c_1)) (= (f1 c_1 (f1 c_1 c_2)) (f1 (f1 c_1 c_1) c_2)) (= (f1 c_1 (f1 c_1 c_3)) (f1 (f1 c_1 c_1) c_3)) (= (f1 c_1 (f1 c_1 c_4)) (f1 (f1 c_1 c_1) c_4)) (= (f1 c_1 (f1 c_2 c_0)) (f1 (f1 c_1 c_2) c_0)) (= (f1 c_1 (f1 c_2 c_1)) (f1 (f1 c_1 c_2) c_1)) (= (f1 c_1 (f1 c_2 c_2)) (f1 (f1 c_1 c_2) c_2)) (= (f1 c_1 (f1 c_2 c_3)) (f1 (f1 c_1 c_2) c_3)) (= (f1 c_1 (f1 c_2 c_4)) (f1 (f1 c_1 c_2) c_4)) (= (f1 c_1 (f1 c_3 c_0)) (f1 (f1 c_1 c_3) c_0)) (= (f1 c_1 (f1 c_3 c_1)) (f1 (f1 c_1 c_3) c_1)) (= (f1 c_1 (f1 c_3 c_2)) (f1 (f1 c_1 c_3) c_2)) (= (f1 c_1 (f1 c_3 c_3)) (f1 (f1 c_1 c_3) c_3)) (= (f1 c_1 (f1 c_3 c_4)) (f1 (f1 c_1 c_3) c_4)) (= (f1 c_1 (f1 c_4 c_0)) (f1 (f1 c_1 c_4) c_0)) (= (f1 c_1 (f1 c_4 c_1)) (f1 (f1 c_1 c_4) c_1)) (= (f1 c_1 (f1 c_4 c_2)) (f1 (f1 c_1 c_4) c_2)) (= (f1 c_1 (f1 c_4 c_3)) (f1 (f1 c_1 c_4) c_3)) (= (f1 c_1 (f1 c_4 c_4)) (f1 (f1 c_1 c_4) c_4)) (= (f1 c_2 (f1 c_0 c_0)) (f1 (f1 c_2 c_0) c_0)) (= (f1 c_2 (f1 c_0 c_1)) (f1 (f1 c_2 c_0) c_1)) (= (f1 c_2 (f1 c_0 c_2)) (f1 (f1 c_2 c_0) c_2)) (= (f1 c_2 (f1 c_0 c_3)) (f1 (f1 c_2 c_0) c_3)) (= (f1 c_2 (f1 c_0 c_4)) (f1 (f1 c_2 c_0) c_4)) (= (f1 c_2 (f1 c_1 c_0)) (f1 (f1 c_2 c_1) c_0)) (= (f1 c_2 (f1 c_1 c_1)) (f1 (f1 c_2 c_1) c_1)) (= (f1 c_2 (f1 c_1 c_2)) (f1 (f1 c_2 c_1) c_2)) (= (f1 c_2 (f1 c_1 c_3)) (f1 (f1 c_2 c_1) c_3)) (= (f1 c_2 (f1 c_1 c_4)) (f1 (f1 c_2 c_1) c_4)) (= (f1 c_2 (f1 c_2 c_0)) (f1 (f1 c_2 c_2) c_0)) (= (f1 c_2 (f1 c_2 c_1)) (f1 (f1 c_2 c_2) c_1)) (= (f1 c_2 (f1 c_2 c_2)) (f1 (f1 c_2 c_2) c_2)) (= (f1 c_2 (f1 c_2 c_3)) (f1 (f1 c_2 c_2) c_3)) (= (f1 c_2 (f1 c_2 c_4)) (f1 (f1 c_2 c_2) c_4)) (= (f1 c_2 (f1 c_3 c_0)) (f1 (f1 c_2 c_3) c_0)) (= (f1 c_2 (f1 c_3 c_1)) (f1 (f1 c_2 c_3) c_1)) (= (f1 c_2 (f1 c_3 c_2)) (f1 (f1 c_2 c_3) c_2)) (= (f1 c_2 (f1 c_3 c_3)) (f1 (f1 c_2 c_3) c_3)) (= (f1 c_2 (f1 c_3 c_4)) (f1 (f1 c_2 c_3) c_4)) (= (f1 c_2 (f1 c_4 c_0)) (f1 (f1 c_2 c_4) c_0)) (= (f1 c_2 (f1 c_4 c_1)) (f1 (f1 c_2 c_4) c_1)) (= (f1 c_2 (f1 c_4 c_2)) (f1 (f1 c_2 c_4) c_2)) (= (f1 c_2 (f1 c_4 c_3)) (f1 (f1 c_2 c_4) c_3)) (= (f1 c_2 (f1 c_4 c_4)) (f1 (f1 c_2 c_4) c_4)) (= (f1 c_3 (f1 c_0 c_0)) (f1 (f1 c_3 c_0) c_0)) (= (f1 c_3 (f1 c_0 c_1)) (f1 (f1 c_3 c_0) c_1)) (= (f1 c_3 (f1 c_0 c_2)) (f1 (f1 c_3 c_0) c_2)) (= (f1 c_3 (f1 c_0 c_3)) (f1 (f1 c_3 c_0) c_3)) (= (f1 c_3 (f1 c_0 c_4)) (f1 (f1 c_3 c_0) c_4)) (= (f1 c_3 (f1 c_1 c_0)) (f1 (f1 c_3 c_1) c_0)) (= (f1 c_3 (f1 c_1 c_1)) (f1 (f1 c_3 c_1) c_1)) (= (f1 c_3 (f1 c_1 c_2)) (f1 (f1 c_3 c_1) c_2)) (= (f1 c_3 (f1 c_1 c_3)) (f1 (f1 c_3 c_1) c_3)) (= (f1 c_3 (f1 c_1 c_4)) (f1 (f1 c_3 c_1) c_4)) (= (f1 c_3 (f1 c_2 c_0)) (f1 (f1 c_3 c_2) c_0)) (= (f1 c_3 (f1 c_2 c_1)) (f1 (f1 c_3 c_2) c_1)) (= (f1 c_3 (f1 c_2 c_2)) (f1 (f1 c_3 c_2) c_2)) (= (f1 c_3 (f1 c_2 c_3)) (f1 (f1 c_3 c_2) c_3)) (= (f1 c_3 (f1 c_2 c_4)) (f1 (f1 c_3 c_2) c_4)) (= (f1 c_3 (f1 c_3 c_0)) (f1 (f1 c_3 c_3) c_0)) (= (f1 c_3 (f1 c_3 c_1)) (f1 (f1 c_3 c_3) c_1)) (= (f1 c_3 (f1 c_3 c_2)) (f1 (f1 c_3 c_3) c_2)) (= (f1 c_3 (f1 c_3 c_3)) (f1 (f1 c_3 c_3) c_3)) (= (f1 c_3 (f1 c_3 c_4)) (f1 (f1 c_3 c_3) c_4)) (= (f1 c_3 (f1 c_4 c_0)) (f1 (f1 c_3 c_4) c_0)) (= (f1 c_3 (f1 c_4 c_1)) (f1 (f1 c_3 c_4) c_1)) (= (f1 c_3 (f1 c_4 c_2)) (f1 (f1 c_3 c_4) c_2)) (= (f1 c_3 (f1 c_4 c_3)) (f1 (f1 c_3 c_4) c_3)) (= (f1 c_3 (f1 c_4 c_4)) (f1 (f1 c_3 c_4) c_4)) (= (f1 c_4 (f1 c_0 c_0)) (f1 (f1 c_4 c_0) c_0)) (= (f1 c_4 (f1 c_0 c_1)) (f1 (f1 c_4 c_0) c_1)) (= (f1 c_4 (f1 c_0 c_2)) (f1 (f1 c_4 c_0) c_2)) (= (f1 c_4 (f1 c_0 c_3)) (f1 (f1 c_4 c_0) c_3)) (= (f1 c_4 (f1 c_0 c_4)) (f1 (f1 c_4 c_0) c_4)) (= (f1 c_4 (f1 c_1 c_0)) (f1 (f1 c_4 c_1) c_0)) (= (f1 c_4 (f1 c_1 c_1)) (f1 (f1 c_4 c_1) c_1)) (= (f1 c_4 (f1 c_1 c_2)) (f1 (f1 c_4 c_1) c_2)) (= (f1 c_4 (f1 c_1 c_3)) (f1 (f1 c_4 c_1) c_3)) (= (f1 c_4 (f1 c_1 c_4)) (f1 (f1 c_4 c_1) c_4)) (= (f1 c_4 (f1 c_2 c_0)) (f1 (f1 c_4 c_2) c_0)) (= (f1 c_4 (f1 c_2 c_1)) (f1 (f1 c_4 c_2) c_1)) (= (f1 c_4 (f1 c_2 c_2)) (f1 (f1 c_4 c_2) c_2)) (= (f1 c_4 (f1 c_2 c_3)) (f1 (f1 c_4 c_2) c_3)) (= (f1 c_4 (f1 c_2 c_4)) (f1 (f1 c_4 c_2) c_4)) (= (f1 c_4 (f1 c_3 c_0)) (f1 (f1 c_4 c_3) c_0)) (= (f1 c_4 (f1 c_3 c_1)) (f1 (f1 c_4 c_3) c_1)) (= (f1 c_4 (f1 c_3 c_2)) (f1 (f1 c_4 c_3) c_2)) (= (f1 c_4 (f1 c_3 c_3)) (f1 (f1 c_4 c_3) c_3)) (= (f1 c_4 (f1 c_3 c_4)) (f1 (f1 c_4 c_3) c_4)) (= (f1 c_4 (f1 c_4 c_0)) (f1 (f1 c_4 c_4) c_0)) (= (f1 c_4 (f1 c_4 c_1)) (f1 (f1 c_4 c_4) c_1)) (= (f1 c_4 (f1 c_4 c_2)) (f1 (f1 c_4 c_4) c_2)) (= (f1 c_4 (f1 c_4 c_3)) (f1 (f1 c_4 c_4) c_3)) (= (f1 c_4 (f1 c_4 c_4)) (f1 (f1 c_4 c_4) c_4)) (or (p2 (f1 c_0 c_0)) (not (p3 c_0)) (not (p3 c_0))) (or (p2 (f1 c_0 c_1)) (not (p3 c_0)) (not (p3 c_1))) (or (p2 (f1 c_0 c_2)) (not (p3 c_0)) (not (p3 c_2))) (or (p2 (f1 c_0 c_3)) (not (p3 c_0)) (not (p3 c_3))) (or (p2 (f1 c_0 c_4)) (not (p3 c_0)) (not (p3 c_4))) (or (p2 (f1 c_1 c_0)) (not (p3 c_1)) (not (p3 c_0))) (or (p2 (f1 c_1 c_1)) (not (p3 c_1)) (not (p3 c_1))) (or (p2 (f1 c_1 c_2)) (not (p3 c_1)) (not (p3 c_2))) (or (p2 (f1 c_1 c_3)) (not (p3 c_1)) (not (p3 c_3))) (or (p2 (f1 c_1 c_4)) (not (p3 c_1)) (not (p3 c_4))) (or (p2 (f1 c_2 c_0)) (not (p3 c_2)) (not (p3 c_0))) (or (p2 (f1 c_2 c_1)) (not (p3 c_2)) (not (p3 c_1))) (or (p2 (f1 c_2 c_2)) (not (p3 c_2)) (not (p3 c_2))) (or (p2 (f1 c_2 c_3)) (not (p3 c_2)) (not (p3 c_3))) (or (p2 (f1 c_2 c_4)) (not (p3 c_2)) (not (p3 c_4))) (or (p2 (f1 c_3 c_0)) (not (p3 c_3)) (not (p3 c_0))) (or (p2 (f1 c_3 c_1)) (not (p3 c_3)) (not (p3 c_1))) (or (p2 (f1 c_3 c_2)) (not (p3 c_3)) (not (p3 c_2))) (or (p2 (f1 c_3 c_3)) (not (p3 c_3)) (not (p3 c_3))) (or (p2 (f1 c_3 c_4)) (not (p3 c_3)) (not (p3 c_4))) (or (p2 (f1 c_4 c_0)) (not (p3 c_4)) (not (p3 c_0))) (or (p2 (f1 c_4 c_1)) (not (p3 c_4)) (not (p3 c_1))) (or (p2 (f1 c_4 c_2)) (not (p3 c_4)) (not (p3 c_2))) (or (p2 (f1 c_4 c_3)) (not (p3 c_4)) (not (p3 c_3))) (or (p2 (f1 c_4 c_4)) (not (p3 c_4)) (not (p3 c_4))) (p4 c7) (or (not (p4 c_0)) (not (p2 c_0))) (or (not (p4 c_1)) (not (p2 c_1))) (or (not (p4 c_2)) (not (p2 c_2))) (or (not (p4 c_3)) (not (p2 c_3))) (or (not (p4 c_4)) (not (p2 c_4))) (or (not (p3 c_0)) (not (p4 c_0))) (or (not (p3 c_1)) (not (p4 c_1))) (or (not (p3 c_2)) (not (p4 c_2))) (or (not (p3 c_3)) (not (p4 c_3))) (or (not (p3 c_4)) (not (p4 c_4))) (or (= (f1 c_0 c_0) c_0) (= (f1 c_0 c_0) c_1) (= (f1 c_0 c_0) c_2) (= (f1 c_0 c_0) c_3) (= (f1 c_0 c_0) c_4)) (or (= (f1 c_0 c_1) c_0) (= (f1 c_0 c_1) c_1) (= (f1 c_0 c_1) c_2) (= (f1 c_0 c_1) c_3) (= (f1 c_0 c_1) c_4)) (or (= (f1 c_0 c_2) c_0) (= (f1 c_0 c_2) c_1) (= (f1 c_0 c_2) c_2) (= (f1 c_0 c_2) c_3) (= (f1 c_0 c_2) c_4)) (or (= (f1 c_0 c_3) c_0) (= (f1 c_0 c_3) c_1) (= (f1 c_0 c_3) c_2) (= (f1 c_0 c_3) c_3) (= (f1 c_0 c_3) c_4)) (or (= (f1 c_0 c_4) c_0) (= (f1 c_0 c_4) c_1) (= (f1 c_0 c_4) c_2) (= (f1 c_0 c_4) c_3) (= (f1 c_0 c_4) c_4)) (or (= (f1 c_1 c_0) c_0) (= (f1 c_1 c_0) c_1) (= (f1 c_1 c_0) c_2) (= (f1 c_1 c_0) c_3) (= (f1 c_1 c_0) c_4)) (or (= (f1 c_1 c_1) c_0) (= (f1 c_1 c_1) c_1) (= (f1 c_1 c_1) c_2) (= (f1 c_1 c_1) c_3) (= (f1 c_1 c_1) c_4)) (or (= (f1 c_1 c_2) c_0) (= (f1 c_1 c_2) c_1) (= (f1 c_1 c_2) c_2) (= (f1 c_1 c_2) c_3) (= (f1 c_1 c_2) c_4)) (or (= (f1 c_1 c_3) c_0) (= (f1 c_1 c_3) c_1) (= (f1 c_1 c_3) c_2) (= (f1 c_1 c_3) c_3) (= (f1 c_1 c_3) c_4)) (or (= (f1 c_1 c_4) c_0) (= (f1 c_1 c_4) c_1) (= (f1 c_1 c_4) c_2) (= (f1 c_1 c_4) c_3) (= (f1 c_1 c_4) c_4)) (or (= (f1 c_2 c_0) c_0) (= (f1 c_2 c_0) c_1) (= (f1 c_2 c_0) c_2) (= (f1 c_2 c_0) c_3) (= (f1 c_2 c_0) c_4)) (or (= (f1 c_2 c_1) c_0) (= (f1 c_2 c_1) c_1) (= (f1 c_2 c_1) c_2) (= (f1 c_2 c_1) c_3) (= (f1 c_2 c_1) c_4)) (or (= (f1 c_2 c_2) c_0) (= (f1 c_2 c_2) c_1) (= (f1 c_2 c_2) c_2) (= (f1 c_2 c_2) c_3) (= (f1 c_2 c_2) c_4)) (or (= (f1 c_2 c_3) c_0) (= (f1 c_2 c_3) c_1) (= (f1 c_2 c_3) c_2) (= (f1 c_2 c_3) c_3) (= (f1 c_2 c_3) c_4)) (or (= (f1 c_2 c_4) c_0) (= (f1 c_2 c_4) c_1) (= (f1 c_2 c_4) c_2) (= (f1 c_2 c_4) c_3) (= (f1 c_2 c_4) c_4)) (or (= (f1 c_3 c_0) c_0) (= (f1 c_3 c_0) c_1) (= (f1 c_3 c_0) c_2) (= (f1 c_3 c_0) c_3) (= (f1 c_3 c_0) c_4)) (or (= (f1 c_3 c_1) c_0) (= (f1 c_3 c_1) c_1) (= (f1 c_3 c_1) c_2) (= (f1 c_3 c_1) c_3) (= (f1 c_3 c_1) c_4)) (or (= (f1 c_3 c_2) c_0) (= (f1 c_3 c_2) c_1) (= (f1 c_3 c_2) c_2) (= (f1 c_3 c_2) c_3) (= (f1 c_3 c_2) c_4)) (or (= (f1 c_3 c_3) c_0) (= (f1 c_3 c_3) c_1) (= (f1 c_3 c_3) c_2) (= (f1 c_3 c_3) c_3) (= (f1 c_3 c_3) c_4)) (or (= (f1 c_3 c_4) c_0) (= (f1 c_3 c_4) c_1) (= (f1 c_3 c_4) c_2) (= (f1 c_3 c_4) c_3) (= (f1 c_3 c_4) c_4)) (or (= (f1 c_4 c_0) c_0) (= (f1 c_4 c_0) c_1) (= (f1 c_4 c_0) c_2) (= (f1 c_4 c_0) c_3) (= (f1 c_4 c_0) c_4)) (or (= (f1 c_4 c_1) c_0) (= (f1 c_4 c_1) c_1) (= (f1 c_4 c_1) c_2) (= (f1 c_4 c_1) c_3) (= (f1 c_4 c_1) c_4)) (or (= (f1 c_4 c_2) c_0) (= (f1 c_4 c_2) c_1) (= (f1 c_4 c_2) c_2) (= (f1 c_4 c_2) c_3) (= (f1 c_4 c_2) c_4)) (or (= (f1 c_4 c_3) c_0) (= (f1 c_4 c_3) c_1) (= (f1 c_4 c_3) c_2) (= (f1 c_4 c_3) c_3) (= (f1 c_4 c_3) c_4)) (or (= (f1 c_4 c_4) c_0) (= (f1 c_4 c_4) c_1) (= (f1 c_4 c_4) c_2) (= (f1 c_4 c_4) c_3) (= (f1 c_4 c_4) c_4)) (or (= c6 c_0) (= c6 c_1) (= c6 c_2) (= c6 c_3) (= c6 c_4)) (or (= c5 c_0) (= c5 c_1) (= c5 c_2) (= c5 c_3) (= c5 c_4)) (or (= c7 c_0) (= c7 c_1) (= c7 c_2) (= c7 c_3) (= c7 c_4)))))
(get-model)