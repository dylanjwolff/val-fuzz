(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const GEN86 Int)
(declare-const GEN85 Int)
(declare-const GEN84 Int)
(declare-const GEN83 Int)
(declare-const GEN82 Int)
(declare-const GEN81 Int)
(declare-const GEN80 Int)
(declare-const GEN79 Int)
(declare-const GEN78 Int)
(declare-const GEN77 Int)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () (_ BitVec 4))
(declare-fun v1 () (_ BitVec 4))
(declare-fun v2 () (_ BitVec 4))
(declare-fun v3 () (_ BitVec 4))
(declare-fun v4 () (_ BitVec 4))
(assert (= BAV1 (and (or (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4)))) (bvule (bvshl v4 (bvnot v4)) v2) (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1)))) (or (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1))) (bvule (bvshl (bvshl v4 (bvnot v4)) v1) (bvlshr v4 v3)) (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (or (not (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvsgt (bvnor v1 (bvsub v0 (_ bv2 4))) v3)) (bvsgt v3 (bvor v3 v1))) (or (bvuge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) v2) (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (bvugt v3 v1) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4)) (not (bvule (bvshl v4 (bvnot v4)) v2))) (or (bvuge ((_ rotate_left 0) v1) (bvnor v1 (bvsub v0 (_ bv2 4)))) (not (bvule (bvshl v4 (bvnot v4)) v2)) (not (bvule (bvshl (bvshl v4 (bvnot v4)) v1) (bvlshr v4 v3)))) (or (bvsgt v0 ((_ zero_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2)) (bvult (bvnot v4) (bvand (bvsub v0 (_ bv2 4)) v0))) (or (not (bvslt v1 (bvnor ((_ rotate_left 0) v1) (bvlshr v4 v3)))) (not (bvsge (bvshl (bvshl v4 (bvnot v4)) v1) (bvshl v4 (bvnot v4)))) (bvuge ((_ zero_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4)))) (bvshl v4 (bvnot v4)))) (or (not (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2))) (or (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (not (bvuge (bvand (bvsub v0 (_ bv2 4)) v0) ((_ sign_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4)))))) (not (bvugt ((_ rotate_left 0) v1) ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4))))) (not (bvule (bvcomp (bvnot v4) v2) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvshl (bvshl v4 (bvnot v4)) v1) (bvshl v4 (bvnot v4))))) (or (bvsle ((_ zero_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)))) (bvand (bvsub v0 (_ bv2 4)) v0)) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4)) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2))) (or (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4)) (not (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (bvuge ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1))) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (not (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (or (not (bvugt (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (bvsle ((_ sign_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv2 4))) (bvule (bvand (bvsub v0 (_ bv2 4)) v0) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))))) (or (bvule (bvshl v4 (bvnot v4)) v2) (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4))) (not (bvuge ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))))) (or (bvugt v3 v1) (not (bvuge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (bvsgt v3 (bvor v3 v1))) (or (not (bvsgt v1 (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvuge (bvsub v0 (_ bv2 4)) v4)) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4))) (or (not (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (bvugt ((_ rotate_left 0) v1) ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))))) (not (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (or (bvslt (_ bv2 4) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))) (not (bvsge (bvshl v4 (bvnot v4)) (_ bv2 4))) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4))) (or (bvugt ((_ rotate_left 0) v1) ((_ sign_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (not (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (or (not (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvult ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) v4)) (not (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4))))) (or (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))) (bvult v1 ((_ sign_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))))) (not (bvslt v1 (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (or (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (not (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (bvslt v1 (bvnor ((_ rotate_left 0) v1) (bvlshr v4 v3))) (bvule v1 ((_ sign_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4))))) (not (bvugt v3 v1))) (or (bvule (bvand (bvsub v0 (_ bv2 4)) v0) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvult (bvnor v1 (bvsub v0 (_ bv2 4))) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))))))))
(assert (= BAV2 (or (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4)))) (bvule (bvshl v4 (bvnot v4)) v2) (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1))))))
(assert (= BAV3 (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4))))))
(assert (= BAV4 (or (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1))) (bvule (bvshl (bvshl v4 (bvnot v4)) v1) (bvlshr v4 v3)) (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV5 (= (bvnot v4) v3)))
(assert (= BAV6 (= (bvnot v4) v3)))
(assert (= BAV7 (or (not (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvsgt (bvnor v1 (bvsub v0 (_ bv2 4))) v3)) (bvsgt v3 (bvor v3 v1)))))
(assert (= BAV8 (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV9 (= (bvnot v4) v3)))
(assert (= BAV10 (or (bvuge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) v2) (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4))))))
(assert (= BAV11 (= (bvnot v4) v3)))
(assert (= BAV12 (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV13 (= (bvnot v4) v3)))
(assert (= BAV14 (or (bvugt v3 v1) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4)) (not (bvule (bvshl v4 (bvnot v4)) v2)))))
(assert (= BAV15 (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4))))
(assert (= BAV16 (or (bvuge ((_ rotate_left 0) v1) (bvnor v1 (bvsub v0 (_ bv2 4)))) (not (bvule (bvshl v4 (bvnot v4)) v2)) (not (bvule (bvshl (bvshl v4 (bvnot v4)) v1) (bvlshr v4 v3))))))
(assert (= BAV17 (or (bvsgt v0 ((_ zero_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2)) (bvult (bvnot v4) (bvand (bvsub v0 (_ bv2 4)) v0)))))
(assert (= BAV18 (or (not (bvslt v1 (bvnor ((_ rotate_left 0) v1) (bvlshr v4 v3)))) (not (bvsge (bvshl (bvshl v4 (bvnot v4)) v1) (bvshl v4 (bvnot v4)))) (bvuge ((_ zero_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4)))) (bvshl v4 (bvnot v4))))))
(assert (= BAV19 (or (not (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2)))))
(assert (= BAV20 (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV21 (= (bvnot v4) v3)))
(assert (= BAV22 (= (bvnot v4) v3)))
(assert (= BAV23 (or (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (not (bvuge (bvand (bvsub v0 (_ bv2 4)) v0) ((_ sign_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4)))))) (not (bvugt ((_ rotate_left 0) v1) ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV24 (= (bvnot v4) v3)))
(assert (= BAV25 (= (bvnot v4) v3)))
(assert (= BAV26 (= (bvnot v4) v3)))
(assert (= BAV27 (or (not (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4))))) (not (bvule (bvcomp (bvnot v4) v2) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvshl (bvshl v4 (bvnot v4)) v1) (bvshl v4 (bvnot v4)))))))
(assert (= BAV28 (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4))))))
(assert (= BAV29 (= (bvnot v4) v3)))
(assert (= BAV30 (or (bvsle ((_ zero_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)))) (bvand (bvsub v0 (_ bv2 4)) v0)) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4)) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2)))))
(assert (= BAV31 (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4))))
(assert (= BAV32 (or (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4)) (not (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4))))))
(assert (= BAV33 (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4))))
(assert (= BAV34 (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV35 (= (bvnot v4) v3)))
(assert (= BAV36 (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV37 (or (bvuge ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1))) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4))))))
(assert (= BAV38 (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV39 (= (bvnot v4) v3)))
(assert (= BAV40 (or (not (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV41 (= (bvnot v4) v3)))
(assert (= BAV42 (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))))
(assert (= BAV43 (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV44 (= (bvnot v4) v3)))
(assert (= BAV45 (or (not (bvugt (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (bvsle ((_ sign_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv2 4))) (bvule (bvand (bvsub v0 (_ bv2 4)) v0) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))))))
(assert (= BAV46 (= (bvnot v4) v3)))
(assert (= BAV47 (or (bvule (bvshl v4 (bvnot v4)) v2) (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4))) (not (bvuge ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))))))))
(assert (= BAV48 (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV49 (or (bvugt v3 v1) (not (bvuge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (bvsgt v3 (bvor v3 v1)))))
(assert (= BAV50 (= (bvnot v4) v3)))
(assert (= BAV51 (or (not (bvsgt v1 (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvuge (bvsub v0 (_ bv2 4)) v4)) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4)))))
(assert (= BAV52 (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4))))
(assert (= BAV53 (or (not (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (bvugt ((_ rotate_left 0) v1) ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))))) (not (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))))))
(assert (= BAV54 (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))))
(assert (= BAV55 (= (bvnot v4) v3)))
(assert (= BAV56 (or (bvslt (_ bv2 4) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))) (not (bvsge (bvshl v4 (bvnot v4)) (_ bv2 4))) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4)))))
(assert (= BAV57 (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4))))
(assert (= BAV58 (or (bvugt ((_ rotate_left 0) v1) ((_ sign_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (not (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))))))
(assert (= BAV59 (= (bvnot v4) v3)))
(assert (= BAV60 (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))))
(assert (= BAV61 (or (not (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvult ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) v4)) (not (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4)))))))
(assert (= BAV62 (= (bvnot v4) v3)))
(assert (= BAV63 (= (bvnot v4) v3)))
(assert (= BAV64 (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV65 (or (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))) (bvult v1 ((_ sign_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))))) (not (bvslt v1 (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))))))
(assert (= BAV66 (= (bvnot v4) v3)))
(assert (= BAV67 (or (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (not (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4))))))
(assert (= BAV68 (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))))
(assert (= BAV69 (= (bvnot v4) v3)))
(assert (= BAV70 (= (bvnot v4) v3)))
(assert (= BAV71 (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV72 (= (bvnot v4) v3)))
(assert (= BAV73 (or (bvslt v1 (bvnor ((_ rotate_left 0) v1) (bvlshr v4 v3))) (bvule v1 ((_ sign_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4))))) (not (bvugt v3 v1)))))
(assert (= BAV74 (or (bvule (bvand (bvsub v0 (_ bv2 4)) v0) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvult (bvnor v1 (bvsub v0 (_ bv2 4))) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV75 (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))))
(assert (= BAV76 (= (bvnot v4) v3)))
(check-sat-assuming ((and (or (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4)))) (bvule (bvshl v4 (bvnot v4)) v2) (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1)))) (or (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1))) (bvule (bvshl (bvshl v4 (bvnot v4)) v1) (bvlshr v4 v3)) (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (or (not (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (not (bvsgt (bvnor v1 (bvsub v0 (_ bv2 4))) v3)) (bvsgt v3 (bvor v3 v1))) (or (bvuge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) v2) (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (bvugt v3 v1) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4)) (not (bvule (bvshl v4 (bvnot v4)) v2))) (or (bvuge ((_ rotate_left 0) v1) (bvnor v1 (bvsub v0 (_ bv2 4)))) (not (bvule (bvshl v4 (bvnot v4)) v2)) (not (bvule (bvshl (bvshl v4 (bvnot v4)) v1) (bvlshr v4 v3)))) (or (bvsgt v0 ((_ zero_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2)) (bvult (bvnot v4) (bvand (bvsub v0 (_ bv2 4)) v0))) (or (not (bvslt v1 (bvnor ((_ rotate_left 0) v1) (bvlshr v4 v3)))) (not (bvsge (bvshl (bvshl v4 (bvnot v4)) v1) (bvshl v4 (bvnot v4)))) (bvuge ((_ zero_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4)))) (bvshl v4 (bvnot v4)))) (or (not (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2))) (or (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (not (bvuge (bvand (bvsub v0 (_ bv2 4)) v0) ((_ sign_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4)))))) (not (bvugt ((_ rotate_left 0) v1) ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor v1 (bvsub v0 (_ bv2 4))))) (not (bvule (bvcomp (bvnot v4) v2) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvshl (bvshl v4 (bvnot v4)) v1) (bvshl v4 (bvnot v4))))) (or (bvsle ((_ zero_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)))) (bvand (bvsub v0 (_ bv2 4)) v0)) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (bvnot v4)) (not (bvule ((_ sign_extend 3) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))) v2))) (or (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4)) (not (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (bvuge ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (bvslt (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ rotate_left 0) v1))) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (not (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (= v2 ((_ zero_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))) (or (not (bvugt (bvashr (bvor v3 v1) (_ bv2 4)) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (not (bvsle ((_ sign_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv2 4))) (bvule (bvand (bvsub v0 (_ bv2 4)) v0) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))))) (or (bvule (bvshl v4 (bvnot v4)) v2) (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4))) (not (bvuge ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))))) (or (bvugt v3 v1) (not (bvuge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))))) (bvsgt v3 (bvor v3 v1))) (or (not (bvsgt v1 (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvuge (bvsub v0 (_ bv2 4)) v4)) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4))) (or (not (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (bvugt ((_ rotate_left 0) v1) ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))))) (not (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (or (bvslt (_ bv2 4) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))) (not (bvsge (bvshl v4 (bvnot v4)) (_ bv2 4))) (distinct ((_ zero_extend 3) (bvcomp (bvnot v4) v2)) (_ bv2 4))) (or (bvugt ((_ rotate_left 0) v1) ((_ sign_extend 3) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (not (bvsle (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (or (not (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvult ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))) v4)) (not (distinct (bvnot v4) (bvashr (bvor v3 v1) (_ bv2 4))))) (or (bvsge ((_ zero_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvlshr (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))) (bvult v1 ((_ sign_extend 2) (concat (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult v0 (bvsub v0 (_ bv2 4))) (_ bv1 1) (_ bv0 1))))) (not (bvslt v1 (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (or (= (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1))) (not (bvule (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)) (ite (bvule (bvnot v4) ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (or (bvslt v1 (bvnor ((_ rotate_left 0) v1) (bvlshr v4 v3))) (bvule v1 ((_ sign_extend 3) (bvcomp (bvnor v1 (bvsub v0 (_ bv2 4))) (bvsub v0 (_ bv2 4))))) (not (bvugt v3 v1))) (or (bvule (bvand (bvsub v0 (_ bv2 4)) v0) (bvsub v3 ((_ zero_extend 0) (bvmul (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1)))) v1)))) (not (distinct ((_ sign_extend 3) (ite (= (bvnot v4) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvor v3 v1) (_ bv2 4)))) (not (bvult (bvnor v1 (bvsub v0 (_ bv2 4))) (bvnor (_ bv2 4) ((_ zero_extend 3) (ite (bvugt (_ bv2 4) v1) (_ bv1 1) (_ bv0 1))))))))))
(get-model)