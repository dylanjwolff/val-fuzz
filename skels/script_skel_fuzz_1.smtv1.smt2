(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const GEN22 Real)
(declare-const GEN21 Real)
(declare-const GEN20 Real)
(declare-const GEN19 Real)
(declare-const GEN18 Real)
(declare-const GEN17 Real)
(declare-const GEN16 Real)
(declare-const GEN15 Real)
(declare-const GEN14 Real)
(declare-const GEN13 Real)
(declare-const GEN12 Real)
(declare-const GEN11 Real)
(declare-const GEN10 Real)
(declare-const GEN9 Real)
(declare-const GEN8 Real)
(declare-const GEN7 Real)
(declare-const GEN6 Real)
(declare-const GEN5 Real)
(declare-const GEN4 Real)
(declare-const GEN3 Real)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () Real)
(assert (= BAV1 (xor (xor (not (ite (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2)))))))) (not (ite (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2))))))))) (not (or (not (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))) (not (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))))))))
(assert (= BAV2 (xor (not (ite (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2)))))))) (not (ite (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2)))))))))))
(assert (= BAV3 (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV4 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV5 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2)))))
(assert (= BAV6 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV7 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV8 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV9 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2)))))
(assert (= BAV10 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV11 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV12 (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV13 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV14 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2)))))
(assert (= BAV15 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV16 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV17 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV18 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2)))))
(assert (= BAV19 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV20 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV21 (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2))))))))
(assert (= BAV22 (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV23 (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV24 (< (* v0 GEN15) (* v0 GEN16))))
(assert (= BAV25 (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV26 (< (* v0 GEN17) (* v0 GEN18))))
(assert (= BAV27 (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV28 (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV29 (< (* v0 GEN19) (* v0 GEN20))))
(assert (= BAV30 (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV31 (< (* v0 GEN21) (* v0 GEN22))))
(assert (= BAV32 (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV33 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV34 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2)))))
(assert (= BAV35 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV36 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV37 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV38 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2)))))
(assert (= BAV39 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV40 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV41 (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV42 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV43 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2)))))
(assert (= BAV44 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV45 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV46 (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))))
(assert (= BAV47 (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2)))))
(assert (= BAV48 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV49 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV50 (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2))))))))
(assert (= BAV51 (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV52 (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV53 (< (* v0 GEN15) (* v0 GEN16))))
(assert (= BAV54 (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV55 (< (* v0 GEN17) (* v0 GEN18))))
(assert (= BAV56 (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2)))))))
(assert (= BAV57 (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV58 (< (* v0 GEN19) (* v0 GEN20))))
(assert (= BAV59 (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2))))))
(assert (= BAV60 (< (* v0 GEN21) (* v0 GEN22))))
(assert (= BAV61 (or (not (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))) (not (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))))))
(assert (= BAV62 (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))))
(assert (= BAV63 (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2))))))
(assert (= BAV64 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV65 (< (* v0 GEN5) (* v0 GEN6))))
(assert (= BAV66 (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))))
(assert (= BAV67 (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2))))))
(assert (= BAV68 (< v0 (/ GEN1 (- GEN2)))))
(assert (= BAV69 (< (* v0 GEN5) (* v0 GEN6))))
(check-sat-assuming ((xor (xor (not (ite (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2)))))))) (not (ite (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN7) (* v0 GEN8)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN9) (* v0 GEN10)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN11) (* v0 GEN12)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2)))) (=> (= (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN13) (* v0 GEN14)) (/ GEN1 (- GEN2))) (< v0 (/ GEN1 (- GEN2))))) (= (= (< v0 (ite (< (* v0 GEN15) (* v0 GEN16)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN17) (* v0 GEN18)) v0 (/ GEN1 (- GEN2))))) (= (< v0 (ite (< (* v0 GEN19) (* v0 GEN20)) v0 (/ GEN1 (- GEN2)))) (< v0 (ite (< (* v0 GEN21) (* v0 GEN22)) v0 (/ GEN1 (- GEN2))))))))) (not (or (not (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))) (not (and (< (* v0 GEN3) (ite (< v0 (/ GEN1 (- GEN2))) (* v0 GEN4) (/ GEN1 (- GEN2)))) (< (* v0 GEN5) (* v0 GEN6)))))))))
(get-model)