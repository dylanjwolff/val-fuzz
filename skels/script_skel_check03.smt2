(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(get-model)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun _n () Int)
(declare-fun _f (Int) Bool)
(declare-fun _g (Int) Bool)
(assert (not (= _n GEN1)))
(push 1)
(assert (or (_g GEN2) (or (not (_g _n)) (not (_f _n)))))
(assert (= BAV1 (= _n GEN1)))
(assert (= BAV2 (or (_g GEN2) (or (not (_g _n)) (not (_f _n))))))
(assert (= BAV3 (or (not (_g _n)) (not (_f _n)))))
(assert (= BAV4 (or (and (_g _n) (_f _n)) (not (or (not (_g _n)) (not (_f _n)))))))
(assert (= BAV5 (and (_g _n) (_f _n))))
(assert (= BAV6 (or (not (_g _n)) (not (_f _n)))))
(assert (= BAV7 (or (not (_g _n)) (not (_g GEN3)))))
(assert (= BAV8 (or (not (_g _n)) (_g GEN4))))
(check-sat)
(get-model)
(pop 1)
(assert (or (and (_g _n) (_f _n)) (not (or (not (_g _n)) (not (_f _n))))))
(assert (or (not (_g _n)) (not (_g GEN3))))
(assert (or (not (_g _n)) (_g GEN4)))
(check-sat)