(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN10 (_ BitVec 1))
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 (_ BitVec 1))
(declare-fun y () (_ BitVec 1))
(declare-fun c () (_ BitVec 2))
(assert (= y GEN1))
(assert (forall ((x (_ BitVec 1))) (=> (and (= x ((_ extract 0 0) c)) (= y ((_ extract 1 1) c))) (= (bvor ((_ extract 0 0) c) ((_ extract 1 1) c)) GEN10))))
(assert (= BAV1 (= y GEN1)))
(assert (= BAV2 (forall ((x (_ BitVec 1))) (=> (and (= x ((_ extract 0 0) c)) (= y ((_ extract 1 1) c))) (= (bvor ((_ extract 0 0) c) ((_ extract 1 1) c)) GEN10)))))
(assert (= BAV3 (forall ((x (_ BitVec 1))) (and (= x ((_ extract 0 0) c)) (= y ((_ extract 1 1) c))))))
(assert (= BAV4 (forall ((x (_ BitVec 1))) (= x ((_ extract 0 0) c)))))
(assert (= BAV5 (forall ((x (_ BitVec 1))) (= y ((_ extract 1 1) c)))))
(assert (= BAV6 (forall ((x (_ BitVec 1))) (= (bvor ((_ extract 0 0) c) ((_ extract 1 1) c)) GEN10))))
(check-sat)
(get-model)