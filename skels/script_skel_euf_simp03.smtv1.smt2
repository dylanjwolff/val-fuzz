(set-option :incremental false)
(set-info :category "crafted")
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-sort U 0)
(declare-fun x () U)
(declare-fun y () U)
(declare-fun z () U)
(declare-fun f (U) U)
(declare-fun g (U) U)
(declare-fun H (U U) U)
(declare-fun J (U U) U)
(assert (= BAV1 (and (not (= x y)) (= (f (f x)) (f (f (f x)))) (= (f (f x)) y) (= (f (f (f (f x)))) z) (= (f x) z) (not (= (f x) y)))))
(assert (= BAV2 (= x y)))
(assert (= BAV3 (= (f (f x)) (f (f (f x))))))
(assert (= BAV4 (= (f (f x)) y)))
(assert (= BAV5 (= (f (f (f (f x)))) z)))
(assert (= BAV6 (= (f x) z)))
(assert (= BAV7 (= (f x) y)))
(check-sat-assuming ((and (not (= x y)) (= (f (f x)) (f (f (f x)))) (= (f (f x)) y) (= (f (f (f (f x)))) z) (= (f x) z) (not (= (f x) y)))))
(get-model)