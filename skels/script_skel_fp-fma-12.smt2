(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN15 Int)
(declare-const GEN14 Real)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Real)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Real)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Real)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(define-sort FPN () (_ FloatingPoint 11 53))
(declare-const x FPN)
(assert (= x ((_ to_fp 11 53) roundNearestTiesToEven GEN3 GEN4)))
(declare-const y FPN)
(assert (= y ((_ to_fp 11 53) roundNearestTiesToEven GEN7)))
(declare-const z FPN)
(assert (= z ((_ to_fp 11 53) roundNearestTiesToEven (- GEN10) GEN11)))
(declare-const r FPN)
(assert (= r ((_ to_fp 11 53) roundNearestTiesToEven (- GEN14) GEN15)))
(assert (not (= (fp.fma roundTowardNegative x y z) r)))
(assert (= BAV1 (= x ((_ to_fp 11 53) roundNearestTiesToEven GEN3 GEN4))))
(assert (= BAV2 (= y ((_ to_fp 11 53) roundNearestTiesToEven GEN7))))
(assert (= BAV3 (= z ((_ to_fp 11 53) roundNearestTiesToEven (- GEN10) GEN11))))
(assert (= BAV4 (= r ((_ to_fp 11 53) roundNearestTiesToEven (- GEN14) GEN15))))
(assert (= BAV5 (= (fp.fma roundTowardNegative x y z) r)))
(check-sat)
(get-model)
(check-sat-using smt)