(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-info :source |
These benchmarks used in the paper:

  Dejan Jovanovic and Leonardo de Moura.  Solving Non-Linear Arithmetic.
  In IJCAR 2012, published as LNCS volume 7364, pp. 339--354.

The meti-tarski benchmarks are proof obligations extracted from the
Meti-Tarski project, see:

  B. Akbarpour and L. C. Paulson. MetiTarski: An automatic theorem prover
  for real-valued special functions. Journal of Automated Reasoning,
  44(3):175-205, 2010.

Submitted by Dejan Jovanovic for SMT-LIB.


|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(declare-fun skoX () Real)
(declare-fun skoY () Real)
(declare-fun pi () Real)
(assert (and (<= (* skoY (+ (/ GEN1 GEN2) (* pi (/ (- GEN3) GEN4)))) (* pi (- GEN5))) (and (<= GEN6 skoY) (and (not (<= (/ GEN7 GEN8) pi)) (and (not (<= pi (/ GEN9 GEN10))) (and (= (* skoY skoY) (+ GEN11 (* skoX (* skoX (+ GEN12 (* skoX (* skoX (+ GEN13 (* skoX (* skoX (+ GEN14 (* skoX (* skoX (+ GEN15 (* skoX (* skoX GEN16)))))))))))))))) (= (* skoY skoY) (+ GEN17 (* (/ GEN18 GEN19) (* (/ GEN20 GEN21) (+ GEN22 (* (/ GEN23 GEN24) (* (/ GEN25 GEN26) (+ GEN27 (* (/ GEN28 GEN29) (* (/ GEN30 GEN31) (+ GEN32 (* (/ GEN33 GEN34) (* (/ GEN35 GEN36) (+ GEN37 (* (/ GEN38 GEN39) (* (/ GEN40 GEN41) GEN42))))))))))))))))))))))
(assert (= BAV1 (and (<= (* skoY (+ (/ GEN1 GEN2) (* pi (/ (- GEN3) GEN4)))) (* pi (- GEN5))) (and (<= GEN6 skoY) (and (not (<= (/ GEN7 GEN8) pi)) (and (not (<= pi (/ GEN9 GEN10))) (and (= (* skoY skoY) (+ GEN11 (* skoX (* skoX (+ GEN12 (* skoX (* skoX (+ GEN13 (* skoX (* skoX (+ GEN14 (* skoX (* skoX (+ GEN15 (* skoX (* skoX GEN16)))))))))))))))) (= (* skoY skoY) (+ GEN17 (* (/ GEN18 GEN19) (* (/ GEN20 GEN21) (+ GEN22 (* (/ GEN23 GEN24) (* (/ GEN25 GEN26) (+ GEN27 (* (/ GEN28 GEN29) (* (/ GEN30 GEN31) (+ GEN32 (* (/ GEN33 GEN34) (* (/ GEN35 GEN36) (+ GEN37 (* (/ GEN38 GEN39) (* (/ GEN40 GEN41) GEN42)))))))))))))))))))))))
(assert (= BAV2 (<= (* skoY (+ (/ GEN1 GEN2) (* pi (/ (- GEN3) GEN4)))) (* pi (- GEN5)))))
(assert (= BAV3 (and (<= GEN6 skoY) (and (not (<= (/ GEN7 GEN8) pi)) (and (not (<= pi (/ GEN9 GEN10))) (and (= (* skoY skoY) (+ GEN11 (* skoX (* skoX (+ GEN12 (* skoX (* skoX (+ GEN13 (* skoX (* skoX (+ GEN14 (* skoX (* skoX (+ GEN15 (* skoX (* skoX GEN16)))))))))))))))) (= (* skoY skoY) (+ GEN17 (* (/ GEN18 GEN19) (* (/ GEN20 GEN21) (+ GEN22 (* (/ GEN23 GEN24) (* (/ GEN25 GEN26) (+ GEN27 (* (/ GEN28 GEN29) (* (/ GEN30 GEN31) (+ GEN32 (* (/ GEN33 GEN34) (* (/ GEN35 GEN36) (+ GEN37 (* (/ GEN38 GEN39) (* (/ GEN40 GEN41) GEN42))))))))))))))))))))))
(assert (= BAV4 (<= GEN6 skoY)))
(assert (= BAV5 (and (not (<= (/ GEN7 GEN8) pi)) (and (not (<= pi (/ GEN9 GEN10))) (and (= (* skoY skoY) (+ GEN11 (* skoX (* skoX (+ GEN12 (* skoX (* skoX (+ GEN13 (* skoX (* skoX (+ GEN14 (* skoX (* skoX (+ GEN15 (* skoX (* skoX GEN16)))))))))))))))) (= (* skoY skoY) (+ GEN17 (* (/ GEN18 GEN19) (* (/ GEN20 GEN21) (+ GEN22 (* (/ GEN23 GEN24) (* (/ GEN25 GEN26) (+ GEN27 (* (/ GEN28 GEN29) (* (/ GEN30 GEN31) (+ GEN32 (* (/ GEN33 GEN34) (* (/ GEN35 GEN36) (+ GEN37 (* (/ GEN38 GEN39) (* (/ GEN40 GEN41) GEN42)))))))))))))))))))))
(assert (= BAV6 (<= (/ GEN7 GEN8) pi)))
(assert (= BAV7 (and (not (<= pi (/ GEN9 GEN10))) (and (= (* skoY skoY) (+ GEN11 (* skoX (* skoX (+ GEN12 (* skoX (* skoX (+ GEN13 (* skoX (* skoX (+ GEN14 (* skoX (* skoX (+ GEN15 (* skoX (* skoX GEN16)))))))))))))))) (= (* skoY skoY) (+ GEN17 (* (/ GEN18 GEN19) (* (/ GEN20 GEN21) (+ GEN22 (* (/ GEN23 GEN24) (* (/ GEN25 GEN26) (+ GEN27 (* (/ GEN28 GEN29) (* (/ GEN30 GEN31) (+ GEN32 (* (/ GEN33 GEN34) (* (/ GEN35 GEN36) (+ GEN37 (* (/ GEN38 GEN39) (* (/ GEN40 GEN41) GEN42))))))))))))))))))))
(assert (= BAV8 (<= pi (/ GEN9 GEN10))))
(assert (= BAV9 (and (= (* skoY skoY) (+ GEN11 (* skoX (* skoX (+ GEN12 (* skoX (* skoX (+ GEN13 (* skoX (* skoX (+ GEN14 (* skoX (* skoX (+ GEN15 (* skoX (* skoX GEN16)))))))))))))))) (= (* skoY skoY) (+ GEN17 (* (/ GEN18 GEN19) (* (/ GEN20 GEN21) (+ GEN22 (* (/ GEN23 GEN24) (* (/ GEN25 GEN26) (+ GEN27 (* (/ GEN28 GEN29) (* (/ GEN30 GEN31) (+ GEN32 (* (/ GEN33 GEN34) (* (/ GEN35 GEN36) (+ GEN37 (* (/ GEN38 GEN39) (* (/ GEN40 GEN41) GEN42)))))))))))))))))))
(assert (= BAV10 (= (* skoY skoY) (+ GEN11 (* skoX (* skoX (+ GEN12 (* skoX (* skoX (+ GEN13 (* skoX (* skoX (+ GEN14 (* skoX (* skoX (+ GEN15 (* skoX (* skoX GEN16))))))))))))))))))
(assert (= BAV11 (= (* skoY skoY) (+ GEN17 (* (/ GEN18 GEN19) (* (/ GEN20 GEN21) (+ GEN22 (* (/ GEN23 GEN24) (* (/ GEN25 GEN26) (+ GEN27 (* (/ GEN28 GEN29) (* (/ GEN30 GEN31) (+ GEN32 (* (/ GEN33 GEN34) (* (/ GEN35 GEN36) (+ GEN37 (* (/ GEN38 GEN39) (* (/ GEN40 GEN41) GEN42))))))))))))))))))
(check-sat)
(get-model)
(exit)