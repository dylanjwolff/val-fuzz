(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const GEN11 Int)
(declare-const GEN10 Real)
(declare-const GEN9 Int)
(declare-const GEN8 Real)
(declare-const GEN7 Int)
(declare-const GEN6 Real)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x () Real)
(declare-fun y () Real)
(declare-fun x1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (and (= x (- (* x1 x2) y2)) (= y (+ (+ (* x1 y2) x) GEN1)) (<= GEN2 x1) (<= x1 GEN3) (<= GEN4 x2) (<= x2 GEN5) (<= GEN6 y2) (<= y2 GEN7) (<= GEN8 x) (<= x GEN9) (<= GEN10 y) (<= y GEN11)))
(eliminate-quantifiers (exists x1 x2 y2))
(exit)
(assert (= BAV1 (and (= x (- (* x1 x2) y2)) (= y (+ (+ (* x1 y2) x) GEN1)) (<= GEN2 x1) (<= x1 GEN3) (<= GEN4 x2) (<= x2 GEN5) (<= GEN6 y2) (<= y2 GEN7) (<= GEN8 x) (<= x GEN9) (<= GEN10 y) (<= y GEN11))))
(assert (= BAV2 (= x (- (* x1 x2) y2))))
(assert (= BAV3 (= y (+ (+ (* x1 y2) x) GEN1))))
(assert (= BAV4 (<= GEN2 x1)))
(assert (= BAV5 (<= x1 GEN3)))
(assert (= BAV6 (<= GEN4 x2)))
(assert (= BAV7 (<= x2 GEN5)))
(assert (= BAV8 (<= GEN6 y2)))
(assert (= BAV9 (<= y2 GEN7)))
(assert (= BAV10 (<= GEN8 x)))
(assert (= BAV11 (<= x GEN9)))
(assert (= BAV12 (<= GEN10 y)))
(assert (= BAV13 (<= y GEN11)))