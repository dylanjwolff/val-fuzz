(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun f (Int) Int)
(declare-fun g (Int) Int)
(declare-fun h (Int) Int)
(assert (forall ((x Int)) (or (= (f x) (h x)) (= (f x) (g x)))))
(assert (not (= (f GEN1) (h GEN2))))
(assert (not (= (f GEN3) (g GEN4))))
(assert (= (f GEN5) (g GEN6)))
(assert (= BAV1 (forall ((x Int)) (or (= (f x) (h x)) (= (f x) (g x))))))
(assert (= BAV2 (forall ((x Int)) (= (f x) (h x)))))
(assert (= BAV3 (forall ((x Int)) (= (f x) (g x)))))
(assert (= BAV4 (= (f GEN1) (h GEN2))))
(assert (= BAV5 (= (f GEN3) (g GEN4))))
(assert (= BAV6 (= (f GEN5) (g GEN6))))
(check-sat)
(get-model)