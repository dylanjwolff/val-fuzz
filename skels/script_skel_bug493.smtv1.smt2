(set-option :incremental false)
(set-info :source "Source unknown")
(set-info :status unknown)
(set-info :category "unknown")
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun m () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_0 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_0 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun addr_of_j () (_ BitVec 8))
(declare-fun m_1 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_1 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_2 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_2 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun addr_of_a () (_ BitVec 8))
(declare-fun m_3 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_3 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_4 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_4 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_5 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_5 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_6 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_6 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun addr_of_i () (_ BitVec 8))
(declare-fun m_7 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_7 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_8 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_8 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_9 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_9 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_10 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_10 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_11 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_11 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun addr_of_TEST_VAR_0 () (_ BitVec 8))
(declare-fun m_12 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_12 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_13 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_13 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_14 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_14 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_15 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_15 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_16 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_16 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_17 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_17 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun m_18 () (Array (_ BitVec 8) (_ BitVec 8)))
(declare-fun regionSize_18 () (Array (_ BitVec 8) (_ BitVec 8)))
(assert (= BAV1 (=> (ite true (and (bvule addr_of_a (bvadd addr_of_a (select (store regionSize addr_of_a (bvmul (_ bv8 8) (_ bv1 8))) addr_of_a))) (and (bvult addr_of_j addr_of_a) (bvult addr_of_i addr_of_j))) false) (and (bvule addr_of_a (bvadd addr_of_a (bvmul (select (store (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_i (bvadd (select (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_j) (_ bv2 8))) addr_of_i) (_ bv1 8)))) (bvult (bvadd addr_of_a (bvmul (select (store (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_i (bvadd (select (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_j) (_ bv2 8))) addr_of_i) (_ bv1 8))) (bvadd addr_of_a (select (store regionSize addr_of_a (bvmul (_ bv8 8) (_ bv1 8))) addr_of_a)))))))
(assert (= BAV2 (and (bvule addr_of_a (bvadd addr_of_a (select (store regionSize addr_of_a (bvmul (_ bv8 8) (_ bv1 8))) addr_of_a))) (and (bvult addr_of_j addr_of_a) (bvult addr_of_i addr_of_j)))))
(assert (= BAV3 (and (bvult addr_of_j addr_of_a) (bvult addr_of_i addr_of_j))))
(assert (= BAV4 (and (bvule addr_of_a (bvadd addr_of_a (bvmul (select (store (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_i (bvadd (select (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_j) (_ bv2 8))) addr_of_i) (_ bv1 8)))) (bvult (bvadd addr_of_a (bvmul (select (store (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_i (bvadd (select (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_j) (_ bv2 8))) addr_of_i) (_ bv1 8))) (bvadd addr_of_a (select (store regionSize addr_of_a (bvmul (_ bv8 8) (_ bv1 8))) addr_of_a))))))
(check-sat-assuming ((not (=> (ite true (and (bvule addr_of_a (bvadd addr_of_a (select (store regionSize addr_of_a (bvmul (_ bv8 8) (_ bv1 8))) addr_of_a))) (and (bvult addr_of_j addr_of_a) (bvult addr_of_i addr_of_j))) false) (and (bvule addr_of_a (bvadd addr_of_a (bvmul (select (store (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_i (bvadd (select (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_j) (_ bv2 8))) addr_of_i) (_ bv1 8)))) (bvult (bvadd addr_of_a (bvmul (select (store (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_i (bvadd (select (store (store m addr_of_j (_ bv0 8)) addr_of_j (bvadd (select (store m addr_of_j (_ bv0 8)) addr_of_j) (_ bv2 8))) addr_of_j) (_ bv2 8))) addr_of_i) (_ bv1 8))) (bvadd addr_of_a (select (store regionSize addr_of_a (bvmul (_ bv8 8) (_ bv1 8))) addr_of_a))))))))
(get-model)