(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v1 () (_ BitVec 4))
(declare-fun v0 () (_ BitVec 4))
(declare-fun v2 () (_ BitVec 4))
(assert (= BAV1 (and (or false (bvsge v2 v1) (bvsgt (bvnand v1 (bvashr v0 v1)) v0)) (or (bvugt ((_ extract 2 1) v1) ((_ extract 2 1) v1)) (not (bvule ((_ extract 2 1) v1) ((_ sign_extend 1) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvxnor (_ bv0 4) (bvor v1 (bvashr v0 v1))) ((_ sign_extend 3) (ite (bvsge ((_ sign_extend 3) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))) (_ bv0 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt v0 (_ bv1 4)) (or (not (bvule (bvnor v2 (bvnand v1 (bvashr v0 v1))) (bvor v1 (bvashr v0 v1)))) (bvugt (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1))) (bvugt (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1)))) (or false (distinct (_ bv1 4) (bvnand v1 (bvashr v0 v1))) (bvuge ((_ rotate_right 2) (bvnand v1 (bvashr v0 v1))) (_ bv1 4))) (or false (not (bvult ((_ sign_extend 3) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))) (_ bv1 4))) (not (bvule (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV2 (or false (bvsge v2 v1) (bvsgt (bvnand v1 (bvashr v0 v1)) v0))))
(assert (= BAV3 (or (bvugt ((_ extract 2 1) v1) ((_ extract 2 1) v1)) (not (bvule ((_ extract 2 1) v1) ((_ sign_extend 1) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvxnor (_ bv0 4) (bvor v1 (bvashr v0 v1))) ((_ sign_extend 3) (ite (bvsge ((_ sign_extend 3) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))) (_ bv0 4)) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV4 (distinct (bvxnor (_ bv0 4) (bvor v1 (bvashr v0 v1))) ((_ sign_extend 3) (ite (bvsge ((_ sign_extend 3) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))) (_ bv0 4)) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV5 (or (not (bvule (bvnor v2 (bvnand v1 (bvashr v0 v1))) (bvor v1 (bvashr v0 v1)))) (bvugt (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1))) (bvugt (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV6 (or false (distinct (_ bv1 4) (bvnand v1 (bvashr v0 v1))) (bvuge ((_ rotate_right 2) (bvnand v1 (bvashr v0 v1))) (_ bv1 4)))))
(assert (= BAV7 (distinct (_ bv1 4) (bvnand v1 (bvashr v0 v1)))))
(assert (= BAV8 (or false (not (bvult ((_ sign_extend 3) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))) (_ bv1 4))) (not (bvule (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1)))))))
(check-sat-assuming ((and (or false (bvsge v2 v1) (bvsgt (bvnand v1 (bvashr v0 v1)) v0)) (or (bvugt ((_ extract 2 1) v1) ((_ extract 2 1) v1)) (not (bvule ((_ extract 2 1) v1) ((_ sign_extend 1) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvxnor (_ bv0 4) (bvor v1 (bvashr v0 v1))) ((_ sign_extend 3) (ite (bvsge ((_ sign_extend 3) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))) (_ bv0 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt v0 (_ bv1 4)) (or (not (bvule (bvnor v2 (bvnand v1 (bvashr v0 v1))) (bvor v1 (bvashr v0 v1)))) (bvugt (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1))) (bvugt (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1)))) (or false (distinct (_ bv1 4) (bvnand v1 (bvashr v0 v1))) (bvuge ((_ rotate_right 2) (bvnand v1 (bvashr v0 v1))) (_ bv1 4))) (or false (not (bvult ((_ sign_extend 3) (ite (bvsge v0 v1) (_ bv1 1) (_ bv0 1))) (_ bv1 4))) (not (bvule (_ bv1 1) (ite (bvsgt (bvor v1 (bvashr v0 v1)) (bvor v1 (bvashr v0 v1))) (_ bv1 1) (_ bv0 1))))))))
(get-model)