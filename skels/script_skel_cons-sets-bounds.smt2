(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-datatypes ((list 0)) (((cons (head Int) (tail list)) (nil))))
(declare-fun P (Int) Bool)
(declare-fun S () (Set list))
(assert (forall ((x Int)(y list)) (=> (member (cons x y) S) (P x))))
(assert (member (cons GEN1 (cons GEN2 nil)) S))
(assert (member (cons GEN3 nil) S))
(declare-fun l () list)
(assert ((_ is cons) l))
(assert (member l S))
(assert (member nil S))
(assert (not (P GEN4)))
(assert (not (P GEN5)))
(assert (= BAV1 (forall ((x Int)(y list)) (=> (member (cons x y) S) (P x)))))
(check-sat)
(get-model)