(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun P (Int Int) Bool)
(declare-fun Q (Int) Bool)
(assert (forall ((x Int)) (=> (and (<= GEN1 x) (<= x (ite (P GEN2 GEN3) GEN4 GEN5))) (Q x))))
(assert (= BAV1 (forall ((x Int)) (=> (and (<= GEN1 x) (<= x (ite (P GEN2 GEN3) GEN4 GEN5))) (Q x)))))
(assert (= BAV2 (forall ((x Int)) (and (<= GEN1 x) (<= x (ite (P GEN2 GEN3) GEN4 GEN5))))))
(assert (= BAV3 (forall ((x Int)) (<= GEN1 x))))
(assert (= BAV4 (forall ((x Int)) (<= x (ite (P GEN2 GEN3) GEN4 GEN5)))))
(check-sat)
(get-model)