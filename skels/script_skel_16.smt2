(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun x () Real)
(declare-fun y () Real)
(declare-fun z () Real)
(assert (and (= (+ (- (+ (* GEN1 (* x x)) (* GEN2 (* x (* y y)))) (* GEN3 z)) GEN4) GEN5) (= (+ (+ (* GEN6 x) (* GEN7 (* (* y y) z))) GEN8) GEN9) (= (- (- (* GEN10 (* (* x x) z)) x) (* GEN11 (* y y))) GEN12)))
(eliminate-quantifiers (exists z) (forall y) (exists x))
(exit)
(assert (= BAV1 (and (= (+ (- (+ (* GEN1 (* x x)) (* GEN2 (* x (* y y)))) (* GEN3 z)) GEN4) GEN5) (= (+ (+ (* GEN6 x) (* GEN7 (* (* y y) z))) GEN8) GEN9) (= (- (- (* GEN10 (* (* x x) z)) x) (* GEN11 (* y y))) GEN12))))
(assert (= BAV2 (= (+ (- (+ (* GEN1 (* x x)) (* GEN2 (* x (* y y)))) (* GEN3 z)) GEN4) GEN5)))
(assert (= BAV3 (= (+ (+ (* GEN6 x) (* GEN7 (* (* y y) z))) GEN8) GEN9)))
(assert (= BAV4 (= (- (- (* GEN10 (* (* x x) z)) x) (* GEN11 (* y y))) GEN12)))