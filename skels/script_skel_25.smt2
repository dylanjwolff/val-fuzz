(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a () Real)
(declare-fun h () Real)
(declare-fun R () Real)
(declare-fun s () Real)
(declare-fun b () Real)
(declare-fun c () Real)
(assert (and (= (- (* (* a a) (* h h)) (* GEN1 (* s (* (- s a) (* (- s b) (- s c)))))) GEN2) (= (- (* GEN3 (* R h)) (* b c)) GEN4) (= (- (- (- (* GEN5 s) a) b) c) GEN6) (> b GEN7) (> c GEN8) (> R GEN9) (> h GEN10) (> (- (+ a b) c) GEN11) (> (- (+ b c) a) GEN12) (> (- (+ a c) b) GEN13)))
(eliminate-quantifiers (exists s b c))
(exit)
(assert (= BAV1 (and (= (- (* (* a a) (* h h)) (* GEN1 (* s (* (- s a) (* (- s b) (- s c)))))) GEN2) (= (- (* GEN3 (* R h)) (* b c)) GEN4) (= (- (- (- (* GEN5 s) a) b) c) GEN6) (> b GEN7) (> c GEN8) (> R GEN9) (> h GEN10) (> (- (+ a b) c) GEN11) (> (- (+ b c) a) GEN12) (> (- (+ a c) b) GEN13))))
(assert (= BAV2 (= (- (* (* a a) (* h h)) (* GEN1 (* s (* (- s a) (* (- s b) (- s c)))))) GEN2)))
(assert (= BAV3 (= (- (* GEN3 (* R h)) (* b c)) GEN4)))
(assert (= BAV4 (= (- (- (- (* GEN5 s) a) b) c) GEN6)))
(assert (= BAV5 (> b GEN7)))
(assert (= BAV6 (> c GEN8)))
(assert (= BAV7 (> R GEN9)))
(assert (= BAV8 (> h GEN10)))
(assert (= BAV9 (> (- (+ a b) c) GEN11)))
(assert (= BAV10 (> (- (+ b c) a) GEN12)))
(assert (= BAV11 (> (- (+ a c) b) GEN13)))