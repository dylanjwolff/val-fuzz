(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v1 () (_ BitVec 3))
(declare-fun a2 () (Array (_ BitVec 13) (_ BitVec 3)))
(assert (= BAV1 (and (not (= (_ bv0 3) (bvshl ((_ sign_extend 2) (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1))) (select a2 (_ bv0 13))))) (and (not (= ((_ zero_extend 10) (bvnot (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1)))) (_ bv0 11))) (bvult (_ bv0 11) ((_ zero_extend 9) ((_ repeat 2) (bvnot (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1))))))))))
(assert (= BAV2 (= (_ bv0 3) (bvshl ((_ sign_extend 2) (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1))) (select a2 (_ bv0 13))))))
(assert (= BAV3 (and (not (= ((_ zero_extend 10) (bvnot (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1)))) (_ bv0 11))) (bvult (_ bv0 11) ((_ zero_extend 9) ((_ repeat 2) (bvnot (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV4 (= ((_ zero_extend 10) (bvnot (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1)))) (_ bv0 11))))
(check-sat-assuming ((and (not (= (_ bv0 3) (bvshl ((_ sign_extend 2) (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1))) (select a2 (_ bv0 13))))) (and (not (= ((_ zero_extend 10) (bvnot (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1)))) (_ bv0 11))) (bvult (_ bv0 11) ((_ zero_extend 9) ((_ repeat 2) (bvnot (ite (bvslt ((_ sign_extend 2) (ite (bvsgt v1 v1) (_ bv1 1) (_ bv0 1))) v1) (_ bv1 1) (_ bv0 1))))))))))
(get-model)