(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 String)
(declare-const GEN3 String)
(declare-const GEN2 String)
(declare-const GEN1 String)
(set-option :strings-exp true)
(declare-fun s () String)
(assert (or (= s GEN1) (= s GEN2)))
(declare-fun target () String)
(assert (or (= target GEN3) (= target GEN4)))
(declare-fun location () Int)
(assert (= (* GEN5 location) (str.indexof s target GEN6)))
(assert (= BAV1 (or (= s GEN1) (= s GEN2))))
(assert (= BAV2 (= s GEN1)))
(assert (= BAV3 (= s GEN2)))
(assert (= BAV4 (or (= target GEN3) (= target GEN4))))
(assert (= BAV5 (= target GEN3)))
(assert (= BAV6 (= target GEN4)))
(assert (= BAV7 (= (* GEN5 location) (str.indexof s target GEN6))))
(check-sat)
(get-model)