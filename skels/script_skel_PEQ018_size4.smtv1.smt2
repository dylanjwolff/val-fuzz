(set-option :incremental false)
(set-info :source "CADE ATP System competition. See http://www.cs.miami.edu/~tptp/CASC
 for more information. 

This benchmark was obtained by trying to find a finite model of a first-order 
formula (Albert Oliveras).")
(set-info :category "crafted")
(set-info :difficulty "0")
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const BAV184 Bool)
(declare-const BAV185 Bool)
(declare-const BAV186 Bool)
(declare-const BAV187 Bool)
(declare-const BAV188 Bool)
(declare-const BAV189 Bool)
(declare-const BAV190 Bool)
(declare-const BAV191 Bool)
(declare-const BAV192 Bool)
(declare-const BAV193 Bool)
(declare-const BAV194 Bool)
(declare-const BAV195 Bool)
(declare-const BAV196 Bool)
(declare-const BAV197 Bool)
(declare-const BAV198 Bool)
(declare-const BAV199 Bool)
(declare-const BAV200 Bool)
(declare-const BAV201 Bool)
(declare-const BAV202 Bool)
(declare-const BAV203 Bool)
(declare-const BAV204 Bool)
(declare-const BAV205 Bool)
(declare-const BAV206 Bool)
(declare-const BAV207 Bool)
(declare-const BAV208 Bool)
(declare-const BAV209 Bool)
(declare-const BAV210 Bool)
(declare-const BAV211 Bool)
(declare-const BAV212 Bool)
(declare-const BAV213 Bool)
(declare-const BAV214 Bool)
(declare-const BAV215 Bool)
(declare-const BAV216 Bool)
(declare-sort U 0)
(declare-fun f1 (U U) U)
(declare-fun f2 (U) U)
(declare-fun c10 () U)
(declare-fun c11 () U)
(declare-fun c3 () U)
(declare-fun c4 () U)
(declare-fun c5 () U)
(declare-fun c6 () U)
(declare-fun c7 () U)
(declare-fun c8 () U)
(declare-fun c9 () U)
(declare-fun c_0 () U)
(declare-fun c_1 () U)
(declare-fun c_2 () U)
(declare-fun c_3 () U)
(assert (= BAV1 (and (distinct c_0 c_1 c_2 c_3) (= (f1 c_0 (f1 (f1 c_0 c_0) (f2 (f1 c_0 c_0)))) c_0) (= (f1 c_0 (f1 (f1 c_0 c_1) (f2 (f1 c_0 c_1)))) c_0) (= (f1 c_0 (f1 (f1 c_0 c_2) (f2 (f1 c_0 c_2)))) c_0) (= (f1 c_0 (f1 (f1 c_0 c_3) (f2 (f1 c_0 c_3)))) c_0) (= (f1 c_0 (f1 (f1 c_1 c_0) (f2 (f1 c_0 c_0)))) c_1) (= (f1 c_0 (f1 (f1 c_1 c_1) (f2 (f1 c_0 c_1)))) c_1) (= (f1 c_0 (f1 (f1 c_1 c_2) (f2 (f1 c_0 c_2)))) c_1) (= (f1 c_0 (f1 (f1 c_1 c_3) (f2 (f1 c_0 c_3)))) c_1) (= (f1 c_0 (f1 (f1 c_2 c_0) (f2 (f1 c_0 c_0)))) c_2) (= (f1 c_0 (f1 (f1 c_2 c_1) (f2 (f1 c_0 c_1)))) c_2) (= (f1 c_0 (f1 (f1 c_2 c_2) (f2 (f1 c_0 c_2)))) c_2) (= (f1 c_0 (f1 (f1 c_2 c_3) (f2 (f1 c_0 c_3)))) c_2) (= (f1 c_0 (f1 (f1 c_3 c_0) (f2 (f1 c_0 c_0)))) c_3) (= (f1 c_0 (f1 (f1 c_3 c_1) (f2 (f1 c_0 c_1)))) c_3) (= (f1 c_0 (f1 (f1 c_3 c_2) (f2 (f1 c_0 c_2)))) c_3) (= (f1 c_0 (f1 (f1 c_3 c_3) (f2 (f1 c_0 c_3)))) c_3) (= (f1 c_1 (f1 (f1 c_0 c_0) (f2 (f1 c_1 c_0)))) c_0) (= (f1 c_1 (f1 (f1 c_0 c_1) (f2 (f1 c_1 c_1)))) c_0) (= (f1 c_1 (f1 (f1 c_0 c_2) (f2 (f1 c_1 c_2)))) c_0) (= (f1 c_1 (f1 (f1 c_0 c_3) (f2 (f1 c_1 c_3)))) c_0) (= (f1 c_1 (f1 (f1 c_1 c_0) (f2 (f1 c_1 c_0)))) c_1) (= (f1 c_1 (f1 (f1 c_1 c_1) (f2 (f1 c_1 c_1)))) c_1) (= (f1 c_1 (f1 (f1 c_1 c_2) (f2 (f1 c_1 c_2)))) c_1) (= (f1 c_1 (f1 (f1 c_1 c_3) (f2 (f1 c_1 c_3)))) c_1) (= (f1 c_1 (f1 (f1 c_2 c_0) (f2 (f1 c_1 c_0)))) c_2) (= (f1 c_1 (f1 (f1 c_2 c_1) (f2 (f1 c_1 c_1)))) c_2) (= (f1 c_1 (f1 (f1 c_2 c_2) (f2 (f1 c_1 c_2)))) c_2) (= (f1 c_1 (f1 (f1 c_2 c_3) (f2 (f1 c_1 c_3)))) c_2) (= (f1 c_1 (f1 (f1 c_3 c_0) (f2 (f1 c_1 c_0)))) c_3) (= (f1 c_1 (f1 (f1 c_3 c_1) (f2 (f1 c_1 c_1)))) c_3) (= (f1 c_1 (f1 (f1 c_3 c_2) (f2 (f1 c_1 c_2)))) c_3) (= (f1 c_1 (f1 (f1 c_3 c_3) (f2 (f1 c_1 c_3)))) c_3) (= (f1 c_2 (f1 (f1 c_0 c_0) (f2 (f1 c_2 c_0)))) c_0) (= (f1 c_2 (f1 (f1 c_0 c_1) (f2 (f1 c_2 c_1)))) c_0) (= (f1 c_2 (f1 (f1 c_0 c_2) (f2 (f1 c_2 c_2)))) c_0) (= (f1 c_2 (f1 (f1 c_0 c_3) (f2 (f1 c_2 c_3)))) c_0) (= (f1 c_2 (f1 (f1 c_1 c_0) (f2 (f1 c_2 c_0)))) c_1) (= (f1 c_2 (f1 (f1 c_1 c_1) (f2 (f1 c_2 c_1)))) c_1) (= (f1 c_2 (f1 (f1 c_1 c_2) (f2 (f1 c_2 c_2)))) c_1) (= (f1 c_2 (f1 (f1 c_1 c_3) (f2 (f1 c_2 c_3)))) c_1) (= (f1 c_2 (f1 (f1 c_2 c_0) (f2 (f1 c_2 c_0)))) c_2) (= (f1 c_2 (f1 (f1 c_2 c_1) (f2 (f1 c_2 c_1)))) c_2) (= (f1 c_2 (f1 (f1 c_2 c_2) (f2 (f1 c_2 c_2)))) c_2) (= (f1 c_2 (f1 (f1 c_2 c_3) (f2 (f1 c_2 c_3)))) c_2) (= (f1 c_2 (f1 (f1 c_3 c_0) (f2 (f1 c_2 c_0)))) c_3) (= (f1 c_2 (f1 (f1 c_3 c_1) (f2 (f1 c_2 c_1)))) c_3) (= (f1 c_2 (f1 (f1 c_3 c_2) (f2 (f1 c_2 c_2)))) c_3) (= (f1 c_2 (f1 (f1 c_3 c_3) (f2 (f1 c_2 c_3)))) c_3) (= (f1 c_3 (f1 (f1 c_0 c_0) (f2 (f1 c_3 c_0)))) c_0) (= (f1 c_3 (f1 (f1 c_0 c_1) (f2 (f1 c_3 c_1)))) c_0) (= (f1 c_3 (f1 (f1 c_0 c_2) (f2 (f1 c_3 c_2)))) c_0) (= (f1 c_3 (f1 (f1 c_0 c_3) (f2 (f1 c_3 c_3)))) c_0) (= (f1 c_3 (f1 (f1 c_1 c_0) (f2 (f1 c_3 c_0)))) c_1) (= (f1 c_3 (f1 (f1 c_1 c_1) (f2 (f1 c_3 c_1)))) c_1) (= (f1 c_3 (f1 (f1 c_1 c_2) (f2 (f1 c_3 c_2)))) c_1) (= (f1 c_3 (f1 (f1 c_1 c_3) (f2 (f1 c_3 c_3)))) c_1) (= (f1 c_3 (f1 (f1 c_2 c_0) (f2 (f1 c_3 c_0)))) c_2) (= (f1 c_3 (f1 (f1 c_2 c_1) (f2 (f1 c_3 c_1)))) c_2) (= (f1 c_3 (f1 (f1 c_2 c_2) (f2 (f1 c_3 c_2)))) c_2) (= (f1 c_3 (f1 (f1 c_2 c_3) (f2 (f1 c_3 c_3)))) c_2) (= (f1 c_3 (f1 (f1 c_3 c_0) (f2 (f1 c_3 c_0)))) c_3) (= (f1 c_3 (f1 (f1 c_3 c_1) (f2 (f1 c_3 c_1)))) c_3) (= (f1 c_3 (f1 (f1 c_3 c_2) (f2 (f1 c_3 c_2)))) c_3) (= (f1 c_3 (f1 (f1 c_3 c_3) (f2 (f1 c_3 c_3)))) c_3) (or (not (= (f1 c10 c11) (f1 c11 c10))) (not (= (f1 (f2 c3) c3) (f1 (f2 c4) c4))) (not (= (f1 (f1 (f2 c5) c5) c6) c6)) (not (= (f1 (f1 c7 c8) c9) (f1 c7 (f1 c8 c9))))) (or (= (f1 c_0 c_0) c_0) (= (f1 c_0 c_0) c_1) (= (f1 c_0 c_0) c_2) (= (f1 c_0 c_0) c_3)) (or (= (f1 c_0 c_1) c_0) (= (f1 c_0 c_1) c_1) (= (f1 c_0 c_1) c_2) (= (f1 c_0 c_1) c_3)) (or (= (f1 c_0 c_2) c_0) (= (f1 c_0 c_2) c_1) (= (f1 c_0 c_2) c_2) (= (f1 c_0 c_2) c_3)) (or (= (f1 c_0 c_3) c_0) (= (f1 c_0 c_3) c_1) (= (f1 c_0 c_3) c_2) (= (f1 c_0 c_3) c_3)) (or (= (f1 c_1 c_0) c_0) (= (f1 c_1 c_0) c_1) (= (f1 c_1 c_0) c_2) (= (f1 c_1 c_0) c_3)) (or (= (f1 c_1 c_1) c_0) (= (f1 c_1 c_1) c_1) (= (f1 c_1 c_1) c_2) (= (f1 c_1 c_1) c_3)) (or (= (f1 c_1 c_2) c_0) (= (f1 c_1 c_2) c_1) (= (f1 c_1 c_2) c_2) (= (f1 c_1 c_2) c_3)) (or (= (f1 c_1 c_3) c_0) (= (f1 c_1 c_3) c_1) (= (f1 c_1 c_3) c_2) (= (f1 c_1 c_3) c_3)) (or (= (f1 c_2 c_0) c_0) (= (f1 c_2 c_0) c_1) (= (f1 c_2 c_0) c_2) (= (f1 c_2 c_0) c_3)) (or (= (f1 c_2 c_1) c_0) (= (f1 c_2 c_1) c_1) (= (f1 c_2 c_1) c_2) (= (f1 c_2 c_1) c_3)) (or (= (f1 c_2 c_2) c_0) (= (f1 c_2 c_2) c_1) (= (f1 c_2 c_2) c_2) (= (f1 c_2 c_2) c_3)) (or (= (f1 c_2 c_3) c_0) (= (f1 c_2 c_3) c_1) (= (f1 c_2 c_3) c_2) (= (f1 c_2 c_3) c_3)) (or (= (f1 c_3 c_0) c_0) (= (f1 c_3 c_0) c_1) (= (f1 c_3 c_0) c_2) (= (f1 c_3 c_0) c_3)) (or (= (f1 c_3 c_1) c_0) (= (f1 c_3 c_1) c_1) (= (f1 c_3 c_1) c_2) (= (f1 c_3 c_1) c_3)) (or (= (f1 c_3 c_2) c_0) (= (f1 c_3 c_2) c_1) (= (f1 c_3 c_2) c_2) (= (f1 c_3 c_2) c_3)) (or (= (f1 c_3 c_3) c_0) (= (f1 c_3 c_3) c_1) (= (f1 c_3 c_3) c_2) (= (f1 c_3 c_3) c_3)) (or (= (f2 c_0) c_0) (= (f2 c_0) c_1) (= (f2 c_0) c_2) (= (f2 c_0) c_3)) (or (= (f2 c_1) c_0) (= (f2 c_1) c_1) (= (f2 c_1) c_2) (= (f2 c_1) c_3)) (or (= (f2 c_2) c_0) (= (f2 c_2) c_1) (= (f2 c_2) c_2) (= (f2 c_2) c_3)) (or (= (f2 c_3) c_0) (= (f2 c_3) c_1) (= (f2 c_3) c_2) (= (f2 c_3) c_3)) (or (= c10 c_0) (= c10 c_1) (= c10 c_2) (= c10 c_3)) (or (= c11 c_0) (= c11 c_1) (= c11 c_2) (= c11 c_3)) (or (= c3 c_0) (= c3 c_1) (= c3 c_2) (= c3 c_3)) (or (= c4 c_0) (= c4 c_1) (= c4 c_2) (= c4 c_3)) (or (= c5 c_0) (= c5 c_1) (= c5 c_2) (= c5 c_3)) (or (= c6 c_0) (= c6 c_1) (= c6 c_2) (= c6 c_3)) (or (= c7 c_0) (= c7 c_1) (= c7 c_2) (= c7 c_3)) (or (= c8 c_0) (= c8 c_1) (= c8 c_2) (= c8 c_3)) (or (= c9 c_0) (= c9 c_1) (= c9 c_2) (= c9 c_3)))))
(assert (= BAV2 (distinct c_0 c_1 c_2 c_3)))
(assert (= BAV3 (= (f1 c_0 (f1 (f1 c_0 c_0) (f2 (f1 c_0 c_0)))) c_0)))
(assert (= BAV4 (= (f1 c_0 (f1 (f1 c_0 c_1) (f2 (f1 c_0 c_1)))) c_0)))
(assert (= BAV5 (= (f1 c_0 (f1 (f1 c_0 c_2) (f2 (f1 c_0 c_2)))) c_0)))
(assert (= BAV6 (= (f1 c_0 (f1 (f1 c_0 c_3) (f2 (f1 c_0 c_3)))) c_0)))
(assert (= BAV7 (= (f1 c_0 (f1 (f1 c_1 c_0) (f2 (f1 c_0 c_0)))) c_1)))
(assert (= BAV8 (= (f1 c_0 (f1 (f1 c_1 c_1) (f2 (f1 c_0 c_1)))) c_1)))
(assert (= BAV9 (= (f1 c_0 (f1 (f1 c_1 c_2) (f2 (f1 c_0 c_2)))) c_1)))
(assert (= BAV10 (= (f1 c_0 (f1 (f1 c_1 c_3) (f2 (f1 c_0 c_3)))) c_1)))
(assert (= BAV11 (= (f1 c_0 (f1 (f1 c_2 c_0) (f2 (f1 c_0 c_0)))) c_2)))
(assert (= BAV12 (= (f1 c_0 (f1 (f1 c_2 c_1) (f2 (f1 c_0 c_1)))) c_2)))
(assert (= BAV13 (= (f1 c_0 (f1 (f1 c_2 c_2) (f2 (f1 c_0 c_2)))) c_2)))
(assert (= BAV14 (= (f1 c_0 (f1 (f1 c_2 c_3) (f2 (f1 c_0 c_3)))) c_2)))
(assert (= BAV15 (= (f1 c_0 (f1 (f1 c_3 c_0) (f2 (f1 c_0 c_0)))) c_3)))
(assert (= BAV16 (= (f1 c_0 (f1 (f1 c_3 c_1) (f2 (f1 c_0 c_1)))) c_3)))
(assert (= BAV17 (= (f1 c_0 (f1 (f1 c_3 c_2) (f2 (f1 c_0 c_2)))) c_3)))
(assert (= BAV18 (= (f1 c_0 (f1 (f1 c_3 c_3) (f2 (f1 c_0 c_3)))) c_3)))
(assert (= BAV19 (= (f1 c_1 (f1 (f1 c_0 c_0) (f2 (f1 c_1 c_0)))) c_0)))
(assert (= BAV20 (= (f1 c_1 (f1 (f1 c_0 c_1) (f2 (f1 c_1 c_1)))) c_0)))
(assert (= BAV21 (= (f1 c_1 (f1 (f1 c_0 c_2) (f2 (f1 c_1 c_2)))) c_0)))
(assert (= BAV22 (= (f1 c_1 (f1 (f1 c_0 c_3) (f2 (f1 c_1 c_3)))) c_0)))
(assert (= BAV23 (= (f1 c_1 (f1 (f1 c_1 c_0) (f2 (f1 c_1 c_0)))) c_1)))
(assert (= BAV24 (= (f1 c_1 (f1 (f1 c_1 c_1) (f2 (f1 c_1 c_1)))) c_1)))
(assert (= BAV25 (= (f1 c_1 (f1 (f1 c_1 c_2) (f2 (f1 c_1 c_2)))) c_1)))
(assert (= BAV26 (= (f1 c_1 (f1 (f1 c_1 c_3) (f2 (f1 c_1 c_3)))) c_1)))
(assert (= BAV27 (= (f1 c_1 (f1 (f1 c_2 c_0) (f2 (f1 c_1 c_0)))) c_2)))
(assert (= BAV28 (= (f1 c_1 (f1 (f1 c_2 c_1) (f2 (f1 c_1 c_1)))) c_2)))
(assert (= BAV29 (= (f1 c_1 (f1 (f1 c_2 c_2) (f2 (f1 c_1 c_2)))) c_2)))
(assert (= BAV30 (= (f1 c_1 (f1 (f1 c_2 c_3) (f2 (f1 c_1 c_3)))) c_2)))
(assert (= BAV31 (= (f1 c_1 (f1 (f1 c_3 c_0) (f2 (f1 c_1 c_0)))) c_3)))
(assert (= BAV32 (= (f1 c_1 (f1 (f1 c_3 c_1) (f2 (f1 c_1 c_1)))) c_3)))
(assert (= BAV33 (= (f1 c_1 (f1 (f1 c_3 c_2) (f2 (f1 c_1 c_2)))) c_3)))
(assert (= BAV34 (= (f1 c_1 (f1 (f1 c_3 c_3) (f2 (f1 c_1 c_3)))) c_3)))
(assert (= BAV35 (= (f1 c_2 (f1 (f1 c_0 c_0) (f2 (f1 c_2 c_0)))) c_0)))
(assert (= BAV36 (= (f1 c_2 (f1 (f1 c_0 c_1) (f2 (f1 c_2 c_1)))) c_0)))
(assert (= BAV37 (= (f1 c_2 (f1 (f1 c_0 c_2) (f2 (f1 c_2 c_2)))) c_0)))
(assert (= BAV38 (= (f1 c_2 (f1 (f1 c_0 c_3) (f2 (f1 c_2 c_3)))) c_0)))
(assert (= BAV39 (= (f1 c_2 (f1 (f1 c_1 c_0) (f2 (f1 c_2 c_0)))) c_1)))
(assert (= BAV40 (= (f1 c_2 (f1 (f1 c_1 c_1) (f2 (f1 c_2 c_1)))) c_1)))
(assert (= BAV41 (= (f1 c_2 (f1 (f1 c_1 c_2) (f2 (f1 c_2 c_2)))) c_1)))
(assert (= BAV42 (= (f1 c_2 (f1 (f1 c_1 c_3) (f2 (f1 c_2 c_3)))) c_1)))
(assert (= BAV43 (= (f1 c_2 (f1 (f1 c_2 c_0) (f2 (f1 c_2 c_0)))) c_2)))
(assert (= BAV44 (= (f1 c_2 (f1 (f1 c_2 c_1) (f2 (f1 c_2 c_1)))) c_2)))
(assert (= BAV45 (= (f1 c_2 (f1 (f1 c_2 c_2) (f2 (f1 c_2 c_2)))) c_2)))
(assert (= BAV46 (= (f1 c_2 (f1 (f1 c_2 c_3) (f2 (f1 c_2 c_3)))) c_2)))
(assert (= BAV47 (= (f1 c_2 (f1 (f1 c_3 c_0) (f2 (f1 c_2 c_0)))) c_3)))
(assert (= BAV48 (= (f1 c_2 (f1 (f1 c_3 c_1) (f2 (f1 c_2 c_1)))) c_3)))
(assert (= BAV49 (= (f1 c_2 (f1 (f1 c_3 c_2) (f2 (f1 c_2 c_2)))) c_3)))
(assert (= BAV50 (= (f1 c_2 (f1 (f1 c_3 c_3) (f2 (f1 c_2 c_3)))) c_3)))
(assert (= BAV51 (= (f1 c_3 (f1 (f1 c_0 c_0) (f2 (f1 c_3 c_0)))) c_0)))
(assert (= BAV52 (= (f1 c_3 (f1 (f1 c_0 c_1) (f2 (f1 c_3 c_1)))) c_0)))
(assert (= BAV53 (= (f1 c_3 (f1 (f1 c_0 c_2) (f2 (f1 c_3 c_2)))) c_0)))
(assert (= BAV54 (= (f1 c_3 (f1 (f1 c_0 c_3) (f2 (f1 c_3 c_3)))) c_0)))
(assert (= BAV55 (= (f1 c_3 (f1 (f1 c_1 c_0) (f2 (f1 c_3 c_0)))) c_1)))
(assert (= BAV56 (= (f1 c_3 (f1 (f1 c_1 c_1) (f2 (f1 c_3 c_1)))) c_1)))
(assert (= BAV57 (= (f1 c_3 (f1 (f1 c_1 c_2) (f2 (f1 c_3 c_2)))) c_1)))
(assert (= BAV58 (= (f1 c_3 (f1 (f1 c_1 c_3) (f2 (f1 c_3 c_3)))) c_1)))
(assert (= BAV59 (= (f1 c_3 (f1 (f1 c_2 c_0) (f2 (f1 c_3 c_0)))) c_2)))
(assert (= BAV60 (= (f1 c_3 (f1 (f1 c_2 c_1) (f2 (f1 c_3 c_1)))) c_2)))
(assert (= BAV61 (= (f1 c_3 (f1 (f1 c_2 c_2) (f2 (f1 c_3 c_2)))) c_2)))
(assert (= BAV62 (= (f1 c_3 (f1 (f1 c_2 c_3) (f2 (f1 c_3 c_3)))) c_2)))
(assert (= BAV63 (= (f1 c_3 (f1 (f1 c_3 c_0) (f2 (f1 c_3 c_0)))) c_3)))
(assert (= BAV64 (= (f1 c_3 (f1 (f1 c_3 c_1) (f2 (f1 c_3 c_1)))) c_3)))
(assert (= BAV65 (= (f1 c_3 (f1 (f1 c_3 c_2) (f2 (f1 c_3 c_2)))) c_3)))
(assert (= BAV66 (= (f1 c_3 (f1 (f1 c_3 c_3) (f2 (f1 c_3 c_3)))) c_3)))
(assert (= BAV67 (or (not (= (f1 c10 c11) (f1 c11 c10))) (not (= (f1 (f2 c3) c3) (f1 (f2 c4) c4))) (not (= (f1 (f1 (f2 c5) c5) c6) c6)) (not (= (f1 (f1 c7 c8) c9) (f1 c7 (f1 c8 c9)))))))
(assert (= BAV68 (= (f1 c10 c11) (f1 c11 c10))))
(assert (= BAV69 (= (f1 (f2 c3) c3) (f1 (f2 c4) c4))))
(assert (= BAV70 (= (f1 (f1 (f2 c5) c5) c6) c6)))
(assert (= BAV71 (= (f1 (f1 c7 c8) c9) (f1 c7 (f1 c8 c9)))))
(assert (= BAV72 (or (= (f1 c_0 c_0) c_0) (= (f1 c_0 c_0) c_1) (= (f1 c_0 c_0) c_2) (= (f1 c_0 c_0) c_3))))
(assert (= BAV73 (= (f1 c_0 c_0) c_0)))
(assert (= BAV74 (= (f1 c_0 c_0) c_1)))
(assert (= BAV75 (= (f1 c_0 c_0) c_2)))
(assert (= BAV76 (= (f1 c_0 c_0) c_3)))
(assert (= BAV77 (or (= (f1 c_0 c_1) c_0) (= (f1 c_0 c_1) c_1) (= (f1 c_0 c_1) c_2) (= (f1 c_0 c_1) c_3))))
(assert (= BAV78 (= (f1 c_0 c_1) c_0)))
(assert (= BAV79 (= (f1 c_0 c_1) c_1)))
(assert (= BAV80 (= (f1 c_0 c_1) c_2)))
(assert (= BAV81 (= (f1 c_0 c_1) c_3)))
(assert (= BAV82 (or (= (f1 c_0 c_2) c_0) (= (f1 c_0 c_2) c_1) (= (f1 c_0 c_2) c_2) (= (f1 c_0 c_2) c_3))))
(assert (= BAV83 (= (f1 c_0 c_2) c_0)))
(assert (= BAV84 (= (f1 c_0 c_2) c_1)))
(assert (= BAV85 (= (f1 c_0 c_2) c_2)))
(assert (= BAV86 (= (f1 c_0 c_2) c_3)))
(assert (= BAV87 (or (= (f1 c_0 c_3) c_0) (= (f1 c_0 c_3) c_1) (= (f1 c_0 c_3) c_2) (= (f1 c_0 c_3) c_3))))
(assert (= BAV88 (= (f1 c_0 c_3) c_0)))
(assert (= BAV89 (= (f1 c_0 c_3) c_1)))
(assert (= BAV90 (= (f1 c_0 c_3) c_2)))
(assert (= BAV91 (= (f1 c_0 c_3) c_3)))
(assert (= BAV92 (or (= (f1 c_1 c_0) c_0) (= (f1 c_1 c_0) c_1) (= (f1 c_1 c_0) c_2) (= (f1 c_1 c_0) c_3))))
(assert (= BAV93 (= (f1 c_1 c_0) c_0)))
(assert (= BAV94 (= (f1 c_1 c_0) c_1)))
(assert (= BAV95 (= (f1 c_1 c_0) c_2)))
(assert (= BAV96 (= (f1 c_1 c_0) c_3)))
(assert (= BAV97 (or (= (f1 c_1 c_1) c_0) (= (f1 c_1 c_1) c_1) (= (f1 c_1 c_1) c_2) (= (f1 c_1 c_1) c_3))))
(assert (= BAV98 (= (f1 c_1 c_1) c_0)))
(assert (= BAV99 (= (f1 c_1 c_1) c_1)))
(assert (= BAV100 (= (f1 c_1 c_1) c_2)))
(assert (= BAV101 (= (f1 c_1 c_1) c_3)))
(assert (= BAV102 (or (= (f1 c_1 c_2) c_0) (= (f1 c_1 c_2) c_1) (= (f1 c_1 c_2) c_2) (= (f1 c_1 c_2) c_3))))
(assert (= BAV103 (= (f1 c_1 c_2) c_0)))
(assert (= BAV104 (= (f1 c_1 c_2) c_1)))
(assert (= BAV105 (= (f1 c_1 c_2) c_2)))
(assert (= BAV106 (= (f1 c_1 c_2) c_3)))
(assert (= BAV107 (or (= (f1 c_1 c_3) c_0) (= (f1 c_1 c_3) c_1) (= (f1 c_1 c_3) c_2) (= (f1 c_1 c_3) c_3))))
(assert (= BAV108 (= (f1 c_1 c_3) c_0)))
(assert (= BAV109 (= (f1 c_1 c_3) c_1)))
(assert (= BAV110 (= (f1 c_1 c_3) c_2)))
(assert (= BAV111 (= (f1 c_1 c_3) c_3)))
(assert (= BAV112 (or (= (f1 c_2 c_0) c_0) (= (f1 c_2 c_0) c_1) (= (f1 c_2 c_0) c_2) (= (f1 c_2 c_0) c_3))))
(assert (= BAV113 (= (f1 c_2 c_0) c_0)))
(assert (= BAV114 (= (f1 c_2 c_0) c_1)))
(assert (= BAV115 (= (f1 c_2 c_0) c_2)))
(assert (= BAV116 (= (f1 c_2 c_0) c_3)))
(assert (= BAV117 (or (= (f1 c_2 c_1) c_0) (= (f1 c_2 c_1) c_1) (= (f1 c_2 c_1) c_2) (= (f1 c_2 c_1) c_3))))
(assert (= BAV118 (= (f1 c_2 c_1) c_0)))
(assert (= BAV119 (= (f1 c_2 c_1) c_1)))
(assert (= BAV120 (= (f1 c_2 c_1) c_2)))
(assert (= BAV121 (= (f1 c_2 c_1) c_3)))
(assert (= BAV122 (or (= (f1 c_2 c_2) c_0) (= (f1 c_2 c_2) c_1) (= (f1 c_2 c_2) c_2) (= (f1 c_2 c_2) c_3))))
(assert (= BAV123 (= (f1 c_2 c_2) c_0)))
(assert (= BAV124 (= (f1 c_2 c_2) c_1)))
(assert (= BAV125 (= (f1 c_2 c_2) c_2)))
(assert (= BAV126 (= (f1 c_2 c_2) c_3)))
(assert (= BAV127 (or (= (f1 c_2 c_3) c_0) (= (f1 c_2 c_3) c_1) (= (f1 c_2 c_3) c_2) (= (f1 c_2 c_3) c_3))))
(assert (= BAV128 (= (f1 c_2 c_3) c_0)))
(assert (= BAV129 (= (f1 c_2 c_3) c_1)))
(assert (= BAV130 (= (f1 c_2 c_3) c_2)))
(assert (= BAV131 (= (f1 c_2 c_3) c_3)))
(assert (= BAV132 (or (= (f1 c_3 c_0) c_0) (= (f1 c_3 c_0) c_1) (= (f1 c_3 c_0) c_2) (= (f1 c_3 c_0) c_3))))
(assert (= BAV133 (= (f1 c_3 c_0) c_0)))
(assert (= BAV134 (= (f1 c_3 c_0) c_1)))
(assert (= BAV135 (= (f1 c_3 c_0) c_2)))
(assert (= BAV136 (= (f1 c_3 c_0) c_3)))
(assert (= BAV137 (or (= (f1 c_3 c_1) c_0) (= (f1 c_3 c_1) c_1) (= (f1 c_3 c_1) c_2) (= (f1 c_3 c_1) c_3))))
(assert (= BAV138 (= (f1 c_3 c_1) c_0)))
(assert (= BAV139 (= (f1 c_3 c_1) c_1)))
(assert (= BAV140 (= (f1 c_3 c_1) c_2)))
(assert (= BAV141 (= (f1 c_3 c_1) c_3)))
(assert (= BAV142 (or (= (f1 c_3 c_2) c_0) (= (f1 c_3 c_2) c_1) (= (f1 c_3 c_2) c_2) (= (f1 c_3 c_2) c_3))))
(assert (= BAV143 (= (f1 c_3 c_2) c_0)))
(assert (= BAV144 (= (f1 c_3 c_2) c_1)))
(assert (= BAV145 (= (f1 c_3 c_2) c_2)))
(assert (= BAV146 (= (f1 c_3 c_2) c_3)))
(assert (= BAV147 (or (= (f1 c_3 c_3) c_0) (= (f1 c_3 c_3) c_1) (= (f1 c_3 c_3) c_2) (= (f1 c_3 c_3) c_3))))
(assert (= BAV148 (= (f1 c_3 c_3) c_0)))
(assert (= BAV149 (= (f1 c_3 c_3) c_1)))
(assert (= BAV150 (= (f1 c_3 c_3) c_2)))
(assert (= BAV151 (= (f1 c_3 c_3) c_3)))
(assert (= BAV152 (or (= (f2 c_0) c_0) (= (f2 c_0) c_1) (= (f2 c_0) c_2) (= (f2 c_0) c_3))))
(assert (= BAV153 (= (f2 c_0) c_0)))
(assert (= BAV154 (= (f2 c_0) c_1)))
(assert (= BAV155 (= (f2 c_0) c_2)))
(assert (= BAV156 (= (f2 c_0) c_3)))
(assert (= BAV157 (or (= (f2 c_1) c_0) (= (f2 c_1) c_1) (= (f2 c_1) c_2) (= (f2 c_1) c_3))))
(assert (= BAV158 (= (f2 c_1) c_0)))
(assert (= BAV159 (= (f2 c_1) c_1)))
(assert (= BAV160 (= (f2 c_1) c_2)))
(assert (= BAV161 (= (f2 c_1) c_3)))
(assert (= BAV162 (or (= (f2 c_2) c_0) (= (f2 c_2) c_1) (= (f2 c_2) c_2) (= (f2 c_2) c_3))))
(assert (= BAV163 (= (f2 c_2) c_0)))
(assert (= BAV164 (= (f2 c_2) c_1)))
(assert (= BAV165 (= (f2 c_2) c_2)))
(assert (= BAV166 (= (f2 c_2) c_3)))
(assert (= BAV167 (or (= (f2 c_3) c_0) (= (f2 c_3) c_1) (= (f2 c_3) c_2) (= (f2 c_3) c_3))))
(assert (= BAV168 (= (f2 c_3) c_0)))
(assert (= BAV169 (= (f2 c_3) c_1)))
(assert (= BAV170 (= (f2 c_3) c_2)))
(assert (= BAV171 (= (f2 c_3) c_3)))
(assert (= BAV172 (or (= c10 c_0) (= c10 c_1) (= c10 c_2) (= c10 c_3))))
(assert (= BAV173 (= c10 c_0)))
(assert (= BAV174 (= c10 c_1)))
(assert (= BAV175 (= c10 c_2)))
(assert (= BAV176 (= c10 c_3)))
(assert (= BAV177 (or (= c11 c_0) (= c11 c_1) (= c11 c_2) (= c11 c_3))))
(assert (= BAV178 (= c11 c_0)))
(assert (= BAV179 (= c11 c_1)))
(assert (= BAV180 (= c11 c_2)))
(assert (= BAV181 (= c11 c_3)))
(assert (= BAV182 (or (= c3 c_0) (= c3 c_1) (= c3 c_2) (= c3 c_3))))
(assert (= BAV183 (= c3 c_0)))
(assert (= BAV184 (= c3 c_1)))
(assert (= BAV185 (= c3 c_2)))
(assert (= BAV186 (= c3 c_3)))
(assert (= BAV187 (or (= c4 c_0) (= c4 c_1) (= c4 c_2) (= c4 c_3))))
(assert (= BAV188 (= c4 c_0)))
(assert (= BAV189 (= c4 c_1)))
(assert (= BAV190 (= c4 c_2)))
(assert (= BAV191 (= c4 c_3)))
(assert (= BAV192 (or (= c5 c_0) (= c5 c_1) (= c5 c_2) (= c5 c_3))))
(assert (= BAV193 (= c5 c_0)))
(assert (= BAV194 (= c5 c_1)))
(assert (= BAV195 (= c5 c_2)))
(assert (= BAV196 (= c5 c_3)))
(assert (= BAV197 (or (= c6 c_0) (= c6 c_1) (= c6 c_2) (= c6 c_3))))
(assert (= BAV198 (= c6 c_0)))
(assert (= BAV199 (= c6 c_1)))
(assert (= BAV200 (= c6 c_2)))
(assert (= BAV201 (= c6 c_3)))
(assert (= BAV202 (or (= c7 c_0) (= c7 c_1) (= c7 c_2) (= c7 c_3))))
(assert (= BAV203 (= c7 c_0)))
(assert (= BAV204 (= c7 c_1)))
(assert (= BAV205 (= c7 c_2)))
(assert (= BAV206 (= c7 c_3)))
(assert (= BAV207 (or (= c8 c_0) (= c8 c_1) (= c8 c_2) (= c8 c_3))))
(assert (= BAV208 (= c8 c_0)))
(assert (= BAV209 (= c8 c_1)))
(assert (= BAV210 (= c8 c_2)))
(assert (= BAV211 (= c8 c_3)))
(assert (= BAV212 (or (= c9 c_0) (= c9 c_1) (= c9 c_2) (= c9 c_3))))
(assert (= BAV213 (= c9 c_0)))
(assert (= BAV214 (= c9 c_1)))
(assert (= BAV215 (= c9 c_2)))
(assert (= BAV216 (= c9 c_3)))
(check-sat-assuming ((and (distinct c_0 c_1 c_2 c_3) (= (f1 c_0 (f1 (f1 c_0 c_0) (f2 (f1 c_0 c_0)))) c_0) (= (f1 c_0 (f1 (f1 c_0 c_1) (f2 (f1 c_0 c_1)))) c_0) (= (f1 c_0 (f1 (f1 c_0 c_2) (f2 (f1 c_0 c_2)))) c_0) (= (f1 c_0 (f1 (f1 c_0 c_3) (f2 (f1 c_0 c_3)))) c_0) (= (f1 c_0 (f1 (f1 c_1 c_0) (f2 (f1 c_0 c_0)))) c_1) (= (f1 c_0 (f1 (f1 c_1 c_1) (f2 (f1 c_0 c_1)))) c_1) (= (f1 c_0 (f1 (f1 c_1 c_2) (f2 (f1 c_0 c_2)))) c_1) (= (f1 c_0 (f1 (f1 c_1 c_3) (f2 (f1 c_0 c_3)))) c_1) (= (f1 c_0 (f1 (f1 c_2 c_0) (f2 (f1 c_0 c_0)))) c_2) (= (f1 c_0 (f1 (f1 c_2 c_1) (f2 (f1 c_0 c_1)))) c_2) (= (f1 c_0 (f1 (f1 c_2 c_2) (f2 (f1 c_0 c_2)))) c_2) (= (f1 c_0 (f1 (f1 c_2 c_3) (f2 (f1 c_0 c_3)))) c_2) (= (f1 c_0 (f1 (f1 c_3 c_0) (f2 (f1 c_0 c_0)))) c_3) (= (f1 c_0 (f1 (f1 c_3 c_1) (f2 (f1 c_0 c_1)))) c_3) (= (f1 c_0 (f1 (f1 c_3 c_2) (f2 (f1 c_0 c_2)))) c_3) (= (f1 c_0 (f1 (f1 c_3 c_3) (f2 (f1 c_0 c_3)))) c_3) (= (f1 c_1 (f1 (f1 c_0 c_0) (f2 (f1 c_1 c_0)))) c_0) (= (f1 c_1 (f1 (f1 c_0 c_1) (f2 (f1 c_1 c_1)))) c_0) (= (f1 c_1 (f1 (f1 c_0 c_2) (f2 (f1 c_1 c_2)))) c_0) (= (f1 c_1 (f1 (f1 c_0 c_3) (f2 (f1 c_1 c_3)))) c_0) (= (f1 c_1 (f1 (f1 c_1 c_0) (f2 (f1 c_1 c_0)))) c_1) (= (f1 c_1 (f1 (f1 c_1 c_1) (f2 (f1 c_1 c_1)))) c_1) (= (f1 c_1 (f1 (f1 c_1 c_2) (f2 (f1 c_1 c_2)))) c_1) (= (f1 c_1 (f1 (f1 c_1 c_3) (f2 (f1 c_1 c_3)))) c_1) (= (f1 c_1 (f1 (f1 c_2 c_0) (f2 (f1 c_1 c_0)))) c_2) (= (f1 c_1 (f1 (f1 c_2 c_1) (f2 (f1 c_1 c_1)))) c_2) (= (f1 c_1 (f1 (f1 c_2 c_2) (f2 (f1 c_1 c_2)))) c_2) (= (f1 c_1 (f1 (f1 c_2 c_3) (f2 (f1 c_1 c_3)))) c_2) (= (f1 c_1 (f1 (f1 c_3 c_0) (f2 (f1 c_1 c_0)))) c_3) (= (f1 c_1 (f1 (f1 c_3 c_1) (f2 (f1 c_1 c_1)))) c_3) (= (f1 c_1 (f1 (f1 c_3 c_2) (f2 (f1 c_1 c_2)))) c_3) (= (f1 c_1 (f1 (f1 c_3 c_3) (f2 (f1 c_1 c_3)))) c_3) (= (f1 c_2 (f1 (f1 c_0 c_0) (f2 (f1 c_2 c_0)))) c_0) (= (f1 c_2 (f1 (f1 c_0 c_1) (f2 (f1 c_2 c_1)))) c_0) (= (f1 c_2 (f1 (f1 c_0 c_2) (f2 (f1 c_2 c_2)))) c_0) (= (f1 c_2 (f1 (f1 c_0 c_3) (f2 (f1 c_2 c_3)))) c_0) (= (f1 c_2 (f1 (f1 c_1 c_0) (f2 (f1 c_2 c_0)))) c_1) (= (f1 c_2 (f1 (f1 c_1 c_1) (f2 (f1 c_2 c_1)))) c_1) (= (f1 c_2 (f1 (f1 c_1 c_2) (f2 (f1 c_2 c_2)))) c_1) (= (f1 c_2 (f1 (f1 c_1 c_3) (f2 (f1 c_2 c_3)))) c_1) (= (f1 c_2 (f1 (f1 c_2 c_0) (f2 (f1 c_2 c_0)))) c_2) (= (f1 c_2 (f1 (f1 c_2 c_1) (f2 (f1 c_2 c_1)))) c_2) (= (f1 c_2 (f1 (f1 c_2 c_2) (f2 (f1 c_2 c_2)))) c_2) (= (f1 c_2 (f1 (f1 c_2 c_3) (f2 (f1 c_2 c_3)))) c_2) (= (f1 c_2 (f1 (f1 c_3 c_0) (f2 (f1 c_2 c_0)))) c_3) (= (f1 c_2 (f1 (f1 c_3 c_1) (f2 (f1 c_2 c_1)))) c_3) (= (f1 c_2 (f1 (f1 c_3 c_2) (f2 (f1 c_2 c_2)))) c_3) (= (f1 c_2 (f1 (f1 c_3 c_3) (f2 (f1 c_2 c_3)))) c_3) (= (f1 c_3 (f1 (f1 c_0 c_0) (f2 (f1 c_3 c_0)))) c_0) (= (f1 c_3 (f1 (f1 c_0 c_1) (f2 (f1 c_3 c_1)))) c_0) (= (f1 c_3 (f1 (f1 c_0 c_2) (f2 (f1 c_3 c_2)))) c_0) (= (f1 c_3 (f1 (f1 c_0 c_3) (f2 (f1 c_3 c_3)))) c_0) (= (f1 c_3 (f1 (f1 c_1 c_0) (f2 (f1 c_3 c_0)))) c_1) (= (f1 c_3 (f1 (f1 c_1 c_1) (f2 (f1 c_3 c_1)))) c_1) (= (f1 c_3 (f1 (f1 c_1 c_2) (f2 (f1 c_3 c_2)))) c_1) (= (f1 c_3 (f1 (f1 c_1 c_3) (f2 (f1 c_3 c_3)))) c_1) (= (f1 c_3 (f1 (f1 c_2 c_0) (f2 (f1 c_3 c_0)))) c_2) (= (f1 c_3 (f1 (f1 c_2 c_1) (f2 (f1 c_3 c_1)))) c_2) (= (f1 c_3 (f1 (f1 c_2 c_2) (f2 (f1 c_3 c_2)))) c_2) (= (f1 c_3 (f1 (f1 c_2 c_3) (f2 (f1 c_3 c_3)))) c_2) (= (f1 c_3 (f1 (f1 c_3 c_0) (f2 (f1 c_3 c_0)))) c_3) (= (f1 c_3 (f1 (f1 c_3 c_1) (f2 (f1 c_3 c_1)))) c_3) (= (f1 c_3 (f1 (f1 c_3 c_2) (f2 (f1 c_3 c_2)))) c_3) (= (f1 c_3 (f1 (f1 c_3 c_3) (f2 (f1 c_3 c_3)))) c_3) (or (not (= (f1 c10 c11) (f1 c11 c10))) (not (= (f1 (f2 c3) c3) (f1 (f2 c4) c4))) (not (= (f1 (f1 (f2 c5) c5) c6) c6)) (not (= (f1 (f1 c7 c8) c9) (f1 c7 (f1 c8 c9))))) (or (= (f1 c_0 c_0) c_0) (= (f1 c_0 c_0) c_1) (= (f1 c_0 c_0) c_2) (= (f1 c_0 c_0) c_3)) (or (= (f1 c_0 c_1) c_0) (= (f1 c_0 c_1) c_1) (= (f1 c_0 c_1) c_2) (= (f1 c_0 c_1) c_3)) (or (= (f1 c_0 c_2) c_0) (= (f1 c_0 c_2) c_1) (= (f1 c_0 c_2) c_2) (= (f1 c_0 c_2) c_3)) (or (= (f1 c_0 c_3) c_0) (= (f1 c_0 c_3) c_1) (= (f1 c_0 c_3) c_2) (= (f1 c_0 c_3) c_3)) (or (= (f1 c_1 c_0) c_0) (= (f1 c_1 c_0) c_1) (= (f1 c_1 c_0) c_2) (= (f1 c_1 c_0) c_3)) (or (= (f1 c_1 c_1) c_0) (= (f1 c_1 c_1) c_1) (= (f1 c_1 c_1) c_2) (= (f1 c_1 c_1) c_3)) (or (= (f1 c_1 c_2) c_0) (= (f1 c_1 c_2) c_1) (= (f1 c_1 c_2) c_2) (= (f1 c_1 c_2) c_3)) (or (= (f1 c_1 c_3) c_0) (= (f1 c_1 c_3) c_1) (= (f1 c_1 c_3) c_2) (= (f1 c_1 c_3) c_3)) (or (= (f1 c_2 c_0) c_0) (= (f1 c_2 c_0) c_1) (= (f1 c_2 c_0) c_2) (= (f1 c_2 c_0) c_3)) (or (= (f1 c_2 c_1) c_0) (= (f1 c_2 c_1) c_1) (= (f1 c_2 c_1) c_2) (= (f1 c_2 c_1) c_3)) (or (= (f1 c_2 c_2) c_0) (= (f1 c_2 c_2) c_1) (= (f1 c_2 c_2) c_2) (= (f1 c_2 c_2) c_3)) (or (= (f1 c_2 c_3) c_0) (= (f1 c_2 c_3) c_1) (= (f1 c_2 c_3) c_2) (= (f1 c_2 c_3) c_3)) (or (= (f1 c_3 c_0) c_0) (= (f1 c_3 c_0) c_1) (= (f1 c_3 c_0) c_2) (= (f1 c_3 c_0) c_3)) (or (= (f1 c_3 c_1) c_0) (= (f1 c_3 c_1) c_1) (= (f1 c_3 c_1) c_2) (= (f1 c_3 c_1) c_3)) (or (= (f1 c_3 c_2) c_0) (= (f1 c_3 c_2) c_1) (= (f1 c_3 c_2) c_2) (= (f1 c_3 c_2) c_3)) (or (= (f1 c_3 c_3) c_0) (= (f1 c_3 c_3) c_1) (= (f1 c_3 c_3) c_2) (= (f1 c_3 c_3) c_3)) (or (= (f2 c_0) c_0) (= (f2 c_0) c_1) (= (f2 c_0) c_2) (= (f2 c_0) c_3)) (or (= (f2 c_1) c_0) (= (f2 c_1) c_1) (= (f2 c_1) c_2) (= (f2 c_1) c_3)) (or (= (f2 c_2) c_0) (= (f2 c_2) c_1) (= (f2 c_2) c_2) (= (f2 c_2) c_3)) (or (= (f2 c_3) c_0) (= (f2 c_3) c_1) (= (f2 c_3) c_2) (= (f2 c_3) c_3)) (or (= c10 c_0) (= c10 c_1) (= c10 c_2) (= c10 c_3)) (or (= c11 c_0) (= c11 c_1) (= c11 c_2) (= c11 c_3)) (or (= c3 c_0) (= c3 c_1) (= c3 c_2) (= c3 c_3)) (or (= c4 c_0) (= c4 c_1) (= c4 c_2) (= c4 c_3)) (or (= c5 c_0) (= c5 c_1) (= c5 c_2) (= c5 c_3)) (or (= c6 c_0) (= c6 c_1) (= c6 c_2) (= c6 c_3)) (or (= c7 c_0) (= c7 c_1) (= c7 c_2) (= c7 c_3)) (or (= c8 c_0) (= c8 c_1) (= c8 c_2) (= c8 c_3)) (or (= c9 c_0) (= c9 c_1) (= c9 c_2) (= c9 c_3)))))
(get-model)