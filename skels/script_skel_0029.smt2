(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic ALL)
(declare-const GEN1 Int)
(declare-const GEN2 Int)
(declare-const GEN3 Int)
(declare-const GEN4 Int)
(declare-const GEN5 Int)
(declare-const GEN6 Int)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(assert (or (and (ite (xor (< v0 v1) (> v0 v0)) (= (and (not (=> (= (- v1 v0) (- GEN4)) (ite (>= v0 v0) (or (or (>= (- v1 v1) (- GEN3)) (< v0 v0)) (> v1 v1)) (= (> v0 v0) (< (- v1 v0) (- GEN5)))))) (=> (and (> (- v1 v1) GEN3) (ite (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)))) (or (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3))) (distinct (- v0 v0) GEN2)))) (xor (<= (- v1 v1) (- GEN3)) (= v0 v0))) (=> (and (< v0 v1) (distinct (- v0 v0) (- GEN6))) (and (< v0 v1) (distinct (- v0 v0) (- GEN6))))) (ite (xor (distinct (- v1 v0) GEN2) (not (= (<= (- v0 v1) (- GEN3)) (>= (- v0 v1) GEN6)))) (ite (ite (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3))) (> (- v0 v1) (- GEN2)) (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))) (= v0 v1) (> v1 v1)) (ite (ite (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3))) (> (- v0 v1) (- GEN2)) (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))) (= v0 v1) (> v1 v1)))) (xor (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))) (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))))))
(assert (= BAV7 (or (and (ite (xor (< v0 v1) (> v0 v0)) (= (and (not (=> (= (- v1 v0) (- GEN4)) (ite (>= v0 v0) (or (or (>= (- v1 v1) (- GEN3)) (< v0 v0)) (> v1 v1)) (= (> v0 v0) (< (- v1 v0) (- GEN5)))))) (=> (and (> (- v1 v1) GEN3) (ite (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)))) (or (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3))) (distinct (- v0 v0) GEN2)))) (xor (<= (- v1 v1) (- GEN3)) (= v0 v0))) (=> (and (< v0 v1) (distinct (- v0 v0) (- GEN6))) (and (< v0 v1) (distinct (- v0 v0) (- GEN6))))) (ite (xor (distinct (- v1 v0) GEN2) (not (= (<= (- v0 v1) (- GEN3)) (>= (- v0 v1) GEN6)))) (ite (ite (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3))) (> (- v0 v1) (- GEN2)) (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))) (= v0 v1) (> v1 v1)) (ite (ite (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3))) (> (- v0 v1) (- GEN2)) (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))) (= v0 v1) (> v1 v1)))) (xor (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))) (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3)))))))))
(assert (= BAV8 (and (ite (xor (< v0 v1) (> v0 v0)) (= (and (not (=> (= (- v1 v0) (- GEN4)) (ite (>= v0 v0) (or (or (>= (- v1 v1) (- GEN3)) (< v0 v0)) (> v1 v1)) (= (> v0 v0) (< (- v1 v0) (- GEN5)))))) (=> (and (> (- v1 v1) GEN3) (ite (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)))) (or (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3))) (distinct (- v0 v0) GEN2)))) (xor (<= (- v1 v1) (- GEN3)) (= v0 v0))) (=> (and (< v0 v1) (distinct (- v0 v0) (- GEN6))) (and (< v0 v1) (distinct (- v0 v0) (- GEN6))))) (ite (xor (distinct (- v1 v0) GEN2) (not (= (<= (- v0 v1) (- GEN3)) (>= (- v0 v1) GEN6)))) (ite (ite (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3))) (> (- v0 v1) (- GEN2)) (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))) (= v0 v1) (> v1 v1)) (ite (ite (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3))) (> (- v0 v1) (- GEN2)) (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))) (= v0 v1) (> v1 v1))))))
(assert (= BAV9 (xor (< v0 v1) (> v0 v0))))
(assert (= BAV10 (< v0 v1)))
(assert (= BAV11 (> v0 v0)))
(assert (= BAV12 (= (and (not (=> (= (- v1 v0) (- GEN4)) (ite (>= v0 v0) (or (or (>= (- v1 v1) (- GEN3)) (< v0 v0)) (> v1 v1)) (= (> v0 v0) (< (- v1 v0) (- GEN5)))))) (=> (and (> (- v1 v1) GEN3) (ite (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)))) (or (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3))) (distinct (- v0 v0) GEN2)))) (xor (<= (- v1 v1) (- GEN3)) (= v0 v0)))))
(assert (= BAV13 (and (not (=> (= (- v1 v0) (- GEN4)) (ite (>= v0 v0) (or (or (>= (- v1 v1) (- GEN3)) (< v0 v0)) (> v1 v1)) (= (> v0 v0) (< (- v1 v0) (- GEN5)))))) (=> (and (> (- v1 v1) GEN3) (ite (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)))) (or (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3))) (distinct (- v0 v0) GEN2))))))
(assert (= BAV14 (=> (= (- v1 v0) (- GEN4)) (ite (>= v0 v0) (or (or (>= (- v1 v1) (- GEN3)) (< v0 v0)) (> v1 v1)) (= (> v0 v0) (< (- v1 v0) (- GEN5)))))))
(assert (= BAV15 (= (- v1 v0) (- GEN4))))
(assert (= BAV16 (>= v0 v0)))
(assert (= BAV17 (or (or (>= (- v1 v1) (- GEN3)) (< v0 v0)) (> v1 v1))))
(assert (= BAV18 (or (>= (- v1 v1) (- GEN3)) (< v0 v0))))
(assert (= BAV19 (>= (- v1 v1) (- GEN3))))
(assert (= BAV20 (< v0 v0)))
(assert (= BAV21 (> v1 v1)))
(assert (= BAV22 (= (> v0 v0) (< (- v1 v0) (- GEN5)))))
(assert (= BAV23 (> v0 v0)))
(assert (= BAV24 (< (- v1 v0) (- GEN5))))
(assert (= BAV25 (=> (and (> (- v1 v1) GEN3) (ite (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)))) (or (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3))) (distinct (- v0 v0) GEN2)))))
(assert (= BAV26 (and (> (- v1 v1) GEN3) (ite (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5)) (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5))))))
(assert (= BAV27 (> (- v1 v1) GEN3)))
(assert (= BAV28 (=> (> v0 v1) (and (> v0 v1) (distinct (- v1 v1) (- GEN1))))))
(assert (= BAV29 (> v0 v1)))
(assert (= BAV30 (and (> v0 v1) (distinct (- v1 v1) (- GEN1)))))
(assert (= BAV31 (> v0 v1)))
(assert (= BAV32 (distinct (- v1 v1) (- GEN1))))
(assert (= BAV33 (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5))))
(assert (= BAV34 (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0)))))
(assert (= BAV35 (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1))))))
(assert (= BAV36 (> (- v0 v0) (- GEN1))))
(assert (= BAV37 (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))))
(assert (= BAV38 (< (- v1 v1) GEN3)))
(assert (= BAV39 (= (- v1 v1) (- GEN1))))
(assert (= BAV40 (< v0 v0)))
(assert (= BAV41 (>= (- v0 v1) GEN5)))
(assert (= BAV42 (or (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0))) (>= (- v0 v1) GEN5))))
(assert (= BAV43 (= (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))) (not (< v0 v0)))))
(assert (= BAV44 (xor (> (- v0 v0) (- GEN1)) (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1))))))
(assert (= BAV45 (> (- v0 v0) (- GEN1))))
(assert (= BAV46 (or (< (- v1 v1) GEN3) (= (- v1 v1) (- GEN1)))))
(assert (= BAV47 (< (- v1 v1) GEN3)))
(assert (= BAV48 (= (- v1 v1) (- GEN1))))
(assert (= BAV49 (< v0 v0)))
(assert (= BAV50 (>= (- v0 v1) GEN5)))
(assert (= BAV51 (or (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3))) (distinct (- v0 v0) GEN2))))
(assert (= BAV52 (and (= (<= (- v1 v0) (- GEN3)) (< v1 v0)) (< (- v0 v1) (- GEN3)))))
(assert (= BAV53 (= (<= (- v1 v0) (- GEN3)) (< v1 v0))))
(assert (= BAV54 (<= (- v1 v0) (- GEN3))))
(assert (= BAV55 (< v1 v0)))
(assert (= BAV56 (< (- v0 v1) (- GEN3))))
(assert (= BAV57 (distinct (- v0 v0) GEN2)))
(assert (= BAV58 (xor (<= (- v1 v1) (- GEN3)) (= v0 v0))))
(assert (= BAV59 (<= (- v1 v1) (- GEN3))))
(assert (= BAV60 (= v0 v0)))
(assert (= BAV61 (=> (and (< v0 v1) (distinct (- v0 v0) (- GEN6))) (and (< v0 v1) (distinct (- v0 v0) (- GEN6))))))
(assert (= BAV62 (and (< v0 v1) (distinct (- v0 v0) (- GEN6)))))
(assert (= BAV63 (< v0 v1)))
(assert (= BAV64 (distinct (- v0 v0) (- GEN6))))
(assert (= BAV65 (and (< v0 v1) (distinct (- v0 v0) (- GEN6)))))
(assert (= BAV66 (< v0 v1)))
(assert (= BAV67 (distinct (- v0 v0) (- GEN6))))
(assert (= BAV68 (xor (distinct (- v1 v0) GEN2) (not (= (<= (- v0 v1) (- GEN3)) (>= (- v0 v1) GEN6))))))
(assert (= BAV69 (distinct (- v1 v0) GEN2)))
(assert (= BAV70 (= (<= (- v0 v1) (- GEN3)) (>= (- v0 v1) GEN6))))
(assert (= BAV71 (<= (- v0 v1) (- GEN3))))
(assert (= BAV72 (>= (- v0 v1) GEN6)))
(assert (= BAV73 (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3)))))
(assert (= BAV74 (<= (- v1 v0) (- GEN3))))
(assert (= BAV75 (= (- v1 v0) (- GEN3))))
(assert (= BAV76 (> (- v0 v1) (- GEN2))))
(assert (= BAV77 (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))))
(assert (= BAV78 (= (- v0 v0) GEN1)))
(assert (= BAV79 (>= v0 v0)))
(assert (= BAV80 (distinct v1 v0)))
(assert (= BAV81 (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4)))))
(assert (= BAV82 (= (distinct v1 v1) (< v1 v1))))
(assert (= BAV83 (distinct v1 v1)))
(assert (= BAV84 (< v1 v1)))
(assert (= BAV85 (>= (- v1 v0) (- GEN3))))
(assert (= BAV86 (<= (- v1 v0) (- GEN4))))
(assert (= BAV87 (= (- v0 v0) GEN4)))
(assert (= BAV88 (= v0 v1)))
(assert (= BAV89 (> v1 v1)))
(assert (= BAV90 (= (<= (- v1 v0) (- GEN3)) (= (- v1 v0) (- GEN3)))))
(assert (= BAV91 (<= (- v1 v0) (- GEN3))))
(assert (= BAV92 (= (- v1 v0) (- GEN3))))
(assert (= BAV93 (> (- v0 v1) (- GEN2))))
(assert (= BAV94 (= (ite (= (- v0 v0) GEN1) (>= v0 v0) (distinct v1 v0)) (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4))))))
(assert (= BAV95 (= (- v0 v0) GEN1)))
(assert (= BAV96 (>= v0 v0)))
(assert (= BAV97 (distinct v1 v0)))
(assert (= BAV98 (and (= (distinct v1 v1) (< v1 v1)) (ite (>= (- v1 v0) (- GEN3)) (<= (- v1 v0) (- GEN4)) (= (- v0 v0) GEN4)))))
(assert (= BAV99 (= (distinct v1 v1) (< v1 v1))))
(assert (= BAV100 (distinct v1 v1)))
(assert (= BAV101 (< v1 v1)))
(assert (= BAV102 (>= (- v1 v0) (- GEN3))))
(assert (= BAV103 (<= (- v1 v0) (- GEN4))))
(assert (= BAV104 (= (- v0 v0) GEN4)))
(assert (= BAV105 (= v0 v1)))
(assert (= BAV106 (> v1 v1)))
(assert (= BAV107 (xor (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))) (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))))))
(assert (= BAV108 (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3)))))))
(assert (= BAV109 (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4)))))
(assert (= BAV110 (< (- v1 v0) (- GEN6))))
(assert (= BAV111 (= (< v1 v1) (distinct (- v1 v1) GEN4))))
(assert (= BAV112 (< v1 v1)))
(assert (= BAV113 (distinct (- v1 v1) GEN4)))
(assert (= BAV114 (<= v0 v0)))
(assert (= BAV115 (>= (- v0 v0) GEN3)))
(assert (= BAV116 (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))))
(assert (= BAV117 (distinct v1 v0)))
(assert (= BAV118 (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3)))))
(assert (= BAV119 (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))))
(assert (= BAV120 (<= v0 v0)))
(assert (= BAV121 (=> (= v0 v0) (distinct (- v0 v0) (- GEN2)))))
(assert (= BAV122 (= v0 v0)))
(assert (= BAV123 (distinct (- v0 v0) (- GEN2))))
(assert (= BAV124 (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))
(assert (= BAV125 (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6))))
(assert (= BAV126 (distinct (- v0 v1) GEN1)))
(assert (= BAV127 (= (- v1 v1) GEN6)))
(assert (= BAV128 (< (- v0 v1) GEN3)))
(assert (= BAV129 (and (ite (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4))) (<= v0 v0) (>= (- v0 v0) GEN3)) (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3)))))))
(assert (= BAV130 (=> (< (- v1 v0) (- GEN6)) (= (< v1 v1) (distinct (- v1 v1) GEN4)))))
(assert (= BAV131 (< (- v1 v0) (- GEN6))))
(assert (= BAV132 (= (< v1 v1) (distinct (- v1 v1) GEN4))))
(assert (= BAV133 (< v1 v1)))
(assert (= BAV134 (distinct (- v1 v1) GEN4)))
(assert (= BAV135 (<= v0 v0)))
(assert (= BAV136 (>= (- v0 v0) GEN3)))
(assert (= BAV137 (= (distinct v1 v0) (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))))
(assert (= BAV138 (distinct v1 v0)))
(assert (= BAV139 (xor (not (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))) (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3)))))
(assert (= BAV140 (xor (<= v0 v0) (=> (= v0 v0) (distinct (- v0 v0) (- GEN2))))))
(assert (= BAV141 (<= v0 v0)))
(assert (= BAV142 (=> (= v0 v0) (distinct (- v0 v0) (- GEN2)))))
(assert (= BAV143 (= v0 v0)))
(assert (= BAV144 (distinct (- v0 v0) (- GEN2))))
(assert (= BAV145 (and (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6)) (< (- v0 v1) GEN3))))
(assert (= BAV146 (=> (distinct (- v0 v1) GEN1) (= (- v1 v1) GEN6))))
(assert (= BAV147 (distinct (- v0 v1) GEN1)))
(assert (= BAV148 (= (- v1 v1) GEN6)))
(assert (= BAV149 (< (- v0 v1) GEN3)))
(check-sat)
(get-model)