(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun b1 () Real)
(declare-fun b2 () Real)
(declare-fun d () Real)
(declare-fun q () Real)
(declare-fun r1 () Real)
(declare-fun r2 () Real)
(declare-fun v () Real)
(declare-fun s () Real)
(declare-fun F () Real)
(declare-fun J () Real)
(declare-fun T () Real)
(assert (and (= (- (- d (* d s)) (* b1 (* J s))) GEN1) (= (- (* v F) (* (+ d r2) J)) GEN2) (= (+ (- (+ (* b1 J) (* b2 (* J T))) (* (+ (+ d v) r1) F)) (* (- GEN3 q) (* r2 J))) GEN4) (= (- (+ (- (* r1 F) (* d T)) (* q (* r2 J))) (* b2 (* T J))) GEN5) (> F GEN6) (> J GEN7) (> T GEN8) (> s GEN9) (> b1 GEN10) (> d GEN11) (> v GEN12) (> r1 GEN13) (> r2 GEN14) (> q GEN15) (> b1 b2)))
(eliminate-quantifiers (exists s F J T))
(exit)
(assert (= BAV1 (and (= (- (- d (* d s)) (* b1 (* J s))) GEN1) (= (- (* v F) (* (+ d r2) J)) GEN2) (= (+ (- (+ (* b1 J) (* b2 (* J T))) (* (+ (+ d v) r1) F)) (* (- GEN3 q) (* r2 J))) GEN4) (= (- (+ (- (* r1 F) (* d T)) (* q (* r2 J))) (* b2 (* T J))) GEN5) (> F GEN6) (> J GEN7) (> T GEN8) (> s GEN9) (> b1 GEN10) (> d GEN11) (> v GEN12) (> r1 GEN13) (> r2 GEN14) (> q GEN15) (> b1 b2))))
(assert (= BAV2 (= (- (- d (* d s)) (* b1 (* J s))) GEN1)))
(assert (= BAV3 (= (- (* v F) (* (+ d r2) J)) GEN2)))
(assert (= BAV4 (= (+ (- (+ (* b1 J) (* b2 (* J T))) (* (+ (+ d v) r1) F)) (* (- GEN3 q) (* r2 J))) GEN4)))
(assert (= BAV5 (= (- (+ (- (* r1 F) (* d T)) (* q (* r2 J))) (* b2 (* T J))) GEN5)))
(assert (= BAV6 (> F GEN6)))
(assert (= BAV7 (> J GEN7)))
(assert (= BAV8 (> T GEN8)))
(assert (= BAV9 (> s GEN9)))
(assert (= BAV10 (> b1 GEN10)))
(assert (= BAV11 (> d GEN11)))
(assert (= BAV12 (> v GEN12)))
(assert (= BAV13 (> r1 GEN13)))
(assert (= BAV14 (> r2 GEN14)))
(assert (= BAV15 (> q GEN15)))
(assert (= BAV16 (> b1 b2)))