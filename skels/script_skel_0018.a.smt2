(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-sort var 0)
(declare-sort reg 0)
(declare-fun a1_1 () var)
(declare-fun r0 () reg)
(declare-fun r1 () reg)
(declare-fun r2 () reg)
(declare-fun r3 () reg)
(assert (not (= r0 r1)))
(assert (not (= r0 r2)))
(assert (not (= r0 r3)))
(assert (not (= r1 r2)))
(assert (not (= r1 r3)))
(assert (not (= r2 r3)))
(declare-fun assign (var) reg)
(assert (or (= (assign a1_1) r3) (= (assign a1_1) r0) (= (assign a1_1) r1) (= (assign a1_1) r2)))
(assert (= (assign a1_1) r3))
(assert (= BAV1 (= r0 r1)))
(assert (= BAV2 (= r0 r2)))
(assert (= BAV3 (= r0 r3)))
(assert (= BAV4 (= r1 r2)))
(assert (= BAV5 (= r1 r3)))
(assert (= BAV6 (= r2 r3)))
(assert (= BAV7 (or (= (assign a1_1) r3) (= (assign a1_1) r0) (= (assign a1_1) r1) (= (assign a1_1) r2))))
(assert (= BAV8 (= (assign a1_1) r3)))
(assert (= BAV9 (= (assign a1_1) r0)))
(assert (= BAV10 (= (assign a1_1) r1)))
(assert (= BAV11 (= (assign a1_1) r2)))
(assert (= BAV12 (= (assign a1_1) r3)))
(check-sat)
(get-model)
(exit)