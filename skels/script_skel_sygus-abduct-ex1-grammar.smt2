(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(set-option :produce-abducts true)
(declare-fun n () Int)
(declare-fun m () Int)
(declare-fun i () Int)
(declare-fun j () Int)
(assert (and (>= n GEN1) (>= m GEN2)))
(assert (< n i))
(assert (< (+ i j) m))
(get-abduct A 
  (<= n m)
  ((GA Bool) (GI Int))
  (
  (GA Bool ((>= GI GI)))
  (GI Int ((+ GI GI) (- GI) i j 0 1))
  )
)
(assert (= BAV1 (and (>= n GEN1) (>= m GEN2))))
(assert (= BAV2 (>= n GEN1)))
(assert (= BAV3 (>= m GEN2)))
(assert (= BAV4 (< n i)))
(assert (= BAV5 (< (+ i j) m)))