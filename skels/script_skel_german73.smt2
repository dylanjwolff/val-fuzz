(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-datatypes () ((UNIT (Unit))))
(declare-datatypes () ((BOOL (Truth) (Falsity))))
(declare-sort node$type 0)
(declare-sort data$type 0)
(declare-datatypes () ((cache_state$type (invalid) (shared) (exclusive))))
(declare-datatypes () ((cache$type (c_cache$type (c_state cache_state$type) (c_data data$type)))))
(declare-datatypes () ((msg_cmd$type (empty) (reqs) (reqe) (inv) (invack) (gnts) (gnte))))
(declare-datatypes () ((msg$type (c_msg$type (m_cmd msg_cmd$type) (m_data data$type)))))
(declare-fun dummy () data$type)
(declare-fun memdata$1 () data$type)
(declare-fun shrset$1 () (Array node$type BOOL))
(declare-fun recv_invack$i () node$type)
(declare-fun exgntd () BOOL)
(declare-fun invset () (Array node$type BOOL))
(declare-fun chan3$1 () (Array node$type msg$type))
(declare-fun shrset () (Array node$type BOOL))
(declare-fun exgntd$1 () BOOL)
(declare-fun chan2 () (Array node$type msg$type))
(declare-fun chan3 () (Array node$type msg$type))
(declare-fun curcmd () msg_cmd$type)
(assert (not (=> (and (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset n) Truth))) (forall ((n node$type)) (=> (or (= (m_cmd (select chan2 n)) inv) (= (m_cmd (select chan3 n)) invack)) (not (= (select invset n) Truth))))) (=> (= (m_cmd (select chan3 recv_invack$i)) invack) (=> (not (= curcmd empty)) (=> (= chan3$1 (store chan3 recv_invack$i (c_msg$type empty (m_data (select chan3 recv_invack$i))))) (=> (= shrset$1 (store shrset recv_invack$i Falsity)) (= (ite (= exgntd Truth) (ite (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))) Truth Falsity) (ite (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))) Truth Falsity)) Truth))))))))
(assert (= BAV1 (=> (and (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset n) Truth))) (forall ((n node$type)) (=> (or (= (m_cmd (select chan2 n)) inv) (= (m_cmd (select chan3 n)) invack)) (not (= (select invset n) Truth))))) (=> (= (m_cmd (select chan3 recv_invack$i)) invack) (=> (not (= curcmd empty)) (=> (= chan3$1 (store chan3 recv_invack$i (c_msg$type empty (m_data (select chan3 recv_invack$i))))) (=> (= shrset$1 (store shrset recv_invack$i Falsity)) (= (ite (= exgntd Truth) (ite (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))) Truth Falsity) (ite (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))) Truth Falsity)) Truth))))))))
(assert (= BAV2 (and (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset n) Truth))) (forall ((n node$type)) (=> (or (= (m_cmd (select chan2 n)) inv) (= (m_cmd (select chan3 n)) invack)) (not (= (select invset n) Truth)))))))
(assert (= BAV3 (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset n) Truth)))))
(assert (= BAV4 (forall ((n node$type)) (= (select invset n) Truth))))
(assert (= BAV5 (forall ((n node$type)) (= (select shrset n) Truth))))
(assert (= BAV6 (forall ((n node$type)) (=> (or (= (m_cmd (select chan2 n)) inv) (= (m_cmd (select chan3 n)) invack)) (not (= (select invset n) Truth))))))
(assert (= BAV7 (forall ((n node$type)) (or (= (m_cmd (select chan2 n)) inv) (= (m_cmd (select chan3 n)) invack)))))
(assert (= BAV8 (forall ((n node$type)) (= (m_cmd (select chan2 n)) inv))))
(assert (= BAV9 (forall ((n node$type)) (= (m_cmd (select chan3 n)) invack))))
(assert (= BAV10 (forall ((n node$type)) (= (select invset n) Truth))))
(assert (= BAV11 (=> (= (m_cmd (select chan3 recv_invack$i)) invack) (=> (not (= curcmd empty)) (=> (= chan3$1 (store chan3 recv_invack$i (c_msg$type empty (m_data (select chan3 recv_invack$i))))) (=> (= shrset$1 (store shrset recv_invack$i Falsity)) (= (ite (= exgntd Truth) (ite (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))) Truth Falsity) (ite (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))) Truth Falsity)) Truth)))))))
(assert (= BAV12 (= (m_cmd (select chan3 recv_invack$i)) invack)))
(assert (= BAV13 (=> (not (= curcmd empty)) (=> (= chan3$1 (store chan3 recv_invack$i (c_msg$type empty (m_data (select chan3 recv_invack$i))))) (=> (= shrset$1 (store shrset recv_invack$i Falsity)) (= (ite (= exgntd Truth) (ite (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))) Truth Falsity) (ite (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))) Truth Falsity)) Truth))))))
(assert (= BAV14 (= curcmd empty)))
(assert (= BAV15 (=> (= chan3$1 (store chan3 recv_invack$i (c_msg$type empty (m_data (select chan3 recv_invack$i))))) (=> (= shrset$1 (store shrset recv_invack$i Falsity)) (= (ite (= exgntd Truth) (ite (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))) Truth Falsity) (ite (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))) Truth Falsity)) Truth)))))
(assert (= BAV16 (= chan3$1 (store chan3 recv_invack$i (c_msg$type empty (m_data (select chan3 recv_invack$i)))))))
(assert (= BAV17 (=> (= shrset$1 (store shrset recv_invack$i Falsity)) (= (ite (= exgntd Truth) (ite (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))) Truth Falsity) (ite (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))) Truth Falsity)) Truth))))
(assert (= BAV18 (= shrset$1 (store shrset recv_invack$i Falsity))))
(assert (= BAV19 (= (ite (= exgntd Truth) (ite (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))) Truth Falsity) (ite (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))) Truth Falsity)) Truth)))
(assert (= BAV20 (= exgntd Truth)))
(assert (= BAV21 (=> (= exgntd$1 Falsity) (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth)))))))
(assert (= BAV22 (= exgntd$1 Falsity)))
(assert (= BAV23 (=> (= memdata$1 (m_data (select chan3$1 recv_invack$i))) (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth))))))
(assert (= BAV24 (= memdata$1 (m_data (select chan3$1 recv_invack$i)))))
(assert (= BAV25 (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth)))))
(assert (= BAV26 (forall ((n node$type)) (= (select invset n) Truth))))
(assert (= BAV27 (forall ((n node$type)) (= (select shrset$1 n) Truth))))
(assert (= BAV28 (forall ((n node$type)) (=> (= (select invset n) Truth) (= (select shrset$1 n) Truth)))))
(assert (= BAV29 (forall ((n node$type)) (= (select invset n) Truth))))
(assert (= BAV30 (forall ((n node$type)) (= (select shrset$1 n) Truth))))
(check-sat)
(get-model)
(exit)