(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const GEN8 (_ BitVec 8))
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 (_ BitVec 4))
(declare-const GEN4 (_ BitVec 8))
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 (_ BitVec 4))
(declare-fun k_3 () (_ BitVec 8))
(declare-fun k_4 () (_ BitVec 8))
(declare-fun k_5 () (_ BitVec 8))
(assert (forall ((x (_ BitVec 8))) (or (= k_5 x) (not (= k_3 (bvadd (concat GEN1 ((_ extract 7 4) x)) GEN4))) (not (= k_4 (bvadd (concat GEN5 ((_ extract 3 0) x)) GEN8))))))
(assert (= BAV1 (forall ((x (_ BitVec 8))) (or (= k_5 x) (not (= k_3 (bvadd (concat GEN1 ((_ extract 7 4) x)) GEN4))) (not (= k_4 (bvadd (concat GEN5 ((_ extract 3 0) x)) GEN8)))))))
(assert (= BAV2 (forall ((x (_ BitVec 8))) (= k_5 x))))
(assert (= BAV3 (forall ((x (_ BitVec 8))) (= k_3 (bvadd (concat GEN1 ((_ extract 7 4) x)) GEN4)))))
(assert (= BAV4 (forall ((x (_ BitVec 8))) (= k_4 (bvadd (concat GEN5 ((_ extract 3 0) x)) GEN8)))))
(check-sat)
(get-model)