(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun a () Real)
(declare-fun b () Real)
(declare-fun c () Real)
(declare-fun x () Real)
(declare-fun y () Real)
(assert (and (= (- (+ (* x x) (* y y)) GEN1) GEN2) (= (- (+ (* (* b b) (* (- x c) (- x c))) (* (* a a) (* y y))) (* (* a a) (* b b))) GEN3) (> a GEN4) (< a GEN5) (> b GEN6) (< b GEN7) (>= c GEN8) (< c GEN9)))
(eliminate-quantifiers (exists y x))
(exit)
(assert (= BAV1 (and (= (- (+ (* x x) (* y y)) GEN1) GEN2) (= (- (+ (* (* b b) (* (- x c) (- x c))) (* (* a a) (* y y))) (* (* a a) (* b b))) GEN3) (> a GEN4) (< a GEN5) (> b GEN6) (< b GEN7) (>= c GEN8) (< c GEN9))))
(assert (= BAV2 (= (- (+ (* x x) (* y y)) GEN1) GEN2)))
(assert (= BAV3 (= (- (+ (* (* b b) (* (- x c) (- x c))) (* (* a a) (* y y))) (* (* a a) (* b b))) GEN3)))
(assert (= BAV4 (> a GEN4)))
(assert (= BAV5 (< a GEN5)))
(assert (= BAV6 (> b GEN6)))
(assert (= BAV7 (< b GEN7)))
(assert (= BAV8 (>= c GEN8)))
(assert (= BAV9 (< c GEN9)))