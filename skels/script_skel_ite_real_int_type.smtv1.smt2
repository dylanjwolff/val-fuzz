(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Real)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Real)
(declare-fun x () Real)
(declare-fun y () Real)
(assert (= BAV1 (and (= GEN1 (ite true x GEN2)) (= GEN3 (ite (= x GEN4) GEN5 GEN6)) (= x (ite true y GEN7)) (= GEN8 (ite true GEN9 GEN10)))))
(assert (= BAV2 (= GEN1 (ite true x GEN2))))
(assert (= BAV3 (= GEN3 (ite (= x GEN4) GEN5 GEN6))))
(assert (= BAV4 (= x GEN4)))
(assert (= BAV5 (= x (ite true y GEN7))))
(assert (= BAV6 (= GEN8 (ite true GEN9 GEN10))))
(check-sat-assuming ((and (= GEN1 (ite true x GEN2)) (= GEN3 (ite (= x GEN4) GEN5 GEN6)) (= x (ite true y GEN7)) (= GEN8 (ite true GEN9 GEN10)))))
(get-model)