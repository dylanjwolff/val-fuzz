(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN1 Int)
(declare-fun x () (_ BitVec 30))
(declare-fun y () (_ BitVec 30))
(declare-fun z () (_ BitVec 30))
(assert (or (xor (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30))) false) (xor (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30))) false)))
(assert (= BAV1 (or (xor (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30))) false) (xor (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30))) false))))
(assert (= BAV2 (xor (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30))) false)))
(assert (= BAV3 (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30)))))
(assert (= BAV4 (xor (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30))) false)))
(assert (= BAV5 (=> true (bvugt (bvadd z (bvneg (bvadd (bvnor (bvadd x y) (bvadd x y)) (bvadd x y)))) (_ bv0 30)))))
(check-sat)
(get-model)