(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun t () Real)
(declare-fun x () Real)
(declare-fun y () Real)
(assert (and (>= (- (* GEN1 t) GEN2) GEN3) (<= (- (* GEN4 t) GEN5) GEN6) (>= (+ (- (* GEN7 x) (* GEN8 t)) GEN9) GEN10) (<= (- (- (* GEN11 x) (* GEN12 t)) GEN13) GEN14) (>= (+ (- (* GEN15 y) (* GEN16 t)) GEN17) GEN18) (<= (+ (- (* GEN19 y) (* GEN20 t)) GEN21) GEN22) (<= (- (+ (* (- x t) (- x t)) (* y y)) GEN23) GEN24)))
(eliminate-quantifiers (exists t x y))
(exit)
(assert (= BAV1 (and (>= (- (* GEN1 t) GEN2) GEN3) (<= (- (* GEN4 t) GEN5) GEN6) (>= (+ (- (* GEN7 x) (* GEN8 t)) GEN9) GEN10) (<= (- (- (* GEN11 x) (* GEN12 t)) GEN13) GEN14) (>= (+ (- (* GEN15 y) (* GEN16 t)) GEN17) GEN18) (<= (+ (- (* GEN19 y) (* GEN20 t)) GEN21) GEN22) (<= (- (+ (* (- x t) (- x t)) (* y y)) GEN23) GEN24))))
(assert (= BAV2 (>= (- (* GEN1 t) GEN2) GEN3)))
(assert (= BAV3 (<= (- (* GEN4 t) GEN5) GEN6)))
(assert (= BAV4 (>= (+ (- (* GEN7 x) (* GEN8 t)) GEN9) GEN10)))
(assert (= BAV5 (<= (- (- (* GEN11 x) (* GEN12 t)) GEN13) GEN14)))
(assert (= BAV6 (>= (+ (- (* GEN15 y) (* GEN16 t)) GEN17) GEN18)))
(assert (= BAV7 (<= (+ (- (* GEN19 y) (* GEN20 t)) GEN21) GEN22)))
(assert (= BAV8 (<= (- (+ (* (- x t) (- x t)) (* y y)) GEN23) GEN24)))