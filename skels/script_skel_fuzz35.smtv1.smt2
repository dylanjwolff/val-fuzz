(set-option :incremental false)
(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(declare-const BAV97 Bool)
(declare-const BAV98 Bool)
(declare-const BAV99 Bool)
(declare-const BAV100 Bool)
(declare-const BAV101 Bool)
(declare-const BAV102 Bool)
(declare-const BAV103 Bool)
(declare-const BAV104 Bool)
(declare-const BAV105 Bool)
(declare-const BAV106 Bool)
(declare-const BAV107 Bool)
(declare-const BAV108 Bool)
(declare-const BAV109 Bool)
(declare-const BAV110 Bool)
(declare-const BAV111 Bool)
(declare-const BAV112 Bool)
(declare-const BAV113 Bool)
(declare-const BAV114 Bool)
(declare-const BAV115 Bool)
(declare-const BAV116 Bool)
(declare-const BAV117 Bool)
(declare-const BAV118 Bool)
(declare-const BAV119 Bool)
(declare-const BAV120 Bool)
(declare-const BAV121 Bool)
(declare-const BAV122 Bool)
(declare-const BAV123 Bool)
(declare-const BAV124 Bool)
(declare-const BAV125 Bool)
(declare-const BAV126 Bool)
(declare-const BAV127 Bool)
(declare-const BAV128 Bool)
(declare-const BAV129 Bool)
(declare-const BAV130 Bool)
(declare-const BAV131 Bool)
(declare-const BAV132 Bool)
(declare-const BAV133 Bool)
(declare-const BAV134 Bool)
(declare-const BAV135 Bool)
(declare-const BAV136 Bool)
(declare-const BAV137 Bool)
(declare-const BAV138 Bool)
(declare-const BAV139 Bool)
(declare-const BAV140 Bool)
(declare-const BAV141 Bool)
(declare-const BAV142 Bool)
(declare-const BAV143 Bool)
(declare-const BAV144 Bool)
(declare-const BAV145 Bool)
(declare-const BAV146 Bool)
(declare-const BAV147 Bool)
(declare-const BAV148 Bool)
(declare-const BAV149 Bool)
(declare-const BAV150 Bool)
(declare-const BAV151 Bool)
(declare-const BAV152 Bool)
(declare-const BAV153 Bool)
(declare-const BAV154 Bool)
(declare-const BAV155 Bool)
(declare-const BAV156 Bool)
(declare-const BAV157 Bool)
(declare-const BAV158 Bool)
(declare-const BAV159 Bool)
(declare-const BAV160 Bool)
(declare-const BAV161 Bool)
(declare-const BAV162 Bool)
(declare-const BAV163 Bool)
(declare-const BAV164 Bool)
(declare-const BAV165 Bool)
(declare-const BAV166 Bool)
(declare-const BAV167 Bool)
(declare-const BAV168 Bool)
(declare-const BAV169 Bool)
(declare-const BAV170 Bool)
(declare-const BAV171 Bool)
(declare-const BAV172 Bool)
(declare-const BAV173 Bool)
(declare-const BAV174 Bool)
(declare-const BAV175 Bool)
(declare-const BAV176 Bool)
(declare-const BAV177 Bool)
(declare-const BAV178 Bool)
(declare-const BAV179 Bool)
(declare-const BAV180 Bool)
(declare-const BAV181 Bool)
(declare-const BAV182 Bool)
(declare-const BAV183 Bool)
(declare-const BAV184 Bool)
(declare-const BAV185 Bool)
(declare-const BAV186 Bool)
(declare-const BAV187 Bool)
(declare-const BAV188 Bool)
(declare-const BAV189 Bool)
(declare-const BAV190 Bool)
(declare-const BAV191 Bool)
(declare-const BAV192 Bool)
(declare-const BAV193 Bool)
(declare-const BAV194 Bool)
(declare-const BAV195 Bool)
(declare-const BAV196 Bool)
(declare-const BAV197 Bool)
(declare-const BAV198 Bool)
(declare-const BAV199 Bool)
(declare-const BAV200 Bool)
(declare-const BAV201 Bool)
(declare-const BAV202 Bool)
(declare-const BAV203 Bool)
(declare-const BAV204 Bool)
(declare-const BAV205 Bool)
(declare-const BAV206 Bool)
(declare-const BAV207 Bool)
(declare-const BAV208 Bool)
(declare-const BAV209 Bool)
(declare-const BAV210 Bool)
(declare-const BAV211 Bool)
(declare-const BAV212 Bool)
(declare-const BAV213 Bool)
(declare-const BAV214 Bool)
(declare-const BAV215 Bool)
(declare-const BAV216 Bool)
(declare-const BAV217 Bool)
(declare-const BAV218 Bool)
(declare-const BAV219 Bool)
(declare-const BAV220 Bool)
(declare-const BAV221 Bool)
(declare-const BAV222 Bool)
(declare-const BAV223 Bool)
(declare-const BAV224 Bool)
(declare-const BAV225 Bool)
(declare-const BAV226 Bool)
(declare-const BAV227 Bool)
(declare-const BAV228 Bool)
(declare-const BAV229 Bool)
(declare-const BAV230 Bool)
(declare-const BAV231 Bool)
(declare-const BAV232 Bool)
(declare-const BAV233 Bool)
(declare-const BAV234 Bool)
(declare-const BAV235 Bool)
(declare-const BAV236 Bool)
(declare-const BAV237 Bool)
(declare-const BAV238 Bool)
(declare-const BAV239 Bool)
(declare-const BAV240 Bool)
(declare-const BAV241 Bool)
(declare-const BAV242 Bool)
(declare-const BAV243 Bool)
(declare-const BAV244 Bool)
(declare-const BAV245 Bool)
(declare-const BAV246 Bool)
(declare-const BAV247 Bool)
(declare-const BAV248 Bool)
(declare-const BAV249 Bool)
(declare-const BAV250 Bool)
(declare-const BAV251 Bool)
(declare-const BAV252 Bool)
(declare-const BAV253 Bool)
(declare-const BAV254 Bool)
(declare-const BAV255 Bool)
(declare-const BAV256 Bool)
(declare-const BAV257 Bool)
(declare-const BAV258 Bool)
(declare-const BAV259 Bool)
(declare-const BAV260 Bool)
(declare-const BAV261 Bool)
(declare-const BAV262 Bool)
(declare-const BAV263 Bool)
(declare-const BAV264 Bool)
(declare-const BAV265 Bool)
(declare-const BAV266 Bool)
(declare-const BAV267 Bool)
(declare-const BAV268 Bool)
(declare-const BAV269 Bool)
(declare-const BAV270 Bool)
(declare-const BAV271 Bool)
(declare-const BAV272 Bool)
(declare-const BAV273 Bool)
(declare-const BAV274 Bool)
(declare-const BAV275 Bool)
(declare-const BAV276 Bool)
(declare-const BAV277 Bool)
(declare-const BAV278 Bool)
(declare-const BAV279 Bool)
(declare-const BAV280 Bool)
(declare-const BAV281 Bool)
(declare-const BAV282 Bool)
(declare-const BAV283 Bool)
(declare-const BAV284 Bool)
(declare-const BAV285 Bool)
(declare-const BAV286 Bool)
(declare-const BAV287 Bool)
(declare-const BAV288 Bool)
(declare-const BAV289 Bool)
(declare-const BAV290 Bool)
(declare-const BAV291 Bool)
(declare-const BAV292 Bool)
(declare-const BAV293 Bool)
(declare-const BAV294 Bool)
(declare-const BAV295 Bool)
(declare-const BAV296 Bool)
(declare-const BAV297 Bool)
(declare-const BAV298 Bool)
(declare-const BAV299 Bool)
(declare-const BAV300 Bool)
(declare-const BAV301 Bool)
(declare-const BAV302 Bool)
(declare-const BAV303 Bool)
(declare-const BAV304 Bool)
(declare-const BAV305 Bool)
(declare-const BAV306 Bool)
(declare-const BAV307 Bool)
(declare-const BAV308 Bool)
(declare-const BAV309 Bool)
(declare-const BAV310 Bool)
(declare-const BAV311 Bool)
(declare-const BAV312 Bool)
(declare-const BAV313 Bool)
(declare-const BAV314 Bool)
(declare-const BAV315 Bool)
(declare-const BAV316 Bool)
(declare-const BAV317 Bool)
(declare-const BAV318 Bool)
(declare-const BAV319 Bool)
(declare-const BAV320 Bool)
(declare-const BAV321 Bool)
(declare-const BAV322 Bool)
(declare-const BAV323 Bool)
(declare-const BAV324 Bool)
(declare-const BAV325 Bool)
(declare-const BAV326 Bool)
(declare-const BAV327 Bool)
(declare-const BAV328 Bool)
(declare-const BAV329 Bool)
(declare-const BAV330 Bool)
(declare-const BAV331 Bool)
(declare-const BAV332 Bool)
(declare-const BAV333 Bool)
(declare-const BAV334 Bool)
(declare-const BAV335 Bool)
(declare-const BAV336 Bool)
(declare-const BAV337 Bool)
(declare-const BAV338 Bool)
(declare-const BAV339 Bool)
(declare-const BAV340 Bool)
(declare-const BAV341 Bool)
(declare-const BAV342 Bool)
(declare-const BAV343 Bool)
(declare-const BAV344 Bool)
(declare-const BAV345 Bool)
(declare-const BAV346 Bool)
(declare-const BAV347 Bool)
(declare-const BAV348 Bool)
(declare-const BAV349 Bool)
(declare-const BAV350 Bool)
(declare-const GEN325 Int)
(declare-const GEN324 Int)
(declare-const GEN323 Int)
(declare-const GEN322 Int)
(declare-const GEN321 Int)
(declare-const GEN320 Int)
(declare-const GEN319 Int)
(declare-const GEN318 Int)
(declare-const GEN317 Int)
(declare-const GEN316 Int)
(declare-const GEN315 Int)
(declare-const GEN314 Int)
(declare-const GEN313 Int)
(declare-const GEN312 Int)
(declare-const GEN311 Int)
(declare-const GEN310 Int)
(declare-const GEN309 Int)
(declare-const GEN308 Int)
(declare-const GEN307 Int)
(declare-const GEN306 Int)
(declare-const GEN305 Int)
(declare-const GEN304 Int)
(declare-const GEN303 Int)
(declare-const GEN302 Int)
(declare-const GEN301 Int)
(declare-const GEN300 Int)
(declare-const GEN299 Int)
(declare-const GEN298 Int)
(declare-const GEN297 Int)
(declare-const GEN296 Int)
(declare-const GEN295 Int)
(declare-const GEN294 Int)
(declare-const GEN293 Int)
(declare-const GEN292 Int)
(declare-const GEN291 Int)
(declare-const GEN290 Int)
(declare-const GEN289 Int)
(declare-const GEN288 Int)
(declare-const GEN287 Int)
(declare-const GEN286 Int)
(declare-const GEN285 Int)
(declare-const GEN284 Int)
(declare-const GEN283 Int)
(declare-const GEN282 Int)
(declare-const GEN281 Int)
(declare-const GEN280 Int)
(declare-const GEN279 Int)
(declare-const GEN278 Int)
(declare-const GEN277 Int)
(declare-const GEN276 Int)
(declare-const GEN275 Int)
(declare-const GEN274 Int)
(declare-const GEN273 Int)
(declare-const GEN272 Int)
(declare-const GEN271 Int)
(declare-const GEN270 Int)
(declare-const GEN269 Int)
(declare-const GEN268 Int)
(declare-const GEN267 Int)
(declare-const GEN266 Int)
(declare-const GEN265 Int)
(declare-const GEN264 Int)
(declare-const GEN263 Int)
(declare-const GEN262 Int)
(declare-const GEN261 Int)
(declare-const GEN260 Int)
(declare-const GEN259 Int)
(declare-const GEN258 Int)
(declare-const GEN257 Int)
(declare-const GEN256 Int)
(declare-const GEN255 Int)
(declare-const GEN254 Int)
(declare-const GEN253 Int)
(declare-const GEN252 Int)
(declare-const GEN251 Int)
(declare-const GEN250 Int)
(declare-const GEN249 Int)
(declare-const GEN248 Int)
(declare-const GEN247 Int)
(declare-const GEN246 Int)
(declare-const GEN245 Int)
(declare-const GEN244 Int)
(declare-const GEN243 Int)
(declare-const GEN242 Int)
(declare-const GEN241 Int)
(declare-const GEN240 Int)
(declare-const GEN239 Int)
(declare-const GEN238 Int)
(declare-const GEN237 Int)
(declare-const GEN236 Int)
(declare-const GEN235 Int)
(declare-const GEN234 Int)
(declare-const GEN233 Int)
(declare-const GEN232 Int)
(declare-const GEN231 Int)
(declare-const GEN230 Int)
(declare-const GEN229 Int)
(declare-const GEN228 Int)
(declare-const GEN227 Int)
(declare-const GEN226 Int)
(declare-const GEN225 Int)
(declare-const GEN224 Int)
(declare-const GEN223 Int)
(declare-const GEN222 Int)
(declare-const GEN221 Int)
(declare-const GEN220 Int)
(declare-const GEN219 Int)
(declare-const GEN218 Int)
(declare-const GEN217 Int)
(declare-const GEN216 Int)
(declare-const GEN215 Int)
(declare-const GEN214 Int)
(declare-const GEN213 Int)
(declare-const GEN212 Int)
(declare-const GEN211 Int)
(declare-const GEN210 Int)
(declare-const GEN209 Int)
(declare-const GEN208 Int)
(declare-const GEN207 Int)
(declare-const GEN206 Int)
(declare-const GEN205 Int)
(declare-const GEN204 Int)
(declare-const GEN203 Int)
(declare-const GEN202 Int)
(declare-const GEN201 Int)
(declare-const GEN200 Int)
(declare-const GEN199 Int)
(declare-const GEN198 Int)
(declare-const GEN197 Int)
(declare-const GEN196 Int)
(declare-const GEN195 Int)
(declare-const GEN194 Int)
(declare-const GEN193 Int)
(declare-const GEN192 Int)
(declare-const GEN191 Int)
(declare-const GEN190 Int)
(declare-const GEN189 Int)
(declare-const GEN188 Int)
(declare-const GEN187 Int)
(declare-const GEN186 Int)
(declare-const GEN185 Int)
(declare-const GEN184 Int)
(declare-const GEN183 Int)
(declare-const GEN182 Int)
(declare-const GEN181 Int)
(declare-const GEN180 Int)
(declare-const GEN179 Int)
(declare-const GEN178 Int)
(declare-const GEN177 Int)
(declare-const GEN176 Int)
(declare-const GEN175 Int)
(declare-const GEN174 Int)
(declare-const GEN173 Int)
(declare-const GEN172 Int)
(declare-const GEN171 Int)
(declare-const GEN170 Int)
(declare-const GEN169 Int)
(declare-const GEN168 Int)
(declare-const GEN167 Int)
(declare-const GEN166 Int)
(declare-const GEN165 Int)
(declare-const GEN164 Int)
(declare-const GEN163 Int)
(declare-const GEN162 Int)
(declare-const GEN161 Int)
(declare-const GEN160 Int)
(declare-const GEN159 Int)
(declare-const GEN158 Int)
(declare-const GEN157 Int)
(declare-const GEN156 Int)
(declare-const GEN155 Int)
(declare-const GEN154 Int)
(declare-const GEN153 Int)
(declare-const GEN152 Int)
(declare-const GEN151 Int)
(declare-const GEN150 Int)
(declare-const GEN149 Int)
(declare-const GEN148 Int)
(declare-const GEN147 Int)
(declare-const GEN146 Int)
(declare-const GEN145 Int)
(declare-const GEN144 Int)
(declare-const GEN143 Int)
(declare-const GEN142 Int)
(declare-const GEN141 Int)
(declare-const GEN140 Int)
(declare-const GEN139 Int)
(declare-const GEN138 Int)
(declare-const GEN137 Int)
(declare-const GEN136 Int)
(declare-const GEN135 Int)
(declare-const GEN134 Int)
(declare-const GEN133 Int)
(declare-const GEN132 Int)
(declare-const GEN131 Int)
(declare-const GEN130 Int)
(declare-const GEN129 Int)
(declare-const GEN128 Int)
(declare-const GEN127 Int)
(declare-const GEN126 Int)
(declare-const GEN125 Int)
(declare-const GEN124 Int)
(declare-const GEN123 Int)
(declare-const GEN122 Int)
(declare-const GEN121 Int)
(declare-const GEN120 Int)
(declare-const GEN119 Int)
(declare-const GEN118 Int)
(declare-const GEN117 Int)
(declare-const GEN116 Int)
(declare-const GEN115 Int)
(declare-const GEN114 Int)
(declare-const GEN113 Int)
(declare-const GEN112 Int)
(declare-const GEN111 Int)
(declare-const GEN110 Int)
(declare-const GEN109 Int)
(declare-const GEN108 Int)
(declare-const GEN107 Int)
(declare-const GEN106 Int)
(declare-const GEN105 Int)
(declare-const GEN104 Int)
(declare-const GEN103 Int)
(declare-const GEN102 Int)
(declare-const GEN101 Int)
(declare-const GEN100 Int)
(declare-const GEN99 Int)
(declare-const GEN98 Int)
(declare-const GEN97 Int)
(declare-const GEN96 Int)
(declare-const GEN95 Int)
(declare-const GEN94 Int)
(declare-const GEN93 Int)
(declare-const GEN92 Int)
(declare-const GEN91 Int)
(declare-const GEN90 Int)
(declare-const GEN89 Int)
(declare-const GEN88 Int)
(declare-const GEN87 Int)
(declare-const GEN86 Int)
(declare-const GEN85 Int)
(declare-const GEN84 Int)
(declare-const GEN83 Int)
(declare-const GEN82 Int)
(declare-const GEN81 Int)
(declare-const GEN80 Int)
(declare-const GEN79 Int)
(declare-const GEN78 Int)
(declare-const GEN77 Int)
(declare-const GEN76 Int)
(declare-const GEN75 Int)
(declare-const GEN74 Int)
(declare-const GEN73 Int)
(declare-const GEN72 Int)
(declare-const GEN71 Int)
(declare-const GEN70 Int)
(declare-const GEN69 Int)
(declare-const GEN68 Int)
(declare-const GEN67 Int)
(declare-const GEN66 Int)
(declare-const GEN65 Int)
(declare-const GEN64 Int)
(declare-const GEN63 Int)
(declare-const GEN62 Int)
(declare-const GEN61 Int)
(declare-const GEN60 Int)
(declare-const GEN59 Int)
(declare-const GEN58 Int)
(declare-const GEN57 Int)
(declare-const GEN56 Int)
(declare-const GEN55 Int)
(declare-const GEN54 Int)
(declare-const GEN53 Int)
(declare-const GEN52 Int)
(declare-const GEN51 Int)
(declare-const GEN50 Int)
(declare-const GEN49 Int)
(declare-const GEN48 Int)
(declare-const GEN47 Int)
(declare-const GEN46 Int)
(declare-const GEN45 Int)
(declare-const GEN44 Int)
(declare-const GEN43 Int)
(declare-const GEN42 Int)
(declare-const GEN41 Int)
(declare-const GEN40 Int)
(declare-const GEN39 Int)
(declare-const GEN38 Int)
(declare-const GEN37 Int)
(declare-const GEN36 Int)
(declare-const GEN35 Int)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 Int)
(declare-const GEN31 Int)
(declare-const GEN30 Int)
(declare-const GEN29 Int)
(declare-const GEN28 Int)
(declare-const GEN27 Int)
(declare-const GEN26 Int)
(declare-const GEN25 Int)
(declare-const GEN24 Int)
(declare-const GEN23 Int)
(declare-const GEN22 Int)
(declare-const GEN21 Int)
(declare-const GEN20 Int)
(declare-const GEN19 Int)
(declare-const GEN18 Int)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 Int)
(declare-const GEN14 Int)
(declare-const GEN13 Int)
(declare-const GEN12 Int)
(declare-const GEN11 Int)
(declare-const GEN10 Int)
(declare-const GEN9 Int)
(declare-const GEN8 Int)
(declare-const GEN7 Int)
(declare-const GEN6 Int)
(declare-const GEN5 Int)
(declare-const GEN4 Int)
(declare-const GEN3 Int)
(declare-const GEN2 Int)
(declare-const GEN1 Int)
(declare-fun v0 () (_ BitVec 4))
(declare-fun v1 () (_ BitVec 4))
(declare-fun v2 () (_ BitVec 4))
(declare-fun v3 () (_ BitVec 4))
(declare-fun v4 () (_ BitVec 4))
(assert (= BAV1 (and (or (not (bvsgt (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvslt (bvsub (_ bv4 4) (_ bv12 4)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4))))) (or (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (or (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvslt (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvsle (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (or (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvule ((_ sign_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (or (bvsle ((_ rotate_right 3) v3) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvsge (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))))) (not (bvsge (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (or (bvsle (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (not (bvslt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (or (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (= v3 (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (or (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3))) (bvule ((_ sign_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (not (bvsle ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv4 4))) (not (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3))))) (or (not (bvuge ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (not (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (not (bvule (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvult (_ bv4 4) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (not (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (not (bvsge ((_ sign_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))) v0))) (or (not (bvugt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (bvsle (bvsub (_ bv4 4) (_ bv12 4)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (distinct v1 (bvnot (bvlshr (_ bv4 4) v3)))) (or (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvule (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ rotate_right 3) v3))) (not (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1) (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ sign_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3)))) (or (not (bvuge ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) v3)) (not (bvugt (bvnot (bvlshr (_ bv4 4) v3)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (bvsle ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv4 4))) (or (not (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvult (bvlshr (_ bv4 4) v0) (_ bv4 4))) (not (bvult (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (or (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvugt (bvnot (_ bv4 4)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (or (not (bvugt (bvlshr (_ bv4 4) v0) v3)) (not (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))) (or (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3))) (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (or (not (bvult (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsgt (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (or (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvslt ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (bvslt v0 ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (or (not (bvsgt (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (bvsle (bvsub (_ bv4 4) (_ bv12 4)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (bvsge (bvnot (_ bv4 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (bvule (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))) (not (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) ((_ zero_extend 0) (_ bv4 4))))) (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)) (bvslt v4 ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (or (not (= (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (bvuge ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvugt ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 2) ((_ rotate_right 0) ((_ extract 1 0) v0))))) (or (not (bvsle (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (= (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3))))) (or (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (bvult (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsle ((_ rotate_right 3) v3) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (bvule ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvnot (_ bv4 4))) (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvsgt (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (or (not (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (distinct (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ sign_extend 3) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1))))) (or (not (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvsgt (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (or (not (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (not (bvsle ((_ zero_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (not (bvslt ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))) (or (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (bvugt ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (or (bvule ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (bvsle (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (or (not (bvsgt ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (bvsge ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (or (not (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (not (bvsgt ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4))) (bvugt (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (or (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (not (bvsle (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))) (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsle (_ bv4 4) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvugt ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 2) ((_ rotate_right 0) ((_ extract 1 0) v0))))) (or (bvugt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1))) (or (not (bvsgt (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (or (not (bvsge (bvnot (_ bv4 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (not (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (or (not (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (= (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1))))) (or (not (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (or (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (not (distinct (bvsub (_ bv4 4) (_ bv12 4)) (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (bvult (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (or (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))))) (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (not (bvsgt (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvult (_ bv4 4) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))) (or (bvsgt (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (bvslt v0 ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))) (or (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvsle (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (or (not (bvule (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))))) (not (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (not (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)))) (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)) (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (or (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (not (bvule (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))))) (or (not (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvslt (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))) (or (= (bvlshr (_ bv4 4) v3) v0) (not (bvule (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)))) (not (bvsle (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (bvsle (_ bv4 4) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (bvslt ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (bvsge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (_ bv4 4))) (= (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)))) (or (not (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvsub (_ bv4 4) (_ bv12 4))) (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (or (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvsgt (_ bv4 4) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (not (bvsge ((_ sign_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))) v0)) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (= (bvlshr (_ bv4 4) v3) v0))) (or (not (bvsge ((_ zero_extend 1) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (not (bvslt ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (or (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvuge (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (not (bvsge ((_ zero_extend 1) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (not (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))))) (or (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))) (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvslt v2 v3)) (or (not (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (not (bvugt (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (_ bv4 4)))) (bvsge ((_ zero_extend 1) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (or (not (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4))) (not (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))) (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))) (or (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (not (bvugt ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))) (or (distinct v1 (bvnot (bvlshr (_ bv4 4) v3))) (bvslt v4 ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))) (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4)))) (not (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))) (bvuge (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ rotate_right 3) v3))) (or (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvule (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ rotate_right 3) v3))) (bvsgt (_ bv4 4) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3))) (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3)))) (or (not (bvuge (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4)) (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvslt ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvlshr (_ bv4 4) v3))) (or (not (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvugt ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsgt (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (not (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3))) (bvule ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvnot (_ bv4 4))) (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (not (bvuge ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) ((_ extract 3 0) ((_ rotate_right 3) v3)))) (not (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))) (bvuge (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV2 (or (not (bvsgt (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvslt (bvsub (_ bv4 4) (_ bv12 4)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4)))))))
(assert (= BAV3 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV4 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV5 (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4))))))
(assert (= BAV6 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV7 (or (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))))
(assert (= BAV8 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV9 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV10 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV11 (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV12 (or (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvslt (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvsle (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV13 (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV14 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV15 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV16 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV17 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV18 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV19 (or (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvule ((_ sign_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV20 (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV21 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV22 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV23 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV24 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV25 (or (bvsle ((_ rotate_right 3) v3) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvsge (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))))) (not (bvsge (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))))
(assert (= BAV26 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV27 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV28 (or (bvsle (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (not (bvslt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))))
(assert (= BAV29 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV30 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV31 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV32 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV33 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV34 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV35 (or (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (= v3 (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV36 (= v3 (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV37 (or (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3))) (bvule ((_ sign_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))
(assert (= BAV38 (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3)))))
(assert (= BAV39 (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV40 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV41 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV42 (or (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (not (bvsle ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv4 4))) (not (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3)))))))
(assert (= BAV43 (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV44 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV45 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV46 (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3)))))
(assert (= BAV47 (or (not (bvuge ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (not (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (not (bvule (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV48 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV49 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV50 (or (not (bvult (_ bv4 4) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (not (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (not (bvsge ((_ sign_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))) v0)))))
(assert (= BAV51 (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV52 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV53 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV54 (or (not (bvugt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (bvsle (bvsub (_ bv4 4) (_ bv12 4)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (distinct v1 (bvnot (bvlshr (_ bv4 4) v3))))))
(assert (= BAV55 (distinct v1 (bvnot (bvlshr (_ bv4 4) v3)))))
(assert (= BAV56 (or (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvule (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ rotate_right 3) v3))) (not (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV57 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV58 (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))
(assert (= BAV59 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV60 (or (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1) (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))
(assert (= BAV61 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV62 (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))))
(assert (= BAV63 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV64 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV65 (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV66 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV67 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV68 (or (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ sign_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3))))))
(assert (= BAV69 (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV70 (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3)))))
(assert (= BAV71 (or (not (bvuge ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) v3)) (not (bvugt (bvnot (bvlshr (_ bv4 4) v3)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (bvsle ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv4 4)))))
(assert (= BAV72 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV73 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV74 (or (not (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvult (bvlshr (_ bv4 4) v0) (_ bv4 4))) (not (bvult (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV75 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV76 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV77 (or (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvugt (bvnot (_ bv4 4)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV78 (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV79 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV80 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV81 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV82 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV83 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV84 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV85 (or (not (bvugt (bvlshr (_ bv4 4) v0) v3)) (not (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))))))
(assert (= BAV86 (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV87 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV88 (or (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3))) (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV89 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV90 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV91 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV92 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV93 (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3)))))
(assert (= BAV94 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV95 (or (not (bvult (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsgt (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV96 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV97 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV98 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV99 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV100 (or (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvslt ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (bvslt v0 ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV101 (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV102 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV103 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV104 (or (not (bvsgt (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (bvsle (bvsub (_ bv4 4) (_ bv12 4)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (bvsge (bvnot (_ bv4 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))))
(assert (= BAV105 (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (bvule (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))) (not (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) ((_ zero_extend 0) (_ bv4 4)))))))
(assert (= BAV106 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV107 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV108 (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)) (bvslt v4 ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))))
(assert (= BAV109 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))))
(assert (= BAV110 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV111 (or (not (= (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (bvuge ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvugt ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 2) ((_ rotate_right 0) ((_ extract 1 0) v0)))))))
(assert (= BAV112 (= (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))
(assert (= BAV113 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV114 (or (not (bvsle (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (= (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))))))
(assert (= BAV115 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV116 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV117 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV118 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV119 (= (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))
(assert (= BAV120 (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))))
(assert (= BAV121 (or (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (bvult (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))
(assert (= BAV122 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4)))))
(assert (= BAV123 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV124 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV125 (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsle ((_ rotate_right 3) v3) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))
(assert (= BAV126 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV127 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV128 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV129 (or (bvule ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvnot (_ bv4 4))) (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvsgt (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV130 (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV131 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV132 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV133 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV134 (or (not (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (distinct (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ sign_extend 3) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV135 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV136 (distinct (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ sign_extend 3) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV137 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV138 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV139 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV140 (or (not (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvsgt (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV141 (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV142 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV143 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV144 (or (not (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (not (bvsle ((_ zero_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (not (bvslt ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV145 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV146 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV147 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV148 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV149 (or (not (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4))))))
(assert (= BAV150 (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV151 (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV152 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV153 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV154 (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))))
(assert (= BAV155 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV156 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV157 (or (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (bvugt ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV158 (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV159 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV160 (or (bvule ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (bvsle (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))
(assert (= BAV161 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV162 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV163 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4)))))
(assert (= BAV164 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV165 (or (not (bvsgt ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (bvsge ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))))
(assert (= BAV166 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV167 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV168 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV169 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV170 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV171 (or (not (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (not (bvsgt ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4))) (bvugt (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))))
(assert (= BAV172 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV173 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV174 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV175 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV176 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV177 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV178 (or (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (not (bvsle (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))) (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV179 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV180 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV181 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV182 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV183 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV184 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV185 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV186 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV187 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV188 (or (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsle (_ bv4 4) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvugt ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 2) ((_ rotate_right 0) ((_ extract 1 0) v0)))))))
(assert (= BAV189 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV190 (or (bvugt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)))))
(assert (= BAV191 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV192 (or (not (bvsgt (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))))
(assert (= BAV193 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV194 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV195 (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV196 (or (not (bvsge (bvnot (_ bv4 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (not (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4)))))
(assert (= BAV197 (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))
(assert (= BAV198 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV199 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))))
(assert (= BAV200 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV201 (or (not (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (= (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV202 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))))
(assert (= BAV203 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV204 (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV205 (= (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV206 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV207 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV208 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV209 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV210 (or (not (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1))))
(assert (= BAV211 (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV212 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV213 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV214 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV215 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV216 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV217 (or (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (not (distinct (bvsub (_ bv4 4) (_ bv12 4)) (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (bvult (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV218 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV219 (distinct (bvsub (_ bv4 4) (_ bv12 4)) (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV220 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV221 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV222 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV223 (or (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV224 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV225 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV226 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV227 (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV228 (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (not (bvsgt (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvult (_ bv4 4) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))))))
(assert (= BAV229 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))))
(assert (= BAV230 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV231 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV232 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV233 (or (bvsgt (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (bvslt v0 ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))))))
(assert (= BAV234 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV235 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV236 (or (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvsle (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV237 (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV238 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV239 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV240 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV241 (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV242 (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV243 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV244 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV245 (or (not (bvule (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))))) (not (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (not (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4))))))
(assert (= BAV246 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV247 (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV248 (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)) (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV249 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV250 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV251 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV252 (or (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (not (bvule (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)))))))
(assert (= BAV253 (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV254 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV255 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV256 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV257 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV258 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV259 (or (not (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvslt (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))))))
(assert (= BAV260 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV261 (or (= (bvlshr (_ bv4 4) v3) v0) (not (bvule (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)))) (not (bvsle (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV262 (= (bvlshr (_ bv4 4) v3) v0)))
(assert (= BAV263 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV264 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV265 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV266 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV267 (or (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (bvsle (_ bv4 4) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV268 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV269 (or (bvslt ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (bvsge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (_ bv4 4))) (= (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV270 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV271 (= (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV272 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV273 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV274 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV275 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV276 (or (not (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvsub (_ bv4 4) (_ bv12 4))) (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV277 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV278 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV279 (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvsub (_ bv4 4) (_ bv12 4)))))
(assert (= BAV280 (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV281 (or (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvsgt (_ bv4 4) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV282 (or (not (bvsge ((_ sign_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))) v0)) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (= (bvlshr (_ bv4 4) v3) v0)))))
(assert (= BAV283 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV284 (= (bvlshr (_ bv4 4) v3) v0)))
(assert (= BAV285 (or (not (bvsge ((_ zero_extend 1) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (not (bvslt ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV286 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV287 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV288 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV289 (or (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvuge (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV290 (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4))))))
(assert (= BAV291 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV292 (or (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (not (bvsge ((_ zero_extend 1) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (not (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV293 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV294 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV295 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV296 (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV297 (or (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))) (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvslt v2 v3))))
(assert (= BAV298 (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))
(assert (= BAV299 (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV300 (or (not (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (not (bvugt (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (_ bv4 4)))) (bvsge ((_ zero_extend 1) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) ((_ rotate_right 0) ((_ extract 1 0) v0))))))
(assert (= BAV301 (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV302 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV303 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV304 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV305 (or (not (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4))) (not (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))) (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))))))
(assert (= BAV306 (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))))
(assert (= BAV307 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV308 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV309 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV310 (or (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (not (bvugt ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))))))
(assert (= BAV311 (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)))))
(assert (= BAV312 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV313 (or (distinct v1 (bvnot (bvlshr (_ bv4 4) v3))) (bvslt v4 ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3))))))
(assert (= BAV314 (distinct v1 (bvnot (bvlshr (_ bv4 4) v3)))))
(assert (= BAV315 (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))))
(assert (= BAV316 (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4)))) (not (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))) (bvuge (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ rotate_right 3) v3)))))
(assert (= BAV317 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4)))))
(assert (= BAV318 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV319 (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))))
(assert (= BAV320 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV321 (or (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvule (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ rotate_right 3) v3))) (bvsgt (_ bv4 4) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV322 (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4))))))
(assert (= BAV323 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV324 (or (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3))) (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3))))))
(assert (= BAV325 (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))))
(assert (= BAV326 (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV327 (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3))))
(assert (= BAV328 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV329 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV330 (or (not (bvuge (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4)) (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV331 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))))
(assert (= BAV332 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV333 (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2)))
(assert (= BAV334 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV335 (or (not (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvslt ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV336 (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV337 (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvlshr (_ bv4 4) v3))))
(assert (= BAV338 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV339 (or (not (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvugt ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsgt (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))))))
(assert (= BAV340 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV341 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV342 (or (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))))
(assert (= BAV343 (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3)))))
(assert (= BAV344 (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))))
(assert (= BAV345 (or (not (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3))) (bvule ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvnot (_ bv4 4))) (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))
(assert (= BAV346 (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3))))
(assert (= BAV347 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV348 (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4)))))
(assert (= BAV349 (or (not (bvuge ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) ((_ extract 3 0) ((_ rotate_right 3) v3)))) (not (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))) (bvuge (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))
(assert (= BAV350 (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))))
(check-sat-assuming ((and (or (not (bvsgt (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvslt (bvsub (_ bv4 4) (_ bv12 4)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4))))) (or (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (or (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvslt (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (not (bvsle (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (or (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvule ((_ sign_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (or (bvsle ((_ rotate_right 3) v3) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvsge (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))))) (not (bvsge (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (or (bvsle (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (not (bvslt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (or (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (= v3 (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (or (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3))) (bvule ((_ sign_extend 3) (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (not (bvsle ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv4 4))) (not (= (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvnot (bvlshr (_ bv4 4) v3))))) (or (not (bvuge ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (not (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (not (bvule (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvult (_ bv4 4) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (not (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (not (bvsge ((_ sign_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))) v0))) (or (not (bvugt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (bvsle (bvsub (_ bv4 4) (_ bv12 4)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (distinct v1 (bvnot (bvlshr (_ bv4 4) v3)))) (or (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvule (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ rotate_right 3) v3))) (not (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1) (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4))) (= (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvuge ((_ sign_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3)))) (or (not (bvuge ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) v3)) (not (bvugt (bvnot (bvlshr (_ bv4 4) v3)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (bvsle ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (_ bv4 4))) (or (not (bvule (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvult (bvlshr (_ bv4 4) v0) (_ bv4 4))) (not (bvult (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (or (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvugt (bvnot (_ bv4 4)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (or (not (bvugt (bvlshr (_ bv4 4) v0) v3)) (not (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))) (or (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (= (bvlshr (_ bv4 4) v0) ((_ extract 3 0) ((_ rotate_right 3) v3))) (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (or (not (bvult (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsgt (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (or (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvslt ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (bvslt v0 ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (or (not (bvsgt (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (bvsle (bvsub (_ bv4 4) (_ bv12 4)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (bvsge (bvnot (_ bv4 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (bvule (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))) (not (bvult (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) ((_ zero_extend 0) (_ bv4 4))))) (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)) (bvslt v4 ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (or (not (= (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (bvuge ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvugt ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 2) ((_ rotate_right 0) ((_ extract 1 0) v0))))) (or (not (bvsle (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (= (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3))))) (or (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (bvult (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsle ((_ rotate_right 3) v3) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (bvule ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvnot (_ bv4 4))) (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvsgt (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (or (not (bvule ((_ extract 1 0) v0) ((_ zero_extend 1) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvand (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (distinct (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ sign_extend 3) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1))))) (or (not (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvsgt (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (or (not (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (not (bvsle ((_ zero_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (not (bvslt ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))) (or (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (bvugt ((_ zero_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (or (bvule ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (bvsle (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (or (not (bvsgt ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (bvsge ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (or (not (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (not (bvsgt ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4))) (bvugt (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))) (or (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (not (bvsle (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))))) (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsle (_ bv4 4) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvugt ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 2) ((_ rotate_right 0) ((_ extract 1 0) v0))))) (or (bvugt ((_ extract 3 0) ((_ rotate_right 3) v3)) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvsge ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1))) (or (not (bvsgt (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (not (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (or (not (bvsge (bvnot (_ bv4 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (not (distinct ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (or (not (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (not (= (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1))))) (or (not (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (not (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (or (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (not (distinct (bvsub (_ bv4 4) (_ bv12 4)) (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (not (bvult (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (or (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))))) (not (distinct (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))))) (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4))) (not (bvsgt (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvult (_ bv4 4) (bvshl ((_ zero_extend 0) (_ bv4 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))))) (or (bvsgt (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))) (bvslt v0 ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))))) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))) (or (= (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvsle (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (distinct (ite (distinct (bvor ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (or (not (bvule (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))))) (not (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (not (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)))) (or (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4)) (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (or (distinct (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (bvule (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (not (bvule (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))))) (or (not (bvsge (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))) (not (bvsge (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvslt (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))) (or (= (bvlshr (_ bv4 4) v3) v0) (not (bvule (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)))) (not (bvsle (bvshl ((_ sign_extend 3) (ite (bvugt (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1))) v4) ((_ zero_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))))) (bvsle (_ bv4 4) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (bvslt ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ sign_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1)))) (bvsge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (_ bv4 4))) (= (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)) (ite (bvsge ((_ zero_extend 3) (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (_ bv1 1) (_ bv0 1)))) (or (not (bvsgt ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3))) ((_ zero_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))))) (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvsub (_ bv4 4) (_ bv12 4))) (distinct (_ bv4 4) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))))) (or (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvsgt (_ bv4 4) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsle (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (not (bvsge ((_ sign_extend 3) (ite (bvult (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4))) (_ bv1 1) (_ bv0 1))) v0)) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))))) (not (= (bvlshr (_ bv4 4) v3) v0))) (or (not (bvsge ((_ zero_extend 1) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (not (bvslt ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvnot (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (or (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvuge (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvsgt (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (not (bvule (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) v1)) (not (bvsge ((_ zero_extend 1) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (not (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))))) (or (distinct (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) (ite (bvslt v1 (bvnot (_ bv4 4))) (_ bv1 1) (_ bv0 1))) (distinct (bvnot (_ bv4 4)) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)))) (bvslt v2 v3)) (or (not (= v0 ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))))) (not (bvugt (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) ((_ zero_extend 0) (_ bv4 4)))) (bvsge ((_ zero_extend 1) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1))) ((_ rotate_right 0) ((_ extract 1 0) v0)))) (or (not (bvugt (bvsub (_ bv4 4) (_ bv12 4)) (_ bv4 4))) (not (= ((_ sign_extend 3) ((_ sign_extend 0) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1)))) (bvnot (_ bv4 4)))) (not (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))))) (or (distinct (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (not (bvugt ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (not (bvsle (_ bv12 4) ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3)))))) (or (distinct v1 (bvnot (bvlshr (_ bv4 4) v3))) (bvslt v4 ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))) (or (not (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvsub (_ bv4 4) (_ bv12 4)))) (not (= (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvult (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (_ bv4 4))) (_ bv1 1) (_ bv0 1))))) (bvuge (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ rotate_right 3) v3))) (or (= ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvneg (bvsub (_ bv4 4) (_ bv12 4)))) (not (bvule (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ rotate_right 3) v3))) (bvsgt (_ bv4 4) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3))) (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))) (not (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3)))) (or (not (bvuge (bvsub (_ bv4 4) (_ bv12 4)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (_ bv12 4)) (bvsge (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 3) (bvneg (ite (= (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) v2) (_ bv1 1) (_ bv0 1)))))) (or (not (distinct ((_ extract 3 0) ((_ rotate_right 3) v3)) ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (not (bvslt ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) (= (bvadd (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1)) (bvlshr (_ bv4 4) v3))) (or (not (bvule ((_ sign_extend 3) (bvcomp v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (bvugt ((_ sign_extend 0) (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (not (bvsgt (bvneg (bvsub (_ bv4 4) (_ bv12 4))) ((_ sign_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))))) (or (not (bvugt (bvneg (bvsub ((_ zero_extend 0) (_ bv4 4)) (bvlshr (_ bv4 4) v3))) (ite (= (_ bv1 1) ((_ extract 0 0) (bvlshr (_ bv4 4) v3))) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ sign_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))))) (bvuge ((_ zero_extend 0) (bvxnor ((_ zero_extend 2) ((_ extract 1 0) v0)) (ite (= (_ bv1 1) ((_ extract 2 2) (bvand v0 (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))))) ((_ sign_extend 3) (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) ((_ sign_extend 0) (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)))) (bvule ((_ zero_extend 3) (ite (bvsle ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvsub v1 ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (_ bv1 1) (_ bv0 1))) ((_ zero_extend 0) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))))) (or (not (= ((_ zero_extend 3) (ite (bvslt (bvadd (bvlshr (_ bv4 4) v0) (bvlshr (_ bv4 4) v3)) ((_ zero_extend 3) (ite (bvugt (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1) ((_ sign_extend 0) (ite (= (_ bv1 1) ((_ extract 1 1) (_ bv4 4))) v2 v1))) (_ bv1 1) (_ bv0 1)))) (_ bv1 1) (_ bv0 1))) (bvlshr (_ bv4 4) v3))) (bvule ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) (bvnot (_ bv4 4))) (bvslt ((_ zero_extend 0) (bvmul (bvlshr (_ bv4 4) v0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0))) (bvashr (bvlshr (_ bv4 4) v3) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) (or (not (bvuge ((_ sign_extend 3) (bvashr (ite (bvslt ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))) v3) (_ bv1 1) (_ bv0 1)) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1)))) ((_ extract 3 0) ((_ rotate_right 3) v3)))) (not (distinct (_ bv4 4) (bvnot (bvlshr (_ bv4 4) v3)))) (bvuge (bvnot (bvadd ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)) ((_ zero_extend 0) (bvmul (bvsub (_ bv4 4) (_ bv12 4)) v0)))) ((_ zero_extend 3) (ite (bvugt v1 (_ bv4 4)) (_ bv1 1) (_ bv0 1))))))))
(get-model)