(set-logic ALL)
(declare-const GEN1 Real)
(declare-const GEN2 Real)
(declare-const GEN3 Real)
(declare-const GEN4 Real)
(declare-const GEN5 Real)
(declare-const GEN6 Real)
(declare-const GEN7 Real)
(declare-const GEN8 Real)
(declare-const GEN9 Real)
(declare-const GEN10 Real)
(declare-const GEN11 Int)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-fun a () Real)
(declare-fun b () Real)
(declare-fun dbz (Real) Real)
(assert (or (>= (* (- GEN6) (ite (= (dbz (dbz (ite (= b GEN2) (dbz (ite (= a GEN5) (dbz GEN4) (/ GEN3 a))) (/ (ite (= a GEN5) (dbz GEN4) (/ GEN3 a)) b)))) GEN7) (dbz GEN1) (/ GEN8 (dbz (dbz (ite (= b GEN2) (dbz (ite (= a GEN5) (dbz GEN4) (/ GEN3 a))) (/ (ite (= a GEN5) (dbz GEN4) (/ GEN3 a)) b))))))) GEN9) (>= (dbz GEN1) GEN10)))
(assert (> a GEN11))
(assert (= BAV12 (or (>= (* (- GEN6) (ite (= (dbz (dbz (ite (= b GEN2) (dbz (ite (= a GEN5) (dbz GEN4) (/ GEN3 a))) (/ (ite (= a GEN5) (dbz GEN4) (/ GEN3 a)) b)))) GEN7) (dbz GEN1) (/ GEN8 (dbz (dbz (ite (= b GEN2) (dbz (ite (= a GEN5) (dbz GEN4) (/ GEN3 a))) (/ (ite (= a GEN5) (dbz GEN4) (/ GEN3 a)) b))))))) GEN9) (>= (dbz GEN1) GEN10))))
(assert (= BAV13 (>= (* (- GEN6) (ite (= (dbz (dbz (ite (= b GEN2) (dbz (ite (= a GEN5) (dbz GEN4) (/ GEN3 a))) (/ (ite (= a GEN5) (dbz GEN4) (/ GEN3 a)) b)))) GEN7) (dbz GEN1) (/ GEN8 (dbz (dbz (ite (= b GEN2) (dbz (ite (= a GEN5) (dbz GEN4) (/ GEN3 a))) (/ (ite (= a GEN5) (dbz GEN4) (/ GEN3 a)) b))))))) GEN9)))
(assert (= BAV14 (= (dbz (dbz (ite (= b GEN2) (dbz (ite (= a GEN5) (dbz GEN4) (/ GEN3 a))) (/ (ite (= a GEN5) (dbz GEN4) (/ GEN3 a)) b)))) GEN7)))
(assert (= BAV15 (= b GEN2)))
(assert (= BAV16 (= a GEN5)))
(assert (= BAV17 (= a GEN5)))
(assert (= BAV18 (= b GEN2)))
(assert (= BAV19 (= a GEN5)))
(assert (= BAV20 (= a GEN5)))
(assert (= BAV21 (>= (dbz GEN1) GEN10)))
(assert (= BAV22 (> a GEN11)))
(check-sat)
(get-model)