(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const BAV12 Bool)
(declare-const BAV13 Bool)
(declare-const BAV14 Bool)
(declare-const BAV15 Bool)
(declare-const BAV16 Bool)
(declare-const BAV17 Bool)
(declare-const BAV18 Bool)
(declare-const BAV19 Bool)
(declare-const BAV20 Bool)
(declare-const BAV21 Bool)
(declare-const BAV22 Bool)
(declare-const BAV23 Bool)
(declare-const BAV24 Bool)
(declare-const BAV25 Bool)
(declare-const BAV26 Bool)
(declare-const BAV27 Bool)
(declare-const BAV28 Bool)
(declare-const BAV29 Bool)
(declare-const BAV30 Bool)
(declare-const BAV31 Bool)
(declare-const BAV32 Bool)
(declare-const BAV33 Bool)
(declare-const BAV34 Bool)
(declare-const BAV35 Bool)
(declare-const BAV36 Bool)
(declare-const BAV37 Bool)
(declare-const BAV38 Bool)
(declare-const BAV39 Bool)
(declare-const BAV40 Bool)
(declare-const BAV41 Bool)
(declare-const BAV42 Bool)
(declare-const BAV43 Bool)
(declare-const BAV44 Bool)
(declare-const BAV45 Bool)
(declare-const BAV46 Bool)
(declare-const BAV47 Bool)
(declare-const BAV48 Bool)
(declare-const BAV49 Bool)
(declare-const BAV50 Bool)
(declare-const BAV51 Bool)
(declare-const BAV52 Bool)
(declare-const BAV53 Bool)
(declare-const BAV54 Bool)
(declare-const BAV55 Bool)
(declare-const BAV56 Bool)
(declare-const BAV57 Bool)
(declare-const BAV58 Bool)
(declare-const BAV59 Bool)
(declare-const BAV60 Bool)
(declare-const BAV61 Bool)
(declare-const BAV62 Bool)
(declare-const BAV63 Bool)
(declare-const BAV64 Bool)
(declare-const BAV65 Bool)
(declare-const BAV66 Bool)
(declare-const BAV67 Bool)
(declare-const BAV68 Bool)
(declare-const BAV69 Bool)
(declare-const BAV70 Bool)
(declare-const BAV71 Bool)
(declare-const BAV72 Bool)
(declare-const BAV73 Bool)
(declare-const BAV74 Bool)
(declare-const BAV75 Bool)
(declare-const BAV76 Bool)
(declare-const BAV77 Bool)
(declare-const BAV78 Bool)
(declare-const BAV79 Bool)
(declare-const BAV80 Bool)
(declare-const BAV81 Bool)
(declare-const BAV82 Bool)
(declare-const BAV83 Bool)
(declare-const BAV84 Bool)
(declare-const BAV85 Bool)
(declare-const BAV86 Bool)
(declare-const BAV87 Bool)
(declare-const BAV88 Bool)
(declare-const BAV89 Bool)
(declare-const BAV90 Bool)
(declare-const BAV91 Bool)
(declare-const BAV92 Bool)
(declare-const BAV93 Bool)
(declare-const BAV94 Bool)
(declare-const BAV95 Bool)
(declare-const BAV96 Bool)
(set-info :source | Burns mutual exclusion protocol. This is a benchmark of the haRVey theorem prover. It was translated to SMT-LIB by Leonardo  de Moura |)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(declare-fun s_0 (Int) Bool)
(declare-fun s_1 (Int) Bool)
(declare-fun s_2 (Int) Bool)
(declare-fun s_3 (Int) Bool)
(declare-fun s_4 (Int) Bool)
(declare-fun s_5 (Int) Bool)
(declare-fun s (Int Int) Bool)
(declare-fun flag (Int) Bool)
(declare-fun p () Int)
(declare-fun q () Int)
(assert (not (=> (and (forall ((?p Int)) (=> (not (flag ?p)) (or (s_0 ?p) (s_1 ?p) (s_2 ?p)))) (forall ((?p Int)) (forall ((?q Int)) (=> (s_2 ?p) (not (s ?p ?q))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (< ?q ?p) (flag ?q) (or (s_5 ?p) (s_4 ?p) (and (s_3 ?p) (s ?p ?q)))) (and (not (s_5 ?q)) (not (and (s_4 ?q) (s ?q ?p))))))) (forall ((?p Int)) (=> (s_0 ?p) (not (or (s_1 ?p) (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_1 ?p) (not (or (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_2 ?p) (not (or (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_3 ?p) (not (or (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_4 ?p) (not (s_5 ?p)))) (forall ((?r Int)) (=> (s_0 ?r) (not (or (s_1 ?r) (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_1 ?r) (not (or (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_2 ?r) (not (or (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_3 ?r) (not (or (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (not (s_5 ?r)))) (s_4 p) (not (s p q)) (< p q) (not (flag q))) (and (forall ((?t Int)) (=> (not (flag ?t)) (or (s_0 ?t) (s_1 ?t) (s_2 ?t)))) (forall ((?t Int)) (forall ((?r Int)) (=> (s_2 ?t) (not (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r)))))) (forall ((?t Int)) (forall ((?r Int)) (=> (and (< ?r ?t) (flag ?r) (or (s_5 ?t) (=> (not (= ?t p)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t)))) (and (s_3 ?t) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r))))) (and (not (s_5 ?r)) (not (and (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (=> (not (and (= ?t q) (= ?r p))) (s ?r ?t))))))))))))
(assert (= BAV1 (=> (and (forall ((?p Int)) (=> (not (flag ?p)) (or (s_0 ?p) (s_1 ?p) (s_2 ?p)))) (forall ((?p Int)) (forall ((?q Int)) (=> (s_2 ?p) (not (s ?p ?q))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (< ?q ?p) (flag ?q) (or (s_5 ?p) (s_4 ?p) (and (s_3 ?p) (s ?p ?q)))) (and (not (s_5 ?q)) (not (and (s_4 ?q) (s ?q ?p))))))) (forall ((?p Int)) (=> (s_0 ?p) (not (or (s_1 ?p) (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_1 ?p) (not (or (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_2 ?p) (not (or (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_3 ?p) (not (or (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_4 ?p) (not (s_5 ?p)))) (forall ((?r Int)) (=> (s_0 ?r) (not (or (s_1 ?r) (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_1 ?r) (not (or (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_2 ?r) (not (or (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_3 ?r) (not (or (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (not (s_5 ?r)))) (s_4 p) (not (s p q)) (< p q) (not (flag q))) (and (forall ((?t Int)) (=> (not (flag ?t)) (or (s_0 ?t) (s_1 ?t) (s_2 ?t)))) (forall ((?t Int)) (forall ((?r Int)) (=> (s_2 ?t) (not (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r)))))) (forall ((?t Int)) (forall ((?r Int)) (=> (and (< ?r ?t) (flag ?r) (or (s_5 ?t) (=> (not (= ?t p)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t)))) (and (s_3 ?t) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r))))) (and (not (s_5 ?r)) (not (and (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (=> (not (and (= ?t q) (= ?r p))) (s ?r ?t))))))))))))
(assert (= BAV2 (and (forall ((?p Int)) (=> (not (flag ?p)) (or (s_0 ?p) (s_1 ?p) (s_2 ?p)))) (forall ((?p Int)) (forall ((?q Int)) (=> (s_2 ?p) (not (s ?p ?q))))) (forall ((?p Int)) (forall ((?q Int)) (=> (and (< ?q ?p) (flag ?q) (or (s_5 ?p) (s_4 ?p) (and (s_3 ?p) (s ?p ?q)))) (and (not (s_5 ?q)) (not (and (s_4 ?q) (s ?q ?p))))))) (forall ((?p Int)) (=> (s_0 ?p) (not (or (s_1 ?p) (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_1 ?p) (not (or (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_2 ?p) (not (or (s_3 ?p) (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_3 ?p) (not (or (s_4 ?p) (s_5 ?p))))) (forall ((?p Int)) (=> (s_4 ?p) (not (s_5 ?p)))) (forall ((?r Int)) (=> (s_0 ?r) (not (or (s_1 ?r) (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_1 ?r) (not (or (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_2 ?r) (not (or (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (s_3 ?r) (not (or (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r))))) (forall ((?r Int)) (=> (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (not (s_5 ?r)))) (s_4 p) (not (s p q)) (< p q) (not (flag q)))))
(assert (= BAV3 (forall ((?p Int)) (=> (not (flag ?p)) (or (s_0 ?p) (s_1 ?p) (s_2 ?p))))))
(assert (= BAV4 (forall ((?p Int)) (or (s_0 ?p) (s_1 ?p) (s_2 ?p)))))
(assert (= BAV5 (forall ((?p Int)(?q Int)) (=> (s_2 ?p) (not (s ?p ?q))))))
(assert (= BAV6 (forall ((?p Int)(?q Int)) (=> (and (< ?q ?p) (flag ?q) (or (s_5 ?p) (s_4 ?p) (and (s_3 ?p) (s ?p ?q)))) (and (not (s_5 ?q)) (not (and (s_4 ?q) (s ?q ?p))))))))
(assert (= BAV7 (forall ((?p Int)(?q Int)) (and (< ?q ?p) (flag ?q) (or (s_5 ?p) (s_4 ?p) (and (s_3 ?p) (s ?p ?q)))))))
(assert (= BAV8 (forall ((?p Int)(?q Int)) (< ?q ?p))))
(assert (= BAV9 (forall ((?p Int)(?q Int)) (or (s_5 ?p) (s_4 ?p) (and (s_3 ?p) (s ?p ?q))))))
(assert (= BAV10 (forall ((?p Int)(?q Int)) (and (s_3 ?p) (s ?p ?q)))))
(assert (= BAV11 (forall ((?p Int)(?q Int)) (and (not (s_5 ?q)) (not (and (s_4 ?q) (s ?q ?p)))))))
(assert (= BAV12 (forall ((?p Int)(?q Int)) (and (s_4 ?q) (s ?q ?p)))))
(assert (= BAV13 (forall ((?p Int)) (=> (s_0 ?p) (not (or (s_1 ?p) (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p)))))))
(assert (= BAV14 (forall ((?p Int)) (or (s_1 ?p) (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p)))))
(assert (= BAV15 (forall ((?p Int)) (=> (s_1 ?p) (not (or (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p)))))))
(assert (= BAV16 (forall ((?p Int)) (or (s_2 ?p) (s_3 ?p) (s_4 ?p) (s_5 ?p)))))
(assert (= BAV17 (forall ((?p Int)) (=> (s_2 ?p) (not (or (s_3 ?p) (s_4 ?p) (s_5 ?p)))))))
(assert (= BAV18 (forall ((?p Int)) (or (s_3 ?p) (s_4 ?p) (s_5 ?p)))))
(assert (= BAV19 (forall ((?p Int)) (=> (s_3 ?p) (not (or (s_4 ?p) (s_5 ?p)))))))
(assert (= BAV20 (forall ((?p Int)) (or (s_4 ?p) (s_5 ?p)))))
(assert (= BAV21 (forall ((?p Int)) (=> (s_4 ?p) (not (s_5 ?p))))))
(assert (= BAV22 (forall ((?r Int)) (=> (s_0 ?r) (not (or (s_1 ?r) (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))))
(assert (= BAV23 (forall ((?r Int)) (or (s_1 ?r) (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))
(assert (= BAV24 (forall ((?r Int)) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))))))
(assert (= BAV25 (forall ((?r Int)) (= ?r p))))
(assert (= BAV26 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r))))))
(assert (= BAV27 (forall ((?r Int)) (= ?r p))))
(assert (= BAV28 (forall ((?r Int)) (=> (not (= ?r p)) (s_4 ?r)))))
(assert (= BAV29 (forall ((?r Int)) (= ?r p))))
(assert (= BAV30 (forall ((?r Int)) (=> (s_1 ?r) (not (or (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))))
(assert (= BAV31 (forall ((?r Int)) (or (s_2 ?r) (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))
(assert (= BAV32 (forall ((?r Int)) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))))))
(assert (= BAV33 (forall ((?r Int)) (= ?r p))))
(assert (= BAV34 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r))))))
(assert (= BAV35 (forall ((?r Int)) (= ?r p))))
(assert (= BAV36 (forall ((?r Int)) (=> (not (= ?r p)) (s_4 ?r)))))
(assert (= BAV37 (forall ((?r Int)) (= ?r p))))
(assert (= BAV38 (forall ((?r Int)) (=> (s_2 ?r) (not (or (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))))
(assert (= BAV39 (forall ((?r Int)) (or (s_3 ?r) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))
(assert (= BAV40 (forall ((?r Int)) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))))))
(assert (= BAV41 (forall ((?r Int)) (= ?r p))))
(assert (= BAV42 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r))))))
(assert (= BAV43 (forall ((?r Int)) (= ?r p))))
(assert (= BAV44 (forall ((?r Int)) (=> (not (= ?r p)) (s_4 ?r)))))
(assert (= BAV45 (forall ((?r Int)) (= ?r p))))
(assert (= BAV46 (forall ((?r Int)) (=> (s_3 ?r) (not (or (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))))
(assert (= BAV47 (forall ((?r Int)) (or (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (s_5 ?r)))))
(assert (= BAV48 (forall ((?r Int)) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))))))
(assert (= BAV49 (forall ((?r Int)) (= ?r p))))
(assert (= BAV50 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r))))))
(assert (= BAV51 (forall ((?r Int)) (= ?r p))))
(assert (= BAV52 (forall ((?r Int)) (=> (not (= ?r p)) (s_4 ?r)))))
(assert (= BAV53 (forall ((?r Int)) (= ?r p))))
(assert (= BAV54 (forall ((?r Int)) (=> (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (not (s_5 ?r))))))
(assert (= BAV55 (forall ((?r Int)) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))))))
(assert (= BAV56 (forall ((?r Int)) (= ?r p))))
(assert (= BAV57 (forall ((?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r))))))
(assert (= BAV58 (forall ((?r Int)) (= ?r p))))
(assert (= BAV59 (forall ((?r Int)) (=> (not (= ?r p)) (s_4 ?r)))))
(assert (= BAV60 (forall ((?r Int)) (= ?r p))))
(assert (= BAV61 (< p q)))
(assert (= BAV62 (and (forall ((?t Int)) (=> (not (flag ?t)) (or (s_0 ?t) (s_1 ?t) (s_2 ?t)))) (forall ((?t Int)) (forall ((?r Int)) (=> (s_2 ?t) (not (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r)))))) (forall ((?t Int)) (forall ((?r Int)) (=> (and (< ?r ?t) (flag ?r) (or (s_5 ?t) (=> (not (= ?t p)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t)))) (and (s_3 ?t) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r))))) (and (not (s_5 ?r)) (not (and (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (=> (not (and (= ?t q) (= ?r p))) (s ?r ?t)))))))))))
(assert (= BAV63 (forall ((?t Int)) (=> (not (flag ?t)) (or (s_0 ?t) (s_1 ?t) (s_2 ?t))))))
(assert (= BAV64 (forall ((?t Int)) (or (s_0 ?t) (s_1 ?t) (s_2 ?t)))))
(assert (= BAV65 (forall ((?t Int)(?r Int)) (=> (s_2 ?t) (not (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r)))))))
(assert (= BAV66 (forall ((?t Int)(?r Int)) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r)))))
(assert (= BAV67 (forall ((?t Int)(?r Int)) (and (= ?r q) (= ?t p)))))
(assert (= BAV68 (forall ((?t Int)(?r Int)) (= ?r q))))
(assert (= BAV69 (forall ((?t Int)(?r Int)) (= ?t p))))
(assert (= BAV70 (forall ((?t Int)(?r Int)) (=> (and (< ?r ?t) (flag ?r) (or (s_5 ?t) (=> (not (= ?t p)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t)))) (and (s_3 ?t) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r))))) (and (not (s_5 ?r)) (not (and (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (=> (not (and (= ?t q) (= ?r p))) (s ?r ?t)))))))))
(assert (= BAV71 (forall ((?t Int)(?r Int)) (and (< ?r ?t) (flag ?r) (or (s_5 ?t) (=> (not (= ?t p)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t)))) (and (s_3 ?t) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r))))))))
(assert (= BAV72 (forall ((?t Int)(?r Int)) (< ?r ?t))))
(assert (= BAV73 (forall ((?t Int)(?r Int)) (or (s_5 ?t) (=> (not (= ?t p)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t)))) (and (s_3 ?t) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r)))))))
(assert (= BAV74 (forall ((?t Int)(?r Int)) (=> (not (= ?t p)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t)))))))
(assert (= BAV75 (forall ((?t Int)(?r Int)) (= ?t p))))
(assert (= BAV76 (forall ((?t Int)(?r Int)) (and (not (= ?t p)) (=> (not (= ?t p)) (s_4 ?t))))))
(assert (= BAV77 (forall ((?t Int)(?r Int)) (= ?t p))))
(assert (= BAV78 (forall ((?t Int)(?r Int)) (=> (not (= ?t p)) (s_4 ?t)))))
(assert (= BAV79 (forall ((?t Int)(?r Int)) (= ?t p))))
(assert (= BAV80 (forall ((?t Int)(?r Int)) (and (s_3 ?t) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r))))))
(assert (= BAV81 (forall ((?t Int)(?r Int)) (=> (not (and (= ?r q) (= ?t p))) (s ?t ?r)))))
(assert (= BAV82 (forall ((?t Int)(?r Int)) (and (= ?r q) (= ?t p)))))
(assert (= BAV83 (forall ((?t Int)(?r Int)) (= ?r q))))
(assert (= BAV84 (forall ((?t Int)(?r Int)) (= ?t p))))
(assert (= BAV85 (forall ((?t Int)(?r Int)) (and (not (s_5 ?r)) (not (and (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (=> (not (and (= ?t q) (= ?r p))) (s ?r ?t))))))))
(assert (= BAV86 (forall ((?t Int)(?r Int)) (and (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))) (=> (not (and (= ?t q) (= ?r p))) (s ?r ?t))))))
(assert (= BAV87 (forall ((?t Int)(?r Int)) (=> (not (= ?r p)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r)))))))
(assert (= BAV88 (forall ((?t Int)(?r Int)) (= ?r p))))
(assert (= BAV89 (forall ((?t Int)(?r Int)) (and (not (= ?r p)) (=> (not (= ?r p)) (s_4 ?r))))))
(assert (= BAV90 (forall ((?t Int)(?r Int)) (= ?r p))))
(assert (= BAV91 (forall ((?t Int)(?r Int)) (=> (not (= ?r p)) (s_4 ?r)))))
(assert (= BAV92 (forall ((?t Int)(?r Int)) (= ?r p))))
(assert (= BAV93 (forall ((?t Int)(?r Int)) (=> (not (and (= ?t q) (= ?r p))) (s ?r ?t)))))
(assert (= BAV94 (forall ((?t Int)(?r Int)) (and (= ?t q) (= ?r p)))))
(assert (= BAV95 (forall ((?t Int)(?r Int)) (= ?t q))))
(assert (= BAV96 (forall ((?t Int)(?r Int)) (= ?r p))))
(check-sat)
(exit)