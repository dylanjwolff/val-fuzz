(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN13 String)
(declare-const GEN12 String)
(declare-const GEN11 String)
(declare-const GEN10 String)
(declare-const GEN9 String)
(declare-const GEN8 String)
(declare-const GEN7 String)
(declare-const GEN6 String)
(declare-const GEN5 String)
(declare-const GEN4 String)
(declare-const GEN3 String)
(declare-const GEN2 String)
(declare-const GEN1 String)
(declare-fun s () String)
(assert (or (= (str.++ s GEN1) GEN2) (= (str.++ s s) GEN3) (not (str.contains s GEN4)) (str.contains GEN5 (str.++ s GEN6)) (not (= (str.replace GEN7 GEN8 GEN9) GEN10)) (not (= (str.prefixof s GEN11) (str.suffixof s GEN12))) (not (str.prefixof s s)) (not (str.prefixof GEN13 s))))
(assert (= BAV1 (or (= (str.++ s GEN1) GEN2) (= (str.++ s s) GEN3) (not (str.contains s GEN4)) (str.contains GEN5 (str.++ s GEN6)) (not (= (str.replace GEN7 GEN8 GEN9) GEN10)) (not (= (str.prefixof s GEN11) (str.suffixof s GEN12))) (not (str.prefixof s s)) (not (str.prefixof GEN13 s)))))
(assert (= BAV2 (= (str.++ s GEN1) GEN2)))
(assert (= BAV3 (= (str.++ s s) GEN3)))
(assert (= BAV4 (= (str.replace GEN7 GEN8 GEN9) GEN10)))
(assert (= BAV5 (= (str.prefixof s GEN11) (str.suffixof s GEN12))))
(check-sat)
(get-model)