(set-logic ALL)
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const GEN37 Int)
(declare-const GEN36 String)
(declare-const GEN35 String)
(declare-const GEN34 Int)
(declare-const GEN33 Int)
(declare-const GEN32 String)
(declare-const GEN31 String)
(declare-const GEN30 String)
(declare-const GEN29 Int)
(declare-const GEN28 String)
(declare-const GEN27 String)
(declare-const GEN26 String)
(declare-const GEN25 Int)
(declare-const GEN24 String)
(declare-const GEN23 String)
(declare-const GEN22 String)
(declare-const GEN21 Int)
(declare-const GEN20 String)
(declare-const GEN19 String)
(declare-const GEN18 String)
(declare-const GEN17 Int)
(declare-const GEN16 Int)
(declare-const GEN15 String)
(declare-const GEN14 String)
(declare-const GEN13 String)
(declare-const GEN12 Int)
(declare-const GEN11 String)
(declare-const GEN10 String)
(declare-const GEN9 Int)
(declare-const GEN8 String)
(declare-const GEN7 String)
(declare-const GEN6 Int)
(declare-const GEN5 String)
(declare-const GEN4 String)
(declare-const GEN3 Int)
(declare-const GEN2 String)
(declare-const GEN1 String)
(set-option :strings-exp true)
(declare-fun s () String)
(declare-fun t () String)
(assert (= (str.indexof (str.++ s GEN1) GEN2 GEN3) (str.indexof (str.++ s GEN4) GEN5 GEN6)))
(assert (= (str.indexof (str.++ s GEN7 t GEN8) t GEN9) (str.indexof (str.++ s GEN10 t GEN11) t GEN12)))
(assert (= (str.indexof (str.++ GEN13 s GEN14) GEN15 GEN16) (+ GEN17 (str.indexof (str.++ GEN18 s GEN19) GEN20 GEN21))))
(assert (= (str.indexof (str.++ GEN22 s GEN23) GEN24 GEN25) (str.indexof (str.++ GEN26 s GEN27) GEN28 GEN29)))
(assert (= (str.indexof (str.++ GEN30 s GEN31) GEN32 GEN33) (+ GEN34 (str.indexof (str.++ s GEN35 t) GEN36 GEN37))))
(assert (= BAV1 (= (str.indexof (str.++ s GEN1) GEN2 GEN3) (str.indexof (str.++ s GEN4) GEN5 GEN6))))
(assert (= BAV2 (= (str.indexof (str.++ s GEN7 t GEN8) t GEN9) (str.indexof (str.++ s GEN10 t GEN11) t GEN12))))
(assert (= BAV3 (= (str.indexof (str.++ GEN13 s GEN14) GEN15 GEN16) (+ GEN17 (str.indexof (str.++ GEN18 s GEN19) GEN20 GEN21)))))
(assert (= BAV4 (= (str.indexof (str.++ GEN22 s GEN23) GEN24 GEN25) (str.indexof (str.++ GEN26 s GEN27) GEN28 GEN29))))
(assert (= BAV5 (= (str.indexof (str.++ GEN30 s GEN31) GEN32 GEN33) (+ GEN34 (str.indexof (str.++ s GEN35 t) GEN36 GEN37)))))
(check-sat)
(get-model)