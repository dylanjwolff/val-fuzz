---
source: cswap/src/fuzzer.rs
expression: script
---
(declare-const GEN1 Real)
(declare-const GEN2 Int)
(declare-const GEN3 Real)
(declare-const GEN4 Int)
(declare-const mpfx (_ FloatingPoint 11 53))
(declare-const BAV1 Bool)
(declare-const BDOM1 Bool)
(declare-const BDOM2 Bool)
(declare-const BDOM3 Bool)
(declare-const BDOM4 Bool)
(declare-const BDOM5 Bool)
(declare-const BDOM6 Bool)
(declare-const BDOM7 Bool)
(declare-const BDOM8 Bool)
(declare-const INTER_CMON1 Bool)
(declare-const INTER_CMON2 Bool)
(declare-const INTER_CMON3 Bool)
(declare-const INTER_CMON4 Bool)
(declare-const INTER_CMON5 Bool)
(declare-const INTER_CMON6 Bool)
(declare-const INTER_CMON7 Bool)
(declare-const INTER_CMON8 Bool)
(declare-const INTER_CMON9 Bool)
(declare-const INTER_CMON10 Bool)
(declare-const INTER_CMON11 Bool)
(declare-const INTER_CMON12 Bool)
(declare-const INTER_CMON13 Bool)
(declare-const INTER_CMON14 Bool)
(declare-const INTER_CMON15 Bool)
(declare-const INTER_CMON16 Bool)
(declare-const INTER_CMON17 Bool)
(declare-const INTER_CMON18 Bool)
(assert (= BAV1 (= mpfx (fp.mul roundTowardPositive ((_ to_fp 11 53) roundNearestTiesToEven GEN1 (- GEN2)) ((_ to_fp 11 53) roundNearestTiesToEven GEN3 (- GEN4))))))
(assert (= BDOM1 BAV1))
(assert (= (= mpfx (_ -oo 11 53)) BDOM2))
(assert (= (and (fp.gt mpfx (_ -oo 11 53)) (fp.lt mpfx (_ -zero 11 53))) BDOM3))
(assert (= (= mpfx (_ -zero 11 53)) BDOM4))
(assert (= (= mpfx (_ +zero 11 53)) BDOM5))
(assert (= (and (fp.gt mpfx (_ +zero 11 53)) (fp.lt mpfx (_ +oo 11 53))) BDOM6))
(assert (= (= mpfx (_ +oo 11 53)) BDOM7))
(assert (= (= mpfx (_ NaN 11 53)) BDOM8))
(assert (= INTER_CMON1 (= GEN1 GEN2)))
(assert (= INTER_CMON2 (< GEN1 GEN2)))
(assert (= INTER_CMON3 (> GEN1 GEN2)))
(assert (= INTER_CMON4 (= GEN1 GEN3)))
(assert (= INTER_CMON5 (< GEN1 GEN3)))
(assert (= INTER_CMON6 (> GEN1 GEN3)))
(assert (= INTER_CMON7 (= GEN1 GEN4)))
(assert (= INTER_CMON8 (< GEN1 GEN4)))
(assert (= INTER_CMON9 (> GEN1 GEN4)))
(assert (= INTER_CMON10 (= GEN2 GEN3)))
(assert (= INTER_CMON11 (< GEN2 GEN3)))
(assert (= INTER_CMON12 (> GEN2 GEN3)))
(assert (= INTER_CMON13 (= GEN2 GEN4)))
(assert (= INTER_CMON14 (< GEN2 GEN4)))
(assert (= INTER_CMON15 (> GEN2 GEN4)))
(assert (= INTER_CMON16 (= GEN3 GEN4)))
(assert (= INTER_CMON17 (< GEN3 GEN4)))
(assert (= INTER_CMON18 (> GEN3 GEN4)))
(check-sat)
(get-model)

