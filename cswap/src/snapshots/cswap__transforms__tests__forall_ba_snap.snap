---
source: cswap/src/transforms.rs
expression: "ba_stra + \"\\n\\n ~~~~~~~~~~~~~~~~~~~~~~~ \\n\\n\" + &ba_strb"
---
(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BDOM1 Bool)
(declare-const BDOM2 Bool)
(declare-const BDOM3 Bool)
(declare-const BDOM4 Bool)
(declare-const BDOM5 Bool)
(declare-const BDOM6 Bool)
(declare-const QUAL_PRE_REPLACE1 Int)
(declare-const QUAL_PRE_REPLACE2 String)
(assert (not (< QUAL_PRE_REPLACE1 4)))
(assert (not (= QUAL_PRE_REPLACE2 "")))
(assert (= BAV1 (< QUAL_PRE_REPLACE1 4)))
(assert (= BAV2 (= QUAL_PRE_REPLACE2 "")))
(assert (= BDOM1 BAV1))
(assert (= BDOM2 BAV2))
(assert (= (= QUAL_PRE_REPLACE1 0) BDOM3))
(assert (= (< QUAL_PRE_REPLACE1 0) BDOM4))
(assert (= (> QUAL_PRE_REPLACE1 0) BDOM5))
(assert (= (= QUAL_PRE_REPLACE2 "") BDOM6))


 ~~~~~~~~~~~~~~~~~~~~~~~ 

(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BDOM1 Bool)
(declare-const BDOM2 Bool)
(declare-const BDOM3 Bool)
(declare-const BDOM4 Bool)
(declare-const BDOM5 Bool)
(declare-const BDOM6 Bool)
(declare-const QUAL_PRE_REPLACE1 Int)
(declare-const QUAL_PRE_REPLACE2 String)
(assert (< QUAL_PRE_REPLACE1 4))
(assert (= QUAL_PRE_REPLACE2 ""))
(assert (= BAV1 (< QUAL_PRE_REPLACE1 4)))
(assert (= BAV2 (= QUAL_PRE_REPLACE2 "")))
(assert (= BDOM1 BAV1))
(assert (= BDOM2 BAV2))
(assert (= (= QUAL_PRE_REPLACE1 0) BDOM3))
(assert (= (< QUAL_PRE_REPLACE1 0) BDOM4))
(assert (= (> QUAL_PRE_REPLACE1 0) BDOM5))
(assert (= (= QUAL_PRE_REPLACE2 "") BDOM6))

