<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1173.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1173.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (3 samples, 0.19%)</title><rect x="0.0649%" y="773" width="0.1946%" height="15" fill="rgb(227,0,7)"/><text x="0.3149%" y="783.50"></text></g><g><title>nom::character::complete::digit1::_{{closure}} (3 samples, 0.19%)</title><rect x="0.0649%" y="757" width="0.1946%" height="15" fill="rgb(217,0,24)"/><text x="0.3149%" y="767.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (3 samples, 0.19%)</title><rect x="0.0649%" y="741" width="0.1946%" height="15" fill="rgb(221,193,54)"/><text x="0.3149%" y="751.50"></text></g><g><title>cswap::parser::decimal (7 samples, 0.45%)</title><rect x="0.0000%" y="1045" width="0.4540%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1055.50"></text></g><g><title>nom::number::complete::recognize_float (7 samples, 0.45%)</title><rect x="0.0000%" y="1029" width="0.4540%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="1039.50"></text></g><g><title>nom::combinator::recognize::_{{closure}} (7 samples, 0.45%)</title><rect x="0.0000%" y="1013" width="0.4540%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="1023.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (7 samples, 0.45%)</title><rect x="0.0000%" y="997" width="0.4540%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="1007.50"></text></g><g><title>&lt; (7 samples, 0.45%)</title><rect x="0.0000%" y="981" width="0.4540%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="991.50"></text></g><g><title>nom::branch::alt::_{{closure}} (7 samples, 0.45%)</title><rect x="0.0000%" y="965" width="0.4540%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="975.50"></text></g><g><title>&lt; (7 samples, 0.45%)</title><rect x="0.0000%" y="949" width="0.4540%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="959.50"></text></g><g><title>nom::combinator::map::_{{closure}} (7 samples, 0.45%)</title><rect x="0.0000%" y="933" width="0.4540%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="943.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (7 samples, 0.45%)</title><rect x="0.0000%" y="917" width="0.4540%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="927.50"></text></g><g><title>&lt; (7 samples, 0.45%)</title><rect x="0.0000%" y="901" width="0.4540%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.45%)</title><rect x="0.0000%" y="885" width="0.4540%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="895.50"></text></g><g><title>nom::character::complete::digit1 (7 samples, 0.45%)</title><rect x="0.0000%" y="869" width="0.4540%" height="15" fill="rgb(217,207,13)"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (7 samples, 0.45%)</title><rect x="0.0000%" y="853" width="0.4540%" height="15" fill="rgb(231,73,38)"/><text x="0.2500%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (7 samples, 0.45%)</title><rect x="0.0000%" y="837" width="0.4540%" height="15" fill="rgb(225,20,46)"/><text x="0.2500%" y="847.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.39%)</title><rect x="0.0649%" y="821" width="0.3891%" height="15" fill="rgb(210,31,41)"/><text x="0.3149%" y="831.50"></text></g><g><title>core::str::pattern::Searcher::next_match (6 samples, 0.39%)</title><rect x="0.0649%" y="805" width="0.3891%" height="15" fill="rgb(221,200,47)"/><text x="0.3149%" y="815.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (6 samples, 0.39%)</title><rect x="0.0649%" y="789" width="0.3891%" height="15" fill="rgb(226,26,5)"/><text x="0.3149%" y="799.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="0.2594%" y="773" width="0.1946%" height="15" fill="rgb(249,33,26)"/><text x="0.5094%" y="783.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="0.3243%" y="757" width="0.1297%" height="15" fill="rgb(235,183,28)"/><text x="0.5743%" y="767.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="0.3243%" y="741" width="0.1297%" height="15" fill="rgb(221,5,38)"/><text x="0.5743%" y="751.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.52%)</title><rect x="0.0000%" y="1061" width="0.5188%" height="15" fill="rgb(247,18,42)"/><text x="0.2500%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.13%)</title><rect x="0.5188%" y="901" width="0.1297%" height="15" fill="rgb(241,131,45)"/><text x="0.7688%" y="911.50"></text></g><g><title>core::mem::take (2 samples, 0.13%)</title><rect x="0.5188%" y="885" width="0.1297%" height="15" fill="rgb(249,31,29)"/><text x="0.7688%" y="895.50"></text></g><g><title>core::mem::replace (2 samples, 0.13%)</title><rect x="0.5188%" y="869" width="0.1297%" height="15" fill="rgb(225,111,53)"/><text x="0.7688%" y="879.50"></text></g><g><title>core::mem::swap (2 samples, 0.13%)</title><rect x="0.5188%" y="853" width="0.1297%" height="15" fill="rgb(238,160,17)"/><text x="0.7688%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.13%)</title><rect x="0.5188%" y="837" width="0.1297%" height="15" fill="rgb(214,148,48)"/><text x="0.7688%" y="847.50"></text></g><g><title>nom::combinator::map::_{{closure}} (4 samples, 0.26%)</title><rect x="0.6485%" y="901" width="0.2594%" height="15" fill="rgb(232,36,49)"/><text x="0.8985%" y="911.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (4 samples, 0.26%)</title><rect x="0.6485%" y="885" width="0.2594%" height="15" fill="rgb(209,103,24)"/><text x="0.8985%" y="895.50"></text></g><g><title>&lt; (4 samples, 0.26%)</title><rect x="0.6485%" y="869" width="0.2594%" height="15" fill="rgb(229,88,8)"/><text x="0.8985%" y="879.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (2 samples, 0.13%)</title><rect x="0.7782%" y="853" width="0.1297%" height="15" fill="rgb(213,181,19)"/><text x="1.0282%" y="863.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for &amp;T&gt;::clone (2 samples, 0.13%)</title><rect x="0.9079%" y="885" width="0.1297%" height="15" fill="rgb(254,191,54)"/><text x="1.1579%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.19%)</title><rect x="1.1025%" y="853" width="0.1946%" height="15" fill="rgb(241,83,37)"/><text x="1.3525%" y="863.50"></text></g><g><title>core::mem::take (3 samples, 0.19%)</title><rect x="1.1025%" y="837" width="0.1946%" height="15" fill="rgb(233,36,39)"/><text x="1.3525%" y="847.50"></text></g><g><title>core::mem::replace (3 samples, 0.19%)</title><rect x="1.1025%" y="821" width="0.1946%" height="15" fill="rgb(226,3,54)"/><text x="1.3525%" y="831.50"></text></g><g><title>core::mem::swap (3 samples, 0.19%)</title><rect x="1.1025%" y="805" width="0.1946%" height="15" fill="rgb(245,192,40)"/><text x="1.3525%" y="815.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.19%)</title><rect x="1.1025%" y="789" width="0.1946%" height="15" fill="rgb(238,167,29)"/><text x="1.3525%" y="799.50"></text></g><g><title>core::ptr::read (3 samples, 0.19%)</title><rect x="1.1025%" y="773" width="0.1946%" height="15" fill="rgb(232,182,51)"/><text x="1.3525%" y="783.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="1.2970%" y="837" width="0.1946%" height="15" fill="rgb(231,60,39)"/><text x="1.5470%" y="847.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="1.3619%" y="821" width="0.1297%" height="15" fill="rgb(208,69,12)"/><text x="1.6119%" y="831.50"></text></g><g><title>cswap::parser::bin (19 samples, 1.23%)</title><rect x="0.5188%" y="949" width="1.2322%" height="15" fill="rgb(235,93,37)"/><text x="0.7688%" y="959.50"></text></g><g><title>nom::branch::alt::_{{closure}} (19 samples, 1.23%)</title><rect x="0.5188%" y="933" width="1.2322%" height="15" fill="rgb(213,116,39)"/><text x="0.7688%" y="943.50"></text></g><g><title>&lt; (19 samples, 1.23%)</title><rect x="0.5188%" y="917" width="1.2322%" height="15" fill="rgb(222,207,29)"/><text x="0.7688%" y="927.50"></text></g><g><title>nom::multi::many1::_{{closure}} (13 samples, 0.84%)</title><rect x="0.9079%" y="901" width="0.8431%" height="15" fill="rgb(206,96,30)"/><text x="1.1579%" y="911.50"></text></g><g><title>nom::branch::alt::_{{closure}} (11 samples, 0.71%)</title><rect x="1.0376%" y="885" width="0.7134%" height="15" fill="rgb(218,138,4)"/><text x="1.2876%" y="895.50"></text></g><g><title>&lt; (11 samples, 0.71%)</title><rect x="1.0376%" y="869" width="0.7134%" height="15" fill="rgb(250,191,14)"/><text x="1.2876%" y="879.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (7 samples, 0.45%)</title><rect x="1.2970%" y="853" width="0.4540%" height="15" fill="rgb(239,60,40)"/><text x="1.5470%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.26%)</title><rect x="1.4916%" y="837" width="0.2594%" height="15" fill="rgb(206,27,48)"/><text x="1.7416%" y="847.50"></text></g><g><title>nom::character::complete::char::_{{closure}}::_{{closure}} (4 samples, 0.26%)</title><rect x="1.4916%" y="821" width="0.2594%" height="15" fill="rgb(225,35,8)"/><text x="1.7416%" y="831.50"></text></g><g><title>nom::branch::alt::_{{closure}} (6 samples, 0.39%)</title><rect x="1.8807%" y="869" width="0.3891%" height="15" fill="rgb(250,213,24)"/><text x="2.1307%" y="879.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="1.8807%" y="853" width="0.3891%" height="15" fill="rgb(247,123,22)"/><text x="2.1307%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.19%)</title><rect x="2.0752%" y="837" width="0.1946%" height="15" fill="rgb(231,138,38)"/><text x="2.3252%" y="847.50"></text></g><g><title>core::mem::take (2 samples, 0.13%)</title><rect x="2.1401%" y="821" width="0.1297%" height="15" fill="rgb(231,145,46)"/><text x="2.3901%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.13%)</title><rect x="2.5292%" y="821" width="0.1297%" height="15" fill="rgb(251,118,11)"/><text x="2.7792%" y="831.50"></text></g><g><title>core::mem::take (2 samples, 0.13%)</title><rect x="2.5292%" y="805" width="0.1297%" height="15" fill="rgb(217,147,25)"/><text x="2.7792%" y="815.50"></text></g><g><title>core::mem::replace (2 samples, 0.13%)</title><rect x="2.5292%" y="789" width="0.1297%" height="15" fill="rgb(247,81,37)"/><text x="2.7792%" y="799.50"></text></g><g><title>core::mem::swap (2 samples, 0.13%)</title><rect x="2.5292%" y="773" width="0.1297%" height="15" fill="rgb(209,12,38)"/><text x="2.7792%" y="783.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.13%)</title><rect x="2.5292%" y="757" width="0.1297%" height="15" fill="rgb(227,1,9)"/><text x="2.7792%" y="767.50"></text></g><g><title>core::ptr::read (2 samples, 0.13%)</title><rect x="2.5292%" y="741" width="0.1297%" height="15" fill="rgb(248,47,43)"/><text x="2.7792%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.13%)</title><rect x="2.5292%" y="725" width="0.1297%" height="15" fill="rgb(221,10,30)"/><text x="2.7792%" y="735.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.13%)</title><rect x="2.5292%" y="709" width="0.1297%" height="15" fill="rgb(210,229,1)"/><text x="2.7792%" y="719.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="2.8534%" y="805" width="0.2594%" height="15" fill="rgb(222,148,37)"/><text x="3.1034%" y="815.50"></text></g><g><title>cswap::parser::decimal (22 samples, 1.43%)</title><rect x="1.7510%" y="949" width="1.4267%" height="15" fill="rgb(234,67,33)"/><text x="2.0010%" y="959.50"></text></g><g><title>nom::number::complete::recognize_float (22 samples, 1.43%)</title><rect x="1.7510%" y="933" width="1.4267%" height="15" fill="rgb(247,98,35)"/><text x="2.0010%" y="943.50"></text></g><g><title>nom::combinator::recognize::_{{closure}} (22 samples, 1.43%)</title><rect x="1.7510%" y="917" width="1.4267%" height="15" fill="rgb(247,138,52)"/><text x="2.0010%" y="927.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (22 samples, 1.43%)</title><rect x="1.7510%" y="901" width="1.4267%" height="15" fill="rgb(213,79,30)"/><text x="2.0010%" y="911.50"></text></g><g><title>&lt; (22 samples, 1.43%)</title><rect x="1.7510%" y="885" width="1.4267%" height="15" fill="rgb(246,177,23)"/><text x="2.0010%" y="895.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (14 samples, 0.91%)</title><rect x="2.2698%" y="869" width="0.9079%" height="15" fill="rgb(230,62,27)"/><text x="2.5198%" y="879.50"></text></g><g><title>nom::branch::alt::_{{closure}} (12 samples, 0.78%)</title><rect x="2.3995%" y="853" width="0.7782%" height="15" fill="rgb(216,154,8)"/><text x="2.6495%" y="863.50"></text></g><g><title>&lt; (12 samples, 0.78%)</title><rect x="2.3995%" y="837" width="0.7782%" height="15" fill="rgb(244,35,45)"/><text x="2.6495%" y="847.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (7 samples, 0.45%)</title><rect x="2.7237%" y="821" width="0.4540%" height="15" fill="rgb(251,115,12)"/><text x="2.9737%" y="831.50"></text></g><g><title>core::iter::LoopState&lt;C,B&gt;::break_value (2 samples, 0.13%)</title><rect x="3.1777%" y="837" width="0.1297%" height="15" fill="rgb(240,54,50)"/><text x="3.4277%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.26%)</title><rect x="3.4371%" y="773" width="0.2594%" height="15" fill="rgb(233,84,52)"/><text x="3.6871%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (12 samples, 0.78%)</title><rect x="3.1777%" y="853" width="0.7782%" height="15" fill="rgb(207,117,47)"/><text x="3.4277%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.65%)</title><rect x="3.3074%" y="837" width="0.6485%" height="15" fill="rgb(249,43,39)"/><text x="3.5574%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.65%)</title><rect x="3.3074%" y="821" width="0.6485%" height="15" fill="rgb(209,38,44)"/><text x="3.5574%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (10 samples, 0.65%)</title><rect x="3.3074%" y="805" width="0.6485%" height="15" fill="rgb(236,212,23)"/><text x="3.5574%" y="815.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.52%)</title><rect x="3.4371%" y="789" width="0.5188%" height="15" fill="rgb(242,79,21)"/><text x="3.6871%" y="799.50"></text></g><g><title>core::str::next_code_point (4 samples, 0.26%)</title><rect x="3.6965%" y="773" width="0.2594%" height="15" fill="rgb(211,96,35)"/><text x="3.9465%" y="783.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="3.7613%" y="757" width="0.1946%" height="15" fill="rgb(253,215,40)"/><text x="4.0113%" y="767.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (13 samples, 0.84%)</title><rect x="3.1777%" y="869" width="0.8431%" height="15" fill="rgb(211,81,21)"/><text x="3.4277%" y="879.50"></text></g><g><title>cswap::parser::hex (14 samples, 0.91%)</title><rect x="3.1777%" y="949" width="0.9079%" height="15" fill="rgb(208,190,38)"/><text x="3.4277%" y="959.50"></text></g><g><title>nom::combinator::map::_{{closure}} (14 samples, 0.91%)</title><rect x="3.1777%" y="933" width="0.9079%" height="15" fill="rgb(235,213,38)"/><text x="3.4277%" y="943.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (14 samples, 0.91%)</title><rect x="3.1777%" y="917" width="0.9079%" height="15" fill="rgb(237,122,38)"/><text x="3.4277%" y="927.50"></text></g><g><title>&lt; (14 samples, 0.91%)</title><rect x="3.1777%" y="901" width="0.9079%" height="15" fill="rgb(244,218,35)"/><text x="3.4277%" y="911.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (14 samples, 0.91%)</title><rect x="3.1777%" y="885" width="0.9079%" height="15" fill="rgb(240,68,47)"/><text x="3.4277%" y="895.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.19%)</title><rect x="4.0856%" y="821" width="0.1946%" height="15" fill="rgb(210,16,53)"/><text x="4.3356%" y="831.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqPattern&lt;C&gt; as core::str::pattern::Pattern&gt;::into_searcher (3 samples, 0.19%)</title><rect x="4.0856%" y="805" width="0.1946%" height="15" fill="rgb(235,124,12)"/><text x="4.3356%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (2 samples, 0.13%)</title><rect x="4.1505%" y="789" width="0.1297%" height="15" fill="rgb(224,169,11)"/><text x="4.4005%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.13%)</title><rect x="4.1505%" y="773" width="0.1297%" height="15" fill="rgb(250,166,2)"/><text x="4.4005%" y="783.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (2 samples, 0.13%)</title><rect x="4.3450%" y="773" width="0.1297%" height="15" fill="rgb(242,216,29)"/><text x="4.5950%" y="783.50"></text></g><g><title>nom::character::complete::digit1::_{{closure}} (2 samples, 0.13%)</title><rect x="4.3450%" y="757" width="0.1297%" height="15" fill="rgb(230,116,27)"/><text x="4.5950%" y="767.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (2 samples, 0.13%)</title><rect x="4.3450%" y="741" width="0.1297%" height="15" fill="rgb(228,99,48)"/><text x="4.5950%" y="751.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_ascii_digit (2 samples, 0.13%)</title><rect x="4.3450%" y="725" width="0.1297%" height="15" fill="rgb(253,11,6)"/><text x="4.5950%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.19%)</title><rect x="4.4747%" y="741" width="0.1946%" height="15" fill="rgb(247,143,39)"/><text x="4.7247%" y="751.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (3 samples, 0.19%)</title><rect x="4.4747%" y="725" width="0.1946%" height="15" fill="rgb(236,97,10)"/><text x="4.7247%" y="735.50"></text></g><g><title>core::char::convert::from_u32_unchecked (2 samples, 0.13%)</title><rect x="4.5396%" y="709" width="0.1297%" height="15" fill="rgb(233,208,19)"/><text x="4.7896%" y="719.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.45%)</title><rect x="4.2802%" y="821" width="0.4540%" height="15" fill="rgb(216,164,2)"/><text x="4.5302%" y="831.50"></text></g><g><title>core::str::pattern::Searcher::next_match (7 samples, 0.45%)</title><rect x="4.2802%" y="805" width="0.4540%" height="15" fill="rgb(220,129,5)"/><text x="4.5302%" y="815.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (7 samples, 0.45%)</title><rect x="4.2802%" y="789" width="0.4540%" height="15" fill="rgb(242,17,10)"/><text x="4.5302%" y="799.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="4.4747%" y="773" width="0.2594%" height="15" fill="rgb(242,107,0)"/><text x="4.7247%" y="783.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="4.4747%" y="757" width="0.2594%" height="15" fill="rgb(251,28,31)"/><text x="4.7247%" y="767.50"></text></g><g><title>cswap::parser::integer (11 samples, 0.71%)</title><rect x="4.0856%" y="949" width="0.7134%" height="15" fill="rgb(233,223,10)"/><text x="4.3356%" y="959.50"></text></g><g><title>nom::combinator::map::_{{closure}} (11 samples, 0.71%)</title><rect x="4.0856%" y="933" width="0.7134%" height="15" fill="rgb(215,21,27)"/><text x="4.3356%" y="943.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (11 samples, 0.71%)</title><rect x="4.0856%" y="917" width="0.7134%" height="15" fill="rgb(232,23,21)"/><text x="4.3356%" y="927.50"></text></g><g><title>&lt; (11 samples, 0.71%)</title><rect x="4.0856%" y="901" width="0.7134%" height="15" fill="rgb(244,5,23)"/><text x="4.3356%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.71%)</title><rect x="4.0856%" y="885" width="0.7134%" height="15" fill="rgb(226,81,46)"/><text x="4.3356%" y="895.50"></text></g><g><title>nom::character::complete::digit1 (11 samples, 0.71%)</title><rect x="4.0856%" y="869" width="0.7134%" height="15" fill="rgb(247,70,30)"/><text x="4.3356%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (11 samples, 0.71%)</title><rect x="4.0856%" y="853" width="0.7134%" height="15" fill="rgb(212,68,19)"/><text x="4.3356%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (11 samples, 0.71%)</title><rect x="4.0856%" y="837" width="0.7134%" height="15" fill="rgb(240,187,13)"/><text x="4.3356%" y="847.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::iter_elements (3 samples, 0.19%)</title><rect x="4.9287%" y="869" width="0.1946%" height="15" fill="rgb(223,113,26)"/><text x="5.1787%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (3 samples, 0.19%)</title><rect x="4.9287%" y="853" width="0.1946%" height="15" fill="rgb(206,192,2)"/><text x="5.1787%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (2 samples, 0.13%)</title><rect x="4.9935%" y="837" width="0.1297%" height="15" fill="rgb(241,108,4)"/><text x="5.2435%" y="847.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="5.1232%" y="869" width="0.1946%" height="15" fill="rgb(247,173,49)"/><text x="5.3732%" y="879.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="5.1881%" y="853" width="0.1297%" height="15" fill="rgb(224,114,35)"/><text x="5.4381%" y="863.50"></text></g><g><title>cswap::parser::constant (75 samples, 4.86%)</title><rect x="0.5188%" y="1029" width="4.8638%" height="15" fill="rgb(245,159,27)"/><text x="0.7688%" y="1039.50">cswap:..</text></g><g><title>nom::branch::alt::_{{closure}} (75 samples, 4.86%)</title><rect x="0.5188%" y="1013" width="4.8638%" height="15" fill="rgb(245,172,44)"/><text x="0.7688%" y="1023.50">nom::b..</text></g><g><title>&lt; (75 samples, 4.86%)</title><rect x="0.5188%" y="997" width="4.8638%" height="15" fill="rgb(236,23,11)"/><text x="0.7688%" y="1007.50">&lt;</text></g><g><title>nom::combinator::map::_{{closure}} (75 samples, 4.86%)</title><rect x="0.5188%" y="981" width="4.8638%" height="15" fill="rgb(205,117,38)"/><text x="0.7688%" y="991.50">nom::c..</text></g><g><title>core::ops::function::Fn::call (75 samples, 4.86%)</title><rect x="0.5188%" y="965" width="4.8638%" height="15" fill="rgb(237,72,25)"/><text x="0.7688%" y="975.50">core::..</text></g><g><title>cswap::parser::string (9 samples, 0.58%)</title><rect x="4.7990%" y="949" width="0.5837%" height="15" fill="rgb(244,70,9)"/><text x="5.0490%" y="959.50"></text></g><g><title>nom::combinator::map::_{{closure}} (9 samples, 0.58%)</title><rect x="4.7990%" y="933" width="0.5837%" height="15" fill="rgb(217,125,39)"/><text x="5.0490%" y="943.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (9 samples, 0.58%)</title><rect x="4.7990%" y="917" width="0.5837%" height="15" fill="rgb(235,36,10)"/><text x="5.0490%" y="927.50"></text></g><g><title>&lt; (9 samples, 0.58%)</title><rect x="4.7990%" y="901" width="0.5837%" height="15" fill="rgb(251,123,47)"/><text x="5.0490%" y="911.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (9 samples, 0.58%)</title><rect x="4.7990%" y="885" width="0.5837%" height="15" fill="rgb(221,13,13)"/><text x="5.0490%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (3 samples, 0.19%)</title><rect x="5.3826%" y="917" width="0.1946%" height="15" fill="rgb(238,131,9)"/><text x="5.6326%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="5.3826%" y="901" width="0.1946%" height="15" fill="rgb(211,50,8)"/><text x="5.6326%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="5.3826%" y="885" width="0.1946%" height="15" fill="rgb(245,182,24)"/><text x="5.6326%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.13%)</title><rect x="5.4475%" y="869" width="0.1297%" height="15" fill="rgb(242,14,37)"/><text x="5.6975%" y="879.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="5.4475%" y="853" width="0.1297%" height="15" fill="rgb(246,228,12)"/><text x="5.6975%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (80 samples, 5.19%)</title><rect x="0.5188%" y="1045" width="5.1881%" height="15" fill="rgb(213,55,15)"/><text x="0.7688%" y="1055.50">core::..</text></g><g><title>cswap::parser::let_sexp (5 samples, 0.32%)</title><rect x="5.3826%" y="1029" width="0.3243%" height="15" fill="rgb(209,9,3)"/><text x="5.6326%" y="1039.50"></text></g><g><title>nom::combinator::map::_{{closure}} (5 samples, 0.32%)</title><rect x="5.3826%" y="1013" width="0.3243%" height="15" fill="rgb(230,59,30)"/><text x="5.6326%" y="1023.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (5 samples, 0.32%)</title><rect x="5.3826%" y="997" width="0.3243%" height="15" fill="rgb(209,121,21)"/><text x="5.6326%" y="1007.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (5 samples, 0.32%)</title><rect x="5.3826%" y="981" width="0.3243%" height="15" fill="rgb(220,109,13)"/><text x="5.6326%" y="991.50"></text></g><g><title>nom::sequence::preceded::_{{closure}} (5 samples, 0.32%)</title><rect x="5.3826%" y="965" width="0.3243%" height="15" fill="rgb(232,18,1)"/><text x="5.6326%" y="975.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (5 samples, 0.32%)</title><rect x="5.3826%" y="949" width="0.3243%" height="15" fill="rgb(215,41,42)"/><text x="5.6326%" y="959.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (5 samples, 0.32%)</title><rect x="5.3826%" y="933" width="0.3243%" height="15" fill="rgb(224,123,36)"/><text x="5.6326%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.13%)</title><rect x="5.5772%" y="917" width="0.1297%" height="15" fill="rgb(240,125,3)"/><text x="5.8272%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.13%)</title><rect x="5.9663%" y="933" width="0.1297%" height="15" fill="rgb(205,98,50)"/><text x="6.2163%" y="943.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (3 samples, 0.19%)</title><rect x="6.0960%" y="917" width="0.1946%" height="15" fill="rgb(205,185,37)"/><text x="6.3460%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.13%)</title><rect x="6.2905%" y="821" width="0.1297%" height="15" fill="rgb(238,207,15)"/><text x="6.5405%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="6.2905%" y="837" width="0.1946%" height="15" fill="rgb(213,199,42)"/><text x="6.5405%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (4 samples, 0.26%)</title><rect x="6.2905%" y="853" width="0.2594%" height="15" fill="rgb(235,201,11)"/><text x="6.5405%" y="863.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.19%)</title><rect x="6.8093%" y="773" width="0.1946%" height="15" fill="rgb(207,46,11)"/><text x="7.0593%" y="783.50"></text></g><g><title>_int_malloc (3 samples, 0.19%)</title><rect x="6.8093%" y="757" width="0.1946%" height="15" fill="rgb(241,35,35)"/><text x="7.0593%" y="767.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.32%)</title><rect x="6.7445%" y="789" width="0.3243%" height="15" fill="rgb(243,32,47)"/><text x="6.9945%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (7 samples, 0.45%)</title><rect x="6.6796%" y="805" width="0.4540%" height="15" fill="rgb(247,202,23)"/><text x="6.9296%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (15 samples, 0.97%)</title><rect x="6.2905%" y="901" width="0.9728%" height="15" fill="rgb(219,102,11)"/><text x="6.5405%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 0.97%)</title><rect x="6.2905%" y="885" width="0.9728%" height="15" fill="rgb(243,110,44)"/><text x="6.5405%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.97%)</title><rect x="6.2905%" y="869" width="0.9728%" height="15" fill="rgb(222,74,54)"/><text x="6.5405%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.71%)</title><rect x="6.5499%" y="853" width="0.7134%" height="15" fill="rgb(216,99,12)"/><text x="6.7999%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (11 samples, 0.71%)</title><rect x="6.5499%" y="837" width="0.7134%" height="15" fill="rgb(226,22,26)"/><text x="6.7999%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.65%)</title><rect x="6.6148%" y="821" width="0.6485%" height="15" fill="rgb(217,163,10)"/><text x="6.8648%" y="831.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (16 samples, 1.04%)</title><rect x="6.2905%" y="917" width="1.0376%" height="15" fill="rgb(213,25,53)"/><text x="6.5405%" y="927.50"></text></g><g><title>cswap::parser::sexp::_{{closure}} (20 samples, 1.30%)</title><rect x="6.0960%" y="933" width="1.2970%" height="15" fill="rgb(252,105,26)"/><text x="6.3460%" y="943.50"></text></g><g><title>nom::character::complete::char (2 samples, 0.13%)</title><rect x="7.5875%" y="885" width="0.1297%" height="15" fill="rgb(220,39,43)"/><text x="7.8375%" y="895.50"></text></g><g><title>cswap::parser::let_sexp (5 samples, 0.32%)</title><rect x="7.5227%" y="901" width="0.3243%" height="15" fill="rgb(229,68,48)"/><text x="7.7727%" y="911.50"></text></g><g><title>nom::sequence::delimited (2 samples, 0.13%)</title><rect x="7.7173%" y="885" width="0.1297%" height="15" fill="rgb(252,8,32)"/><text x="7.9673%" y="895.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.13%)</title><rect x="8.1064%" y="837" width="0.1297%" height="15" fill="rgb(223,20,43)"/><text x="8.3564%" y="847.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqPattern&lt;C&gt; as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.13%)</title><rect x="8.1064%" y="821" width="0.1297%" height="15" fill="rgb(229,81,49)"/><text x="8.3564%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (2 samples, 0.13%)</title><rect x="8.1064%" y="805" width="0.1297%" height="15" fill="rgb(236,28,36)"/><text x="8.3564%" y="815.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (7 samples, 0.45%)</title><rect x="8.2361%" y="837" width="0.4540%" height="15" fill="rgb(249,185,26)"/><text x="8.4861%" y="847.50"></text></g><g><title>core::str::pattern::Searcher::next_match (7 samples, 0.45%)</title><rect x="8.2361%" y="821" width="0.4540%" height="15" fill="rgb(249,174,33)"/><text x="8.4861%" y="831.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (7 samples, 0.45%)</title><rect x="8.2361%" y="805" width="0.4540%" height="15" fill="rgb(233,201,37)"/><text x="8.4861%" y="815.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.19%)</title><rect x="8.4955%" y="789" width="0.1946%" height="15" fill="rgb(221,78,26)"/><text x="8.7455%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (12 samples, 0.78%)</title><rect x="8.0415%" y="853" width="0.7782%" height="15" fill="rgb(250,127,30)"/><text x="8.2915%" y="863.50"></text></g><g><title>cswap::parser::symbol (18 samples, 1.17%)</title><rect x="7.8470%" y="901" width="1.1673%" height="15" fill="rgb(230,49,44)"/><text x="8.0970%" y="911.50"></text></g><g><title>nom::bytes::complete::take_while1::_{{closure}} (17 samples, 1.10%)</title><rect x="7.9118%" y="885" width="1.1025%" height="15" fill="rgb(229,67,23)"/><text x="8.1618%" y="895.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (16 samples, 1.04%)</title><rect x="7.9767%" y="869" width="1.0376%" height="15" fill="rgb(249,83,47)"/><text x="8.2267%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.19%)</title><rect x="8.8197%" y="853" width="0.1946%" height="15" fill="rgb(215,43,3)"/><text x="9.0697%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.13%)</title><rect x="8.8846%" y="837" width="0.1297%" height="15" fill="rgb(238,154,13)"/><text x="9.1346%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="8.8846%" y="821" width="0.1297%" height="15" fill="rgb(219,56,2)"/><text x="9.1346%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.13%)</title><rect x="8.8846%" y="805" width="0.1297%" height="15" fill="rgb(233,0,4)"/><text x="9.1346%" y="815.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (4 samples, 0.26%)</title><rect x="9.0791%" y="853" width="0.2594%" height="15" fill="rgb(235,30,7)"/><text x="9.3291%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned (2 samples, 0.13%)</title><rect x="9.2088%" y="837" width="0.1297%" height="15" fill="rgb(250,79,13)"/><text x="9.4588%" y="847.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (2 samples, 0.13%)</title><rect x="9.6628%" y="805" width="0.1297%" height="15" fill="rgb(211,146,34)"/><text x="9.9128%" y="815.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.19%)</title><rect x="9.7925%" y="805" width="0.1946%" height="15" fill="rgb(228,22,38)"/><text x="10.0425%" y="815.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (13 samples, 0.84%)</title><rect x="9.3385%" y="853" width="0.8431%" height="15" fill="rgb(235,168,5)"/><text x="9.5885%" y="863.50"></text></g><g><title>core::str::pattern::Searcher::next_match (13 samples, 0.84%)</title><rect x="9.3385%" y="837" width="0.8431%" height="15" fill="rgb(221,155,16)"/><text x="9.5885%" y="847.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (12 samples, 0.78%)</title><rect x="9.4034%" y="821" width="0.7782%" height="15" fill="rgb(215,215,53)"/><text x="9.6534%" y="831.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="9.9870%" y="805" width="0.1946%" height="15" fill="rgb(223,4,10)"/><text x="10.2370%" y="815.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="10.0519%" y="789" width="0.1297%" height="15" fill="rgb(234,103,6)"/><text x="10.3019%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (18 samples, 1.17%)</title><rect x="9.0791%" y="869" width="1.1673%" height="15" fill="rgb(227,97,0)"/><text x="9.3291%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (2 samples, 0.13%)</title><rect x="10.3113%" y="837" width="0.1297%" height="15" fill="rgb(234,150,53)"/><text x="10.5613%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (5 samples, 0.32%)</title><rect x="10.2464%" y="853" width="0.3243%" height="15" fill="rgb(228,201,54)"/><text x="10.4964%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="10.4410%" y="837" width="0.1297%" height="15" fill="rgb(222,22,37)"/><text x="10.6910%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.13%)</title><rect x="10.4410%" y="821" width="0.1297%" height="15" fill="rgb(237,53,32)"/><text x="10.6910%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (2 samples, 0.13%)</title><rect x="10.5707%" y="837" width="0.1297%" height="15" fill="rgb(233,25,53)"/><text x="10.8207%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.13%)</title><rect x="10.7652%" y="821" width="0.1297%" height="15" fill="rgb(210,40,34)"/><text x="11.0152%" y="831.50"></text></g><g><title>nom::combinator::map::_{{closure}} (81 samples, 5.25%)</title><rect x="5.7717%" y="949" width="5.2529%" height="15" fill="rgb(241,220,44)"/><text x="6.0217%" y="959.50">nom::c..</text></g><g><title>nom::sequence::delimited::_{{closure}} (56 samples, 3.63%)</title><rect x="7.3930%" y="933" width="3.6316%" height="15" fill="rgb(235,28,35)"/><text x="7.6430%" y="943.50">nom:..</text></g><g><title>core::ops::function::Fn::call (54 samples, 3.50%)</title><rect x="7.5227%" y="917" width="3.5019%" height="15" fill="rgb(210,56,17)"/><text x="7.7727%" y="927.50">cor..</text></g><g><title>nom::character::complete::multispace0 (31 samples, 2.01%)</title><rect x="9.0143%" y="901" width="2.0104%" height="15" fill="rgb(224,130,29)"/><text x="9.2643%" y="911.50">n..</text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (31 samples, 2.01%)</title><rect x="9.0143%" y="885" width="2.0104%" height="15" fill="rgb(235,212,8)"/><text x="9.2643%" y="895.50">&lt;..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (12 samples, 0.78%)</title><rect x="10.2464%" y="869" width="0.7782%" height="15" fill="rgb(223,33,50)"/><text x="10.4964%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (7 samples, 0.45%)</title><rect x="10.5707%" y="853" width="0.4540%" height="15" fill="rgb(219,149,13)"/><text x="10.8207%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (5 samples, 0.32%)</title><rect x="10.7004%" y="837" width="0.3243%" height="15" fill="rgb(250,156,29)"/><text x="10.9504%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.13%)</title><rect x="10.8949%" y="821" width="0.1297%" height="15" fill="rgb(216,193,19)"/><text x="11.1449%" y="831.50"></text></g><g><title>cswap::parser::bool_sexp (7 samples, 0.45%)</title><rect x="11.0895%" y="917" width="0.4540%" height="15" fill="rgb(216,135,14)"/><text x="11.3395%" y="927.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (4 samples, 0.26%)</title><rect x="11.2840%" y="901" width="0.2594%" height="15" fill="rgb(241,47,5)"/><text x="11.5340%" y="911.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (3 samples, 0.19%)</title><rect x="11.3489%" y="885" width="0.1946%" height="15" fill="rgb(233,42,35)"/><text x="11.5989%" y="895.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.13%)</title><rect x="11.5435%" y="869" width="0.1297%" height="15" fill="rgb(231,13,6)"/><text x="11.7935%" y="879.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.13%)</title><rect x="11.6732%" y="869" width="0.1297%" height="15" fill="rgb(207,181,40)"/><text x="11.9232%" y="879.50"></text></g><g><title>core::str::pattern::Searcher::next_match (2 samples, 0.13%)</title><rect x="11.6732%" y="853" width="0.1297%" height="15" fill="rgb(254,173,49)"/><text x="11.9232%" y="863.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (2 samples, 0.13%)</title><rect x="11.6732%" y="837" width="0.1297%" height="15" fill="rgb(221,1,38)"/><text x="11.9232%" y="847.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="11.6732%" y="821" width="0.1297%" height="15" fill="rgb(206,124,46)"/><text x="11.9232%" y="831.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="11.6732%" y="805" width="0.1297%" height="15" fill="rgb(249,21,11)"/><text x="11.9232%" y="815.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="11.6732%" y="789" width="0.1297%" height="15" fill="rgb(222,201,40)"/><text x="11.9232%" y="799.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="11.6732%" y="773" width="0.1297%" height="15" fill="rgb(235,61,29)"/><text x="11.9232%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 0.32%)</title><rect x="11.5435%" y="885" width="0.3243%" height="15" fill="rgb(219,207,3)"/><text x="11.7935%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.13%)</title><rect x="11.8677%" y="869" width="0.1297%" height="15" fill="rgb(222,56,46)"/><text x="12.1177%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="11.8677%" y="853" width="0.1297%" height="15" fill="rgb(239,76,54)"/><text x="12.1177%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.13%)</title><rect x="11.8677%" y="837" width="0.1297%" height="15" fill="rgb(231,124,27)"/><text x="12.1177%" y="847.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (178 samples, 11.54%)</title><rect x="0.5188%" y="1061" width="11.5435%" height="15" fill="rgb(249,195,6)"/><text x="0.7688%" y="1071.50">nom::sequence::de..</text></g><g><title>nom::sequence::delimited::_{{closure}} (98 samples, 6.36%)</title><rect x="5.7069%" y="1045" width="6.3554%" height="15" fill="rgb(237,174,47)"/><text x="5.9569%" y="1055.50">nom::seq..</text></g><g><title>nom::multi::many1::_{{closure}} (98 samples, 6.36%)</title><rect x="5.7069%" y="1029" width="6.3554%" height="15" fill="rgb(206,201,31)"/><text x="5.9569%" y="1039.50">nom::mul..</text></g><g><title>core::ops::function::Fn::call (98 samples, 6.36%)</title><rect x="5.7069%" y="1013" width="6.3554%" height="15" fill="rgb(231,57,52)"/><text x="5.9569%" y="1023.50">core::op..</text></g><g><title>cswap::parser::sexp (98 samples, 6.36%)</title><rect x="5.7069%" y="997" width="6.3554%" height="15" fill="rgb(248,177,22)"/><text x="5.9569%" y="1007.50">cswap::p..</text></g><g><title>nom::branch::alt::_{{closure}} (98 samples, 6.36%)</title><rect x="5.7069%" y="981" width="6.3554%" height="15" fill="rgb(215,211,37)"/><text x="5.9569%" y="991.50">nom::bra..</text></g><g><title>&lt; (98 samples, 6.36%)</title><rect x="5.7069%" y="965" width="6.3554%" height="15" fill="rgb(241,128,51)"/><text x="5.9569%" y="975.50">&lt;</text></g><g><title>nom::sequence::delimited::_{{closure}} (16 samples, 1.04%)</title><rect x="11.0246%" y="949" width="1.0376%" height="15" fill="rgb(227,165,31)"/><text x="11.2746%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.97%)</title><rect x="11.0895%" y="933" width="0.9728%" height="15" fill="rgb(228,167,24)"/><text x="11.3395%" y="943.50"></text></g><g><title>nom::character::complete::multispace0 (8 samples, 0.52%)</title><rect x="11.5435%" y="917" width="0.5188%" height="15" fill="rgb(228,143,12)"/><text x="11.7935%" y="927.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (8 samples, 0.52%)</title><rect x="11.5435%" y="901" width="0.5188%" height="15" fill="rgb(249,149,8)"/><text x="11.7935%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.19%)</title><rect x="11.8677%" y="885" width="0.1946%" height="15" fill="rgb(243,35,44)"/><text x="12.1177%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.13%)</title><rect x="12.1920%" y="805" width="0.1297%" height="15" fill="rgb(246,89,9)"/><text x="12.4420%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.19%)</title><rect x="12.3217%" y="789" width="0.1946%" height="15" fill="rgb(233,213,13)"/><text x="12.5717%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (10 samples, 0.65%)</title><rect x="12.0623%" y="869" width="0.6485%" height="15" fill="rgb(233,141,41)"/><text x="12.3123%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.65%)</title><rect x="12.0623%" y="853" width="0.6485%" height="15" fill="rgb(239,167,4)"/><text x="12.3123%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.52%)</title><rect x="12.1920%" y="837" width="0.5188%" height="15" fill="rgb(209,217,16)"/><text x="12.4420%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8 samples, 0.52%)</title><rect x="12.1920%" y="821" width="0.5188%" height="15" fill="rgb(219,88,35)"/><text x="12.4420%" y="831.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="12.3217%" y="805" width="0.3891%" height="15" fill="rgb(220,193,23)"/><text x="12.5717%" y="815.50"></text></g><g><title>core::str::next_code_point (3 samples, 0.19%)</title><rect x="12.5162%" y="789" width="0.1946%" height="15" fill="rgb(230,90,52)"/><text x="12.7662%" y="799.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="12.5811%" y="773" width="0.1297%" height="15" fill="rgb(252,106,19)"/><text x="12.8311%" y="783.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (14 samples, 0.91%)</title><rect x="12.0623%" y="885" width="0.9079%" height="15" fill="rgb(206,74,20)"/><text x="12.3123%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (4 samples, 0.26%)</title><rect x="12.7108%" y="869" width="0.2594%" height="15" fill="rgb(230,138,44)"/><text x="12.9608%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.26%)</title><rect x="12.7108%" y="853" width="0.2594%" height="15" fill="rgb(235,182,43)"/><text x="12.9608%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.97%)</title><rect x="12.0623%" y="1029" width="0.9728%" height="15" fill="rgb(242,16,51)"/><text x="12.3123%" y="1039.50"></text></g><g><title>cswap::parser::bool_core_ops (15 samples, 0.97%)</title><rect x="12.0623%" y="1013" width="0.9728%" height="15" fill="rgb(248,9,4)"/><text x="12.3123%" y="1023.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (15 samples, 0.97%)</title><rect x="12.0623%" y="997" width="0.9728%" height="15" fill="rgb(210,31,22)"/><text x="12.3123%" y="1007.50"></text></g><g><title>nom::branch::alt::_{{closure}} (15 samples, 0.97%)</title><rect x="12.0623%" y="981" width="0.9728%" height="15" fill="rgb(239,54,39)"/><text x="12.3123%" y="991.50"></text></g><g><title>&lt; (15 samples, 0.97%)</title><rect x="12.0623%" y="965" width="0.9728%" height="15" fill="rgb(230,99,41)"/><text x="12.3123%" y="975.50"></text></g><g><title>nom::branch::alt::_{{closure}} (15 samples, 0.97%)</title><rect x="12.0623%" y="949" width="0.9728%" height="15" fill="rgb(253,106,12)"/><text x="12.3123%" y="959.50"></text></g><g><title>&lt; (15 samples, 0.97%)</title><rect x="12.0623%" y="933" width="0.9728%" height="15" fill="rgb(213,46,41)"/><text x="12.3123%" y="943.50"></text></g><g><title>nom::combinator::map::_{{closure}} (15 samples, 0.97%)</title><rect x="12.0623%" y="917" width="0.9728%" height="15" fill="rgb(215,133,35)"/><text x="12.3123%" y="927.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (15 samples, 0.97%)</title><rect x="12.0623%" y="901" width="0.9728%" height="15" fill="rgb(213,28,5)"/><text x="12.3123%" y="911.50"></text></g><g><title>core::alloc::Layout::array (3 samples, 0.19%)</title><rect x="13.1647%" y="805" width="0.1946%" height="15" fill="rgb(215,77,49)"/><text x="13.4147%" y="815.50"></text></g><g><title>core::alloc::Layout::repeat (2 samples, 0.13%)</title><rect x="13.2296%" y="789" width="0.1297%" height="15" fill="rgb(248,100,22)"/><text x="13.4796%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (6 samples, 0.39%)</title><rect x="13.0999%" y="853" width="0.3891%" height="15" fill="rgb(208,67,9)"/><text x="13.3499%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.39%)</title><rect x="13.0999%" y="837" width="0.3891%" height="15" fill="rgb(219,133,21)"/><text x="13.3499%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (6 samples, 0.39%)</title><rect x="13.0999%" y="821" width="0.3891%" height="15" fill="rgb(246,46,29)"/><text x="13.3499%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.13%)</title><rect x="13.3593%" y="805" width="0.1297%" height="15" fill="rgb(246,185,52)"/><text x="13.6093%" y="815.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="13.4890%" y="789" width="0.1946%" height="15" fill="rgb(252,136,11)"/><text x="13.7390%" y="799.50"></text></g><g><title>core::ptr::read (2 samples, 0.13%)</title><rect x="13.5538%" y="773" width="0.1297%" height="15" fill="rgb(219,138,53)"/><text x="13.8038%" y="783.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.13%)</title><rect x="13.7484%" y="693" width="0.1297%" height="15" fill="rgb(211,51,23)"/><text x="13.9984%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.13%)</title><rect x="13.7484%" y="677" width="0.1297%" height="15" fill="rgb(247,221,28)"/><text x="13.9984%" y="687.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.26%)</title><rect x="13.6835%" y="725" width="0.2594%" height="15" fill="rgb(251,222,45)"/><text x="13.9335%" y="735.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.26%)</title><rect x="13.6835%" y="709" width="0.2594%" height="15" fill="rgb(217,162,53)"/><text x="13.9335%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.71%)</title><rect x="13.4890%" y="805" width="0.7134%" height="15" fill="rgb(229,93,14)"/><text x="13.7390%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (8 samples, 0.52%)</title><rect x="13.6835%" y="789" width="0.5188%" height="15" fill="rgb(209,67,49)"/><text x="13.9335%" y="799.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (8 samples, 0.52%)</title><rect x="13.6835%" y="773" width="0.5188%" height="15" fill="rgb(213,87,29)"/><text x="13.9335%" y="783.50"></text></g><g><title>cswap::parser::sexp::_{{closure}}::_{{closure}} (8 samples, 0.52%)</title><rect x="13.6835%" y="757" width="0.5188%" height="15" fill="rgb(205,151,52)"/><text x="13.9335%" y="767.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (8 samples, 0.52%)</title><rect x="13.6835%" y="741" width="0.5188%" height="15" fill="rgb(253,215,39)"/><text x="13.9335%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::into_raw_non_null (4 samples, 0.26%)</title><rect x="13.9429%" y="725" width="0.2594%" height="15" fill="rgb(221,220,41)"/><text x="14.1929%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::into_unique (2 samples, 0.13%)</title><rect x="14.0726%" y="709" width="0.1297%" height="15" fill="rgb(218,133,21)"/><text x="14.3226%" y="719.50"></text></g><g><title>cswap::parser::sexp::_{{closure}} (18 samples, 1.17%)</title><rect x="13.0999%" y="933" width="1.1673%" height="15" fill="rgb(221,193,43)"/><text x="13.3499%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 1.17%)</title><rect x="13.0999%" y="917" width="1.1673%" height="15" fill="rgb(240,128,52)"/><text x="13.3499%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 1.17%)</title><rect x="13.0999%" y="901" width="1.1673%" height="15" fill="rgb(253,114,12)"/><text x="13.3499%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (18 samples, 1.17%)</title><rect x="13.0999%" y="885" width="1.1673%" height="15" fill="rgb(215,223,47)"/><text x="13.3499%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 1.17%)</title><rect x="13.0999%" y="869" width="1.1673%" height="15" fill="rgb(248,225,23)"/><text x="13.3499%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.78%)</title><rect x="13.4890%" y="853" width="0.7782%" height="15" fill="rgb(250,108,0)"/><text x="13.7390%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.78%)</title><rect x="13.4890%" y="837" width="0.7782%" height="15" fill="rgb(228,208,7)"/><text x="13.7390%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (12 samples, 0.78%)</title><rect x="13.4890%" y="821" width="0.7782%" height="15" fill="rgb(244,45,10)"/><text x="13.7390%" y="831.50"></text></g><g><title>cswap::parser::let_sexp (4 samples, 0.26%)</title><rect x="14.2672%" y="901" width="0.2594%" height="15" fill="rgb(207,125,25)"/><text x="14.5172%" y="911.50"></text></g><g><title>nom::sequence::delimited (2 samples, 0.13%)</title><rect x="14.3969%" y="885" width="0.1297%" height="15" fill="rgb(210,195,18)"/><text x="14.6469%" y="895.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (2 samples, 0.13%)</title><rect x="14.5266%" y="789" width="0.1297%" height="15" fill="rgb(249,80,12)"/><text x="14.7766%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (3 samples, 0.19%)</title><rect x="14.5266%" y="853" width="0.1946%" height="15" fill="rgb(221,65,9)"/><text x="14.7766%" y="863.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.19%)</title><rect x="14.5266%" y="837" width="0.1946%" height="15" fill="rgb(235,49,36)"/><text x="14.7766%" y="847.50"></text></g><g><title>core::str::pattern::Searcher::next_match (3 samples, 0.19%)</title><rect x="14.5266%" y="821" width="0.1946%" height="15" fill="rgb(225,32,20)"/><text x="14.7766%" y="831.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (3 samples, 0.19%)</title><rect x="14.5266%" y="805" width="0.1946%" height="15" fill="rgb(215,141,46)"/><text x="14.7766%" y="815.50"></text></g><g><title>cswap::parser::symbol (4 samples, 0.26%)</title><rect x="14.5266%" y="901" width="0.2594%" height="15" fill="rgb(250,160,47)"/><text x="14.7766%" y="911.50"></text></g><g><title>nom::bytes::complete::take_while1::_{{closure}} (4 samples, 0.26%)</title><rect x="14.5266%" y="885" width="0.2594%" height="15" fill="rgb(216,222,40)"/><text x="14.7766%" y="895.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (4 samples, 0.26%)</title><rect x="14.5266%" y="869" width="0.2594%" height="15" fill="rgb(234,217,39)"/><text x="14.7766%" y="879.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.13%)</title><rect x="14.7860%" y="853" width="0.1297%" height="15" fill="rgb(207,178,40)"/><text x="15.0360%" y="863.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqPattern&lt;C&gt; as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.13%)</title><rect x="14.7860%" y="837" width="0.1297%" height="15" fill="rgb(221,136,13)"/><text x="15.0360%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (2 samples, 0.13%)</title><rect x="14.7860%" y="821" width="0.1297%" height="15" fill="rgb(249,199,10)"/><text x="15.0360%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.13%)</title><rect x="14.7860%" y="805" width="0.1297%" height="15" fill="rgb(249,222,13)"/><text x="15.0360%" y="815.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.19%)</title><rect x="14.9157%" y="789" width="0.1946%" height="15" fill="rgb(244,185,38)"/><text x="15.1657%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.13%)</title><rect x="15.1751%" y="773" width="0.1297%" height="15" fill="rgb(236,202,9)"/><text x="15.4251%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (10 samples, 0.65%)</title><rect x="14.7860%" y="869" width="0.6485%" height="15" fill="rgb(250,229,37)"/><text x="15.0360%" y="879.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (8 samples, 0.52%)</title><rect x="14.9157%" y="853" width="0.5188%" height="15" fill="rgb(206,174,23)"/><text x="15.1657%" y="863.50"></text></g><g><title>core::str::pattern::Searcher::next_match (8 samples, 0.52%)</title><rect x="14.9157%" y="837" width="0.5188%" height="15" fill="rgb(211,33,43)"/><text x="15.1657%" y="847.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (8 samples, 0.52%)</title><rect x="14.9157%" y="821" width="0.5188%" height="15" fill="rgb(245,58,50)"/><text x="15.1657%" y="831.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.52%)</title><rect x="14.9157%" y="805" width="0.5188%" height="15" fill="rgb(244,68,36)"/><text x="15.1657%" y="815.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.32%)</title><rect x="15.1102%" y="789" width="0.3243%" height="15" fill="rgb(232,229,15)"/><text x="15.3602%" y="799.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="15.3048%" y="773" width="0.1297%" height="15" fill="rgb(254,30,23)"/><text x="15.5548%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (4 samples, 0.26%)</title><rect x="15.4345%" y="853" width="0.2594%" height="15" fill="rgb(235,160,14)"/><text x="15.6845%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (4 samples, 0.26%)</title><rect x="15.4345%" y="837" width="0.2594%" height="15" fill="rgb(212,155,44)"/><text x="15.6845%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (4 samples, 0.26%)</title><rect x="15.4345%" y="821" width="0.2594%" height="15" fill="rgb(226,2,50)"/><text x="15.6845%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (2 samples, 0.13%)</title><rect x="15.5642%" y="805" width="0.1297%" height="15" fill="rgb(234,177,6)"/><text x="15.8142%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (23 samples, 1.49%)</title><rect x="14.2672%" y="917" width="1.4916%" height="15" fill="rgb(217,24,9)"/><text x="14.5172%" y="927.50"></text></g><g><title>nom::character::complete::multispace0 (15 samples, 0.97%)</title><rect x="14.7860%" y="901" width="0.9728%" height="15" fill="rgb(220,13,46)"/><text x="15.0360%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (15 samples, 0.97%)</title><rect x="14.7860%" y="885" width="0.9728%" height="15" fill="rgb(239,221,27)"/><text x="15.0360%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (5 samples, 0.32%)</title><rect x="15.4345%" y="869" width="0.3243%" height="15" fill="rgb(222,198,25)"/><text x="15.6845%" y="879.50"></text></g><g><title>nom::combinator::map::_{{closure}} (46 samples, 2.98%)</title><rect x="13.0999%" y="949" width="2.9831%" height="15" fill="rgb(211,99,13)"/><text x="13.3499%" y="959.50">nom..</text></g><g><title>nom::sequence::delimited::_{{closure}} (28 samples, 1.82%)</title><rect x="14.2672%" y="933" width="1.8158%" height="15" fill="rgb(232,111,31)"/><text x="14.5172%" y="943.50">n..</text></g><g><title>nom::sequence::delimited::_{{closure}} (5 samples, 0.32%)</title><rect x="15.7588%" y="917" width="0.3243%" height="15" fill="rgb(245,82,37)"/><text x="16.0088%" y="927.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (4 samples, 0.26%)</title><rect x="15.8236%" y="901" width="0.2594%" height="15" fill="rgb(227,149,46)"/><text x="16.0736%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::iter_elements (2 samples, 0.13%)</title><rect x="16.1479%" y="869" width="0.1297%" height="15" fill="rgb(218,36,50)"/><text x="16.3979%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (2 samples, 0.13%)</title><rect x="16.2776%" y="869" width="0.1297%" height="15" fill="rgb(226,80,48)"/><text x="16.5276%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.13%)</title><rect x="16.2776%" y="853" width="0.1297%" height="15" fill="rgb(238,224,15)"/><text x="16.5276%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.13%)</title><rect x="16.2776%" y="837" width="0.1297%" height="15" fill="rgb(241,136,10)"/><text x="16.5276%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="16.2776%" y="821" width="0.1297%" height="15" fill="rgb(208,32,45)"/><text x="16.5276%" y="831.50"></text></g><g><title>cswap::parser::bool_sexp (8 samples, 0.52%)</title><rect x="16.0830%" y="917" width="0.5188%" height="15" fill="rgb(207,135,9)"/><text x="16.3330%" y="927.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (8 samples, 0.52%)</title><rect x="16.0830%" y="901" width="0.5188%" height="15" fill="rgb(206,86,44)"/><text x="16.3330%" y="911.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (7 samples, 0.45%)</title><rect x="16.1479%" y="885" width="0.4540%" height="15" fill="rgb(245,177,15)"/><text x="16.3979%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.13%)</title><rect x="16.4721%" y="869" width="0.1297%" height="15" fill="rgb(206,64,50)"/><text x="16.7221%" y="879.50"></text></g><g><title>nom::combinator::map::_{{closure}} (257 samples, 16.67%)</title><rect x="0.0000%" y="1077" width="16.6667%" height="15" fill="rgb(234,36,40)"/><text x="0.2500%" y="1087.50">nom::combinator::map::_{{c..</text></g><g><title>nom::sequence::tuple::_{{closure}} (71 samples, 4.60%)</title><rect x="12.0623%" y="1061" width="4.6044%" height="15" fill="rgb(213,64,8)"/><text x="12.3123%" y="1071.50">nom::..</text></g><g><title>&lt; (71 samples, 4.60%)</title><rect x="12.0623%" y="1045" width="4.6044%" height="15" fill="rgb(210,75,36)"/><text x="12.3123%" y="1055.50">&lt;</text></g><g><title>nom::multi::many1::_{{closure}} (55 samples, 3.57%)</title><rect x="13.0999%" y="1029" width="3.5668%" height="15" fill="rgb(229,88,21)"/><text x="13.3499%" y="1039.50">nom:..</text></g><g><title>core::ops::function::Fn::call (55 samples, 3.57%)</title><rect x="13.0999%" y="1013" width="3.5668%" height="15" fill="rgb(252,204,47)"/><text x="13.3499%" y="1023.50">core..</text></g><g><title>cswap::parser::sexp (55 samples, 3.57%)</title><rect x="13.0999%" y="997" width="3.5668%" height="15" fill="rgb(208,77,27)"/><text x="13.3499%" y="1007.50">cswa..</text></g><g><title>nom::branch::alt::_{{closure}} (55 samples, 3.57%)</title><rect x="13.0999%" y="981" width="3.5668%" height="15" fill="rgb(221,76,26)"/><text x="13.3499%" y="991.50">nom:..</text></g><g><title>&lt; (55 samples, 3.57%)</title><rect x="13.0999%" y="965" width="3.5668%" height="15" fill="rgb(225,139,18)"/><text x="13.3499%" y="975.50">&lt;</text></g><g><title>nom::sequence::delimited::_{{closure}} (9 samples, 0.58%)</title><rect x="16.0830%" y="949" width="0.5837%" height="15" fill="rgb(230,137,11)"/><text x="16.3330%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.58%)</title><rect x="16.0830%" y="933" width="0.5837%" height="15" fill="rgb(212,28,1)"/><text x="16.3330%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.13%)</title><rect x="16.7964%" y="805" width="0.1297%" height="15" fill="rgb(248,164,17)"/><text x="17.0464%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.32%)</title><rect x="16.6667%" y="901" width="0.3243%" height="15" fill="rgb(222,171,42)"/><text x="16.9167%" y="911.50"></text></g><g><title>core::mem::take (5 samples, 0.32%)</title><rect x="16.6667%" y="885" width="0.3243%" height="15" fill="rgb(243,84,45)"/><text x="16.9167%" y="895.50"></text></g><g><title>core::mem::replace (5 samples, 0.32%)</title><rect x="16.6667%" y="869" width="0.3243%" height="15" fill="rgb(252,49,23)"/><text x="16.9167%" y="879.50"></text></g><g><title>core::mem::swap (5 samples, 0.32%)</title><rect x="16.6667%" y="853" width="0.3243%" height="15" fill="rgb(215,19,7)"/><text x="16.9167%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.32%)</title><rect x="16.6667%" y="837" width="0.3243%" height="15" fill="rgb(238,81,41)"/><text x="16.9167%" y="847.50"></text></g><g><title>core::ptr::read (5 samples, 0.32%)</title><rect x="16.6667%" y="821" width="0.3243%" height="15" fill="rgb(210,199,37)"/><text x="16.9167%" y="831.50"></text></g><g><title>cswap::parser::constant (10 samples, 0.65%)</title><rect x="16.6667%" y="949" width="0.6485%" height="15" fill="rgb(244,192,49)"/><text x="16.9167%" y="959.50"></text></g><g><title>nom::branch::alt::_{{closure}} (10 samples, 0.65%)</title><rect x="16.6667%" y="933" width="0.6485%" height="15" fill="rgb(226,211,11)"/><text x="16.9167%" y="943.50"></text></g><g><title>&lt; (10 samples, 0.65%)</title><rect x="16.6667%" y="917" width="0.6485%" height="15" fill="rgb(236,162,54)"/><text x="16.9167%" y="927.50"></text></g><g><title>nom::combinator::map::_{{closure}} (5 samples, 0.32%)</title><rect x="16.9909%" y="901" width="0.3243%" height="15" fill="rgb(220,229,9)"/><text x="17.2409%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.13%)</title><rect x="17.1855%" y="885" width="0.1297%" height="15" fill="rgb(250,87,22)"/><text x="17.4355%" y="895.50"></text></g><g><title>nom::combinator::map::_{{closure}} (12 samples, 0.78%)</title><rect x="16.6667%" y="997" width="0.7782%" height="15" fill="rgb(239,43,17)"/><text x="16.9167%" y="1007.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (12 samples, 0.78%)</title><rect x="16.6667%" y="981" width="0.7782%" height="15" fill="rgb(231,177,25)"/><text x="16.9167%" y="991.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.78%)</title><rect x="16.6667%" y="965" width="0.7782%" height="15" fill="rgb(219,179,1)"/><text x="16.9167%" y="975.50"></text></g><g><title>cswap::parser::let_sexp (2 samples, 0.13%)</title><rect x="17.3152%" y="949" width="0.1297%" height="15" fill="rgb(238,219,53)"/><text x="17.5652%" y="959.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="17.3152%" y="933" width="0.1297%" height="15" fill="rgb(232,167,36)"/><text x="17.5652%" y="943.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.13%)</title><rect x="17.3152%" y="917" width="0.1297%" height="15" fill="rgb(244,19,51)"/><text x="17.5652%" y="927.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (2 samples, 0.13%)</title><rect x="17.3152%" y="901" width="0.1297%" height="15" fill="rgb(224,6,22)"/><text x="17.5652%" y="911.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (2 samples, 0.13%)</title><rect x="17.5097%" y="869" width="0.1297%" height="15" fill="rgb(224,145,5)"/><text x="17.7597%" y="879.50"></text></g><g><title>cswap::parser::bool_sexp::_{{closure}} (5 samples, 0.32%)</title><rect x="17.4449%" y="885" width="0.3243%" height="15" fill="rgb(234,130,49)"/><text x="17.6949%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="17.6394%" y="869" width="0.1297%" height="15" fill="rgb(254,6,2)"/><text x="17.8894%" y="879.50"></text></g><g><title>nom::multi::many1::_{{closure}} (20 samples, 1.30%)</title><rect x="16.6667%" y="1077" width="1.2970%" height="15" fill="rgb(208,96,46)"/><text x="16.9167%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (20 samples, 1.30%)</title><rect x="16.6667%" y="1061" width="1.2970%" height="15" fill="rgb(239,3,39)"/><text x="16.9167%" y="1071.50"></text></g><g><title>cswap::parser::sexp (20 samples, 1.30%)</title><rect x="16.6667%" y="1045" width="1.2970%" height="15" fill="rgb(233,210,1)"/><text x="16.9167%" y="1055.50"></text></g><g><title>nom::branch::alt::_{{closure}} (20 samples, 1.30%)</title><rect x="16.6667%" y="1029" width="1.2970%" height="15" fill="rgb(244,137,37)"/><text x="16.9167%" y="1039.50"></text></g><g><title>&lt; (20 samples, 1.30%)</title><rect x="16.6667%" y="1013" width="1.2970%" height="15" fill="rgb(240,136,2)"/><text x="16.9167%" y="1023.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (8 samples, 0.52%)</title><rect x="17.4449%" y="997" width="0.5188%" height="15" fill="rgb(239,18,37)"/><text x="17.6949%" y="1007.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.52%)</title><rect x="17.4449%" y="981" width="0.5188%" height="15" fill="rgb(218,185,22)"/><text x="17.6949%" y="991.50"></text></g><g><title>cswap::parser::bool_sexp (8 samples, 0.52%)</title><rect x="17.4449%" y="965" width="0.5188%" height="15" fill="rgb(225,218,4)"/><text x="17.6949%" y="975.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (8 samples, 0.52%)</title><rect x="17.4449%" y="949" width="0.5188%" height="15" fill="rgb(230,182,32)"/><text x="17.6949%" y="959.50"></text></g><g><title>nom::branch::alt::_{{closure}} (8 samples, 0.52%)</title><rect x="17.4449%" y="933" width="0.5188%" height="15" fill="rgb(242,56,43)"/><text x="17.6949%" y="943.50"></text></g><g><title>&lt; (8 samples, 0.52%)</title><rect x="17.4449%" y="917" width="0.5188%" height="15" fill="rgb(233,99,24)"/><text x="17.6949%" y="927.50"></text></g><g><title>nom::combinator::map::_{{closure}} (8 samples, 0.52%)</title><rect x="17.4449%" y="901" width="0.5188%" height="15" fill="rgb(234,209,42)"/><text x="17.6949%" y="911.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (3 samples, 0.19%)</title><rect x="17.7691%" y="885" width="0.1946%" height="15" fill="rgb(227,7,12)"/><text x="18.0191%" y="895.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="17.7691%" y="869" width="0.1946%" height="15" fill="rgb(245,203,43)"/><text x="18.0191%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.13%)</title><rect x="17.8340%" y="853" width="0.1297%" height="15" fill="rgb(238,205,33)"/><text x="18.0840%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 0.32%)</title><rect x="18.2879%" y="837" width="0.3243%" height="15" fill="rgb(231,56,7)"/><text x="18.5379%" y="847.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.26%)</title><rect x="18.3528%" y="821" width="0.2594%" height="15" fill="rgb(244,186,29)"/><text x="18.6028%" y="831.50"></text></g><g><title>core::str::pattern::Searcher::next_match (4 samples, 0.26%)</title><rect x="18.3528%" y="805" width="0.2594%" height="15" fill="rgb(234,111,31)"/><text x="18.6028%" y="815.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (4 samples, 0.26%)</title><rect x="18.3528%" y="789" width="0.2594%" height="15" fill="rgb(241,149,10)"/><text x="18.6028%" y="799.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.52%)</title><rect x="18.2879%" y="885" width="0.5188%" height="15" fill="rgb(249,206,44)"/><text x="18.5379%" y="895.50"></text></g><g><title>nom::character::complete::multispace0 (8 samples, 0.52%)</title><rect x="18.2879%" y="869" width="0.5188%" height="15" fill="rgb(251,153,30)"/><text x="18.5379%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (8 samples, 0.52%)</title><rect x="18.2879%" y="853" width="0.5188%" height="15" fill="rgb(239,152,38)"/><text x="18.5379%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.19%)</title><rect x="18.6122%" y="837" width="0.1946%" height="15" fill="rgb(249,139,47)"/><text x="18.8622%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (3 samples, 0.19%)</title><rect x="18.6122%" y="821" width="0.1946%" height="15" fill="rgb(244,64,35)"/><text x="18.8622%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="18.6770%" y="805" width="0.1297%" height="15" fill="rgb(216,46,15)"/><text x="18.9270%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.13%)</title><rect x="18.6770%" y="789" width="0.1297%" height="15" fill="rgb(250,74,19)"/><text x="18.9270%" y="799.50"></text></g><g><title>cswap::parser::bool_core_ops (18 samples, 1.17%)</title><rect x="17.9637%" y="917" width="1.1673%" height="15" fill="rgb(249,42,33)"/><text x="18.2137%" y="927.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (18 samples, 1.17%)</title><rect x="17.9637%" y="901" width="1.1673%" height="15" fill="rgb(242,149,17)"/><text x="18.2137%" y="911.50"></text></g><g><title>nom::branch::alt::_{{closure}} (5 samples, 0.32%)</title><rect x="18.8067%" y="885" width="0.3243%" height="15" fill="rgb(244,29,21)"/><text x="19.0567%" y="895.50"></text></g><g><title>&lt; (5 samples, 0.32%)</title><rect x="18.8067%" y="869" width="0.3243%" height="15" fill="rgb(220,130,37)"/><text x="19.0567%" y="879.50"></text></g><g><title>nom::combinator::map::_{{closure}} (3 samples, 0.19%)</title><rect x="18.9364%" y="853" width="0.1946%" height="15" fill="rgb(211,67,2)"/><text x="19.1864%" y="863.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (3 samples, 0.19%)</title><rect x="18.9364%" y="837" width="0.1946%" height="15" fill="rgb(235,68,52)"/><text x="19.1864%" y="847.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="19.0013%" y="821" width="0.1297%" height="15" fill="rgb(246,142,3)"/><text x="19.2513%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.26%)</title><rect x="19.6498%" y="821" width="0.2594%" height="15" fill="rgb(241,25,7)"/><text x="19.8998%" y="831.50"></text></g><g><title>core::mem::take (4 samples, 0.26%)</title><rect x="19.6498%" y="805" width="0.2594%" height="15" fill="rgb(242,119,39)"/><text x="19.8998%" y="815.50"></text></g><g><title>core::mem::replace (3 samples, 0.19%)</title><rect x="19.7147%" y="789" width="0.1946%" height="15" fill="rgb(241,98,45)"/><text x="19.9647%" y="799.50"></text></g><g><title>core::mem::swap (3 samples, 0.19%)</title><rect x="19.7147%" y="773" width="0.1946%" height="15" fill="rgb(254,28,30)"/><text x="19.9647%" y="783.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.13%)</title><rect x="19.7795%" y="757" width="0.1297%" height="15" fill="rgb(241,142,54)"/><text x="20.0295%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (34 samples, 2.20%)</title><rect x="17.9637%" y="933" width="2.2049%" height="15" fill="rgb(222,85,15)"/><text x="18.2137%" y="943.50">c..</text></g><g><title>cswap::parser::bool_int_ops (16 samples, 1.04%)</title><rect x="19.1310%" y="917" width="1.0376%" height="15" fill="rgb(210,85,47)"/><text x="19.3810%" y="927.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (16 samples, 1.04%)</title><rect x="19.1310%" y="901" width="1.0376%" height="15" fill="rgb(224,206,25)"/><text x="19.3810%" y="911.50"></text></g><g><title>nom::branch::alt::_{{closure}} (15 samples, 0.97%)</title><rect x="19.1958%" y="885" width="0.9728%" height="15" fill="rgb(243,201,19)"/><text x="19.4458%" y="895.50"></text></g><g><title>&lt; (15 samples, 0.97%)</title><rect x="19.1958%" y="869" width="0.9728%" height="15" fill="rgb(236,59,4)"/><text x="19.4458%" y="879.50"></text></g><g><title>nom::branch::alt::_{{closure}} (11 samples, 0.71%)</title><rect x="19.4553%" y="853" width="0.7134%" height="15" fill="rgb(254,179,45)"/><text x="19.7053%" y="863.50"></text></g><g><title>&lt; (11 samples, 0.71%)</title><rect x="19.4553%" y="837" width="0.7134%" height="15" fill="rgb(226,14,10)"/><text x="19.7053%" y="847.50"></text></g><g><title>nom::combinator::map::_{{closure}} (4 samples, 0.26%)</title><rect x="19.9092%" y="821" width="0.2594%" height="15" fill="rgb(244,27,41)"/><text x="20.1592%" y="831.50"></text></g><g><title>cswap::parser::bool_sexp (39 samples, 2.53%)</title><rect x="17.9637%" y="1045" width="2.5292%" height="15" fill="rgb(235,35,32)"/><text x="18.2137%" y="1055.50">cs..</text></g><g><title>nom::sequence::delimited::_{{closure}} (39 samples, 2.53%)</title><rect x="17.9637%" y="1029" width="2.5292%" height="15" fill="rgb(218,68,31)"/><text x="18.2137%" y="1039.50">no..</text></g><g><title>nom::branch::alt::_{{closure}} (39 samples, 2.53%)</title><rect x="17.9637%" y="1013" width="2.5292%" height="15" fill="rgb(207,120,37)"/><text x="18.2137%" y="1023.50">no..</text></g><g><title>&lt; (39 samples, 2.53%)</title><rect x="17.9637%" y="997" width="2.5292%" height="15" fill="rgb(227,98,0)"/><text x="18.2137%" y="1007.50">&lt;</text></g><g><title>nom::combinator::map::_{{closure}} (39 samples, 2.53%)</title><rect x="17.9637%" y="981" width="2.5292%" height="15" fill="rgb(207,7,3)"/><text x="18.2137%" y="991.50">no..</text></g><g><title>nom::sequence::tuple::_{{closure}} (39 samples, 2.53%)</title><rect x="17.9637%" y="965" width="2.5292%" height="15" fill="rgb(206,98,19)"/><text x="18.2137%" y="975.50">no..</text></g><g><title>&lt; (39 samples, 2.53%)</title><rect x="17.9637%" y="949" width="2.5292%" height="15" fill="rgb(217,5,26)"/><text x="18.2137%" y="959.50">&lt;</text></g><g><title>nom::multi::many1::_{{closure}} (5 samples, 0.32%)</title><rect x="20.1686%" y="933" width="0.3243%" height="15" fill="rgb(235,190,38)"/><text x="20.4186%" y="943.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.26%)</title><rect x="20.2335%" y="917" width="0.2594%" height="15" fill="rgb(247,86,24)"/><text x="20.4835%" y="927.50"></text></g><g><title>cswap::parser::sexp (4 samples, 0.26%)</title><rect x="20.2335%" y="901" width="0.2594%" height="15" fill="rgb(205,101,16)"/><text x="20.4835%" y="911.50"></text></g><g><title>nom::branch::alt::_{{closure}} (4 samples, 0.26%)</title><rect x="20.2335%" y="885" width="0.2594%" height="15" fill="rgb(246,168,33)"/><text x="20.4835%" y="895.50"></text></g><g><title>&lt; (4 samples, 0.26%)</title><rect x="20.2335%" y="869" width="0.2594%" height="15" fill="rgb(231,114,1)"/><text x="20.4835%" y="879.50"></text></g><g><title>&lt; (317 samples, 20.56%)</title><rect x="0.0000%" y="1093" width="20.5577%" height="15" fill="rgb(207,184,53)"/><text x="0.2500%" y="1103.50">&lt;</text></g><g><title>nom::sequence::delimited::_{{closure}} (40 samples, 2.59%)</title><rect x="17.9637%" y="1077" width="2.5940%" height="15" fill="rgb(224,95,51)"/><text x="18.2137%" y="1087.50">no..</text></g><g><title>core::ops::function::Fn::call (40 samples, 2.59%)</title><rect x="17.9637%" y="1061" width="2.5940%" height="15" fill="rgb(212,188,45)"/><text x="18.2137%" y="1071.50">co..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (2 samples, 0.13%)</title><rect x="20.5577%" y="709" width="0.1297%" height="15" fill="rgb(223,154,38)"/><text x="20.8077%" y="719.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (2 samples, 0.13%)</title><rect x="20.5577%" y="693" width="0.1297%" height="15" fill="rgb(251,22,52)"/><text x="20.8077%" y="703.50"></text></g><g><title>alloc::str::join_generic_copy (2 samples, 0.13%)</title><rect x="20.5577%" y="677" width="0.1297%" height="15" fill="rgb(229,209,22)"/><text x="20.8077%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="20.5577%" y="1093" width="0.1946%" height="15" fill="rgb(234,138,34)"/><text x="20.8077%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="20.5577%" y="1077" width="0.1946%" height="15" fill="rgb(212,95,11)"/><text x="20.8077%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="20.5577%" y="1061" width="0.1946%" height="15" fill="rgb(240,179,47)"/><text x="20.8077%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="20.5577%" y="1045" width="0.1946%" height="15" fill="rgb(240,163,11)"/><text x="20.8077%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="20.5577%" y="1029" width="0.1946%" height="15" fill="rgb(236,37,12)"/><text x="20.8077%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="20.5577%" y="1013" width="0.1946%" height="15" fill="rgb(232,164,16)"/><text x="20.8077%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="20.5577%" y="997" width="0.1946%" height="15" fill="rgb(244,205,15)"/><text x="20.8077%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="20.5577%" y="981" width="0.1946%" height="15" fill="rgb(223,117,47)"/><text x="20.8077%" y="991.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="20.5577%" y="965" width="0.1946%" height="15" fill="rgb(244,107,35)"/><text x="20.8077%" y="975.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="20.5577%" y="949" width="0.1946%" height="15" fill="rgb(205,140,8)"/><text x="20.8077%" y="959.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="20.5577%" y="933" width="0.1946%" height="15" fill="rgb(228,84,46)"/><text x="20.8077%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="20.5577%" y="917" width="0.1946%" height="15" fill="rgb(254,188,9)"/><text x="20.8077%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="20.5577%" y="901" width="0.1946%" height="15" fill="rgb(206,112,54)"/><text x="20.8077%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="20.5577%" y="885" width="0.1946%" height="15" fill="rgb(216,84,49)"/><text x="20.8077%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="20.5577%" y="869" width="0.1946%" height="15" fill="rgb(214,194,35)"/><text x="20.8077%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="20.5577%" y="853" width="0.1946%" height="15" fill="rgb(249,28,3)"/><text x="20.8077%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="20.5577%" y="837" width="0.1946%" height="15" fill="rgb(222,56,52)"/><text x="20.8077%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="20.5577%" y="821" width="0.1946%" height="15" fill="rgb(245,217,50)"/><text x="20.8077%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="20.5577%" y="805" width="0.1946%" height="15" fill="rgb(213,201,24)"/><text x="20.8077%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="20.5577%" y="789" width="0.1946%" height="15" fill="rgb(248,116,28)"/><text x="20.8077%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="20.5577%" y="773" width="0.1946%" height="15" fill="rgb(219,72,43)"/><text x="20.8077%" y="783.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="20.5577%" y="757" width="0.1946%" height="15" fill="rgb(209,138,14)"/><text x="20.8077%" y="767.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="20.5577%" y="741" width="0.1946%" height="15" fill="rgb(222,18,33)"/><text x="20.8077%" y="751.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="20.5577%" y="725" width="0.1946%" height="15" fill="rgb(213,199,7)"/><text x="20.8077%" y="735.50"></text></g><g><title>core::alloc::Layout::from_size_align (2 samples, 0.13%)</title><rect x="20.8171%" y="629" width="0.1297%" height="15" fill="rgb(250,110,10)"/><text x="21.0671%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::is_power_of_two (2 samples, 0.13%)</title><rect x="20.8171%" y="613" width="0.1297%" height="15" fill="rgb(248,123,6)"/><text x="21.0671%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (4 samples, 0.26%)</title><rect x="20.7523%" y="725" width="0.2594%" height="15" fill="rgb(206,91,31)"/><text x="21.0023%" y="735.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (4 samples, 0.26%)</title><rect x="20.7523%" y="709" width="0.2594%" height="15" fill="rgb(211,154,13)"/><text x="21.0023%" y="719.50"></text></g><g><title>alloc::str::join_generic_copy (4 samples, 0.26%)</title><rect x="20.7523%" y="693" width="0.2594%" height="15" fill="rgb(225,148,7)"/><text x="21.0023%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.19%)</title><rect x="20.8171%" y="677" width="0.1946%" height="15" fill="rgb(220,160,43)"/><text x="21.0671%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.19%)</title><rect x="20.8171%" y="661" width="0.1946%" height="15" fill="rgb(213,52,39)"/><text x="21.0671%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.19%)</title><rect x="20.8171%" y="645" width="0.1946%" height="15" fill="rgb(243,137,7)"/><text x="21.0671%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.39%)</title><rect x="20.7523%" y="1093" width="0.3891%" height="15" fill="rgb(230,79,13)"/><text x="21.0023%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.39%)</title><rect x="20.7523%" y="1077" width="0.3891%" height="15" fill="rgb(247,105,23)"/><text x="21.0023%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.39%)</title><rect x="20.7523%" y="1061" width="0.3891%" height="15" fill="rgb(223,179,41)"/><text x="21.0023%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.39%)</title><rect x="20.7523%" y="1045" width="0.3891%" height="15" fill="rgb(218,9,34)"/><text x="21.0023%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.39%)</title><rect x="20.7523%" y="1029" width="0.3891%" height="15" fill="rgb(222,106,8)"/><text x="21.0023%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.39%)</title><rect x="20.7523%" y="1013" width="0.3891%" height="15" fill="rgb(211,220,0)"/><text x="21.0023%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (6 samples, 0.39%)</title><rect x="20.7523%" y="997" width="0.3891%" height="15" fill="rgb(229,52,16)"/><text x="21.0023%" y="1007.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (6 samples, 0.39%)</title><rect x="20.7523%" y="981" width="0.3891%" height="15" fill="rgb(212,155,18)"/><text x="21.0023%" y="991.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (6 samples, 0.39%)</title><rect x="20.7523%" y="965" width="0.3891%" height="15" fill="rgb(242,21,14)"/><text x="21.0023%" y="975.50"></text></g><g><title>cswap::parser::SExp::to_string (6 samples, 0.39%)</title><rect x="20.7523%" y="949" width="0.3891%" height="15" fill="rgb(222,19,48)"/><text x="21.0023%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.39%)</title><rect x="20.7523%" y="933" width="0.3891%" height="15" fill="rgb(232,45,27)"/><text x="21.0023%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="20.7523%" y="917" width="0.3891%" height="15" fill="rgb(249,103,42)"/><text x="21.0023%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (6 samples, 0.39%)</title><rect x="20.7523%" y="901" width="0.3891%" height="15" fill="rgb(246,81,33)"/><text x="21.0023%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.39%)</title><rect x="20.7523%" y="885" width="0.3891%" height="15" fill="rgb(252,33,42)"/><text x="21.0023%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.39%)</title><rect x="20.7523%" y="869" width="0.3891%" height="15" fill="rgb(209,212,41)"/><text x="21.0023%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.39%)</title><rect x="20.7523%" y="853" width="0.3891%" height="15" fill="rgb(207,154,6)"/><text x="21.0023%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.39%)</title><rect x="20.7523%" y="837" width="0.3891%" height="15" fill="rgb(223,64,47)"/><text x="21.0023%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.39%)</title><rect x="20.7523%" y="821" width="0.3891%" height="15" fill="rgb(211,161,38)"/><text x="21.0023%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.39%)</title><rect x="20.7523%" y="805" width="0.3891%" height="15" fill="rgb(219,138,40)"/><text x="21.0023%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (6 samples, 0.39%)</title><rect x="20.7523%" y="789" width="0.3891%" height="15" fill="rgb(241,228,46)"/><text x="21.0023%" y="799.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (6 samples, 0.39%)</title><rect x="20.7523%" y="773" width="0.3891%" height="15" fill="rgb(223,209,38)"/><text x="21.0023%" y="783.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (6 samples, 0.39%)</title><rect x="20.7523%" y="757" width="0.3891%" height="15" fill="rgb(236,164,45)"/><text x="21.0023%" y="767.50"></text></g><g><title>cswap::parser::SExp::to_string (6 samples, 0.39%)</title><rect x="20.7523%" y="741" width="0.3891%" height="15" fill="rgb(231,15,5)"/><text x="21.0023%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="21.0117%" y="725" width="0.1297%" height="15" fill="rgb(252,35,15)"/><text x="21.2617%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.0117%" y="709" width="0.1297%" height="15" fill="rgb(248,181,18)"/><text x="21.2617%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.0117%" y="693" width="0.1297%" height="15" fill="rgb(233,39,42)"/><text x="21.2617%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="21.0117%" y="677" width="0.1297%" height="15" fill="rgb(238,110,33)"/><text x="21.2617%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="21.0117%" y="661" width="0.1297%" height="15" fill="rgb(233,195,10)"/><text x="21.2617%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.0117%" y="645" width="0.1297%" height="15" fill="rgb(254,105,3)"/><text x="21.2617%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.0117%" y="629" width="0.1297%" height="15" fill="rgb(221,225,9)"/><text x="21.2617%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.0117%" y="613" width="0.1297%" height="15" fill="rgb(224,227,45)"/><text x="21.2617%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.0117%" y="597" width="0.1297%" height="15" fill="rgb(229,198,43)"/><text x="21.2617%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="21.0117%" y="581" width="0.1297%" height="15" fill="rgb(206,209,35)"/><text x="21.2617%" y="591.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="21.0117%" y="565" width="0.1297%" height="15" fill="rgb(245,195,53)"/><text x="21.2617%" y="575.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.0117%" y="549" width="0.1297%" height="15" fill="rgb(240,92,26)"/><text x="21.2617%" y="559.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.0117%" y="533" width="0.1297%" height="15" fill="rgb(207,40,23)"/><text x="21.2617%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="1093" width="0.1297%" height="15" fill="rgb(223,111,35)"/><text x="21.3914%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="1077" width="0.1297%" height="15" fill="rgb(229,147,28)"/><text x="21.3914%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.1414%" y="1061" width="0.1297%" height="15" fill="rgb(211,29,28)"/><text x="21.3914%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="1045" width="0.1297%" height="15" fill="rgb(228,72,33)"/><text x="21.3914%" y="1055.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="1029" width="0.1297%" height="15" fill="rgb(205,214,31)"/><text x="21.3914%" y="1039.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="1013" width="0.1297%" height="15" fill="rgb(224,111,15)"/><text x="21.3914%" y="1023.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.1414%" y="997" width="0.1297%" height="15" fill="rgb(253,21,26)"/><text x="21.3914%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="21.1414%" y="981" width="0.1297%" height="15" fill="rgb(245,139,43)"/><text x="21.3914%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.1414%" y="965" width="0.1297%" height="15" fill="rgb(252,170,7)"/><text x="21.3914%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.1414%" y="949" width="0.1297%" height="15" fill="rgb(231,118,14)"/><text x="21.3914%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="21.1414%" y="933" width="0.1297%" height="15" fill="rgb(238,83,0)"/><text x="21.3914%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="21.1414%" y="917" width="0.1297%" height="15" fill="rgb(221,39,39)"/><text x="21.3914%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="901" width="0.1297%" height="15" fill="rgb(222,119,46)"/><text x="21.3914%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="885" width="0.1297%" height="15" fill="rgb(222,165,49)"/><text x="21.3914%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="869" width="0.1297%" height="15" fill="rgb(219,113,52)"/><text x="21.3914%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.1414%" y="853" width="0.1297%" height="15" fill="rgb(214,7,15)"/><text x="21.3914%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="837" width="0.1297%" height="15" fill="rgb(235,32,4)"/><text x="21.3914%" y="847.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="821" width="0.1297%" height="15" fill="rgb(238,90,54)"/><text x="21.3914%" y="831.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="805" width="0.1297%" height="15" fill="rgb(213,208,19)"/><text x="21.3914%" y="815.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.1414%" y="789" width="0.1297%" height="15" fill="rgb(233,156,4)"/><text x="21.3914%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="21.1414%" y="773" width="0.1297%" height="15" fill="rgb(207,194,5)"/><text x="21.3914%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.1414%" y="757" width="0.1297%" height="15" fill="rgb(206,111,30)"/><text x="21.3914%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.1414%" y="741" width="0.1297%" height="15" fill="rgb(243,70,54)"/><text x="21.3914%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="21.1414%" y="725" width="0.1297%" height="15" fill="rgb(242,28,8)"/><text x="21.3914%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="21.1414%" y="709" width="0.1297%" height="15" fill="rgb(219,106,18)"/><text x="21.3914%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="693" width="0.1297%" height="15" fill="rgb(244,222,10)"/><text x="21.3914%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="677" width="0.1297%" height="15" fill="rgb(236,179,52)"/><text x="21.3914%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="661" width="0.1297%" height="15" fill="rgb(213,23,39)"/><text x="21.3914%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.1414%" y="645" width="0.1297%" height="15" fill="rgb(238,48,10)"/><text x="21.3914%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="629" width="0.1297%" height="15" fill="rgb(251,196,23)"/><text x="21.3914%" y="639.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="613" width="0.1297%" height="15" fill="rgb(250,152,24)"/><text x="21.3914%" y="623.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.1414%" y="597" width="0.1297%" height="15" fill="rgb(209,150,17)"/><text x="21.3914%" y="607.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.1414%" y="581" width="0.1297%" height="15" fill="rgb(234,202,34)"/><text x="21.3914%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="21.1414%" y="565" width="0.1297%" height="15" fill="rgb(253,148,53)"/><text x="21.3914%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.1414%" y="549" width="0.1297%" height="15" fill="rgb(218,129,16)"/><text x="21.3914%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.1414%" y="533" width="0.1297%" height="15" fill="rgb(216,85,19)"/><text x="21.3914%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="21.1414%" y="517" width="0.1297%" height="15" fill="rgb(235,228,7)"/><text x="21.3914%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="21.1414%" y="501" width="0.1297%" height="15" fill="rgb(245,175,0)"/><text x="21.3914%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="485" width="0.1297%" height="15" fill="rgb(208,168,36)"/><text x="21.3914%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="469" width="0.1297%" height="15" fill="rgb(246,171,24)"/><text x="21.3914%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.1414%" y="453" width="0.1297%" height="15" fill="rgb(215,142,24)"/><text x="21.3914%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.1414%" y="437" width="0.1297%" height="15" fill="rgb(250,187,7)"/><text x="21.3914%" y="447.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="1077" width="0.1946%" height="15" fill="rgb(228,66,33)"/><text x="21.5859%" y="1087.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="21.3359%" y="1061" width="0.1946%" height="15" fill="rgb(234,215,21)"/><text x="21.5859%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="21.3359%" y="1045" width="0.1946%" height="15" fill="rgb(222,191,20)"/><text x="21.5859%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.3359%" y="1029" width="0.1946%" height="15" fill="rgb(245,79,54)"/><text x="21.5859%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.3359%" y="1013" width="0.1946%" height="15" fill="rgb(240,10,37)"/><text x="21.5859%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="21.3359%" y="997" width="0.1946%" height="15" fill="rgb(214,192,32)"/><text x="21.5859%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="21.3359%" y="981" width="0.1946%" height="15" fill="rgb(209,36,54)"/><text x="21.5859%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="965" width="0.1946%" height="15" fill="rgb(220,10,11)"/><text x="21.5859%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="949" width="0.1946%" height="15" fill="rgb(221,106,17)"/><text x="21.5859%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="933" width="0.1946%" height="15" fill="rgb(251,142,44)"/><text x="21.5859%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="21.3359%" y="917" width="0.1946%" height="15" fill="rgb(238,13,15)"/><text x="21.5859%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="901" width="0.1946%" height="15" fill="rgb(208,107,27)"/><text x="21.5859%" y="911.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="885" width="0.1946%" height="15" fill="rgb(205,136,37)"/><text x="21.5859%" y="895.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="869" width="0.1946%" height="15" fill="rgb(250,205,27)"/><text x="21.5859%" y="879.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="21.3359%" y="853" width="0.1946%" height="15" fill="rgb(210,80,43)"/><text x="21.5859%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="21.3359%" y="837" width="0.1946%" height="15" fill="rgb(247,160,36)"/><text x="21.5859%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.3359%" y="821" width="0.1946%" height="15" fill="rgb(234,13,49)"/><text x="21.5859%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.3359%" y="805" width="0.1946%" height="15" fill="rgb(234,122,0)"/><text x="21.5859%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="21.3359%" y="789" width="0.1946%" height="15" fill="rgb(207,146,38)"/><text x="21.5859%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="21.3359%" y="773" width="0.1946%" height="15" fill="rgb(207,177,25)"/><text x="21.5859%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="757" width="0.1946%" height="15" fill="rgb(211,178,42)"/><text x="21.5859%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="741" width="0.1946%" height="15" fill="rgb(230,69,54)"/><text x="21.5859%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="725" width="0.1946%" height="15" fill="rgb(214,135,41)"/><text x="21.5859%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="21.3359%" y="709" width="0.1946%" height="15" fill="rgb(237,67,25)"/><text x="21.5859%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="693" width="0.1946%" height="15" fill="rgb(222,189,50)"/><text x="21.5859%" y="703.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="677" width="0.1946%" height="15" fill="rgb(245,148,34)"/><text x="21.5859%" y="687.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="661" width="0.1946%" height="15" fill="rgb(222,29,6)"/><text x="21.5859%" y="671.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="21.3359%" y="645" width="0.1946%" height="15" fill="rgb(221,189,43)"/><text x="21.5859%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="21.3359%" y="629" width="0.1946%" height="15" fill="rgb(207,36,27)"/><text x="21.5859%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.3359%" y="613" width="0.1946%" height="15" fill="rgb(217,90,24)"/><text x="21.5859%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.3359%" y="597" width="0.1946%" height="15" fill="rgb(224,66,35)"/><text x="21.5859%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="21.3359%" y="581" width="0.1946%" height="15" fill="rgb(221,13,50)"/><text x="21.5859%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="21.3359%" y="565" width="0.1946%" height="15" fill="rgb(236,68,49)"/><text x="21.5859%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="549" width="0.1946%" height="15" fill="rgb(229,146,28)"/><text x="21.5859%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="533" width="0.1946%" height="15" fill="rgb(225,31,38)"/><text x="21.5859%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="21.3359%" y="517" width="0.1946%" height="15" fill="rgb(250,208,3)"/><text x="21.5859%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="21.3359%" y="501" width="0.1946%" height="15" fill="rgb(246,54,23)"/><text x="21.5859%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="485" width="0.1946%" height="15" fill="rgb(243,76,11)"/><text x="21.5859%" y="495.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="21.3359%" y="469" width="0.1946%" height="15" fill="rgb(245,21,50)"/><text x="21.5859%" y="479.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.4008%" y="453" width="0.1297%" height="15" fill="rgb(228,9,43)"/><text x="21.6508%" y="463.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (4 samples, 0.26%)</title><rect x="21.3359%" y="1093" width="0.2594%" height="15" fill="rgb(208,100,47)"/><text x="21.5859%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="21.5953%" y="1093" width="0.1946%" height="15" fill="rgb(232,26,8)"/><text x="21.8453%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="21.5953%" y="1077" width="0.1946%" height="15" fill="rgb(216,166,38)"/><text x="21.8453%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="21.5953%" y="1061" width="0.1946%" height="15" fill="rgb(251,202,51)"/><text x="21.8453%" y="1071.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="21.5953%" y="1045" width="0.1946%" height="15" fill="rgb(254,216,34)"/><text x="21.8453%" y="1055.50"></text></g><g><title>cswap::parser::Script::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.6602%" y="1029" width="0.1297%" height="15" fill="rgb(251,32,27)"/><text x="21.9102%" y="1039.50"></text></g><g><title>cswap::parser::Command::to_string (2 samples, 0.13%)</title><rect x="21.6602%" y="1013" width="0.1297%" height="15" fill="rgb(208,127,28)"/><text x="21.9102%" y="1023.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.6602%" y="997" width="0.1297%" height="15" fill="rgb(224,137,22)"/><text x="21.9102%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="21.6602%" y="981" width="0.1297%" height="15" fill="rgb(254,70,32)"/><text x="21.9102%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.6602%" y="965" width="0.1297%" height="15" fill="rgb(229,75,37)"/><text x="21.9102%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.6602%" y="949" width="0.1297%" height="15" fill="rgb(252,64,23)"/><text x="21.9102%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="21.6602%" y="933" width="0.1297%" height="15" fill="rgb(232,162,48)"/><text x="21.9102%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="21.6602%" y="917" width="0.1297%" height="15" fill="rgb(246,160,12)"/><text x="21.9102%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.6602%" y="901" width="0.1297%" height="15" fill="rgb(247,166,0)"/><text x="21.9102%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.6602%" y="885" width="0.1297%" height="15" fill="rgb(249,219,21)"/><text x="21.9102%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.6602%" y="869" width="0.1297%" height="15" fill="rgb(205,209,3)"/><text x="21.9102%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.6602%" y="853" width="0.1297%" height="15" fill="rgb(243,44,1)"/><text x="21.9102%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="21.6602%" y="837" width="0.1297%" height="15" fill="rgb(206,159,16)"/><text x="21.9102%" y="847.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="21.6602%" y="821" width="0.1297%" height="15" fill="rgb(244,77,30)"/><text x="21.9102%" y="831.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.6602%" y="805" width="0.1297%" height="15" fill="rgb(218,69,12)"/><text x="21.9102%" y="815.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.6602%" y="789" width="0.1297%" height="15" fill="rgb(212,87,7)"/><text x="21.9102%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="21.6602%" y="773" width="0.1297%" height="15" fill="rgb(245,114,25)"/><text x="21.9102%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.6602%" y="757" width="0.1297%" height="15" fill="rgb(210,61,42)"/><text x="21.9102%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.6602%" y="741" width="0.1297%" height="15" fill="rgb(211,52,33)"/><text x="21.9102%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="21.6602%" y="725" width="0.1297%" height="15" fill="rgb(234,58,33)"/><text x="21.9102%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="21.6602%" y="709" width="0.1297%" height="15" fill="rgb(220,115,36)"/><text x="21.9102%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.6602%" y="693" width="0.1297%" height="15" fill="rgb(243,153,54)"/><text x="21.9102%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.6602%" y="677" width="0.1297%" height="15" fill="rgb(251,47,18)"/><text x="21.9102%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.6602%" y="661" width="0.1297%" height="15" fill="rgb(242,102,42)"/><text x="21.9102%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.6602%" y="645" width="0.1297%" height="15" fill="rgb(234,31,38)"/><text x="21.9102%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="21.6602%" y="629" width="0.1297%" height="15" fill="rgb(221,117,51)"/><text x="21.9102%" y="639.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="21.6602%" y="613" width="0.1297%" height="15" fill="rgb(212,20,18)"/><text x="21.9102%" y="623.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.6602%" y="597" width="0.1297%" height="15" fill="rgb(245,133,36)"/><text x="21.9102%" y="607.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.6602%" y="581" width="0.1297%" height="15" fill="rgb(212,6,19)"/><text x="21.9102%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="21.6602%" y="565" width="0.1297%" height="15" fill="rgb(218,1,36)"/><text x="21.9102%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.26%)</title><rect x="21.7899%" y="1093" width="0.2594%" height="15" fill="rgb(246,84,54)"/><text x="22.0399%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.26%)</title><rect x="21.7899%" y="1077" width="0.2594%" height="15" fill="rgb(242,110,6)"/><text x="22.0399%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="21.8547%" y="1061" width="0.1946%" height="15" fill="rgb(214,47,5)"/><text x="22.1047%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="21.8547%" y="1045" width="0.1946%" height="15" fill="rgb(218,159,25)"/><text x="22.1047%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="21.8547%" y="1029" width="0.1946%" height="15" fill="rgb(215,211,28)"/><text x="22.1047%" y="1039.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="21.8547%" y="1013" width="0.1946%" height="15" fill="rgb(238,59,32)"/><text x="22.1047%" y="1023.50"></text></g><g><title>cswap::parser::Script::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="21.8547%" y="997" width="0.1946%" height="15" fill="rgb(226,82,3)"/><text x="22.1047%" y="1007.50"></text></g><g><title>cswap::parser::Command::to_string (3 samples, 0.19%)</title><rect x="21.8547%" y="981" width="0.1946%" height="15" fill="rgb(240,164,32)"/><text x="22.1047%" y="991.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="21.8547%" y="965" width="0.1946%" height="15" fill="rgb(232,46,7)"/><text x="22.1047%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="21.8547%" y="949" width="0.1946%" height="15" fill="rgb(229,129,53)"/><text x="22.1047%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.8547%" y="933" width="0.1946%" height="15" fill="rgb(234,188,29)"/><text x="22.1047%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="21.8547%" y="917" width="0.1946%" height="15" fill="rgb(246,141,4)"/><text x="22.1047%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="21.8547%" y="901" width="0.1946%" height="15" fill="rgb(229,23,39)"/><text x="22.1047%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="21.8547%" y="885" width="0.1946%" height="15" fill="rgb(206,12,3)"/><text x="22.1047%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.8547%" y="869" width="0.1946%" height="15" fill="rgb(252,226,20)"/><text x="22.1047%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="21.8547%" y="853" width="0.1946%" height="15" fill="rgb(216,123,35)"/><text x="22.1047%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="21.8547%" y="837" width="0.1946%" height="15" fill="rgb(212,68,40)"/><text x="22.1047%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="21.8547%" y="821" width="0.1946%" height="15" fill="rgb(254,125,32)"/><text x="22.1047%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="21.8547%" y="805" width="0.1946%" height="15" fill="rgb(253,97,22)"/><text x="22.1047%" y="815.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="21.8547%" y="789" width="0.1946%" height="15" fill="rgb(241,101,14)"/><text x="22.1047%" y="799.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="21.8547%" y="773" width="0.1946%" height="15" fill="rgb(238,103,29)"/><text x="22.1047%" y="783.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="21.8547%" y="757" width="0.1946%" height="15" fill="rgb(233,195,47)"/><text x="22.1047%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="21.9196%" y="741" width="0.1297%" height="15" fill="rgb(246,218,30)"/><text x="22.1696%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.9196%" y="725" width="0.1297%" height="15" fill="rgb(219,145,47)"/><text x="22.1696%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="21.9196%" y="709" width="0.1297%" height="15" fill="rgb(243,12,26)"/><text x="22.1696%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="21.9196%" y="693" width="0.1297%" height="15" fill="rgb(214,87,16)"/><text x="22.1696%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="21.9196%" y="677" width="0.1297%" height="15" fill="rgb(208,99,42)"/><text x="22.1696%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.9196%" y="661" width="0.1297%" height="15" fill="rgb(253,99,2)"/><text x="22.1696%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="21.9196%" y="645" width="0.1297%" height="15" fill="rgb(220,168,23)"/><text x="22.1696%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="21.9196%" y="629" width="0.1297%" height="15" fill="rgb(242,38,24)"/><text x="22.1696%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="21.9196%" y="613" width="0.1297%" height="15" fill="rgb(225,182,9)"/><text x="22.1696%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="21.9196%" y="597" width="0.1297%" height="15" fill="rgb(243,178,37)"/><text x="22.1696%" y="607.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="21.9196%" y="581" width="0.1297%" height="15" fill="rgb(232,139,19)"/><text x="22.1696%" y="591.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="21.9196%" y="565" width="0.1297%" height="15" fill="rgb(225,201,24)"/><text x="22.1696%" y="575.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="21.9196%" y="549" width="0.1297%" height="15" fill="rgb(221,47,46)"/><text x="22.1696%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="22.0493%" y="1093" width="0.1946%" height="15" fill="rgb(249,23,13)"/><text x="22.2993%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="22.0493%" y="1077" width="0.1946%" height="15" fill="rgb(219,9,5)"/><text x="22.2993%" y="1087.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="22.0493%" y="1061" width="0.1946%" height="15" fill="rgb(254,171,16)"/><text x="22.2993%" y="1071.50"></text></g><g><title>cswap::parser::Script::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="22.1141%" y="1045" width="0.1297%" height="15" fill="rgb(230,171,20)"/><text x="22.3641%" y="1055.50"></text></g><g><title>cswap::parser::Command::to_string (2 samples, 0.13%)</title><rect x="22.1141%" y="1029" width="0.1297%" height="15" fill="rgb(210,71,41)"/><text x="22.3641%" y="1039.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="22.1141%" y="1013" width="0.1297%" height="15" fill="rgb(206,173,20)"/><text x="22.3641%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="22.1141%" y="997" width="0.1297%" height="15" fill="rgb(233,88,34)"/><text x="22.3641%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="22.1141%" y="981" width="0.1297%" height="15" fill="rgb(223,209,46)"/><text x="22.3641%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="22.1141%" y="965" width="0.1297%" height="15" fill="rgb(250,43,18)"/><text x="22.3641%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="22.1141%" y="949" width="0.1297%" height="15" fill="rgb(208,13,10)"/><text x="22.3641%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="22.1141%" y="933" width="0.1297%" height="15" fill="rgb(212,200,36)"/><text x="22.3641%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="22.1141%" y="917" width="0.1297%" height="15" fill="rgb(225,90,30)"/><text x="22.3641%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="22.1141%" y="901" width="0.1297%" height="15" fill="rgb(236,182,39)"/><text x="22.3641%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="22.1141%" y="885" width="0.1297%" height="15" fill="rgb(212,144,35)"/><text x="22.3641%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="22.1141%" y="869" width="0.1297%" height="15" fill="rgb(228,63,44)"/><text x="22.3641%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="22.1141%" y="853" width="0.1297%" height="15" fill="rgb(228,109,6)"/><text x="22.3641%" y="863.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="22.1141%" y="837" width="0.1297%" height="15" fill="rgb(238,117,24)"/><text x="22.3641%" y="847.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="22.1141%" y="821" width="0.1297%" height="15" fill="rgb(242,26,26)"/><text x="22.3641%" y="831.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="22.1141%" y="805" width="0.1297%" height="15" fill="rgb(221,92,48)"/><text x="22.3641%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="22.1141%" y="789" width="0.1297%" height="15" fill="rgb(209,209,32)"/><text x="22.3641%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="22.1141%" y="773" width="0.1297%" height="15" fill="rgb(221,70,22)"/><text x="22.3641%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="22.1141%" y="757" width="0.1297%" height="15" fill="rgb(248,145,5)"/><text x="22.3641%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="22.1141%" y="741" width="0.1297%" height="15" fill="rgb(226,116,26)"/><text x="22.3641%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="22.1141%" y="725" width="0.1297%" height="15" fill="rgb(244,5,17)"/><text x="22.3641%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="22.1141%" y="709" width="0.1297%" height="15" fill="rgb(252,159,33)"/><text x="22.3641%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="22.1141%" y="693" width="0.1297%" height="15" fill="rgb(206,71,0)"/><text x="22.3641%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="22.1141%" y="677" width="0.1297%" height="15" fill="rgb(233,118,54)"/><text x="22.3641%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="22.1141%" y="661" width="0.1297%" height="15" fill="rgb(234,83,48)"/><text x="22.3641%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="22.1141%" y="645" width="0.1297%" height="15" fill="rgb(228,3,54)"/><text x="22.3641%" y="655.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="22.1141%" y="629" width="0.1297%" height="15" fill="rgb(226,155,13)"/><text x="22.3641%" y="639.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="22.1141%" y="613" width="0.1297%" height="15" fill="rgb(241,28,37)"/><text x="22.3641%" y="623.50"></text></g><g><title>cswap::parser::SExp::to_string (2 samples, 0.13%)</title><rect x="22.1141%" y="597" width="0.1297%" height="15" fill="rgb(233,93,10)"/><text x="22.3641%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.19%)</title><rect x="22.2438%" y="965" width="0.1946%" height="15" fill="rgb(225,113,19)"/><text x="22.4938%" y="975.50"></text></g><g><title>cswap::parser::bool_int_ops (3 samples, 0.19%)</title><rect x="22.2438%" y="949" width="0.1946%" height="15" fill="rgb(241,2,18)"/><text x="22.4938%" y="959.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (3 samples, 0.19%)</title><rect x="22.2438%" y="933" width="0.1946%" height="15" fill="rgb(228,207,21)"/><text x="22.4938%" y="943.50"></text></g><g><title>nom::branch::alt::_{{closure}} (3 samples, 0.19%)</title><rect x="22.2438%" y="917" width="0.1946%" height="15" fill="rgb(213,211,35)"/><text x="22.4938%" y="927.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="22.2438%" y="901" width="0.1946%" height="15" fill="rgb(209,83,10)"/><text x="22.4938%" y="911.50"></text></g><g><title>nom::branch::alt::_{{closure}} (3 samples, 0.19%)</title><rect x="22.2438%" y="885" width="0.1946%" height="15" fill="rgb(209,164,1)"/><text x="22.4938%" y="895.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="22.2438%" y="869" width="0.1946%" height="15" fill="rgb(213,184,43)"/><text x="22.4938%" y="879.50"></text></g><g><title>nom::combinator::map::_{{closure}} (3 samples, 0.19%)</title><rect x="22.2438%" y="853" width="0.1946%" height="15" fill="rgb(231,61,34)"/><text x="22.4938%" y="863.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (3 samples, 0.19%)</title><rect x="22.2438%" y="837" width="0.1946%" height="15" fill="rgb(235,75,3)"/><text x="22.4938%" y="847.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (3 samples, 0.19%)</title><rect x="22.2438%" y="821" width="0.1946%" height="15" fill="rgb(220,106,47)"/><text x="22.4938%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (3 samples, 0.19%)</title><rect x="22.2438%" y="805" width="0.1946%" height="15" fill="rgb(210,196,33)"/><text x="22.4938%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="22.2438%" y="789" width="0.1946%" height="15" fill="rgb(229,154,42)"/><text x="22.4938%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="22.2438%" y="773" width="0.1946%" height="15" fill="rgb(228,114,26)"/><text x="22.4938%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.19%)</title><rect x="22.2438%" y="757" width="0.1946%" height="15" fill="rgb(208,144,1)"/><text x="22.4938%" y="767.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="22.3087%" y="741" width="0.1297%" height="15" fill="rgb(239,112,37)"/><text x="22.5587%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.13%)</title><rect x="22.3087%" y="725" width="0.1297%" height="15" fill="rgb(210,96,50)"/><text x="22.5587%" y="735.50"></text></g><g><title>cswap::parser::bool_sexp (4 samples, 0.26%)</title><rect x="22.2438%" y="1077" width="0.2594%" height="15" fill="rgb(222,178,2)"/><text x="22.4938%" y="1087.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (4 samples, 0.26%)</title><rect x="22.2438%" y="1061" width="0.2594%" height="15" fill="rgb(226,74,18)"/><text x="22.4938%" y="1071.50"></text></g><g><title>nom::branch::alt::_{{closure}} (4 samples, 0.26%)</title><rect x="22.2438%" y="1045" width="0.2594%" height="15" fill="rgb(225,67,54)"/><text x="22.4938%" y="1055.50"></text></g><g><title>&lt; (4 samples, 0.26%)</title><rect x="22.2438%" y="1029" width="0.2594%" height="15" fill="rgb(251,92,32)"/><text x="22.4938%" y="1039.50"></text></g><g><title>nom::combinator::map::_{{closure}} (4 samples, 0.26%)</title><rect x="22.2438%" y="1013" width="0.2594%" height="15" fill="rgb(228,149,22)"/><text x="22.4938%" y="1023.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (4 samples, 0.26%)</title><rect x="22.2438%" y="997" width="0.2594%" height="15" fill="rgb(243,54,13)"/><text x="22.4938%" y="1007.50"></text></g><g><title>&lt; (4 samples, 0.26%)</title><rect x="22.2438%" y="981" width="0.2594%" height="15" fill="rgb(243,180,28)"/><text x="22.4938%" y="991.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="22.5032%" y="1029" width="0.1297%" height="15" fill="rgb(208,167,24)"/><text x="22.7532%" y="1039.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.13%)</title><rect x="22.5032%" y="1013" width="0.1297%" height="15" fill="rgb(245,73,45)"/><text x="22.7532%" y="1023.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.45%)</title><rect x="22.2438%" y="1093" width="0.4540%" height="15" fill="rgb(237,203,48)"/><text x="22.4938%" y="1103.50"></text></g><g><title>cswap::parser::sexp (3 samples, 0.19%)</title><rect x="22.5032%" y="1077" width="0.1946%" height="15" fill="rgb(211,197,16)"/><text x="22.7532%" y="1087.50"></text></g><g><title>nom::branch::alt::_{{closure}} (3 samples, 0.19%)</title><rect x="22.5032%" y="1061" width="0.1946%" height="15" fill="rgb(243,99,51)"/><text x="22.7532%" y="1071.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="22.5032%" y="1045" width="0.1946%" height="15" fill="rgb(215,123,29)"/><text x="22.7532%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.13%)</title><rect x="22.6978%" y="581" width="0.1297%" height="15" fill="rgb(239,186,37)"/><text x="22.9478%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="22.6978%" y="565" width="0.1297%" height="15" fill="rgb(252,136,39)"/><text x="22.9478%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (2 samples, 0.13%)</title><rect x="22.6978%" y="549" width="0.1297%" height="15" fill="rgb(223,213,32)"/><text x="22.9478%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.13%)</title><rect x="22.9572%" y="453" width="0.1297%" height="15" fill="rgb(233,115,5)"/><text x="23.2072%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (2 samples, 0.13%)</title><rect x="22.9572%" y="437" width="0.1297%" height="15" fill="rgb(207,226,44)"/><text x="23.2072%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.13%)</title><rect x="22.9572%" y="421" width="0.1297%" height="15" fill="rgb(208,126,0)"/><text x="23.2072%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (5 samples, 0.32%)</title><rect x="22.8923%" y="501" width="0.3243%" height="15" fill="rgb(244,66,21)"/><text x="23.1423%" y="511.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (5 samples, 0.32%)</title><rect x="22.8923%" y="485" width="0.3243%" height="15" fill="rgb(222,97,12)"/><text x="23.1423%" y="495.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (4 samples, 0.26%)</title><rect x="22.9572%" y="469" width="0.2594%" height="15" fill="rgb(219,213,19)"/><text x="23.2072%" y="479.50"></text></g><g><title>cswap::parser::Command::to_string (9 samples, 0.58%)</title><rect x="22.6978%" y="1093" width="0.5837%" height="15" fill="rgb(252,169,30)"/><text x="22.9478%" y="1103.50"></text></g><g><title>cswap::parser::SExp::to_string (9 samples, 0.58%)</title><rect x="22.6978%" y="1077" width="0.5837%" height="15" fill="rgb(206,32,51)"/><text x="22.9478%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.58%)</title><rect x="22.6978%" y="1061" width="0.5837%" height="15" fill="rgb(250,172,42)"/><text x="22.9478%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="22.6978%" y="1045" width="0.5837%" height="15" fill="rgb(209,34,43)"/><text x="22.9478%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="22.6978%" y="1029" width="0.5837%" height="15" fill="rgb(223,11,35)"/><text x="22.9478%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.58%)</title><rect x="22.6978%" y="1013" width="0.5837%" height="15" fill="rgb(251,219,26)"/><text x="22.9478%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.58%)</title><rect x="22.6978%" y="997" width="0.5837%" height="15" fill="rgb(231,119,3)"/><text x="22.9478%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.58%)</title><rect x="22.6978%" y="981" width="0.5837%" height="15" fill="rgb(216,97,11)"/><text x="22.9478%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.58%)</title><rect x="22.6978%" y="965" width="0.5837%" height="15" fill="rgb(223,59,9)"/><text x="22.9478%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.58%)</title><rect x="22.6978%" y="949" width="0.5837%" height="15" fill="rgb(233,93,31)"/><text x="22.9478%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.58%)</title><rect x="22.6978%" y="933" width="0.5837%" height="15" fill="rgb(239,81,33)"/><text x="22.9478%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (9 samples, 0.58%)</title><rect x="22.6978%" y="917" width="0.5837%" height="15" fill="rgb(213,120,34)"/><text x="22.9478%" y="927.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (9 samples, 0.58%)</title><rect x="22.6978%" y="901" width="0.5837%" height="15" fill="rgb(243,49,53)"/><text x="22.9478%" y="911.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (9 samples, 0.58%)</title><rect x="22.6978%" y="885" width="0.5837%" height="15" fill="rgb(247,216,33)"/><text x="22.9478%" y="895.50"></text></g><g><title>cswap::parser::SExp::to_string (9 samples, 0.58%)</title><rect x="22.6978%" y="869" width="0.5837%" height="15" fill="rgb(226,26,14)"/><text x="22.9478%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.58%)</title><rect x="22.6978%" y="853" width="0.5837%" height="15" fill="rgb(215,49,53)"/><text x="22.9478%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="22.6978%" y="837" width="0.5837%" height="15" fill="rgb(245,162,40)"/><text x="22.9478%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="22.6978%" y="821" width="0.5837%" height="15" fill="rgb(229,68,17)"/><text x="22.9478%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.58%)</title><rect x="22.6978%" y="805" width="0.5837%" height="15" fill="rgb(213,182,10)"/><text x="22.9478%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.58%)</title><rect x="22.6978%" y="789" width="0.5837%" height="15" fill="rgb(245,125,30)"/><text x="22.9478%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.58%)</title><rect x="22.6978%" y="773" width="0.5837%" height="15" fill="rgb(232,202,2)"/><text x="22.9478%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.58%)</title><rect x="22.6978%" y="757" width="0.5837%" height="15" fill="rgb(237,140,51)"/><text x="22.9478%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.58%)</title><rect x="22.6978%" y="741" width="0.5837%" height="15" fill="rgb(236,157,25)"/><text x="22.9478%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.58%)</title><rect x="22.6978%" y="725" width="0.5837%" height="15" fill="rgb(219,209,0)"/><text x="22.9478%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (9 samples, 0.58%)</title><rect x="22.6978%" y="709" width="0.5837%" height="15" fill="rgb(240,116,54)"/><text x="22.9478%" y="719.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (9 samples, 0.58%)</title><rect x="22.6978%" y="693" width="0.5837%" height="15" fill="rgb(216,10,36)"/><text x="22.9478%" y="703.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (9 samples, 0.58%)</title><rect x="22.6978%" y="677" width="0.5837%" height="15" fill="rgb(222,72,44)"/><text x="22.9478%" y="687.50"></text></g><g><title>cswap::parser::SExp::to_string (9 samples, 0.58%)</title><rect x="22.6978%" y="661" width="0.5837%" height="15" fill="rgb(232,159,9)"/><text x="22.9478%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.58%)</title><rect x="22.6978%" y="645" width="0.5837%" height="15" fill="rgb(210,39,32)"/><text x="22.9478%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="22.6978%" y="629" width="0.5837%" height="15" fill="rgb(216,194,45)"/><text x="22.9478%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="22.6978%" y="613" width="0.5837%" height="15" fill="rgb(218,18,35)"/><text x="22.9478%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.58%)</title><rect x="22.6978%" y="597" width="0.5837%" height="15" fill="rgb(207,83,51)"/><text x="22.9478%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.45%)</title><rect x="22.8275%" y="581" width="0.4540%" height="15" fill="rgb(225,63,43)"/><text x="23.0775%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.45%)</title><rect x="22.8275%" y="565" width="0.4540%" height="15" fill="rgb(207,57,36)"/><text x="23.0775%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.45%)</title><rect x="22.8275%" y="549" width="0.4540%" height="15" fill="rgb(216,99,33)"/><text x="23.0775%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.45%)</title><rect x="22.8275%" y="533" width="0.4540%" height="15" fill="rgb(225,42,16)"/><text x="23.0775%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.45%)</title><rect x="22.8275%" y="517" width="0.4540%" height="15" fill="rgb(220,201,45)"/><text x="23.0775%" y="527.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="1093" width="0.1946%" height="15" fill="rgb(225,33,4)"/><text x="23.5315%" y="1103.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="23.2815%" y="1077" width="0.1946%" height="15" fill="rgb(224,33,50)"/><text x="23.5315%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="23.2815%" y="1061" width="0.1946%" height="15" fill="rgb(246,198,51)"/><text x="23.5315%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="23.2815%" y="1045" width="0.1946%" height="15" fill="rgb(205,22,4)"/><text x="23.5315%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="23.2815%" y="1029" width="0.1946%" height="15" fill="rgb(206,3,8)"/><text x="23.5315%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="23.2815%" y="1013" width="0.1946%" height="15" fill="rgb(251,23,15)"/><text x="23.5315%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="23.2815%" y="997" width="0.1946%" height="15" fill="rgb(252,88,28)"/><text x="23.5315%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="981" width="0.1946%" height="15" fill="rgb(212,127,14)"/><text x="23.5315%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="965" width="0.1946%" height="15" fill="rgb(247,145,37)"/><text x="23.5315%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="949" width="0.1946%" height="15" fill="rgb(209,117,53)"/><text x="23.5315%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="23.2815%" y="933" width="0.1946%" height="15" fill="rgb(212,90,42)"/><text x="23.5315%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="917" width="0.1946%" height="15" fill="rgb(218,164,37)"/><text x="23.5315%" y="927.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="901" width="0.1946%" height="15" fill="rgb(246,65,34)"/><text x="23.5315%" y="911.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="885" width="0.1946%" height="15" fill="rgb(231,100,33)"/><text x="23.5315%" y="895.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="23.2815%" y="869" width="0.1946%" height="15" fill="rgb(228,126,14)"/><text x="23.5315%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="23.2815%" y="853" width="0.1946%" height="15" fill="rgb(215,173,21)"/><text x="23.5315%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="23.2815%" y="837" width="0.1946%" height="15" fill="rgb(210,6,40)"/><text x="23.5315%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="23.2815%" y="821" width="0.1946%" height="15" fill="rgb(212,48,18)"/><text x="23.5315%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="23.2815%" y="805" width="0.1946%" height="15" fill="rgb(230,214,11)"/><text x="23.5315%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="23.2815%" y="789" width="0.1946%" height="15" fill="rgb(254,105,39)"/><text x="23.5315%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="773" width="0.1946%" height="15" fill="rgb(245,158,5)"/><text x="23.5315%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="757" width="0.1946%" height="15" fill="rgb(249,208,11)"/><text x="23.5315%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="741" width="0.1946%" height="15" fill="rgb(210,39,28)"/><text x="23.5315%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="23.2815%" y="725" width="0.1946%" height="15" fill="rgb(211,56,53)"/><text x="23.5315%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="709" width="0.1946%" height="15" fill="rgb(226,201,30)"/><text x="23.5315%" y="719.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="693" width="0.1946%" height="15" fill="rgb(239,101,34)"/><text x="23.5315%" y="703.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="677" width="0.1946%" height="15" fill="rgb(226,209,5)"/><text x="23.5315%" y="687.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="23.2815%" y="661" width="0.1946%" height="15" fill="rgb(250,105,47)"/><text x="23.5315%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="23.2815%" y="645" width="0.1946%" height="15" fill="rgb(230,72,3)"/><text x="23.5315%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="23.2815%" y="629" width="0.1946%" height="15" fill="rgb(232,218,39)"/><text x="23.5315%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="23.2815%" y="613" width="0.1946%" height="15" fill="rgb(248,166,6)"/><text x="23.5315%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="23.2815%" y="597" width="0.1946%" height="15" fill="rgb(247,89,20)"/><text x="23.5315%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="23.2815%" y="581" width="0.1946%" height="15" fill="rgb(248,130,54)"/><text x="23.5315%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="565" width="0.1946%" height="15" fill="rgb(234,196,4)"/><text x="23.5315%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="549" width="0.1946%" height="15" fill="rgb(250,143,31)"/><text x="23.5315%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="23.2815%" y="533" width="0.1946%" height="15" fill="rgb(211,110,34)"/><text x="23.5315%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="23.2815%" y="517" width="0.1946%" height="15" fill="rgb(215,124,48)"/><text x="23.5315%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="501" width="0.1946%" height="15" fill="rgb(216,46,13)"/><text x="23.5315%" y="511.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="23.2815%" y="485" width="0.1946%" height="15" fill="rgb(205,184,25)"/><text x="23.5315%" y="495.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="23.3463%" y="469" width="0.1297%" height="15" fill="rgb(228,1,10)"/><text x="23.5963%" y="479.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (2 samples, 0.13%)</title><rect x="23.3463%" y="453" width="0.1297%" height="15" fill="rgb(213,116,27)"/><text x="23.5963%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (2 samples, 0.13%)</title><rect x="23.3463%" y="437" width="0.1297%" height="15" fill="rgb(241,95,50)"/><text x="23.5963%" y="447.50"></text></g><g><title>core::cell::BorrowRef::new (2 samples, 0.13%)</title><rect x="23.3463%" y="421" width="0.1297%" height="15" fill="rgb(238,48,32)"/><text x="23.5963%" y="431.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="23.5409%" y="613" width="0.1297%" height="15" fill="rgb(235,113,49)"/><text x="23.7909%" y="623.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (3 samples, 0.19%)</title><rect x="23.6706%" y="613" width="0.1946%" height="15" fill="rgb(205,127,43)"/><text x="23.9206%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (3 samples, 0.19%)</title><rect x="23.6706%" y="597" width="0.1946%" height="15" fill="rgb(250,162,2)"/><text x="23.9206%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.19%)</title><rect x="23.6706%" y="581" width="0.1946%" height="15" fill="rgb(220,13,41)"/><text x="23.9206%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (10 samples, 0.65%)</title><rect x="23.4760%" y="661" width="0.6485%" height="15" fill="rgb(249,221,25)"/><text x="23.7260%" y="671.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (10 samples, 0.65%)</title><rect x="23.4760%" y="645" width="0.6485%" height="15" fill="rgb(215,208,19)"/><text x="23.7260%" y="655.50"></text></g><g><title>alloc::str::join_generic_copy (10 samples, 0.65%)</title><rect x="23.4760%" y="629" width="0.6485%" height="15" fill="rgb(236,175,2)"/><text x="23.7260%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (2 samples, 0.13%)</title><rect x="23.9948%" y="613" width="0.1297%" height="15" fill="rgb(241,52,2)"/><text x="24.2448%" y="623.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (2 samples, 0.13%)</title><rect x="24.1245%" y="469" width="0.1297%" height="15" fill="rgb(248,140,14)"/><text x="24.3745%" y="479.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (2 samples, 0.13%)</title><rect x="24.1245%" y="453" width="0.1297%" height="15" fill="rgb(253,22,42)"/><text x="24.3745%" y="463.50"></text></g><g><title>core::cell::BorrowRef::new (2 samples, 0.13%)</title><rect x="24.1245%" y="437" width="0.1297%" height="15" fill="rgb(234,61,47)"/><text x="24.3745%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.13%)</title><rect x="24.1245%" y="421" width="0.1297%" height="15" fill="rgb(208,226,15)"/><text x="24.3745%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.13%)</title><rect x="24.1245%" y="405" width="0.1297%" height="15" fill="rgb(217,221,4)"/><text x="24.3745%" y="415.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="24.3839%" y="453" width="0.1297%" height="15" fill="rgb(212,174,34)"/><text x="24.6339%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="24.3839%" y="437" width="0.1297%" height="15" fill="rgb(253,83,4)"/><text x="24.6339%" y="447.50"></text></g><g><title>cswap::parser::SExp::to_string (17 samples, 1.10%)</title><rect x="23.4760%" y="1093" width="1.1025%" height="15" fill="rgb(250,195,49)"/><text x="23.7260%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 1.10%)</title><rect x="23.4760%" y="1077" width="1.1025%" height="15" fill="rgb(241,192,25)"/><text x="23.7260%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 1.10%)</title><rect x="23.4760%" y="1061" width="1.1025%" height="15" fill="rgb(208,124,10)"/><text x="23.7260%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (17 samples, 1.10%)</title><rect x="23.4760%" y="1045" width="1.1025%" height="15" fill="rgb(222,33,0)"/><text x="23.7260%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 1.10%)</title><rect x="23.4760%" y="1029" width="1.1025%" height="15" fill="rgb(234,209,28)"/><text x="23.7260%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 1.10%)</title><rect x="23.4760%" y="1013" width="1.1025%" height="15" fill="rgb(224,11,23)"/><text x="23.7260%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.10%)</title><rect x="23.4760%" y="997" width="1.1025%" height="15" fill="rgb(232,99,1)"/><text x="23.7260%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.10%)</title><rect x="23.4760%" y="981" width="1.1025%" height="15" fill="rgb(237,95,45)"/><text x="23.7260%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 1.10%)</title><rect x="23.4760%" y="965" width="1.1025%" height="15" fill="rgb(208,109,11)"/><text x="23.7260%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 1.10%)</title><rect x="23.4760%" y="949" width="1.1025%" height="15" fill="rgb(216,190,48)"/><text x="23.7260%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (17 samples, 1.10%)</title><rect x="23.4760%" y="933" width="1.1025%" height="15" fill="rgb(251,171,36)"/><text x="23.7260%" y="943.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (17 samples, 1.10%)</title><rect x="23.4760%" y="917" width="1.1025%" height="15" fill="rgb(230,62,22)"/><text x="23.7260%" y="927.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (17 samples, 1.10%)</title><rect x="23.4760%" y="901" width="1.1025%" height="15" fill="rgb(225,114,35)"/><text x="23.7260%" y="911.50"></text></g><g><title>cswap::parser::SExp::to_string (17 samples, 1.10%)</title><rect x="23.4760%" y="885" width="1.1025%" height="15" fill="rgb(215,118,42)"/><text x="23.7260%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 1.10%)</title><rect x="23.4760%" y="869" width="1.1025%" height="15" fill="rgb(243,119,21)"/><text x="23.7260%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 1.10%)</title><rect x="23.4760%" y="853" width="1.1025%" height="15" fill="rgb(252,177,53)"/><text x="23.7260%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (17 samples, 1.10%)</title><rect x="23.4760%" y="837" width="1.1025%" height="15" fill="rgb(237,209,29)"/><text x="23.7260%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 1.10%)</title><rect x="23.4760%" y="821" width="1.1025%" height="15" fill="rgb(212,65,23)"/><text x="23.7260%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 1.10%)</title><rect x="23.4760%" y="805" width="1.1025%" height="15" fill="rgb(230,222,46)"/><text x="23.7260%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.10%)</title><rect x="23.4760%" y="789" width="1.1025%" height="15" fill="rgb(215,135,32)"/><text x="23.7260%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 1.10%)</title><rect x="23.4760%" y="773" width="1.1025%" height="15" fill="rgb(246,101,22)"/><text x="23.7260%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 1.10%)</title><rect x="23.4760%" y="757" width="1.1025%" height="15" fill="rgb(206,107,13)"/><text x="23.7260%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 1.10%)</title><rect x="23.4760%" y="741" width="1.1025%" height="15" fill="rgb(250,100,44)"/><text x="23.7260%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (17 samples, 1.10%)</title><rect x="23.4760%" y="725" width="1.1025%" height="15" fill="rgb(231,147,38)"/><text x="23.7260%" y="735.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (17 samples, 1.10%)</title><rect x="23.4760%" y="709" width="1.1025%" height="15" fill="rgb(229,8,40)"/><text x="23.7260%" y="719.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (17 samples, 1.10%)</title><rect x="23.4760%" y="693" width="1.1025%" height="15" fill="rgb(221,135,30)"/><text x="23.7260%" y="703.50"></text></g><g><title>cswap::parser::SExp::to_string (17 samples, 1.10%)</title><rect x="23.4760%" y="677" width="1.1025%" height="15" fill="rgb(249,193,18)"/><text x="23.7260%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.45%)</title><rect x="24.1245%" y="661" width="0.4540%" height="15" fill="rgb(209,133,39)"/><text x="24.3745%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.45%)</title><rect x="24.1245%" y="645" width="0.4540%" height="15" fill="rgb(232,100,14)"/><text x="24.3745%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (7 samples, 0.45%)</title><rect x="24.1245%" y="629" width="0.4540%" height="15" fill="rgb(224,185,1)"/><text x="24.3745%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.45%)</title><rect x="24.1245%" y="613" width="0.4540%" height="15" fill="rgb(223,139,8)"/><text x="24.3745%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.45%)</title><rect x="24.1245%" y="597" width="0.4540%" height="15" fill="rgb(232,213,38)"/><text x="24.3745%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.45%)</title><rect x="24.1245%" y="581" width="0.4540%" height="15" fill="rgb(207,94,22)"/><text x="24.3745%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.45%)</title><rect x="24.1245%" y="565" width="0.4540%" height="15" fill="rgb(219,183,54)"/><text x="24.3745%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.45%)</title><rect x="24.1245%" y="549" width="0.4540%" height="15" fill="rgb(216,185,54)"/><text x="24.3745%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.45%)</title><rect x="24.1245%" y="533" width="0.4540%" height="15" fill="rgb(254,217,39)"/><text x="24.3745%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (7 samples, 0.45%)</title><rect x="24.1245%" y="517" width="0.4540%" height="15" fill="rgb(240,178,23)"/><text x="24.3745%" y="527.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (7 samples, 0.45%)</title><rect x="24.1245%" y="501" width="0.4540%" height="15" fill="rgb(218,11,47)"/><text x="24.3745%" y="511.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (7 samples, 0.45%)</title><rect x="24.1245%" y="485" width="0.4540%" height="15" fill="rgb(218,51,51)"/><text x="24.3745%" y="495.50"></text></g><g><title>cswap::parser::SExp::to_string (5 samples, 0.32%)</title><rect x="24.2542%" y="469" width="0.3243%" height="15" fill="rgb(238,126,27)"/><text x="24.5042%" y="479.50"></text></g><g><title>cswap::parser::bool_core_ops (5 samples, 0.32%)</title><rect x="24.5785%" y="965" width="0.3243%" height="15" fill="rgb(249,202,22)"/><text x="24.8285%" y="975.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (5 samples, 0.32%)</title><rect x="24.5785%" y="949" width="0.3243%" height="15" fill="rgb(254,195,49)"/><text x="24.8285%" y="959.50"></text></g><g><title>nom::branch::alt::_{{closure}} (5 samples, 0.32%)</title><rect x="24.5785%" y="933" width="0.3243%" height="15" fill="rgb(208,123,14)"/><text x="24.8285%" y="943.50"></text></g><g><title>&lt; (5 samples, 0.32%)</title><rect x="24.5785%" y="917" width="0.3243%" height="15" fill="rgb(224,200,8)"/><text x="24.8285%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (5 samples, 0.32%)</title><rect x="24.5785%" y="901" width="0.3243%" height="15" fill="rgb(217,61,36)"/><text x="24.8285%" y="911.50"></text></g><g><title>&lt; (5 samples, 0.32%)</title><rect x="24.5785%" y="885" width="0.3243%" height="15" fill="rgb(206,35,45)"/><text x="24.8285%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.45%)</title><rect x="24.5785%" y="981" width="0.4540%" height="15" fill="rgb(217,65,33)"/><text x="24.8285%" y="991.50"></text></g><g><title>cswap::parser::bool_int_ops (2 samples, 0.13%)</title><rect x="24.9027%" y="965" width="0.1297%" height="15" fill="rgb(222,158,48)"/><text x="25.1527%" y="975.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.13%)</title><rect x="24.9027%" y="949" width="0.1297%" height="15" fill="rgb(254,2,54)"/><text x="25.1527%" y="959.50"></text></g><g><title>nom::branch::alt::_{{closure}} (2 samples, 0.13%)</title><rect x="24.9027%" y="933" width="0.1297%" height="15" fill="rgb(250,143,38)"/><text x="25.1527%" y="943.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="24.9027%" y="917" width="0.1297%" height="15" fill="rgb(248,25,0)"/><text x="25.1527%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (2 samples, 0.13%)</title><rect x="24.9027%" y="901" width="0.1297%" height="15" fill="rgb(206,152,27)"/><text x="25.1527%" y="911.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="24.9027%" y="885" width="0.1297%" height="15" fill="rgb(240,77,30)"/><text x="25.1527%" y="895.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="24.9027%" y="869" width="0.1297%" height="15" fill="rgb(231,5,3)"/><text x="25.1527%" y="879.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (2 samples, 0.13%)</title><rect x="24.9027%" y="853" width="0.1297%" height="15" fill="rgb(207,226,32)"/><text x="25.1527%" y="863.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (2 samples, 0.13%)</title><rect x="24.9027%" y="837" width="0.1297%" height="15" fill="rgb(222,207,47)"/><text x="25.1527%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2 samples, 0.13%)</title><rect x="24.9027%" y="821" width="0.1297%" height="15" fill="rgb(229,115,45)"/><text x="25.1527%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="24.9027%" y="805" width="0.1297%" height="15" fill="rgb(224,191,6)"/><text x="25.1527%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="24.9027%" y="789" width="0.1297%" height="15" fill="rgb(230,227,24)"/><text x="25.1527%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.13%)</title><rect x="24.9027%" y="773" width="0.1297%" height="15" fill="rgb(228,80,19)"/><text x="25.1527%" y="783.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="24.9027%" y="757" width="0.1297%" height="15" fill="rgb(247,229,0)"/><text x="25.1527%" y="767.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="25.0324%" y="901" width="0.1297%" height="15" fill="rgb(237,194,15)"/><text x="25.2824%" y="911.50"></text></g><g><title>cswap::parser::sexp::_{{closure}} (2 samples, 0.13%)</title><rect x="25.0324%" y="885" width="0.1297%" height="15" fill="rgb(219,203,20)"/><text x="25.2824%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.13%)</title><rect x="25.0324%" y="869" width="0.1297%" height="15" fill="rgb(234,128,8)"/><text x="25.2824%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.13%)</title><rect x="25.0324%" y="853" width="0.1297%" height="15" fill="rgb(248,202,8)"/><text x="25.2824%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.13%)</title><rect x="25.0324%" y="837" width="0.1297%" height="15" fill="rgb(206,104,37)"/><text x="25.2824%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.13%)</title><rect x="25.0324%" y="821" width="0.1297%" height="15" fill="rgb(223,8,27)"/><text x="25.2824%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.13%)</title><rect x="25.0324%" y="805" width="0.1297%" height="15" fill="rgb(216,217,28)"/><text x="25.2824%" y="815.50"></text></g><g><title>cswap::parser::bool_sexp (10 samples, 0.65%)</title><rect x="24.5785%" y="1093" width="0.6485%" height="15" fill="rgb(249,199,1)"/><text x="24.8285%" y="1103.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (10 samples, 0.65%)</title><rect x="24.5785%" y="1077" width="0.6485%" height="15" fill="rgb(240,85,17)"/><text x="24.8285%" y="1087.50"></text></g><g><title>nom::branch::alt::_{{closure}} (10 samples, 0.65%)</title><rect x="24.5785%" y="1061" width="0.6485%" height="15" fill="rgb(206,108,45)"/><text x="24.8285%" y="1071.50"></text></g><g><title>&lt; (10 samples, 0.65%)</title><rect x="24.5785%" y="1045" width="0.6485%" height="15" fill="rgb(245,210,41)"/><text x="24.8285%" y="1055.50"></text></g><g><title>nom::combinator::map::_{{closure}} (10 samples, 0.65%)</title><rect x="24.5785%" y="1029" width="0.6485%" height="15" fill="rgb(206,13,37)"/><text x="24.8285%" y="1039.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (10 samples, 0.65%)</title><rect x="24.5785%" y="1013" width="0.6485%" height="15" fill="rgb(250,61,18)"/><text x="24.8285%" y="1023.50"></text></g><g><title>&lt; (10 samples, 0.65%)</title><rect x="24.5785%" y="997" width="0.6485%" height="15" fill="rgb(235,172,48)"/><text x="24.8285%" y="1007.50"></text></g><g><title>nom::multi::many1::_{{closure}} (3 samples, 0.19%)</title><rect x="25.0324%" y="981" width="0.1946%" height="15" fill="rgb(249,201,17)"/><text x="25.2824%" y="991.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.19%)</title><rect x="25.0324%" y="965" width="0.1946%" height="15" fill="rgb(219,208,6)"/><text x="25.2824%" y="975.50"></text></g><g><title>cswap::parser::sexp (3 samples, 0.19%)</title><rect x="25.0324%" y="949" width="0.1946%" height="15" fill="rgb(248,31,23)"/><text x="25.2824%" y="959.50"></text></g><g><title>nom::branch::alt::_{{closure}} (3 samples, 0.19%)</title><rect x="25.0324%" y="933" width="0.1946%" height="15" fill="rgb(245,15,42)"/><text x="25.2824%" y="943.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="25.0324%" y="917" width="0.1946%" height="15" fill="rgb(222,217,39)"/><text x="25.2824%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.13%)</title><rect x="25.5512%" y="869" width="0.1297%" height="15" fill="rgb(210,219,27)"/><text x="25.8012%" y="879.50"></text></g><g><title>cswap::parser::constant (6 samples, 0.39%)</title><rect x="25.3567%" y="997" width="0.3891%" height="15" fill="rgb(252,166,36)"/><text x="25.6067%" y="1007.50"></text></g><g><title>nom::branch::alt::_{{closure}} (6 samples, 0.39%)</title><rect x="25.3567%" y="981" width="0.3891%" height="15" fill="rgb(245,132,34)"/><text x="25.6067%" y="991.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="25.3567%" y="965" width="0.3891%" height="15" fill="rgb(236,54,3)"/><text x="25.6067%" y="975.50"></text></g><g><title>nom::combinator::map::_{{closure}} (6 samples, 0.39%)</title><rect x="25.3567%" y="949" width="0.3891%" height="15" fill="rgb(241,173,43)"/><text x="25.6067%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.39%)</title><rect x="25.3567%" y="933" width="0.3891%" height="15" fill="rgb(215,190,9)"/><text x="25.6067%" y="943.50"></text></g><g><title>cswap::parser::bin (6 samples, 0.39%)</title><rect x="25.3567%" y="917" width="0.3891%" height="15" fill="rgb(242,101,16)"/><text x="25.6067%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (6 samples, 0.39%)</title><rect x="25.3567%" y="901" width="0.3891%" height="15" fill="rgb(223,190,21)"/><text x="25.6067%" y="911.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="25.3567%" y="885" width="0.3891%" height="15" fill="rgb(215,228,25)"/><text x="25.6067%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.52%)</title><rect x="25.3567%" y="1013" width="0.5188%" height="15" fill="rgb(225,36,22)"/><text x="25.6067%" y="1023.50"></text></g><g><title>cswap::parser::let_sexp (2 samples, 0.13%)</title><rect x="25.7458%" y="997" width="0.1297%" height="15" fill="rgb(251,106,46)"/><text x="25.9958%" y="1007.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="25.7458%" y="981" width="0.1297%" height="15" fill="rgb(208,90,1)"/><text x="25.9958%" y="991.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.13%)</title><rect x="25.7458%" y="965" width="0.1297%" height="15" fill="rgb(243,10,4)"/><text x="25.9958%" y="975.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.13%)</title><rect x="25.7458%" y="949" width="0.1297%" height="15" fill="rgb(212,137,27)"/><text x="25.9958%" y="959.50"></text></g><g><title>nom::combinator::map::_{{closure}} (9 samples, 0.58%)</title><rect x="25.3567%" y="1045" width="0.5837%" height="15" fill="rgb(231,220,49)"/><text x="25.6067%" y="1055.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (9 samples, 0.58%)</title><rect x="25.3567%" y="1029" width="0.5837%" height="15" fill="rgb(237,96,20)"/><text x="25.6067%" y="1039.50"></text></g><g><title>cswap::parser::sexp (12 samples, 0.78%)</title><rect x="25.3567%" y="1093" width="0.7782%" height="15" fill="rgb(239,229,30)"/><text x="25.6067%" y="1103.50"></text></g><g><title>nom::branch::alt::_{{closure}} (12 samples, 0.78%)</title><rect x="25.3567%" y="1077" width="0.7782%" height="15" fill="rgb(219,65,33)"/><text x="25.6067%" y="1087.50"></text></g><g><title>&lt; (12 samples, 0.78%)</title><rect x="25.3567%" y="1061" width="0.7782%" height="15" fill="rgb(243,134,7)"/><text x="25.6067%" y="1071.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (3 samples, 0.19%)</title><rect x="25.9403%" y="1045" width="0.1946%" height="15" fill="rgb(216,177,54)"/><text x="26.1903%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.19%)</title><rect x="25.9403%" y="1029" width="0.1946%" height="15" fill="rgb(211,160,20)"/><text x="26.1903%" y="1039.50"></text></g><g><title>cswap::parser::bool_sexp (3 samples, 0.19%)</title><rect x="25.9403%" y="1013" width="0.1946%" height="15" fill="rgb(239,85,39)"/><text x="26.1903%" y="1023.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (3 samples, 0.19%)</title><rect x="25.9403%" y="997" width="0.1946%" height="15" fill="rgb(232,125,22)"/><text x="26.1903%" y="1007.50"></text></g><g><title>nom::branch::alt::_{{closure}} (3 samples, 0.19%)</title><rect x="25.9403%" y="981" width="0.1946%" height="15" fill="rgb(244,57,34)"/><text x="26.1903%" y="991.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="25.9403%" y="965" width="0.1946%" height="15" fill="rgb(214,203,32)"/><text x="26.1903%" y="975.50"></text></g><g><title>nom::combinator::map::_{{closure}} (3 samples, 0.19%)</title><rect x="25.9403%" y="949" width="0.1946%" height="15" fill="rgb(207,58,43)"/><text x="26.1903%" y="959.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (3 samples, 0.19%)</title><rect x="25.9403%" y="933" width="0.1946%" height="15" fill="rgb(215,193,15)"/><text x="26.1903%" y="943.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="25.9403%" y="917" width="0.1946%" height="15" fill="rgb(232,15,44)"/><text x="26.1903%" y="927.50"></text></g><g><title>nom::multi::many1::_{{closure}} (2 samples, 0.13%)</title><rect x="26.0052%" y="901" width="0.1297%" height="15" fill="rgb(212,3,48)"/><text x="26.2552%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.13%)</title><rect x="26.0052%" y="885" width="0.1297%" height="15" fill="rgb(218,128,7)"/><text x="26.2552%" y="895.50"></text></g><g><title>cswap::parser::sexp (2 samples, 0.13%)</title><rect x="26.0052%" y="869" width="0.1297%" height="15" fill="rgb(226,216,39)"/><text x="26.2552%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.13%)</title><rect x="26.1349%" y="645" width="0.1297%" height="15" fill="rgb(243,47,51)"/><text x="26.3849%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="26.1349%" y="629" width="0.1297%" height="15" fill="rgb(241,183,40)"/><text x="26.3849%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (2 samples, 0.13%)</title><rect x="26.1349%" y="613" width="0.1297%" height="15" fill="rgb(231,217,32)"/><text x="26.3849%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="26.1349%" y="597" width="0.1297%" height="15" fill="rgb(229,61,38)"/><text x="26.3849%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="26.1349%" y="581" width="0.1297%" height="15" fill="rgb(225,210,5)"/><text x="26.3849%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="26.1349%" y="565" width="0.1297%" height="15" fill="rgb(231,79,45)"/><text x="26.3849%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="26.1349%" y="549" width="0.1297%" height="15" fill="rgb(224,100,7)"/><text x="26.3849%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="26.1349%" y="533" width="0.1297%" height="15" fill="rgb(241,198,18)"/><text x="26.3849%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="26.1349%" y="517" width="0.1297%" height="15" fill="rgb(252,97,53)"/><text x="26.3849%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="26.1349%" y="501" width="0.1297%" height="15" fill="rgb(220,88,7)"/><text x="26.3849%" y="511.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="26.1349%" y="485" width="0.1297%" height="15" fill="rgb(213,176,14)"/><text x="26.3849%" y="495.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (2 samples, 0.13%)</title><rect x="26.1349%" y="469" width="0.1297%" height="15" fill="rgb(246,73,7)"/><text x="26.3849%" y="479.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (2 samples, 0.13%)</title><rect x="26.1349%" y="453" width="0.1297%" height="15" fill="rgb(245,64,36)"/><text x="26.3849%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (2 samples, 0.13%)</title><rect x="26.1349%" y="437" width="0.1297%" height="15" fill="rgb(245,80,10)"/><text x="26.3849%" y="447.50"></text></g><g><title>core::cell::BorrowRef::new (2 samples, 0.13%)</title><rect x="26.1349%" y="421" width="0.1297%" height="15" fill="rgb(232,107,50)"/><text x="26.3849%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.13%)</title><rect x="26.1349%" y="405" width="0.1297%" height="15" fill="rgb(253,3,0)"/><text x="26.3849%" y="415.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.13%)</title><rect x="26.1349%" y="389" width="0.1297%" height="15" fill="rgb(212,99,53)"/><text x="26.3849%" y="399.50"></text></g><g><title>cswap::parser::Script::to_string (3 samples, 0.19%)</title><rect x="26.1349%" y="1077" width="0.1946%" height="15" fill="rgb(249,111,54)"/><text x="26.3849%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="26.1349%" y="1061" width="0.1946%" height="15" fill="rgb(249,55,30)"/><text x="26.3849%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="26.1349%" y="1045" width="0.1946%" height="15" fill="rgb(237,47,42)"/><text x="26.3849%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="26.1349%" y="1029" width="0.1946%" height="15" fill="rgb(211,20,18)"/><text x="26.3849%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="26.1349%" y="1013" width="0.1946%" height="15" fill="rgb(231,203,46)"/><text x="26.3849%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="26.1349%" y="997" width="0.1946%" height="15" fill="rgb(237,142,3)"/><text x="26.3849%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="26.1349%" y="981" width="0.1946%" height="15" fill="rgb(241,107,1)"/><text x="26.3849%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="26.1349%" y="965" width="0.1946%" height="15" fill="rgb(229,83,13)"/><text x="26.3849%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="26.1349%" y="949" width="0.1946%" height="15" fill="rgb(241,91,40)"/><text x="26.3849%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="26.1349%" y="933" width="0.1946%" height="15" fill="rgb(225,3,45)"/><text x="26.3849%" y="943.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="26.1349%" y="917" width="0.1946%" height="15" fill="rgb(244,223,14)"/><text x="26.3849%" y="927.50"></text></g><g><title>cswap::parser::Script::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="26.1349%" y="901" width="0.1946%" height="15" fill="rgb(224,124,37)"/><text x="26.3849%" y="911.50"></text></g><g><title>cswap::parser::Command::to_string (3 samples, 0.19%)</title><rect x="26.1349%" y="885" width="0.1946%" height="15" fill="rgb(251,171,30)"/><text x="26.3849%" y="895.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="26.1349%" y="869" width="0.1946%" height="15" fill="rgb(236,46,54)"/><text x="26.3849%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="26.1349%" y="853" width="0.1946%" height="15" fill="rgb(245,213,5)"/><text x="26.3849%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="26.1349%" y="837" width="0.1946%" height="15" fill="rgb(230,144,27)"/><text x="26.3849%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="26.1349%" y="821" width="0.1946%" height="15" fill="rgb(220,86,6)"/><text x="26.3849%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.19%)</title><rect x="26.1349%" y="805" width="0.1946%" height="15" fill="rgb(240,20,13)"/><text x="26.3849%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="26.1349%" y="789" width="0.1946%" height="15" fill="rgb(217,89,34)"/><text x="26.3849%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="26.1349%" y="773" width="0.1946%" height="15" fill="rgb(229,13,5)"/><text x="26.3849%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="26.1349%" y="757" width="0.1946%" height="15" fill="rgb(244,67,35)"/><text x="26.3849%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="26.1349%" y="741" width="0.1946%" height="15" fill="rgb(221,40,2)"/><text x="26.3849%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.19%)</title><rect x="26.1349%" y="725" width="0.1946%" height="15" fill="rgb(237,157,21)"/><text x="26.3849%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (3 samples, 0.19%)</title><rect x="26.1349%" y="709" width="0.1946%" height="15" fill="rgb(222,94,11)"/><text x="26.3849%" y="719.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (3 samples, 0.19%)</title><rect x="26.1349%" y="693" width="0.1946%" height="15" fill="rgb(249,113,6)"/><text x="26.3849%" y="703.50"></text></g><g><title>cswap::parser::SExp::to_string::_{{closure}} (3 samples, 0.19%)</title><rect x="26.1349%" y="677" width="0.1946%" height="15" fill="rgb(238,137,36)"/><text x="26.3849%" y="687.50"></text></g><g><title>cswap::parser::SExp::to_string (3 samples, 0.19%)</title><rect x="26.1349%" y="661" width="0.1946%" height="15" fill="rgb(210,102,26)"/><text x="26.3849%" y="671.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.13%)</title><rect x="26.3294%" y="933" width="0.1297%" height="15" fill="rgb(218,30,30)"/><text x="26.5794%" y="943.50"></text></g><g><title>cswap::parser::unknown_balanced (2 samples, 0.13%)</title><rect x="26.3294%" y="917" width="0.1297%" height="15" fill="rgb(214,67,26)"/><text x="26.5794%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (2 samples, 0.13%)</title><rect x="26.3294%" y="901" width="0.1297%" height="15" fill="rgb(251,9,53)"/><text x="26.5794%" y="911.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="26.3294%" y="885" width="0.1297%" height="15" fill="rgb(228,204,25)"/><text x="26.5794%" y="895.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="26.3294%" y="869" width="0.1297%" height="15" fill="rgb(207,153,8)"/><text x="26.5794%" y="879.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (2 samples, 0.13%)</title><rect x="26.3294%" y="853" width="0.1297%" height="15" fill="rgb(242,9,16)"/><text x="26.5794%" y="863.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="26.3294%" y="837" width="0.1297%" height="15" fill="rgb(217,211,10)"/><text x="26.5794%" y="847.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (2 samples, 0.13%)</title><rect x="26.3294%" y="821" width="0.1297%" height="15" fill="rgb(219,228,52)"/><text x="26.5794%" y="831.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputIter&gt;::iter_elements (2 samples, 0.13%)</title><rect x="26.3294%" y="805" width="0.1297%" height="15" fill="rgb(231,92,29)"/><text x="26.5794%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.13%)</title><rect x="26.3294%" y="789" width="0.1297%" height="15" fill="rgb(232,8,23)"/><text x="26.5794%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (2 samples, 0.13%)</title><rect x="26.4591%" y="885" width="0.1297%" height="15" fill="rgb(216,211,34)"/><text x="26.7091%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.13%)</title><rect x="26.4591%" y="869" width="0.1297%" height="15" fill="rgb(236,151,0)"/><text x="26.7091%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.13%)</title><rect x="26.4591%" y="853" width="0.1297%" height="15" fill="rgb(209,168,3)"/><text x="26.7091%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.13%)</title><rect x="26.4591%" y="837" width="0.1297%" height="15" fill="rgb(208,129,28)"/><text x="26.7091%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="26.4591%" y="821" width="0.1297%" height="15" fill="rgb(229,78,22)"/><text x="26.7091%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (2 samples, 0.13%)</title><rect x="26.4591%" y="805" width="0.1297%" height="15" fill="rgb(228,187,13)"/><text x="26.7091%" y="815.50"></text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (2 samples, 0.13%)</title><rect x="26.4591%" y="789" width="0.1297%" height="15" fill="rgb(240,119,24)"/><text x="26.7091%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2 samples, 0.13%)</title><rect x="26.4591%" y="773" width="0.1297%" height="15" fill="rgb(209,194,42)"/><text x="26.7091%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::_{{closure}} (2 samples, 0.13%)</title><rect x="26.4591%" y="757" width="0.1297%" height="15" fill="rgb(247,200,46)"/><text x="26.7091%" y="767.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.13%)</title><rect x="26.4591%" y="741" width="0.1297%" height="15" fill="rgb(218,76,16)"/><text x="26.7091%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.13%)</title><rect x="26.4591%" y="725" width="0.1297%" height="15" fill="rgb(225,21,48)"/><text x="26.7091%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.13%)</title><rect x="26.4591%" y="709" width="0.1297%" height="15" fill="rgb(239,223,50)"/><text x="26.7091%" y="719.50"></text></g><g><title>nom::combinator::map::_{{closure}} (5 samples, 0.32%)</title><rect x="26.3294%" y="949" width="0.3243%" height="15" fill="rgb(244,45,21)"/><text x="26.5794%" y="959.50"></text></g><g><title>cswap::parser::command::_{{closure}} (3 samples, 0.19%)</title><rect x="26.4591%" y="933" width="0.1946%" height="15" fill="rgb(232,33,43)"/><text x="26.7091%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.19%)</title><rect x="26.4591%" y="917" width="0.1946%" height="15" fill="rgb(209,8,3)"/><text x="26.7091%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (3 samples, 0.19%)</title><rect x="26.4591%" y="901" width="0.1946%" height="15" fill="rgb(214,25,53)"/><text x="26.7091%" y="911.50"></text></g><g><title>cswap::parser::script (6 samples, 0.39%)</title><rect x="26.3294%" y="1077" width="0.3891%" height="15" fill="rgb(254,186,54)"/><text x="26.5794%" y="1087.50"></text></g><g><title>nom::combinator::map::_{{closure}} (6 samples, 0.39%)</title><rect x="26.3294%" y="1061" width="0.3891%" height="15" fill="rgb(208,174,49)"/><text x="26.5794%" y="1071.50"></text></g><g><title>nom::multi::many0::_{{closure}} (6 samples, 0.39%)</title><rect x="26.3294%" y="1045" width="0.3891%" height="15" fill="rgb(233,191,51)"/><text x="26.5794%" y="1055.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (6 samples, 0.39%)</title><rect x="26.3294%" y="1029" width="0.3891%" height="15" fill="rgb(222,134,10)"/><text x="26.5794%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.39%)</title><rect x="26.3294%" y="1013" width="0.3891%" height="15" fill="rgb(230,226,20)"/><text x="26.5794%" y="1023.50"></text></g><g><title>cswap::parser::command (6 samples, 0.39%)</title><rect x="26.3294%" y="997" width="0.3891%" height="15" fill="rgb(251,111,25)"/><text x="26.5794%" y="1007.50"></text></g><g><title>nom::branch::alt::_{{closure}} (6 samples, 0.39%)</title><rect x="26.3294%" y="981" width="0.3891%" height="15" fill="rgb(224,40,46)"/><text x="26.5794%" y="991.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="26.3294%" y="965" width="0.3891%" height="15" fill="rgb(236,108,47)"/><text x="26.5794%" y="975.50"></text></g><g><title>cswap::perf_exec (10 samples, 0.65%)</title><rect x="26.1349%" y="1093" width="0.6485%" height="15" fill="rgb(234,93,0)"/><text x="26.3849%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.19%)</title><rect x="29.6368%" y="837" width="0.1946%" height="15" fill="rgb(224,213,32)"/><text x="29.8868%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (4 samples, 0.26%)</title><rect x="31.6472%" y="821" width="0.2594%" height="15" fill="rgb(251,11,48)"/><text x="31.8972%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (22 samples, 1.43%)</title><rect x="31.9066%" y="821" width="1.4267%" height="15" fill="rgb(236,173,5)"/><text x="32.1566%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.52%)</title><rect x="33.3333%" y="821" width="0.5188%" height="15" fill="rgb(230,95,12)"/><text x="33.5833%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (26 samples, 1.69%)</title><rect x="34.1764%" y="805" width="1.6861%" height="15" fill="rgb(232,209,1)"/><text x="34.4264%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (12 samples, 0.78%)</title><rect x="35.8625%" y="805" width="0.7782%" height="15" fill="rgb(232,6,1)"/><text x="36.1125%" y="815.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 7.91%)</title><rect x="29.8314%" y="837" width="7.9118%" height="15" fill="rgb(210,224,50)"/><text x="30.0814%" y="847.50">&lt;core::slic..</text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (60 samples, 3.89%)</title><rect x="33.8521%" y="821" width="3.8911%" height="15" fill="rgb(228,127,35)"/><text x="34.1021%" y="831.50">core..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (17 samples, 1.10%)</title><rect x="36.6407%" y="805" width="1.1025%" height="15" fill="rgb(245,102,45)"/><text x="36.8907%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.39%)</title><rect x="42.0882%" y="773" width="0.3891%" height="15" fill="rgb(214,1,49)"/><text x="42.3382%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (32 samples, 2.08%)</title><rect x="40.6615%" y="805" width="2.0752%" height="15" fill="rgb(226,163,40)"/><text x="40.9115%" y="815.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend::_{{closure}} (14 samples, 0.91%)</title><rect x="41.8288%" y="789" width="0.9079%" height="15" fill="rgb(239,212,28)"/><text x="42.0788%" y="799.50"></text></g><g><title>core::ptr::write (4 samples, 0.26%)</title><rect x="42.4773%" y="773" width="0.2594%" height="15" fill="rgb(220,20,13)"/><text x="42.7273%" y="783.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_inner (3 samples, 0.19%)</title><rect x="44.5525%" y="773" width="0.1946%" height="15" fill="rgb(210,164,35)"/><text x="44.8025%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (6 samples, 0.39%)</title><rect x="46.8872%" y="757" width="0.3891%" height="15" fill="rgb(248,109,41)"/><text x="47.1372%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.39%)</title><rect x="46.8872%" y="741" width="0.3891%" height="15" fill="rgb(238,23,50)"/><text x="47.1372%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.13%)</title><rect x="47.1466%" y="725" width="0.1297%" height="15" fill="rgb(211,48,49)"/><text x="47.3966%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (40 samples, 2.59%)</title><rect x="49.3515%" y="741" width="2.5940%" height="15" fill="rgb(223,36,21)"/><text x="49.6015%" y="751.50">&lt;a..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (33 samples, 2.14%)</title><rect x="49.8054%" y="725" width="2.1401%" height="15" fill="rgb(207,123,46)"/><text x="50.0554%" y="735.50">c..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (13 samples, 0.84%)</title><rect x="51.1025%" y="709" width="0.8431%" height="15" fill="rgb(240,218,32)"/><text x="51.3525%" y="719.50"></text></g><g><title>alloc::rc::RcBoxPtr::strong (96 samples, 6.23%)</title><rect x="47.2763%" y="757" width="6.2257%" height="15" fill="rgb(252,5,43)"/><text x="47.5263%" y="767.50">alloc::r..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (24 samples, 1.56%)</title><rect x="51.9455%" y="741" width="1.5564%" height="15" fill="rgb(252,84,19)"/><text x="52.1955%" y="751.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (8 samples, 0.52%)</title><rect x="52.9831%" y="725" width="0.5188%" height="15" fill="rgb(243,152,39)"/><text x="53.2331%" y="735.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (2 samples, 0.13%)</title><rect x="54.4099%" y="725" width="0.1297%" height="15" fill="rgb(234,160,15)"/><text x="54.6599%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.32%)</title><rect x="55.2529%" y="677" width="0.3243%" height="15" fill="rgb(237,34,20)"/><text x="55.5029%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.26%)</title><rect x="55.3178%" y="661" width="0.2594%" height="15" fill="rgb(229,97,13)"/><text x="55.5678%" y="671.50"></text></g><g><title>__memcpy_avx_unaligned (3 samples, 0.19%)</title><rect x="57.3930%" y="645" width="0.1946%" height="15" fill="rgb(234,71,50)"/><text x="57.6430%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 1.75%)</title><rect x="56.4851%" y="661" width="1.7510%" height="15" fill="rgb(253,155,4)"/><text x="56.7351%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (10 samples, 0.65%)</title><rect x="57.5875%" y="645" width="0.6485%" height="15" fill="rgb(222,185,37)"/><text x="57.8375%" y="655.50"></text></g><g><title>core::ptr::read (50 samples, 3.24%)</title><rect x="55.5772%" y="677" width="3.2425%" height="15" fill="rgb(251,177,13)"/><text x="55.8272%" y="687.50">cor..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (9 samples, 0.58%)</title><rect x="58.2361%" y="661" width="0.5837%" height="15" fill="rgb(250,179,40)"/><text x="58.4861%" y="671.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (7 samples, 0.45%)</title><rect x="58.3658%" y="645" width="0.4540%" height="15" fill="rgb(242,44,2)"/><text x="58.6158%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (81 samples, 5.25%)</title><rect x="54.0208%" y="741" width="5.2529%" height="15" fill="rgb(216,177,13)"/><text x="54.2708%" y="751.50">core::..</text></g><g><title>core::mem::replace (73 samples, 4.73%)</title><rect x="54.5396%" y="725" width="4.7341%" height="15" fill="rgb(216,106,43)"/><text x="54.7896%" y="735.50">core::..</text></g><g><title>core::mem::swap (68 samples, 4.41%)</title><rect x="54.8638%" y="709" width="4.4099%" height="15" fill="rgb(216,183,2)"/><text x="55.1138%" y="719.50">core:..</text></g><g><title>core::ptr::swap_nonoverlapping_one (67 samples, 4.35%)</title><rect x="54.9287%" y="693" width="4.3450%" height="15" fill="rgb(249,75,3)"/><text x="55.1787%" y="703.50">core:..</text></g><g><title>core::ptr::write (7 samples, 0.45%)</title><rect x="58.8197%" y="677" width="0.4540%" height="15" fill="rgb(219,67,39)"/><text x="59.0697%" y="687.50"></text></g><g><title>&lt;cswap::parser::SExp as core::clone::Clone&gt;::clone (512 samples, 33.20%)</title><rect x="26.8482%" y="1029" width="33.2036%" height="15" fill="rgb(253,228,2)"/><text x="27.0982%" y="1039.50">&lt;cswap::parser::SExp as core::clone::Clone&gt;::clone</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (512 samples, 33.20%)</title><rect x="26.8482%" y="1013" width="33.2036%" height="15" fill="rgb(235,138,27)"/><text x="27.0982%" y="1023.50">&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (512 samples, 33.20%)</title><rect x="26.8482%" y="997" width="33.2036%" height="15" fill="rgb(236,97,51)"/><text x="27.0982%" y="1007.50">alloc::slice::&lt;impl [T]&gt;::to_vec</text></g><g><title>alloc::slice::hack::to_vec (512 samples, 33.20%)</title><rect x="26.8482%" y="981" width="33.2036%" height="15" fill="rgb(240,80,30)"/><text x="27.0982%" y="991.50">alloc::slice::hack::to_vec</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (512 samples, 33.20%)</title><rect x="26.8482%" y="965" width="33.2036%" height="15" fill="rgb(230,178,19)"/><text x="27.0982%" y="975.50">alloc::vec::Vec&lt;T&gt;::extend_from_slice</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (512 samples, 33.20%)</title><rect x="26.8482%" y="949" width="33.2036%" height="15" fill="rgb(210,190,27)"/><text x="27.0982%" y="959.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,I&gt;&gt;::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (512 samples, 33.20%)</title><rect x="26.8482%" y="933" width="33.2036%" height="15" fill="rgb(222,107,31)"/><text x="27.0982%" y="943.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::s..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (512 samples, 33.20%)</title><rect x="26.8482%" y="917" width="33.2036%" height="15" fill="rgb(216,127,34)"/><text x="27.0982%" y="927.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (512 samples, 33.20%)</title><rect x="26.8482%" y="901" width="33.2036%" height="15" fill="rgb(234,116,52)"/><text x="27.0982%" y="911.50">&lt;core::iter::adapters::Cloned&lt;I&gt; as core::iter::traits..</text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (512 samples, 33.20%)</title><rect x="26.8482%" y="885" width="33.2036%" height="15" fill="rgb(222,124,15)"/><text x="27.0982%" y="895.50">&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (512 samples, 33.20%)</title><rect x="26.8482%" y="869" width="33.2036%" height="15" fill="rgb(231,179,28)"/><text x="27.0982%" y="879.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (512 samples, 33.20%)</title><rect x="26.8482%" y="853" width="33.2036%" height="15" fill="rgb(226,93,45)"/><text x="27.0982%" y="863.50">core::iter::traits::iterator::Iterator::try_fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold::ok::_{{closure}} (344 samples, 22.31%)</title><rect x="37.7432%" y="837" width="22.3087%" height="15" fill="rgb(215,8,51)"/><text x="37.9932%" y="847.50">core::iter::traits::iterator::Itera..</text></g><g><title>core::iter::adapters::map_fold::_{{closure}} (332 samples, 21.53%)</title><rect x="38.5214%" y="821" width="21.5305%" height="15" fill="rgb(223,106,5)"/><text x="38.7714%" y="831.50">core::iter::adapters::map_fold::_{..</text></g><g><title>core::ops::function::FnMut::call_mut (267 samples, 17.32%)</title><rect x="42.7367%" y="805" width="17.3152%" height="15" fill="rgb(250,191,5)"/><text x="42.9867%" y="815.50">core::ops::function::FnMut:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (259 samples, 16.80%)</title><rect x="43.2555%" y="789" width="16.7964%" height="15" fill="rgb(242,132,44)"/><text x="43.5055%" y="799.50">&lt;alloc::rc::Rc&lt;T&gt; as core:..</text></g><g><title>alloc::rc::RcBoxPtr::inc_strong (236 samples, 15.30%)</title><rect x="44.7471%" y="773" width="15.3048%" height="15" fill="rgb(251,152,29)"/><text x="44.9971%" y="783.50">alloc::rc::RcBoxPtr::in..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (101 samples, 6.55%)</title><rect x="53.5019%" y="757" width="6.5499%" height="15" fill="rgb(218,179,5)"/><text x="53.7519%" y="767.50">core::cel..</text></g><g><title>core::mem::drop (12 samples, 0.78%)</title><rect x="59.2737%" y="741" width="0.7782%" height="15" fill="rgb(227,67,19)"/><text x="59.5237%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.13%)</title><rect x="61.3489%" y="949" width="0.1297%" height="15" fill="rgb(233,119,31)"/><text x="61.5989%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.13%)</title><rect x="61.3489%" y="933" width="0.1297%" height="15" fill="rgb(241,120,22)"/><text x="61.5989%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.13%)</title><rect x="61.6083%" y="917" width="0.1297%" height="15" fill="rgb(224,102,30)"/><text x="61.8583%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.97%)</title><rect x="60.8949%" y="965" width="0.9728%" height="15" fill="rgb(210,164,37)"/><text x="61.1449%" y="975.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="61.4786%" y="949" width="0.3891%" height="15" fill="rgb(226,191,16)"/><text x="61.7286%" y="959.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (4 samples, 0.26%)</title><rect x="61.6083%" y="933" width="0.2594%" height="15" fill="rgb(214,40,45)"/><text x="61.8583%" y="943.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::keys (2 samples, 0.13%)</title><rect x="61.8677%" y="965" width="0.1297%" height="15" fill="rgb(244,29,26)"/><text x="62.1177%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::into_key_slice (2 samples, 0.13%)</title><rect x="61.8677%" y="949" width="0.1297%" height="15" fill="rgb(216,16,5)"/><text x="62.1177%" y="959.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (2 samples, 0.13%)</title><rect x="61.9974%" y="965" width="0.1297%" height="15" fill="rgb(249,76,35)"/><text x="62.2474%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.39%)</title><rect x="63.0350%" y="901" width="0.3891%" height="15" fill="rgb(207,11,44)"/><text x="63.2850%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (15 samples, 0.97%)</title><rect x="62.8405%" y="917" width="0.9728%" height="15" fill="rgb(228,190,49)"/><text x="63.0905%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (6 samples, 0.39%)</title><rect x="63.4241%" y="901" width="0.3891%" height="15" fill="rgb(214,173,12)"/><text x="63.6741%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 1.49%)</title><rect x="62.5811%" y="933" width="1.4916%" height="15" fill="rgb(218,26,35)"/><text x="62.8311%" y="943.50"></text></g><g><title>core::slice::from_raw_parts (4 samples, 0.26%)</title><rect x="63.8132%" y="917" width="0.2594%" height="15" fill="rgb(220,200,19)"/><text x="64.0632%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts (3 samples, 0.19%)</title><rect x="63.8781%" y="901" width="0.1946%" height="15" fill="rgb(239,95,49)"/><text x="64.1281%" y="911.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (32 samples, 2.08%)</title><rect x="62.1271%" y="965" width="2.0752%" height="15" fill="rgb(235,85,53)"/><text x="62.3771%" y="975.50">a..</text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (27 samples, 1.75%)</title><rect x="62.4514%" y="949" width="1.7510%" height="15" fill="rgb(233,133,31)"/><text x="62.7014%" y="959.50"></text></g><g><title>core::str::from_utf8_unchecked (2 samples, 0.13%)</title><rect x="64.0726%" y="933" width="0.1297%" height="15" fill="rgb(218,25,20)"/><text x="64.3226%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::enumerate (2 samples, 0.13%)</title><rect x="64.2023%" y="965" width="0.1297%" height="15" fill="rgb(252,210,38)"/><text x="64.4523%" y="975.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.13%)</title><rect x="65.1751%" y="917" width="0.1297%" height="15" fill="rgb(242,134,21)"/><text x="65.4251%" y="927.50"></text></g><g><title>core::cmp::min (12 samples, 0.78%)</title><rect x="65.3048%" y="917" width="0.7782%" height="15" fill="rgb(213,28,48)"/><text x="65.5548%" y="927.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.78%)</title><rect x="65.3048%" y="901" width="0.7782%" height="15" fill="rgb(250,196,2)"/><text x="65.5548%" y="911.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.78%)</title><rect x="65.3048%" y="885" width="0.7782%" height="15" fill="rgb(227,5,17)"/><text x="65.5548%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.52%)</title><rect x="65.5642%" y="869" width="0.5188%" height="15" fill="rgb(221,226,24)"/><text x="65.8142%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.32%)</title><rect x="65.7588%" y="853" width="0.3243%" height="15" fill="rgb(211,5,48)"/><text x="66.0088%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.13%)</title><rect x="66.0830%" y="917" width="0.1297%" height="15" fill="rgb(219,150,6)"/><text x="66.3330%" y="927.50"></text></g><g><title>core::slice::&lt;impl core::cmp::Ord for [T]&gt;::cmp (28 samples, 1.82%)</title><rect x="64.4617%" y="949" width="1.8158%" height="15" fill="rgb(251,46,16)"/><text x="64.7117%" y="959.50">c..</text></g><g><title>&lt;[u8] as core::slice::SliceOrd&lt;u8&gt;&gt;::compare (25 samples, 1.62%)</title><rect x="64.6563%" y="933" width="1.6213%" height="15" fill="rgb(220,204,40)"/><text x="64.9063%" y="943.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (98 samples, 6.36%)</title><rect x="60.0519%" y="1029" width="6.3554%" height="15" fill="rgb(211,85,2)"/><text x="60.3019%" y="1039.50">alloc::c..</text></g><g><title>alloc::collections::btree::search::search_tree (98 samples, 6.36%)</title><rect x="60.0519%" y="1013" width="6.3554%" height="15" fill="rgb(229,17,7)"/><text x="60.3019%" y="1023.50">alloc::c..</text></g><g><title>alloc::collections::btree::search::search_node (98 samples, 6.36%)</title><rect x="60.0519%" y="997" width="6.3554%" height="15" fill="rgb(239,72,28)"/><text x="60.3019%" y="1007.50">alloc::c..</text></g><g><title>alloc::collections::btree::search::search_linear (98 samples, 6.36%)</title><rect x="60.0519%" y="981" width="6.3554%" height="15" fill="rgb(230,47,54)"/><text x="60.3019%" y="991.50">alloc::c..</text></g><g><title>core::str::traits::&lt;impl core::cmp::Ord for str&gt;::cmp (32 samples, 2.08%)</title><rect x="64.3320%" y="965" width="2.0752%" height="15" fill="rgb(214,50,8)"/><text x="64.5820%" y="975.50">c..</text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (2 samples, 0.13%)</title><rect x="66.2776%" y="949" width="0.1297%" height="15" fill="rgb(216,198,43)"/><text x="66.5276%" y="959.50"></text></g><g><title>&lt;core::slice::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="66.6667%" y="1013" width="0.1297%" height="15" fill="rgb(234,20,35)"/><text x="66.9167%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::get (5 samples, 0.32%)</title><rect x="66.7964%" y="1013" width="0.3243%" height="15" fill="rgb(254,45,19)"/><text x="67.0464%" y="1023.50"></text></g><g><title>alloc::collections::btree::search::search_tree (5 samples, 0.32%)</title><rect x="66.7964%" y="997" width="0.3243%" height="15" fill="rgb(219,14,44)"/><text x="67.0464%" y="1007.50"></text></g><g><title>alloc::collections::btree::search::search_node (2 samples, 0.13%)</title><rect x="66.9909%" y="981" width="0.1297%" height="15" fill="rgb(217,220,26)"/><text x="67.2409%" y="991.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (2 samples, 0.13%)</title><rect x="67.1206%" y="1013" width="0.1297%" height="15" fill="rgb(213,158,28)"/><text x="67.3706%" y="1023.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (2 samples, 0.13%)</title><rect x="67.1206%" y="997" width="0.1297%" height="15" fill="rgb(252,51,52)"/><text x="67.3706%" y="1007.50"></text></g><g><title>core::cell::BorrowRef::new (2 samples, 0.13%)</title><rect x="67.1206%" y="981" width="0.1297%" height="15" fill="rgb(246,89,16)"/><text x="67.3706%" y="991.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.19%)</title><rect x="67.2503%" y="1013" width="0.1946%" height="15" fill="rgb(216,158,49)"/><text x="67.5003%" y="1023.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.19%)</title><rect x="67.2503%" y="997" width="0.1946%" height="15" fill="rgb(236,107,19)"/><text x="67.5003%" y="1007.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.19%)</title><rect x="67.2503%" y="981" width="0.1946%" height="15" fill="rgb(228,185,30)"/><text x="67.5003%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.13%)</title><rect x="67.3152%" y="965" width="0.1297%" height="15" fill="rgb(246,134,8)"/><text x="67.5652%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.13%)</title><rect x="67.3152%" y="949" width="0.1297%" height="15" fill="rgb(214,143,50)"/><text x="67.5652%" y="959.50"></text></g><g><title>core::mem::replace (2 samples, 0.13%)</title><rect x="67.3152%" y="933" width="0.1297%" height="15" fill="rgb(228,75,8)"/><text x="67.5652%" y="943.50"></text></g><g><title>core::mem::swap (2 samples, 0.13%)</title><rect x="67.3152%" y="917" width="0.1297%" height="15" fill="rgb(207,175,4)"/><text x="67.5652%" y="927.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.13%)</title><rect x="67.3152%" y="901" width="0.1297%" height="15" fill="rgb(205,108,24)"/><text x="67.5652%" y="911.50"></text></g><g><title>core::ptr::read (2 samples, 0.13%)</title><rect x="67.3152%" y="885" width="0.1297%" height="15" fill="rgb(244,120,49)"/><text x="67.5652%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.13%)</title><rect x="67.3152%" y="869" width="0.1297%" height="15" fill="rgb(223,47,38)"/><text x="67.5652%" y="879.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (6 samples, 0.39%)</title><rect x="69.6498%" y="789" width="0.3891%" height="15" fill="rgb(229,179,11)"/><text x="69.8998%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.39%)</title><rect x="69.6498%" y="773" width="0.3891%" height="15" fill="rgb(231,122,1)"/><text x="69.8998%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (11 samples, 0.71%)</title><rect x="70.8820%" y="773" width="0.7134%" height="15" fill="rgb(245,119,9)"/><text x="71.1320%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (11 samples, 0.71%)</title><rect x="70.8820%" y="757" width="0.7134%" height="15" fill="rgb(241,163,25)"/><text x="71.1320%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.32%)</title><rect x="71.2711%" y="741" width="0.3243%" height="15" fill="rgb(217,214,3)"/><text x="71.5211%" y="751.50"></text></g><g><title>alloc::rc::RcBoxPtr::strong (43 samples, 2.79%)</title><rect x="70.0389%" y="789" width="2.7886%" height="15" fill="rgb(240,86,28)"/><text x="70.2889%" y="799.50">al..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (19 samples, 1.23%)</title><rect x="71.5953%" y="773" width="1.2322%" height="15" fill="rgb(215,47,9)"/><text x="71.8453%" y="783.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (3 samples, 0.19%)</title><rect x="72.6329%" y="757" width="0.1946%" height="15" fill="rgb(252,25,45)"/><text x="72.8829%" y="767.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (2 samples, 0.13%)</title><rect x="75.3567%" y="757" width="0.1297%" height="15" fill="rgb(251,164,9)"/><text x="75.6067%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.39%)</title><rect x="76.4591%" y="709" width="0.3891%" height="15" fill="rgb(233,194,0)"/><text x="76.7091%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.13%)</title><rect x="76.7185%" y="693" width="0.1297%" height="15" fill="rgb(249,111,24)"/><text x="76.9685%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.65%)</title><rect x="78.0804%" y="693" width="0.6485%" height="15" fill="rgb(250,223,3)"/><text x="78.3304%" y="703.50"></text></g><g><title>core::ptr::read (46 samples, 2.98%)</title><rect x="76.8482%" y="709" width="2.9831%" height="15" fill="rgb(236,178,37)"/><text x="77.0982%" y="719.50">cor..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (17 samples, 1.10%)</title><rect x="78.7289%" y="693" width="1.1025%" height="15" fill="rgb(241,158,50)"/><text x="78.9789%" y="703.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (7 samples, 0.45%)</title><rect x="79.3774%" y="677" width="0.4540%" height="15" fill="rgb(213,121,41)"/><text x="79.6274%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (90 samples, 5.84%)</title><rect x="74.5785%" y="773" width="5.8366%" height="15" fill="rgb(240,92,3)"/><text x="74.8285%" y="783.50">core::c..</text></g><g><title>core::mem::replace (76 samples, 4.93%)</title><rect x="75.4864%" y="757" width="4.9287%" height="15" fill="rgb(205,123,3)"/><text x="75.7364%" y="767.50">core::..</text></g><g><title>core::mem::swap (71 samples, 4.60%)</title><rect x="75.8106%" y="741" width="4.6044%" height="15" fill="rgb(205,97,47)"/><text x="76.0606%" y="751.50">core:..</text></g><g><title>core::ptr::swap_nonoverlapping_one (70 samples, 4.54%)</title><rect x="75.8755%" y="725" width="4.5396%" height="15" fill="rgb(247,152,14)"/><text x="76.1255%" y="735.50">core:..</text></g><g><title>core::ptr::write (9 samples, 0.58%)</title><rect x="79.8314%" y="709" width="0.5837%" height="15" fill="rgb(248,195,53)"/><text x="80.0814%" y="719.50"></text></g><g><title>alloc::rc::RcBoxPtr::dec_strong (183 samples, 11.87%)</title><rect x="69.0661%" y="805" width="11.8677%" height="15" fill="rgb(226,201,16)"/><text x="69.3161%" y="815.50">alloc::rc::RcBoxPt..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (125 samples, 8.11%)</title><rect x="72.8275%" y="789" width="8.1064%" height="15" fill="rgb(205,98,0)"/><text x="73.0775%" y="799.50">core::cell:..</text></g><g><title>core::mem::drop (8 samples, 0.52%)</title><rect x="80.4150%" y="773" width="0.5188%" height="15" fill="rgb(214,191,48)"/><text x="80.6650%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcBoxPtr&lt;T&gt;&gt;::inner (7 samples, 0.45%)</title><rect x="81.9715%" y="789" width="0.4540%" height="15" fill="rgb(237,112,39)"/><text x="82.2215%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.45%)</title><rect x="81.9715%" y="773" width="0.4540%" height="15" fill="rgb(247,203,27)"/><text x="82.2215%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.13%)</title><rect x="82.2957%" y="757" width="0.1297%" height="15" fill="rgb(235,124,28)"/><text x="82.5457%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (253 samples, 16.41%)</title><rect x="67.4449%" y="981" width="16.4073%" height="15" fill="rgb(208,207,46)"/><text x="67.6949%" y="991.50">&lt;alloc::rc::Rc&lt;T&gt; as core..</text></g><g><title>core::ptr::drop_in_place (253 samples, 16.41%)</title><rect x="67.4449%" y="965" width="16.4073%" height="15" fill="rgb(234,176,4)"/><text x="67.6949%" y="975.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (253 samples, 16.41%)</title><rect x="67.4449%" y="949" width="16.4073%" height="15" fill="rgb(230,133,28)"/><text x="67.6949%" y="959.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (253 samples, 16.41%)</title><rect x="67.4449%" y="933" width="16.4073%" height="15" fill="rgb(211,137,40)"/><text x="67.6949%" y="943.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (253 samples, 16.41%)</title><rect x="67.4449%" y="917" width="16.4073%" height="15" fill="rgb(254,35,13)"/><text x="67.6949%" y="927.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (253 samples, 16.41%)</title><rect x="67.4449%" y="901" width="16.4073%" height="15" fill="rgb(225,49,51)"/><text x="67.6949%" y="911.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (253 samples, 16.41%)</title><rect x="67.4449%" y="885" width="16.4073%" height="15" fill="rgb(251,10,15)"/><text x="67.6949%" y="895.50">core::ptr::drop_in_place</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (253 samples, 16.41%)</title><rect x="67.4449%" y="869" width="16.4073%" height="15" fill="rgb(228,207,15)"/><text x="67.6949%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>core::ptr::drop_in_place (253 samples, 16.41%)</title><rect x="67.4449%" y="853" width="16.4073%" height="15" fill="rgb(241,99,19)"/><text x="67.6949%" y="863.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (249 samples, 16.15%)</title><rect x="67.7043%" y="837" width="16.1479%" height="15" fill="rgb(207,104,49)"/><text x="67.9543%" y="847.50">core::ptr::drop_in_place</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (249 samples, 16.15%)</title><rect x="67.7043%" y="821" width="16.1479%" height="15" fill="rgb(234,99,18)"/><text x="67.9543%" y="831.50">&lt;alloc::rc::Rc&lt;T&gt; as core..</text></g><g><title>alloc::rc::RcBoxPtr::strong (45 samples, 2.92%)</title><rect x="80.9339%" y="805" width="2.9183%" height="15" fill="rgb(213,191,49)"/><text x="81.1839%" y="815.50">al..</text></g><g><title>core::cell::Cell&lt;T&gt;::get (22 samples, 1.43%)</title><rect x="82.4254%" y="789" width="1.4267%" height="15" fill="rgb(210,226,19)"/><text x="82.6754%" y="799.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (9 samples, 0.58%)</title><rect x="83.2685%" y="773" width="0.5837%" height="15" fill="rgb(229,97,18)"/><text x="83.5185%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="83.8521%" y="981" width="0.1297%" height="15" fill="rgb(211,167,15)"/><text x="84.1021%" y="991.50"></text></g><g><title>core::ptr::read (2 samples, 0.13%)</title><rect x="84.0467%" y="885" width="0.1297%" height="15" fill="rgb(210,169,34)"/><text x="84.2967%" y="895.50"></text></g><g><title>&lt;core::cell::BorrowRef as core::ops::drop::Drop&gt;::drop (4 samples, 0.26%)</title><rect x="83.9818%" y="981" width="0.2594%" height="15" fill="rgb(241,121,31)"/><text x="84.2318%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.26%)</title><rect x="83.9818%" y="965" width="0.2594%" height="15" fill="rgb(232,40,11)"/><text x="84.2318%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.26%)</title><rect x="83.9818%" y="949" width="0.2594%" height="15" fill="rgb(205,86,26)"/><text x="84.2318%" y="959.50"></text></g><g><title>core::mem::replace (3 samples, 0.19%)</title><rect x="84.0467%" y="933" width="0.1946%" height="15" fill="rgb(231,126,28)"/><text x="84.2967%" y="943.50"></text></g><g><title>core::mem::swap (3 samples, 0.19%)</title><rect x="84.0467%" y="917" width="0.1946%" height="15" fill="rgb(219,221,18)"/><text x="84.2967%" y="927.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.19%)</title><rect x="84.0467%" y="901" width="0.1946%" height="15" fill="rgb(211,40,0)"/><text x="84.2967%" y="911.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="84.2412%" y="981" width="0.1297%" height="15" fill="rgb(239,85,43)"/><text x="84.4912%" y="991.50"></text></g><g><title>core::ptr::drop_in_place (263 samples, 17.06%)</title><rect x="67.4449%" y="1013" width="17.0558%" height="15" fill="rgb(231,55,21)"/><text x="67.6949%" y="1023.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (263 samples, 17.06%)</title><rect x="67.4449%" y="997" width="17.0558%" height="15" fill="rgb(225,184,43)"/><text x="67.6949%" y="1007.50">core::ptr::drop_in_place</text></g><g><title>core::ptr::drop_in_place (2 samples, 0.13%)</title><rect x="84.3709%" y="981" width="0.1297%" height="15" fill="rgb(251,158,41)"/><text x="84.6209%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.13%)</title><rect x="84.3709%" y="965" width="0.1297%" height="15" fill="rgb(234,159,37)"/><text x="84.6209%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (2 samples, 0.13%)</title><rect x="84.3709%" y="949" width="0.1297%" height="15" fill="rgb(216,204,22)"/><text x="84.6209%" y="959.50"></text></g><g><title>cswap::rl_s (891 samples, 57.78%)</title><rect x="26.8482%" y="1093" width="57.7821%" height="15" fill="rgb(214,17,3)"/><text x="27.0982%" y="1103.50">cswap::rl_s</text></g><g><title>cswap::rl_s (891 samples, 57.78%)</title><rect x="26.8482%" y="1077" width="57.7821%" height="15" fill="rgb(212,111,17)"/><text x="27.0982%" y="1087.50">cswap::rl_s</text></g><g><title>cswap::rl_s (891 samples, 57.78%)</title><rect x="26.8482%" y="1061" width="57.7821%" height="15" fill="rgb(221,157,24)"/><text x="27.0982%" y="1071.50">cswap::rl_s</text></g><g><title>cswap::rl_s (891 samples, 57.78%)</title><rect x="26.8482%" y="1045" width="57.7821%" height="15" fill="rgb(252,16,13)"/><text x="27.0982%" y="1055.50">cswap::rl_s</text></g><g><title>cswap::rl_s (280 samples, 18.16%)</title><rect x="66.4721%" y="1029" width="18.1582%" height="15" fill="rgb(221,62,2)"/><text x="66.7221%" y="1039.50">cswap::rl_s</text></g><g><title>cswap::parser::let_sexp (2 samples, 0.13%)</title><rect x="84.6952%" y="885" width="0.1297%" height="15" fill="rgb(247,87,22)"/><text x="84.9452%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.13%)</title><rect x="84.8249%" y="837" width="0.1297%" height="15" fill="rgb(215,73,9)"/><text x="85.0749%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="84.8249%" y="821" width="0.1297%" height="15" fill="rgb(207,175,33)"/><text x="85.0749%" y="831.50"></text></g><g><title>nom::combinator::map::_{{closure}} (6 samples, 0.39%)</title><rect x="84.6304%" y="933" width="0.3891%" height="15" fill="rgb(243,129,54)"/><text x="84.8804%" y="943.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (5 samples, 0.32%)</title><rect x="84.6952%" y="917" width="0.3243%" height="15" fill="rgb(227,119,45)"/><text x="84.9452%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.32%)</title><rect x="84.6952%" y="901" width="0.3243%" height="15" fill="rgb(205,109,36)"/><text x="84.9452%" y="911.50"></text></g><g><title>nom::character::complete::multispace0 (3 samples, 0.19%)</title><rect x="84.8249%" y="885" width="0.1946%" height="15" fill="rgb(205,6,39)"/><text x="85.0749%" y="895.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (3 samples, 0.19%)</title><rect x="84.8249%" y="869" width="0.1946%" height="15" fill="rgb(221,32,16)"/><text x="85.0749%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.19%)</title><rect x="84.8249%" y="853" width="0.1946%" height="15" fill="rgb(228,144,50)"/><text x="85.0749%" y="863.50"></text></g><g><title>nom::branch::alt::_{{closure}} (7 samples, 0.45%)</title><rect x="84.6304%" y="1093" width="0.4540%" height="15" fill="rgb(229,201,53)"/><text x="84.8804%" y="1103.50"></text></g><g><title>&lt; (7 samples, 0.45%)</title><rect x="84.6304%" y="1077" width="0.4540%" height="15" fill="rgb(249,153,27)"/><text x="84.8804%" y="1087.50"></text></g><g><title>nom::combinator::map::_{{closure}} (7 samples, 0.45%)</title><rect x="84.6304%" y="1061" width="0.4540%" height="15" fill="rgb(227,106,25)"/><text x="84.8804%" y="1071.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (7 samples, 0.45%)</title><rect x="84.6304%" y="1045" width="0.4540%" height="15" fill="rgb(230,65,29)"/><text x="84.8804%" y="1055.50"></text></g><g><title>&lt; (7 samples, 0.45%)</title><rect x="84.6304%" y="1029" width="0.4540%" height="15" fill="rgb(221,57,46)"/><text x="84.8804%" y="1039.50"></text></g><g><title>nom::multi::many1::_{{closure}} (7 samples, 0.45%)</title><rect x="84.6304%" y="1013" width="0.4540%" height="15" fill="rgb(229,161,17)"/><text x="84.8804%" y="1023.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.45%)</title><rect x="84.6304%" y="997" width="0.4540%" height="15" fill="rgb(222,213,11)"/><text x="84.8804%" y="1007.50"></text></g><g><title>cswap::parser::sexp (7 samples, 0.45%)</title><rect x="84.6304%" y="981" width="0.4540%" height="15" fill="rgb(235,35,13)"/><text x="84.8804%" y="991.50"></text></g><g><title>nom::branch::alt::_{{closure}} (7 samples, 0.45%)</title><rect x="84.6304%" y="965" width="0.4540%" height="15" fill="rgb(233,158,34)"/><text x="84.8804%" y="975.50"></text></g><g><title>&lt; (7 samples, 0.45%)</title><rect x="84.6304%" y="949" width="0.4540%" height="15" fill="rgb(215,151,48)"/><text x="84.8804%" y="959.50"></text></g><g><title>cswap::parser::bin (4 samples, 0.26%)</title><rect x="85.0843%" y="965" width="0.2594%" height="15" fill="rgb(229,84,14)"/><text x="85.3343%" y="975.50"></text></g><g><title>nom::branch::alt::_{{closure}} (4 samples, 0.26%)</title><rect x="85.0843%" y="949" width="0.2594%" height="15" fill="rgb(229,68,14)"/><text x="85.3343%" y="959.50"></text></g><g><title>&lt; (4 samples, 0.26%)</title><rect x="85.0843%" y="933" width="0.2594%" height="15" fill="rgb(243,106,26)"/><text x="85.3343%" y="943.50"></text></g><g><title>nom::combinator::map::_{{closure}} (4 samples, 0.26%)</title><rect x="85.0843%" y="917" width="0.2594%" height="15" fill="rgb(206,45,38)"/><text x="85.3343%" y="927.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (4 samples, 0.26%)</title><rect x="85.0843%" y="901" width="0.2594%" height="15" fill="rgb(226,6,15)"/><text x="85.3343%" y="911.50"></text></g><g><title>&lt; (4 samples, 0.26%)</title><rect x="85.0843%" y="885" width="0.2594%" height="15" fill="rgb(232,22,54)"/><text x="85.3343%" y="895.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (4 samples, 0.26%)</title><rect x="85.0843%" y="869" width="0.2594%" height="15" fill="rgb(229,222,32)"/><text x="85.3343%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (4 samples, 0.26%)</title><rect x="85.0843%" y="853" width="0.2594%" height="15" fill="rgb(228,62,29)"/><text x="85.3343%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (4 samples, 0.26%)</title><rect x="85.0843%" y="837" width="0.2594%" height="15" fill="rgb(251,103,34)"/><text x="85.3343%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.26%)</title><rect x="85.0843%" y="821" width="0.2594%" height="15" fill="rgb(233,12,30)"/><text x="85.3343%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="85.0843%" y="805" width="0.2594%" height="15" fill="rgb(238,52,0)"/><text x="85.3343%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.26%)</title><rect x="85.0843%" y="789" width="0.2594%" height="15" fill="rgb(223,98,5)"/><text x="85.3343%" y="799.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.26%)</title><rect x="85.0843%" y="773" width="0.2594%" height="15" fill="rgb(228,75,37)"/><text x="85.3343%" y="783.50"></text></g><g><title>core::str::next_code_point (4 samples, 0.26%)</title><rect x="85.0843%" y="757" width="0.2594%" height="15" fill="rgb(205,115,49)"/><text x="85.3343%" y="767.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="85.1492%" y="741" width="0.1946%" height="15" fill="rgb(250,154,43)"/><text x="85.3992%" y="751.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (2 samples, 0.13%)</title><rect x="85.2140%" y="725" width="0.1297%" height="15" fill="rgb(226,43,29)"/><text x="85.4640%" y="735.50"></text></g><g><title>nom::branch::alt::_{{closure}} (2 samples, 0.13%)</title><rect x="85.3437%" y="885" width="0.1297%" height="15" fill="rgb(249,228,39)"/><text x="85.5937%" y="895.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="85.3437%" y="869" width="0.1297%" height="15" fill="rgb(216,79,43)"/><text x="85.5937%" y="879.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="85.3437%" y="853" width="0.1297%" height="15" fill="rgb(228,95,12)"/><text x="85.5937%" y="863.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (2 samples, 0.13%)</title><rect x="85.3437%" y="837" width="0.1297%" height="15" fill="rgb(249,221,15)"/><text x="85.5937%" y="847.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="85.3437%" y="821" width="0.1297%" height="15" fill="rgb(233,34,13)"/><text x="85.5937%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.58%)</title><rect x="85.0843%" y="1061" width="0.5837%" height="15" fill="rgb(214,103,39)"/><text x="85.3343%" y="1071.50"></text></g><g><title>cswap::parser::constant (9 samples, 0.58%)</title><rect x="85.0843%" y="1045" width="0.5837%" height="15" fill="rgb(251,126,39)"/><text x="85.3343%" y="1055.50"></text></g><g><title>nom::branch::alt::_{{closure}} (9 samples, 0.58%)</title><rect x="85.0843%" y="1029" width="0.5837%" height="15" fill="rgb(214,216,36)"/><text x="85.3343%" y="1039.50"></text></g><g><title>&lt; (9 samples, 0.58%)</title><rect x="85.0843%" y="1013" width="0.5837%" height="15" fill="rgb(220,221,8)"/><text x="85.3343%" y="1023.50"></text></g><g><title>nom::combinator::map::_{{closure}} (9 samples, 0.58%)</title><rect x="85.0843%" y="997" width="0.5837%" height="15" fill="rgb(240,216,3)"/><text x="85.3343%" y="1007.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.58%)</title><rect x="85.0843%" y="981" width="0.5837%" height="15" fill="rgb(232,218,17)"/><text x="85.3343%" y="991.50"></text></g><g><title>cswap::parser::decimal (5 samples, 0.32%)</title><rect x="85.3437%" y="965" width="0.3243%" height="15" fill="rgb(229,163,45)"/><text x="85.5937%" y="975.50"></text></g><g><title>nom::number::complete::recognize_float (5 samples, 0.32%)</title><rect x="85.3437%" y="949" width="0.3243%" height="15" fill="rgb(231,110,42)"/><text x="85.5937%" y="959.50"></text></g><g><title>nom::combinator::recognize::_{{closure}} (5 samples, 0.32%)</title><rect x="85.3437%" y="933" width="0.3243%" height="15" fill="rgb(208,170,48)"/><text x="85.5937%" y="943.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (5 samples, 0.32%)</title><rect x="85.3437%" y="917" width="0.3243%" height="15" fill="rgb(239,116,25)"/><text x="85.5937%" y="927.50"></text></g><g><title>&lt; (5 samples, 0.32%)</title><rect x="85.3437%" y="901" width="0.3243%" height="15" fill="rgb(219,200,50)"/><text x="85.5937%" y="911.50"></text></g><g><title>nom::combinator::opt::_{{closure}} (3 samples, 0.19%)</title><rect x="85.4734%" y="885" width="0.1946%" height="15" fill="rgb(245,200,0)"/><text x="85.7234%" y="895.50"></text></g><g><title>nom::branch::alt::_{{closure}} (3 samples, 0.19%)</title><rect x="85.4734%" y="869" width="0.1946%" height="15" fill="rgb(245,119,33)"/><text x="85.7234%" y="879.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="85.4734%" y="853" width="0.1946%" height="15" fill="rgb(231,125,12)"/><text x="85.7234%" y="863.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (3 samples, 0.19%)</title><rect x="85.4734%" y="837" width="0.1946%" height="15" fill="rgb(216,96,41)"/><text x="85.7234%" y="847.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="85.5383%" y="821" width="0.1297%" height="15" fill="rgb(248,43,45)"/><text x="85.7883%" y="831.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="85.5383%" y="805" width="0.1297%" height="15" fill="rgb(217,222,7)"/><text x="85.7883%" y="815.50"></text></g><g><title>cswap::parser::let_sexp (3 samples, 0.19%)</title><rect x="85.6680%" y="917" width="0.1946%" height="15" fill="rgb(233,28,6)"/><text x="85.9180%" y="927.50"></text></g><g><title>nom::combinator::map::_{{closure}} (3 samples, 0.19%)</title><rect x="85.6680%" y="901" width="0.1946%" height="15" fill="rgb(231,218,15)"/><text x="85.9180%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.13%)</title><rect x="85.7328%" y="885" width="0.1297%" height="15" fill="rgb(226,171,48)"/><text x="85.9828%" y="895.50"></text></g><g><title>cswap::parser::symbol (2 samples, 0.13%)</title><rect x="85.8625%" y="917" width="0.1297%" height="15" fill="rgb(235,201,9)"/><text x="86.1125%" y="927.50"></text></g><g><title>nom::bytes::complete::take_while1::_{{closure}} (2 samples, 0.13%)</title><rect x="85.8625%" y="901" width="0.1297%" height="15" fill="rgb(217,80,15)"/><text x="86.1125%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (2 samples, 0.13%)</title><rect x="85.8625%" y="885" width="0.1297%" height="15" fill="rgb(219,152,8)"/><text x="86.1125%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (2 samples, 0.13%)</title><rect x="85.8625%" y="869" width="0.1297%" height="15" fill="rgb(243,107,38)"/><text x="86.1125%" y="879.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.13%)</title><rect x="85.8625%" y="853" width="0.1297%" height="15" fill="rgb(231,17,5)"/><text x="86.1125%" y="863.50"></text></g><g><title>core::str::pattern::Searcher::next_match (2 samples, 0.13%)</title><rect x="85.8625%" y="837" width="0.1297%" height="15" fill="rgb(209,25,54)"/><text x="86.1125%" y="847.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (2 samples, 0.13%)</title><rect x="85.8625%" y="821" width="0.1297%" height="15" fill="rgb(219,0,2)"/><text x="86.1125%" y="831.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="85.8625%" y="805" width="0.1297%" height="15" fill="rgb(246,9,5)"/><text x="86.1125%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.19%)</title><rect x="85.9922%" y="789" width="0.1946%" height="15" fill="rgb(226,159,4)"/><text x="86.2422%" y="799.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (2 samples, 0.13%)</title><rect x="86.0571%" y="773" width="0.1297%" height="15" fill="rgb(219,175,34)"/><text x="86.3071%" y="783.50"></text></g><g><title>core::char::convert::from_u32_unchecked (2 samples, 0.13%)</title><rect x="86.0571%" y="757" width="0.1297%" height="15" fill="rgb(236,10,46)"/><text x="86.3071%" y="767.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.71%)</title><rect x="85.6680%" y="933" width="0.7134%" height="15" fill="rgb(240,211,16)"/><text x="85.9180%" y="943.50"></text></g><g><title>nom::character::complete::multispace0 (6 samples, 0.39%)</title><rect x="85.9922%" y="917" width="0.3891%" height="15" fill="rgb(205,3,43)"/><text x="86.2422%" y="927.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (6 samples, 0.39%)</title><rect x="85.9922%" y="901" width="0.3891%" height="15" fill="rgb(245,7,22)"/><text x="86.2422%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (6 samples, 0.39%)</title><rect x="85.9922%" y="885" width="0.3891%" height="15" fill="rgb(239,132,32)"/><text x="86.2422%" y="895.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.39%)</title><rect x="85.9922%" y="869" width="0.3891%" height="15" fill="rgb(228,202,34)"/><text x="86.2422%" y="879.50"></text></g><g><title>core::str::pattern::Searcher::next_match (6 samples, 0.39%)</title><rect x="85.9922%" y="853" width="0.3891%" height="15" fill="rgb(254,200,22)"/><text x="86.2422%" y="863.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (6 samples, 0.39%)</title><rect x="85.9922%" y="837" width="0.3891%" height="15" fill="rgb(219,10,39)"/><text x="86.2422%" y="847.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="85.9922%" y="821" width="0.3891%" height="15" fill="rgb(226,210,39)"/><text x="86.2422%" y="831.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.39%)</title><rect x="85.9922%" y="805" width="0.3891%" height="15" fill="rgb(208,219,16)"/><text x="86.2422%" y="815.50"></text></g><g><title>core::str::next_code_point (3 samples, 0.19%)</title><rect x="86.1868%" y="789" width="0.1946%" height="15" fill="rgb(216,158,51)"/><text x="86.4368%" y="799.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="86.2516%" y="773" width="0.1297%" height="15" fill="rgb(233,14,44)"/><text x="86.5016%" y="783.50"></text></g><g><title>core::slice::Iter&lt;T&gt;::post_inc_start (2 samples, 0.13%)</title><rect x="86.2516%" y="757" width="0.1297%" height="15" fill="rgb(237,97,39)"/><text x="86.5016%" y="767.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.13%)</title><rect x="86.2516%" y="741" width="0.1297%" height="15" fill="rgb(218,198,43)"/><text x="86.5016%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.13%)</title><rect x="86.4462%" y="885" width="0.1297%" height="15" fill="rgb(231,104,20)"/><text x="86.6962%" y="895.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (24 samples, 1.56%)</title><rect x="85.0843%" y="1077" width="1.5564%" height="15" fill="rgb(254,36,13)"/><text x="85.3343%" y="1087.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (15 samples, 0.97%)</title><rect x="85.6680%" y="1061" width="0.9728%" height="15" fill="rgb(248,14,50)"/><text x="85.9180%" y="1071.50"></text></g><g><title>nom::multi::many1::_{{closure}} (15 samples, 0.97%)</title><rect x="85.6680%" y="1045" width="0.9728%" height="15" fill="rgb(217,107,29)"/><text x="85.9180%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.97%)</title><rect x="85.6680%" y="1029" width="0.9728%" height="15" fill="rgb(251,169,33)"/><text x="85.9180%" y="1039.50"></text></g><g><title>cswap::parser::sexp (15 samples, 0.97%)</title><rect x="85.6680%" y="1013" width="0.9728%" height="15" fill="rgb(217,108,32)"/><text x="85.9180%" y="1023.50"></text></g><g><title>nom::branch::alt::_{{closure}} (15 samples, 0.97%)</title><rect x="85.6680%" y="997" width="0.9728%" height="15" fill="rgb(219,66,42)"/><text x="85.9180%" y="1007.50"></text></g><g><title>&lt; (15 samples, 0.97%)</title><rect x="85.6680%" y="981" width="0.9728%" height="15" fill="rgb(206,180,7)"/><text x="85.9180%" y="991.50"></text></g><g><title>nom::combinator::map::_{{closure}} (15 samples, 0.97%)</title><rect x="85.6680%" y="965" width="0.9728%" height="15" fill="rgb(208,226,31)"/><text x="85.9180%" y="975.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (15 samples, 0.97%)</title><rect x="85.6680%" y="949" width="0.9728%" height="15" fill="rgb(218,26,49)"/><text x="85.9180%" y="959.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (4 samples, 0.26%)</title><rect x="86.3813%" y="933" width="0.2594%" height="15" fill="rgb(233,197,48)"/><text x="86.6313%" y="943.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (4 samples, 0.26%)</title><rect x="86.3813%" y="917" width="0.2594%" height="15" fill="rgb(252,181,51)"/><text x="86.6313%" y="927.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="86.4462%" y="901" width="0.1946%" height="15" fill="rgb(253,90,19)"/><text x="86.6962%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (2 samples, 0.13%)</title><rect x="86.9001%" y="901" width="0.1297%" height="15" fill="rgb(215,171,30)"/><text x="87.1501%" y="911.50"></text></g><g><title>core::alloc::Layout::from_size_align (3 samples, 0.19%)</title><rect x="87.0298%" y="853" width="0.1946%" height="15" fill="rgb(214,222,9)"/><text x="87.2798%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.26%)</title><rect x="87.0298%" y="901" width="0.2594%" height="15" fill="rgb(223,3,22)"/><text x="87.2798%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.26%)</title><rect x="87.0298%" y="885" width="0.2594%" height="15" fill="rgb(225,196,46)"/><text x="87.2798%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.26%)</title><rect x="87.0298%" y="869" width="0.2594%" height="15" fill="rgb(209,110,37)"/><text x="87.2798%" y="879.50"></text></g><g><title>nom::combinator::map::_{{closure}} (13 samples, 0.84%)</title><rect x="86.7056%" y="965" width="0.8431%" height="15" fill="rgb(249,89,12)"/><text x="86.9556%" y="975.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (13 samples, 0.84%)</title><rect x="86.7056%" y="949" width="0.8431%" height="15" fill="rgb(226,27,33)"/><text x="86.9556%" y="959.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (13 samples, 0.84%)</title><rect x="86.7056%" y="933" width="0.8431%" height="15" fill="rgb(213,82,22)"/><text x="86.9556%" y="943.50"></text></g><g><title>nom::multi::many1::_{{closure}} (13 samples, 0.84%)</title><rect x="86.7056%" y="917" width="0.8431%" height="15" fill="rgb(248,140,0)"/><text x="86.9556%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.19%)</title><rect x="87.3541%" y="901" width="0.1946%" height="15" fill="rgb(228,106,3)"/><text x="87.6041%" y="911.50"></text></g><g><title>cswap::parser::sexp (3 samples, 0.19%)</title><rect x="87.3541%" y="885" width="0.1946%" height="15" fill="rgb(209,23,37)"/><text x="87.6041%" y="895.50"></text></g><g><title>nom::combinator::map (2 samples, 0.13%)</title><rect x="87.4189%" y="869" width="0.1297%" height="15" fill="rgb(241,93,50)"/><text x="87.6689%" y="879.50"></text></g><g><title>nom::combinator::map::_{{closure}} (41 samples, 2.66%)</title><rect x="85.0843%" y="1093" width="2.6589%" height="15" fill="rgb(253,46,43)"/><text x="85.3343%" y="1103.50">no..</text></g><g><title>nom::sequence::tuple::_{{closure}} (17 samples, 1.10%)</title><rect x="86.6407%" y="1077" width="1.1025%" height="15" fill="rgb(226,206,43)"/><text x="86.8907%" y="1087.50"></text></g><g><title>&lt; (17 samples, 1.10%)</title><rect x="86.6407%" y="1061" width="1.1025%" height="15" fill="rgb(217,54,7)"/><text x="86.8907%" y="1071.50"></text></g><g><title>nom::multi::many1::_{{closure}} (16 samples, 1.04%)</title><rect x="86.7056%" y="1045" width="1.0376%" height="15" fill="rgb(223,5,52)"/><text x="86.9556%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (16 samples, 1.04%)</title><rect x="86.7056%" y="1029" width="1.0376%" height="15" fill="rgb(206,52,46)"/><text x="86.9556%" y="1039.50"></text></g><g><title>cswap::parser::sexp (16 samples, 1.04%)</title><rect x="86.7056%" y="1013" width="1.0376%" height="15" fill="rgb(253,136,11)"/><text x="86.9556%" y="1023.50"></text></g><g><title>nom::branch::alt::_{{closure}} (16 samples, 1.04%)</title><rect x="86.7056%" y="997" width="1.0376%" height="15" fill="rgb(208,106,33)"/><text x="86.9556%" y="1007.50"></text></g><g><title>&lt; (16 samples, 1.04%)</title><rect x="86.7056%" y="981" width="1.0376%" height="15" fill="rgb(206,54,4)"/><text x="86.9556%" y="991.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (3 samples, 0.19%)</title><rect x="87.5486%" y="965" width="0.1946%" height="15" fill="rgb(213,3,15)"/><text x="87.7986%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.19%)</title><rect x="87.5486%" y="949" width="0.1946%" height="15" fill="rgb(252,211,39)"/><text x="87.7986%" y="959.50"></text></g><g><title>cswap::parser::bool_sexp (3 samples, 0.19%)</title><rect x="87.5486%" y="933" width="0.1946%" height="15" fill="rgb(223,6,36)"/><text x="87.7986%" y="943.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (3 samples, 0.19%)</title><rect x="87.5486%" y="917" width="0.1946%" height="15" fill="rgb(252,169,45)"/><text x="87.7986%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (3 samples, 0.19%)</title><rect x="87.5486%" y="901" width="0.1946%" height="15" fill="rgb(212,48,26)"/><text x="87.7986%" y="911.50"></text></g><g><title>&lt; (3 samples, 0.19%)</title><rect x="87.5486%" y="885" width="0.1946%" height="15" fill="rgb(251,102,48)"/><text x="87.7986%" y="895.50"></text></g><g><title>nom::combinator::map::_{{closure}} (3 samples, 0.19%)</title><rect x="87.5486%" y="869" width="0.1946%" height="15" fill="rgb(243,208,16)"/><text x="87.7986%" y="879.50"></text></g><g><title>cswap::parser::bin (4 samples, 0.26%)</title><rect x="87.8080%" y="885" width="0.2594%" height="15" fill="rgb(219,96,24)"/><text x="88.0580%" y="895.50"></text></g><g><title>nom::sequence::tuple (2 samples, 0.13%)</title><rect x="87.9377%" y="869" width="0.1297%" height="15" fill="rgb(219,33,29)"/><text x="88.1877%" y="879.50"></text></g><g><title>nom::character::complete::char (4 samples, 0.26%)</title><rect x="88.1323%" y="853" width="0.2594%" height="15" fill="rgb(223,176,5)"/><text x="88.3823%" y="863.50"></text></g><g><title>cswap::parser::decimal (8 samples, 0.52%)</title><rect x="88.0674%" y="885" width="0.5188%" height="15" fill="rgb(228,140,14)"/><text x="88.3174%" y="895.50"></text></g><g><title>nom::number::complete::recognize_float (8 samples, 0.52%)</title><rect x="88.0674%" y="869" width="0.5188%" height="15" fill="rgb(217,179,31)"/><text x="88.3174%" y="879.50"></text></g><g><title>cswap::parser::hex (2 samples, 0.13%)</title><rect x="88.5863%" y="885" width="0.1297%" height="15" fill="rgb(230,9,30)"/><text x="88.8363%" y="895.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="88.5863%" y="869" width="0.1297%" height="15" fill="rgb(230,136,20)"/><text x="88.8363%" y="879.50"></text></g><g><title>cswap::parser::constant (17 samples, 1.10%)</title><rect x="87.8080%" y="965" width="1.1025%" height="15" fill="rgb(215,210,22)"/><text x="88.0580%" y="975.50"></text></g><g><title>nom::branch::alt::_{{closure}} (17 samples, 1.10%)</title><rect x="87.8080%" y="949" width="1.1025%" height="15" fill="rgb(218,43,5)"/><text x="88.0580%" y="959.50"></text></g><g><title>&lt; (17 samples, 1.10%)</title><rect x="87.8080%" y="933" width="1.1025%" height="15" fill="rgb(216,11,5)"/><text x="88.0580%" y="943.50"></text></g><g><title>nom::combinator::map::_{{closure}} (17 samples, 1.10%)</title><rect x="87.8080%" y="917" width="1.1025%" height="15" fill="rgb(209,82,29)"/><text x="88.0580%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 1.10%)</title><rect x="87.8080%" y="901" width="1.1025%" height="15" fill="rgb(244,115,12)"/><text x="88.0580%" y="911.50"></text></g><g><title>cswap::parser::string (3 samples, 0.19%)</title><rect x="88.7160%" y="885" width="0.1946%" height="15" fill="rgb(222,82,18)"/><text x="88.9660%" y="895.50"></text></g><g><title>nom::combinator::map::_{{closure}} (3 samples, 0.19%)</title><rect x="88.7160%" y="869" width="0.1946%" height="15" fill="rgb(249,227,8)"/><text x="88.9660%" y="879.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (2 samples, 0.13%)</title><rect x="88.7808%" y="853" width="0.1297%" height="15" fill="rgb(253,141,45)"/><text x="89.0308%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (18 samples, 1.17%)</title><rect x="87.8080%" y="981" width="1.1673%" height="15" fill="rgb(234,184,4)"/><text x="88.0580%" y="991.50"></text></g><g><title>nom::combinator::map::_{{closure}} (26 samples, 1.69%)</title><rect x="87.8080%" y="1013" width="1.6861%" height="15" fill="rgb(218,194,23)"/><text x="88.0580%" y="1023.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (26 samples, 1.69%)</title><rect x="87.8080%" y="997" width="1.6861%" height="15" fill="rgb(235,66,41)"/><text x="88.0580%" y="1007.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (8 samples, 0.52%)</title><rect x="88.9754%" y="981" width="0.5188%" height="15" fill="rgb(245,217,1)"/><text x="89.2254%" y="991.50"></text></g><g><title>nom::multi::many1::_{{closure}} (8 samples, 0.52%)</title><rect x="88.9754%" y="965" width="0.5188%" height="15" fill="rgb(229,91,1)"/><text x="89.2254%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.52%)</title><rect x="88.9754%" y="949" width="0.5188%" height="15" fill="rgb(207,101,30)"/><text x="89.2254%" y="959.50"></text></g><g><title>cswap::parser::sexp (8 samples, 0.52%)</title><rect x="88.9754%" y="933" width="0.5188%" height="15" fill="rgb(223,82,49)"/><text x="89.2254%" y="943.50"></text></g><g><title>nom::branch::alt::_{{closure}} (8 samples, 0.52%)</title><rect x="88.9754%" y="917" width="0.5188%" height="15" fill="rgb(218,167,17)"/><text x="89.2254%" y="927.50"></text></g><g><title>&lt; (8 samples, 0.52%)</title><rect x="88.9754%" y="901" width="0.5188%" height="15" fill="rgb(208,103,14)"/><text x="89.2254%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (2 samples, 0.13%)</title><rect x="89.4942%" y="821" width="0.1297%" height="15" fill="rgb(238,20,8)"/><text x="89.7442%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.13%)</title><rect x="89.4942%" y="805" width="0.1297%" height="15" fill="rgb(218,80,54)"/><text x="89.7442%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (2 samples, 0.13%)</title><rect x="89.4942%" y="789" width="0.1297%" height="15" fill="rgb(240,144,17)"/><text x="89.7442%" y="799.50"></text></g><g><title>cswap::parser::bool_sexp::_{{closure}} (5 samples, 0.32%)</title><rect x="89.4942%" y="901" width="0.3243%" height="15" fill="rgb(245,27,50)"/><text x="89.7442%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.32%)</title><rect x="89.4942%" y="885" width="0.3243%" height="15" fill="rgb(251,51,7)"/><text x="89.7442%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.32%)</title><rect x="89.4942%" y="869" width="0.3243%" height="15" fill="rgb(245,217,29)"/><text x="89.7442%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (5 samples, 0.32%)</title><rect x="89.4942%" y="853" width="0.3243%" height="15" fill="rgb(221,176,29)"/><text x="89.7442%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.32%)</title><rect x="89.4942%" y="837" width="0.3243%" height="15" fill="rgb(212,180,24)"/><text x="89.7442%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="89.6239%" y="821" width="0.1946%" height="15" fill="rgb(254,24,2)"/><text x="89.8739%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="89.6239%" y="805" width="0.1946%" height="15" fill="rgb(230,100,2)"/><text x="89.8739%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="89.6239%" y="789" width="0.1946%" height="15" fill="rgb(219,142,25)"/><text x="89.8739%" y="799.50"></text></g><g><title>cswap::parser::bool_core_ops (2 samples, 0.13%)</title><rect x="89.8184%" y="853" width="0.1297%" height="15" fill="rgb(240,73,43)"/><text x="90.0684%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.32%)</title><rect x="89.8184%" y="869" width="0.3243%" height="15" fill="rgb(214,114,15)"/><text x="90.0684%" y="879.50"></text></g><g><title>cswap::parser::bool_int_ops (3 samples, 0.19%)</title><rect x="89.9481%" y="853" width="0.1946%" height="15" fill="rgb(207,130,4)"/><text x="90.1981%" y="863.50"></text></g><g><title>nom::multi::many1::_{{closure}} (39 samples, 2.53%)</title><rect x="87.8080%" y="1093" width="2.5292%" height="15" fill="rgb(221,25,40)"/><text x="88.0580%" y="1103.50">no..</text></g><g><title>core::ops::function::Fn::call (39 samples, 2.53%)</title><rect x="87.8080%" y="1077" width="2.5292%" height="15" fill="rgb(241,184,7)"/><text x="88.0580%" y="1087.50">co..</text></g><g><title>cswap::parser::sexp (39 samples, 2.53%)</title><rect x="87.8080%" y="1061" width="2.5292%" height="15" fill="rgb(235,159,4)"/><text x="88.0580%" y="1071.50">cs..</text></g><g><title>nom::branch::alt::_{{closure}} (39 samples, 2.53%)</title><rect x="87.8080%" y="1045" width="2.5292%" height="15" fill="rgb(214,87,48)"/><text x="88.0580%" y="1055.50">no..</text></g><g><title>&lt; (39 samples, 2.53%)</title><rect x="87.8080%" y="1029" width="2.5292%" height="15" fill="rgb(246,198,24)"/><text x="88.0580%" y="1039.50">&lt;</text></g><g><title>nom::sequence::delimited::_{{closure}} (13 samples, 0.84%)</title><rect x="89.4942%" y="1013" width="0.8431%" height="15" fill="rgb(209,66,40)"/><text x="89.7442%" y="1023.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.84%)</title><rect x="89.4942%" y="997" width="0.8431%" height="15" fill="rgb(233,147,39)"/><text x="89.7442%" y="1007.50"></text></g><g><title>cswap::parser::bool_sexp (13 samples, 0.84%)</title><rect x="89.4942%" y="981" width="0.8431%" height="15" fill="rgb(231,145,52)"/><text x="89.7442%" y="991.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (13 samples, 0.84%)</title><rect x="89.4942%" y="965" width="0.8431%" height="15" fill="rgb(206,20,26)"/><text x="89.7442%" y="975.50"></text></g><g><title>nom::branch::alt::_{{closure}} (13 samples, 0.84%)</title><rect x="89.4942%" y="949" width="0.8431%" height="15" fill="rgb(238,220,4)"/><text x="89.7442%" y="959.50"></text></g><g><title>&lt; (13 samples, 0.84%)</title><rect x="89.4942%" y="933" width="0.8431%" height="15" fill="rgb(252,195,42)"/><text x="89.7442%" y="943.50"></text></g><g><title>nom::combinator::map::_{{closure}} (13 samples, 0.84%)</title><rect x="89.4942%" y="917" width="0.8431%" height="15" fill="rgb(209,10,6)"/><text x="89.7442%" y="927.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (8 samples, 0.52%)</title><rect x="89.8184%" y="901" width="0.5188%" height="15" fill="rgb(229,3,52)"/><text x="90.0684%" y="911.50"></text></g><g><title>&lt; (8 samples, 0.52%)</title><rect x="89.8184%" y="885" width="0.5188%" height="15" fill="rgb(253,49,37)"/><text x="90.0684%" y="895.50"></text></g><g><title>nom::multi::many1::_{{closure}} (3 samples, 0.19%)</title><rect x="90.1427%" y="869" width="0.1946%" height="15" fill="rgb(240,103,49)"/><text x="90.3927%" y="879.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (3 samples, 0.19%)</title><rect x="90.3372%" y="821" width="0.1946%" height="15" fill="rgb(250,182,30)"/><text x="90.5872%" y="831.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (3 samples, 0.19%)</title><rect x="90.3372%" y="805" width="0.1946%" height="15" fill="rgb(248,8,30)"/><text x="90.5872%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.13%)</title><rect x="90.4021%" y="789" width="0.1297%" height="15" fill="rgb(237,120,30)"/><text x="90.6521%" y="799.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.58%)</title><rect x="90.3372%" y="949" width="0.5837%" height="15" fill="rgb(221,146,34)"/><text x="90.5872%" y="959.50"></text></g><g><title>cswap::parser::bool_int_ops (9 samples, 0.58%)</title><rect x="90.3372%" y="933" width="0.5837%" height="15" fill="rgb(242,55,13)"/><text x="90.5872%" y="943.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (9 samples, 0.58%)</title><rect x="90.3372%" y="917" width="0.5837%" height="15" fill="rgb(242,112,31)"/><text x="90.5872%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (9 samples, 0.58%)</title><rect x="90.3372%" y="901" width="0.5837%" height="15" fill="rgb(249,192,27)"/><text x="90.5872%" y="911.50"></text></g><g><title>&lt; (9 samples, 0.58%)</title><rect x="90.3372%" y="885" width="0.5837%" height="15" fill="rgb(208,204,44)"/><text x="90.5872%" y="895.50"></text></g><g><title>nom::branch::alt::_{{closure}} (9 samples, 0.58%)</title><rect x="90.3372%" y="869" width="0.5837%" height="15" fill="rgb(208,93,54)"/><text x="90.5872%" y="879.50"></text></g><g><title>&lt; (9 samples, 0.58%)</title><rect x="90.3372%" y="853" width="0.5837%" height="15" fill="rgb(242,1,31)"/><text x="90.5872%" y="863.50"></text></g><g><title>nom::combinator::map::_{{closure}} (9 samples, 0.58%)</title><rect x="90.3372%" y="837" width="0.5837%" height="15" fill="rgb(241,83,25)"/><text x="90.5872%" y="847.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (6 samples, 0.39%)</title><rect x="90.5318%" y="821" width="0.3891%" height="15" fill="rgb(205,169,50)"/><text x="90.7818%" y="831.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="90.7263%" y="805" width="0.1946%" height="15" fill="rgb(239,186,37)"/><text x="90.9763%" y="815.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="90.7912%" y="789" width="0.1297%" height="15" fill="rgb(205,221,10)"/><text x="91.0412%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.13%)</title><rect x="90.9209%" y="869" width="0.1297%" height="15" fill="rgb(218,196,15)"/><text x="91.1709%" y="879.50"></text></g><g><title>core::mem::take (2 samples, 0.13%)</title><rect x="90.9209%" y="853" width="0.1297%" height="15" fill="rgb(218,196,35)"/><text x="91.1709%" y="863.50"></text></g><g><title>core::mem::replace (2 samples, 0.13%)</title><rect x="90.9209%" y="837" width="0.1297%" height="15" fill="rgb(233,63,24)"/><text x="91.1709%" y="847.50"></text></g><g><title>core::mem::swap (2 samples, 0.13%)</title><rect x="90.9209%" y="821" width="0.1297%" height="15" fill="rgb(225,8,4)"/><text x="91.1709%" y="831.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.13%)</title><rect x="90.9209%" y="805" width="0.1297%" height="15" fill="rgb(234,105,35)"/><text x="91.1709%" y="815.50"></text></g><g><title>core::ptr::read (2 samples, 0.13%)</title><rect x="90.9209%" y="789" width="0.1297%" height="15" fill="rgb(236,21,32)"/><text x="91.1709%" y="799.50"></text></g><g><title>nom::combinator::map::_{{closure}} (6 samples, 0.39%)</title><rect x="91.0506%" y="869" width="0.3891%" height="15" fill="rgb(228,109,6)"/><text x="91.3006%" y="879.50"></text></g><g><title>cswap::parser::sexp::_{{closure}} (4 samples, 0.26%)</title><rect x="91.1803%" y="853" width="0.2594%" height="15" fill="rgb(229,215,31)"/><text x="91.4303%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (2 samples, 0.13%)</title><rect x="91.3100%" y="837" width="0.1297%" height="15" fill="rgb(221,52,54)"/><text x="91.5600%" y="847.50"></text></g><g><title>cswap::parser::bool_sexp (21 samples, 1.36%)</title><rect x="90.3372%" y="1061" width="1.3619%" height="15" fill="rgb(252,129,43)"/><text x="90.5872%" y="1071.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (21 samples, 1.36%)</title><rect x="90.3372%" y="1045" width="1.3619%" height="15" fill="rgb(248,183,27)"/><text x="90.5872%" y="1055.50"></text></g><g><title>nom::branch::alt::_{{closure}} (21 samples, 1.36%)</title><rect x="90.3372%" y="1029" width="1.3619%" height="15" fill="rgb(250,0,22)"/><text x="90.5872%" y="1039.50"></text></g><g><title>&lt; (21 samples, 1.36%)</title><rect x="90.3372%" y="1013" width="1.3619%" height="15" fill="rgb(213,166,10)"/><text x="90.5872%" y="1023.50"></text></g><g><title>nom::combinator::map::_{{closure}} (21 samples, 1.36%)</title><rect x="90.3372%" y="997" width="1.3619%" height="15" fill="rgb(207,163,36)"/><text x="90.5872%" y="1007.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (21 samples, 1.36%)</title><rect x="90.3372%" y="981" width="1.3619%" height="15" fill="rgb(208,122,22)"/><text x="90.5872%" y="991.50"></text></g><g><title>&lt; (21 samples, 1.36%)</title><rect x="90.3372%" y="965" width="1.3619%" height="15" fill="rgb(207,104,49)"/><text x="90.5872%" y="975.50"></text></g><g><title>nom::multi::many1::_{{closure}} (12 samples, 0.78%)</title><rect x="90.9209%" y="949" width="0.7782%" height="15" fill="rgb(248,211,50)"/><text x="91.1709%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.78%)</title><rect x="90.9209%" y="933" width="0.7782%" height="15" fill="rgb(217,13,45)"/><text x="91.1709%" y="943.50"></text></g><g><title>cswap::parser::sexp (12 samples, 0.78%)</title><rect x="90.9209%" y="917" width="0.7782%" height="15" fill="rgb(211,216,49)"/><text x="91.1709%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (12 samples, 0.78%)</title><rect x="90.9209%" y="901" width="0.7782%" height="15" fill="rgb(221,58,53)"/><text x="91.1709%" y="911.50"></text></g><g><title>&lt; (12 samples, 0.78%)</title><rect x="90.9209%" y="885" width="0.7782%" height="15" fill="rgb(220,112,41)"/><text x="91.1709%" y="895.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (4 samples, 0.26%)</title><rect x="91.4397%" y="869" width="0.2594%" height="15" fill="rgb(236,38,28)"/><text x="91.6897%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (27 samples, 1.75%)</title><rect x="90.3372%" y="1077" width="1.7510%" height="15" fill="rgb(227,195,22)"/><text x="90.5872%" y="1087.50"></text></g><g><title>cswap::parser::constant (6 samples, 0.39%)</title><rect x="91.6991%" y="1061" width="0.3891%" height="15" fill="rgb(214,55,33)"/><text x="91.9491%" y="1071.50"></text></g><g><title>nom::branch::alt::_{{closure}} (6 samples, 0.39%)</title><rect x="91.6991%" y="1045" width="0.3891%" height="15" fill="rgb(248,80,13)"/><text x="91.9491%" y="1055.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="91.6991%" y="1029" width="0.3891%" height="15" fill="rgb(238,52,6)"/><text x="91.9491%" y="1039.50"></text></g><g><title>nom::combinator::map::_{{closure}} (6 samples, 0.39%)</title><rect x="91.6991%" y="1013" width="0.3891%" height="15" fill="rgb(224,198,47)"/><text x="91.9491%" y="1023.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.39%)</title><rect x="91.6991%" y="997" width="0.3891%" height="15" fill="rgb(233,171,20)"/><text x="91.9491%" y="1007.50"></text></g><g><title>cswap::parser::decimal (6 samples, 0.39%)</title><rect x="91.6991%" y="981" width="0.3891%" height="15" fill="rgb(241,30,25)"/><text x="91.9491%" y="991.50"></text></g><g><title>nom::number::complete::recognize_float (6 samples, 0.39%)</title><rect x="91.6991%" y="965" width="0.3891%" height="15" fill="rgb(207,171,38)"/><text x="91.9491%" y="975.50"></text></g><g><title>nom::combinator::recognize::_{{closure}} (6 samples, 0.39%)</title><rect x="91.6991%" y="949" width="0.3891%" height="15" fill="rgb(234,70,1)"/><text x="91.9491%" y="959.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (6 samples, 0.39%)</title><rect x="91.6991%" y="933" width="0.3891%" height="15" fill="rgb(232,178,18)"/><text x="91.9491%" y="943.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="91.6991%" y="917" width="0.3891%" height="15" fill="rgb(241,78,40)"/><text x="91.9491%" y="927.50"></text></g><g><title>nom::branch::alt::_{{closure}} (6 samples, 0.39%)</title><rect x="91.6991%" y="901" width="0.3891%" height="15" fill="rgb(222,35,25)"/><text x="91.9491%" y="911.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="91.6991%" y="885" width="0.3891%" height="15" fill="rgb(207,92,16)"/><text x="91.9491%" y="895.50"></text></g><g><title>nom::combinator::map::_{{closure}} (6 samples, 0.39%)</title><rect x="91.6991%" y="869" width="0.3891%" height="15" fill="rgb(216,59,51)"/><text x="91.9491%" y="879.50"></text></g><g><title>nom::sequence::tuple::_{{closure}} (6 samples, 0.39%)</title><rect x="91.6991%" y="853" width="0.3891%" height="15" fill="rgb(213,80,28)"/><text x="91.9491%" y="863.50"></text></g><g><title>&lt; (6 samples, 0.39%)</title><rect x="91.6991%" y="837" width="0.3891%" height="15" fill="rgb(220,93,7)"/><text x="91.9491%" y="847.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (3 samples, 0.19%)</title><rect x="91.8936%" y="821" width="0.1946%" height="15" fill="rgb(225,24,44)"/><text x="92.1436%" y="831.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="91.9585%" y="805" width="0.1297%" height="15" fill="rgb(243,74,40)"/><text x="92.2085%" y="815.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="91.9585%" y="789" width="0.1297%" height="15" fill="rgb(228,39,7)"/><text x="92.2085%" y="799.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="91.9585%" y="773" width="0.1297%" height="15" fill="rgb(227,79,8)"/><text x="92.2085%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.13%)</title><rect x="91.9585%" y="757" width="0.1297%" height="15" fill="rgb(236,58,11)"/><text x="92.2085%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.13%)</title><rect x="92.0882%" y="885" width="0.1297%" height="15" fill="rgb(249,63,35)"/><text x="92.3382%" y="895.50"></text></g><g><title>core::mem::take (2 samples, 0.13%)</title><rect x="92.0882%" y="869" width="0.1297%" height="15" fill="rgb(252,114,16)"/><text x="92.3382%" y="879.50"></text></g><g><title>core::mem::replace (2 samples, 0.13%)</title><rect x="92.0882%" y="853" width="0.1297%" height="15" fill="rgb(254,151,24)"/><text x="92.3382%" y="863.50"></text></g><g><title>cswap::parser::bool_core_ops (5 samples, 0.32%)</title><rect x="92.0882%" y="981" width="0.3243%" height="15" fill="rgb(253,54,39)"/><text x="92.3382%" y="991.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (5 samples, 0.32%)</title><rect x="92.0882%" y="965" width="0.3243%" height="15" fill="rgb(243,25,45)"/><text x="92.3382%" y="975.50"></text></g><g><title>nom::branch::alt::_{{closure}} (5 samples, 0.32%)</title><rect x="92.0882%" y="949" width="0.3243%" height="15" fill="rgb(234,134,9)"/><text x="92.3382%" y="959.50"></text></g><g><title>&lt; (5 samples, 0.32%)</title><rect x="92.0882%" y="933" width="0.3243%" height="15" fill="rgb(227,166,31)"/><text x="92.3382%" y="943.50"></text></g><g><title>nom::branch::alt::_{{closure}} (5 samples, 0.32%)</title><rect x="92.0882%" y="917" width="0.3243%" height="15" fill="rgb(245,143,41)"/><text x="92.3382%" y="927.50"></text></g><g><title>&lt; (5 samples, 0.32%)</title><rect x="92.0882%" y="901" width="0.3243%" height="15" fill="rgb(238,181,32)"/><text x="92.3382%" y="911.50"></text></g><g><title>nom::combinator::map::_{{closure}} (3 samples, 0.19%)</title><rect x="92.2179%" y="885" width="0.1946%" height="15" fill="rgb(224,113,18)"/><text x="92.4679%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.45%)</title><rect x="92.0882%" y="997" width="0.4540%" height="15" fill="rgb(240,229,28)"/><text x="92.3382%" y="1007.50"></text></g><g><title>cswap::parser::bool_int_ops (2 samples, 0.13%)</title><rect x="92.4125%" y="981" width="0.1297%" height="15" fill="rgb(250,185,3)"/><text x="92.6625%" y="991.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.13%)</title><rect x="92.4125%" y="965" width="0.1297%" height="15" fill="rgb(212,59,25)"/><text x="92.6625%" y="975.50"></text></g><g><title>nom::branch::alt::_{{closure}} (2 samples, 0.13%)</title><rect x="92.4125%" y="949" width="0.1297%" height="15" fill="rgb(221,87,20)"/><text x="92.6625%" y="959.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="92.4125%" y="933" width="0.1297%" height="15" fill="rgb(213,74,28)"/><text x="92.6625%" y="943.50"></text></g><g><title>nom::branch::alt::_{{closure}} (2 samples, 0.13%)</title><rect x="92.4125%" y="917" width="0.1297%" height="15" fill="rgb(224,132,34)"/><text x="92.6625%" y="927.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="92.4125%" y="901" width="0.1297%" height="15" fill="rgb(222,101,24)"/><text x="92.6625%" y="911.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="92.4125%" y="885" width="0.1297%" height="15" fill="rgb(254,142,4)"/><text x="92.6625%" y="895.50"></text></g><g><title>nom::bytes::complete::tag::_{{closure}} (2 samples, 0.13%)</title><rect x="92.4125%" y="869" width="0.1297%" height="15" fill="rgb(230,229,49)"/><text x="92.6625%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (2 samples, 0.13%)</title><rect x="92.4125%" y="853" width="0.1297%" height="15" fill="rgb(238,70,47)"/><text x="92.6625%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2 samples, 0.13%)</title><rect x="92.4125%" y="837" width="0.1297%" height="15" fill="rgb(231,160,17)"/><text x="92.6625%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="92.4125%" y="821" width="0.1297%" height="15" fill="rgb(218,68,53)"/><text x="92.6625%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="92.4125%" y="805" width="0.1297%" height="15" fill="rgb(236,111,10)"/><text x="92.6625%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.13%)</title><rect x="92.4125%" y="789" width="0.1297%" height="15" fill="rgb(224,34,41)"/><text x="92.6625%" y="799.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="92.4125%" y="773" width="0.1297%" height="15" fill="rgb(241,118,19)"/><text x="92.6625%" y="783.50"></text></g><g><title>core::str::next_code_point (2 samples, 0.13%)</title><rect x="92.4125%" y="757" width="0.1297%" height="15" fill="rgb(238,129,25)"/><text x="92.6625%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.19%)</title><rect x="92.5422%" y="885" width="0.1946%" height="15" fill="rgb(238,22,31)"/><text x="92.7922%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.19%)</title><rect x="92.5422%" y="869" width="0.1946%" height="15" fill="rgb(222,174,48)"/><text x="92.7922%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.19%)</title><rect x="92.5422%" y="853" width="0.1946%" height="15" fill="rgb(206,152,40)"/><text x="92.7922%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.19%)</title><rect x="92.5422%" y="837" width="0.1946%" height="15" fill="rgb(218,99,54)"/><text x="92.7922%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.19%)</title><rect x="92.5422%" y="821" width="0.1946%" height="15" fill="rgb(220,174,26)"/><text x="92.7922%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (3 samples, 0.19%)</title><rect x="92.5422%" y="805" width="0.1946%" height="15" fill="rgb(245,116,9)"/><text x="92.7922%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.19%)</title><rect x="92.5422%" y="789" width="0.1946%" height="15" fill="rgb(209,72,35)"/><text x="92.7922%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.13%)</title><rect x="92.8664%" y="821" width="0.1297%" height="15" fill="rgb(226,126,21)"/><text x="93.1164%" y="831.50"></text></g><g><title>&lt;alloc::vec::IntoIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.13%)</title><rect x="92.8664%" y="805" width="0.1297%" height="15" fill="rgb(227,192,1)"/><text x="93.1164%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (2 samples, 0.13%)</title><rect x="92.8664%" y="789" width="0.1297%" height="15" fill="rgb(237,180,29)"/><text x="93.1164%" y="799.50"></text></g><g><title>cswap::parser::sexp::_{{closure}} (12 samples, 0.78%)</title><rect x="92.5422%" y="901" width="0.7782%" height="15" fill="rgb(230,197,35)"/><text x="92.7922%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.58%)</title><rect x="92.7367%" y="885" width="0.5837%" height="15" fill="rgb(246,193,31)"/><text x="92.9867%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="92.7367%" y="869" width="0.5837%" height="15" fill="rgb(241,36,4)"/><text x="92.9867%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (9 samples, 0.58%)</title><rect x="92.7367%" y="853" width="0.5837%" height="15" fill="rgb(241,130,17)"/><text x="92.9867%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.58%)</title><rect x="92.7367%" y="837" width="0.5837%" height="15" fill="rgb(206,137,32)"/><text x="92.9867%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.19%)</title><rect x="93.1258%" y="821" width="0.1946%" height="15" fill="rgb(237,228,51)"/><text x="93.3758%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.19%)</title><rect x="93.1258%" y="805" width="0.1946%" height="15" fill="rgb(243,6,42)"/><text x="93.3758%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.19%)</title><rect x="93.1258%" y="789" width="0.1946%" height="15" fill="rgb(251,74,28)"/><text x="93.3758%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.13%)</title><rect x="93.1907%" y="773" width="0.1297%" height="15" fill="rgb(218,20,49)"/><text x="93.4407%" y="783.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.13%)</title><rect x="93.7743%" y="821" width="0.1297%" height="15" fill="rgb(238,28,14)"/><text x="94.0243%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 0.32%)</title><rect x="93.6446%" y="837" width="0.3243%" height="15" fill="rgb(229,40,46)"/><text x="93.8946%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.13%)</title><rect x="94.0337%" y="821" width="0.1297%" height="15" fill="rgb(244,195,20)"/><text x="94.2837%" y="831.50"></text></g><g><title>nom::combinator::map::_{{closure}} (28 samples, 1.82%)</title><rect x="92.5422%" y="917" width="1.8158%" height="15" fill="rgb(253,56,35)"/><text x="92.7922%" y="927.50">n..</text></g><g><title>nom::sequence::delimited::_{{closure}} (16 samples, 1.04%)</title><rect x="93.3204%" y="901" width="1.0376%" height="15" fill="rgb(210,149,44)"/><text x="93.5704%" y="911.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.84%)</title><rect x="93.5149%" y="885" width="0.8431%" height="15" fill="rgb(240,135,12)"/><text x="93.7649%" y="895.50"></text></g><g><title>nom::character::complete::multispace0 (11 samples, 0.71%)</title><rect x="93.6446%" y="869" width="0.7134%" height="15" fill="rgb(251,24,50)"/><text x="93.8946%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (11 samples, 0.71%)</title><rect x="93.6446%" y="853" width="0.7134%" height="15" fill="rgb(243,200,47)"/><text x="93.8946%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (6 samples, 0.39%)</title><rect x="93.9689%" y="837" width="0.3891%" height="15" fill="rgb(224,166,26)"/><text x="94.2189%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (3 samples, 0.19%)</title><rect x="94.1634%" y="821" width="0.1946%" height="15" fill="rgb(233,0,47)"/><text x="94.4134%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="94.2283%" y="805" width="0.1297%" height="15" fill="rgb(253,80,5)"/><text x="94.4783%" y="815.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.32%)</title><rect x="94.4877%" y="837" width="0.3243%" height="15" fill="rgb(214,133,25)"/><text x="94.7377%" y="847.50"></text></g><g><title>core::str::pattern::Searcher::next_match (4 samples, 0.26%)</title><rect x="94.5525%" y="821" width="0.2594%" height="15" fill="rgb(209,27,14)"/><text x="94.8025%" y="831.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (4 samples, 0.26%)</title><rect x="94.5525%" y="805" width="0.2594%" height="15" fill="rgb(219,102,51)"/><text x="94.8025%" y="815.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="94.6822%" y="789" width="0.1297%" height="15" fill="rgb(237,18,16)"/><text x="94.9322%" y="799.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (6 samples, 0.39%)</title><rect x="94.4877%" y="853" width="0.3891%" height="15" fill="rgb(241,85,17)"/><text x="94.7377%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (3 samples, 0.19%)</title><rect x="94.8768%" y="837" width="0.1946%" height="15" fill="rgb(236,90,42)"/><text x="95.1268%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (3 samples, 0.19%)</title><rect x="94.8768%" y="821" width="0.1946%" height="15" fill="rgb(249,57,21)"/><text x="95.1268%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.13%)</title><rect x="94.9416%" y="805" width="0.1297%" height="15" fill="rgb(243,12,36)"/><text x="95.1916%" y="815.50"></text></g><g><title>nom::branch::alt::_{{closure}} (48 samples, 3.11%)</title><rect x="92.0882%" y="1077" width="3.1128%" height="15" fill="rgb(253,128,47)"/><text x="92.3382%" y="1087.50">nom..</text></g><g><title>&lt; (48 samples, 3.11%)</title><rect x="92.0882%" y="1061" width="3.1128%" height="15" fill="rgb(207,33,20)"/><text x="92.3382%" y="1071.50">&lt;</text></g><g><title>nom::combinator::map::_{{closure}} (48 samples, 3.11%)</title><rect x="92.0882%" y="1045" width="3.1128%" height="15" fill="rgb(233,215,35)"/><text x="92.3382%" y="1055.50">nom..</text></g><g><title>nom::sequence::tuple::_{{closure}} (48 samples, 3.11%)</title><rect x="92.0882%" y="1029" width="3.1128%" height="15" fill="rgb(249,188,52)"/><text x="92.3382%" y="1039.50">nom..</text></g><g><title>&lt; (48 samples, 3.11%)</title><rect x="92.0882%" y="1013" width="3.1128%" height="15" fill="rgb(225,12,32)"/><text x="92.3382%" y="1023.50">&lt;</text></g><g><title>nom::multi::many1::_{{closure}} (41 samples, 2.66%)</title><rect x="92.5422%" y="997" width="2.6589%" height="15" fill="rgb(247,98,14)"/><text x="92.7922%" y="1007.50">no..</text></g><g><title>core::ops::function::Fn::call (41 samples, 2.66%)</title><rect x="92.5422%" y="981" width="2.6589%" height="15" fill="rgb(247,219,48)"/><text x="92.7922%" y="991.50">co..</text></g><g><title>cswap::parser::sexp (41 samples, 2.66%)</title><rect x="92.5422%" y="965" width="2.6589%" height="15" fill="rgb(253,60,48)"/><text x="92.7922%" y="975.50">cs..</text></g><g><title>nom::branch::alt::_{{closure}} (41 samples, 2.66%)</title><rect x="92.5422%" y="949" width="2.6589%" height="15" fill="rgb(245,15,52)"/><text x="92.7922%" y="959.50">no..</text></g><g><title>&lt; (41 samples, 2.66%)</title><rect x="92.5422%" y="933" width="2.6589%" height="15" fill="rgb(220,133,28)"/><text x="92.7922%" y="943.50">&lt;</text></g><g><title>nom::sequence::delimited::_{{closure}} (13 samples, 0.84%)</title><rect x="94.3580%" y="917" width="0.8431%" height="15" fill="rgb(217,180,4)"/><text x="94.6080%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.84%)</title><rect x="94.3580%" y="901" width="0.8431%" height="15" fill="rgb(251,24,1)"/><text x="94.6080%" y="911.50"></text></g><g><title>nom::character::complete::multispace0 (12 samples, 0.78%)</title><rect x="94.4228%" y="885" width="0.7782%" height="15" fill="rgb(212,185,49)"/><text x="94.6728%" y="895.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position_complete (12 samples, 0.78%)</title><rect x="94.4228%" y="869" width="0.7782%" height="15" fill="rgb(215,175,22)"/><text x="94.6728%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (5 samples, 0.32%)</title><rect x="94.8768%" y="853" width="0.3243%" height="15" fill="rgb(250,205,14)"/><text x="95.1268%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.13%)</title><rect x="95.0713%" y="837" width="0.1297%" height="15" fill="rgb(225,211,22)"/><text x="95.3213%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.13%)</title><rect x="95.0713%" y="821" width="0.1297%" height="15" fill="rgb(251,179,42)"/><text x="95.3213%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.19%)</title><rect x="95.2010%" y="901" width="0.1946%" height="15" fill="rgb(208,216,51)"/><text x="95.4510%" y="911.50"></text></g><g><title>core::mem::take (3 samples, 0.19%)</title><rect x="95.2010%" y="885" width="0.1946%" height="15" fill="rgb(235,36,11)"/><text x="95.4510%" y="895.50"></text></g><g><title>core::mem::replace (3 samples, 0.19%)</title><rect x="95.2010%" y="869" width="0.1946%" height="15" fill="rgb(213,189,28)"/><text x="95.4510%" y="879.50"></text></g><g><title>core::mem::swap (3 samples, 0.19%)</title><rect x="95.2010%" y="853" width="0.1946%" height="15" fill="rgb(227,203,42)"/><text x="95.4510%" y="863.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.13%)</title><rect x="95.2659%" y="837" width="0.1297%" height="15" fill="rgb(244,72,36)"/><text x="95.5159%" y="847.50"></text></g><g><title>core::ptr::read (2 samples, 0.13%)</title><rect x="95.2659%" y="821" width="0.1297%" height="15" fill="rgb(213,53,17)"/><text x="95.5159%" y="831.50"></text></g><g><title>cswap::parser::constant (8 samples, 0.52%)</title><rect x="95.2010%" y="949" width="0.5188%" height="15" fill="rgb(207,167,3)"/><text x="95.4510%" y="959.50"></text></g><g><title>nom::branch::alt::_{{closure}} (8 samples, 0.52%)</title><rect x="95.2010%" y="933" width="0.5188%" height="15" fill="rgb(216,98,30)"/><text x="95.4510%" y="943.50"></text></g><g><title>&lt; (8 samples, 0.52%)</title><rect x="95.2010%" y="917" width="0.5188%" height="15" fill="rgb(236,123,15)"/><text x="95.4510%" y="927.50"></text></g><g><title>nom::combinator::map::_{{closure}} (5 samples, 0.32%)</title><rect x="95.3956%" y="901" width="0.3243%" height="15" fill="rgb(248,81,50)"/><text x="95.6456%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.13%)</title><rect x="95.5901%" y="885" width="0.1297%" height="15" fill="rgb(214,120,4)"/><text x="95.8401%" y="895.50"></text></g><g><title>nom::multi::many1::_{{closure}} (12 samples, 0.78%)</title><rect x="95.2010%" y="1077" width="0.7782%" height="15" fill="rgb(208,179,34)"/><text x="95.4510%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.78%)</title><rect x="95.2010%" y="1061" width="0.7782%" height="15" fill="rgb(227,140,7)"/><text x="95.4510%" y="1071.50"></text></g><g><title>cswap::parser::sexp (12 samples, 0.78%)</title><rect x="95.2010%" y="1045" width="0.7782%" height="15" fill="rgb(214,22,6)"/><text x="95.4510%" y="1055.50"></text></g><g><title>nom::branch::alt::_{{closure}} (12 samples, 0.78%)</title><rect x="95.2010%" y="1029" width="0.7782%" height="15" fill="rgb(207,137,27)"/><text x="95.4510%" y="1039.50"></text></g><g><title>&lt; (12 samples, 0.78%)</title><rect x="95.2010%" y="1013" width="0.7782%" height="15" fill="rgb(210,8,46)"/><text x="95.4510%" y="1023.50"></text></g><g><title>nom::combinator::map::_{{closure}} (12 samples, 0.78%)</title><rect x="95.2010%" y="997" width="0.7782%" height="15" fill="rgb(240,16,54)"/><text x="95.4510%" y="1007.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (12 samples, 0.78%)</title><rect x="95.2010%" y="981" width="0.7782%" height="15" fill="rgb(211,209,29)"/><text x="95.4510%" y="991.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.78%)</title><rect x="95.2010%" y="965" width="0.7782%" height="15" fill="rgb(226,228,24)"/><text x="95.4510%" y="975.50"></text></g><g><title>cswap::parser::let_sexp (4 samples, 0.26%)</title><rect x="95.7198%" y="949" width="0.2594%" height="15" fill="rgb(222,84,9)"/><text x="95.9698%" y="959.50"></text></g><g><title>nom::combinator::map::_{{closure}} (4 samples, 0.26%)</title><rect x="95.7198%" y="933" width="0.2594%" height="15" fill="rgb(234,203,30)"/><text x="95.9698%" y="943.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (4 samples, 0.26%)</title><rect x="95.7198%" y="917" width="0.2594%" height="15" fill="rgb(238,109,14)"/><text x="95.9698%" y="927.50"></text></g><g><title>nom::character::complete::char::_{{closure}} (2 samples, 0.13%)</title><rect x="95.8495%" y="901" width="0.1297%" height="15" fill="rgb(233,206,34)"/><text x="96.0995%" y="911.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.13%)</title><rect x="95.8495%" y="885" width="0.1297%" height="15" fill="rgb(220,167,47)"/><text x="96.0995%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.13%)</title><rect x="95.8495%" y="869" width="0.1297%" height="15" fill="rgb(238,105,10)"/><text x="96.0995%" y="879.50"></text></g><g><title>nom::multi::many1::_{{closure}} (8 samples, 0.52%)</title><rect x="95.9792%" y="1061" width="0.5188%" height="15" fill="rgb(213,227,17)"/><text x="96.2292%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.52%)</title><rect x="95.9792%" y="1045" width="0.5188%" height="15" fill="rgb(217,132,38)"/><text x="96.2292%" y="1055.50"></text></g><g><title>cswap::parser::sexp (8 samples, 0.52%)</title><rect x="95.9792%" y="1029" width="0.5188%" height="15" fill="rgb(242,146,4)"/><text x="96.2292%" y="1039.50"></text></g><g><title>nom::branch::alt::_{{closure}} (8 samples, 0.52%)</title><rect x="95.9792%" y="1013" width="0.5188%" height="15" fill="rgb(212,61,9)"/><text x="96.2292%" y="1023.50"></text></g><g><title>&lt; (8 samples, 0.52%)</title><rect x="95.9792%" y="997" width="0.5188%" height="15" fill="rgb(247,126,22)"/><text x="96.2292%" y="1007.50"></text></g><g><title>nom::combinator::map::_{{closure}} (8 samples, 0.52%)</title><rect x="95.9792%" y="981" width="0.5188%" height="15" fill="rgb(220,196,2)"/><text x="96.2292%" y="991.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (8 samples, 0.52%)</title><rect x="95.9792%" y="965" width="0.5188%" height="15" fill="rgb(208,46,4)"/><text x="96.2292%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.52%)</title><rect x="95.9792%" y="949" width="0.5188%" height="15" fill="rgb(252,104,46)"/><text x="96.2292%" y="959.50"></text></g><g><title>cswap::parser::constant (8 samples, 0.52%)</title><rect x="95.9792%" y="933" width="0.5188%" height="15" fill="rgb(237,152,48)"/><text x="96.2292%" y="943.50"></text></g><g><title>nom::branch::alt::_{{closure}} (8 samples, 0.52%)</title><rect x="95.9792%" y="917" width="0.5188%" height="15" fill="rgb(221,59,37)"/><text x="96.2292%" y="927.50"></text></g><g><title>&lt; (8 samples, 0.52%)</title><rect x="95.9792%" y="901" width="0.5188%" height="15" fill="rgb(209,202,51)"/><text x="96.2292%" y="911.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (2 samples, 0.13%)</title><rect x="96.4981%" y="1061" width="0.1297%" height="15" fill="rgb(228,81,30)"/><text x="96.7481%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.13%)</title><rect x="96.4981%" y="1045" width="0.1297%" height="15" fill="rgb(227,42,39)"/><text x="96.7481%" y="1055.50"></text></g><g><title>cswap::parser::naked_command (2 samples, 0.13%)</title><rect x="96.4981%" y="1029" width="0.1297%" height="15" fill="rgb(221,26,2)"/><text x="96.7481%" y="1039.50"></text></g><g><title>nom::branch::alt::_{{closure}} (2 samples, 0.13%)</title><rect x="96.4981%" y="1013" width="0.1297%" height="15" fill="rgb(254,61,31)"/><text x="96.7481%" y="1023.50"></text></g><g><title>&lt; (2 samples, 0.13%)</title><rect x="96.4981%" y="997" width="0.1297%" height="15" fill="rgb(222,173,38)"/><text x="96.7481%" y="1007.50"></text></g><g><title>nom::combinator::map::_{{closure}} (2 samples, 0.13%)</title><rect x="96.4981%" y="981" width="0.1297%" height="15" fill="rgb(218,50,12)"/><text x="96.7481%" y="991.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.13%)</title><rect x="96.4981%" y="965" width="0.1297%" height="15" fill="rgb(223,88,40)"/><text x="96.7481%" y="975.50"></text></g><g><title>nom::sequence::delimited::_{{closure}} (98 samples, 6.36%)</title><rect x="90.3372%" y="1093" width="6.3554%" height="15" fill="rgb(237,54,19)"/><text x="90.5872%" y="1103.50">nom::seq..</text></g><g><title>nom::sequence::delimited::_{{closure}} (11 samples, 0.71%)</title><rect x="95.9792%" y="1077" width="0.7134%" height="15" fill="rgb(251,129,25)"/><text x="96.2292%" y="1087.50"></text></g><g><title>[unknown] (1,493 samples, 96.82%)</title><rect x="0.0000%" y="1109" width="96.8223%" height="15" fill="rgb(238,97,19)"/><text x="0.2500%" y="1119.50">[unknown]</text></g><g><title>alloc::rc::RcBoxPtr::dec_weak (2 samples, 0.13%)</title><rect x="96.8872%" y="421" width="0.1297%" height="15" fill="rgb(240,169,18)"/><text x="97.1372%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.13%)</title><rect x="96.8872%" y="405" width="0.1297%" height="15" fill="rgb(230,187,49)"/><text x="97.1372%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.19%)</title><rect x="97.4060%" y="197" width="0.1946%" height="15" fill="rgb(209,44,26)"/><text x="97.6560%" y="207.50"></text></g><g><title>alloc::rc::RcBoxPtr::dec_weak (2 samples, 0.13%)</title><rect x="97.6654%" y="133" width="0.1297%" height="15" fill="rgb(244,0,6)"/><text x="97.9154%" y="143.50"></text></g><g><title>alloc::rc::RcBoxPtr::weak (2 samples, 0.13%)</title><rect x="97.6654%" y="117" width="0.1297%" height="15" fill="rgb(248,18,21)"/><text x="97.9154%" y="127.50"></text></g><g><title>alloc::rc::RcBoxPtr::dec_strong (3 samples, 0.19%)</title><rect x="97.8599%" y="37" width="0.1946%" height="15" fill="rgb(245,180,19)"/><text x="98.1099%" y="47.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.23%)</title><rect x="96.8872%" y="485" width="1.2322%" height="15" fill="rgb(252,118,36)"/><text x="97.1372%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 1.23%)</title><rect x="96.8872%" y="469" width="1.2322%" height="15" fill="rgb(210,224,19)"/><text x="97.1372%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (19 samples, 1.23%)</title><rect x="96.8872%" y="453" width="1.2322%" height="15" fill="rgb(218,30,24)"/><text x="97.1372%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.23%)</title><rect x="96.8872%" y="437" width="1.2322%" height="15" fill="rgb(219,75,50)"/><text x="97.1372%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 1.04%)</title><rect x="97.0817%" y="421" width="1.0376%" height="15" fill="rgb(234,72,50)"/><text x="97.3317%" y="431.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 1.04%)</title><rect x="97.0817%" y="405" width="1.0376%" height="15" fill="rgb(219,100,48)"/><text x="97.3317%" y="415.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 1.04%)</title><rect x="97.0817%" y="389" width="1.0376%" height="15" fill="rgb(253,5,41)"/><text x="97.3317%" y="399.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 1.04%)</title><rect x="97.0817%" y="373" width="1.0376%" height="15" fill="rgb(247,181,11)"/><text x="97.3317%" y="383.50"></text></g><g><title>core::ptr::drop_in_place (16 samples, 1.04%)</title><rect x="97.0817%" y="357" width="1.0376%" height="15" fill="rgb(222,223,25)"/><text x="97.3317%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.97%)</title><rect x="97.1466%" y="341" width="0.9728%" height="15" fill="rgb(214,198,28)"/><text x="97.3966%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.97%)</title><rect x="97.1466%" y="325" width="0.9728%" height="15" fill="rgb(230,46,43)"/><text x="97.3966%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (15 samples, 0.97%)</title><rect x="97.1466%" y="309" width="0.9728%" height="15" fill="rgb(233,65,53)"/><text x="97.3966%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.97%)</title><rect x="97.1466%" y="293" width="0.9728%" height="15" fill="rgb(221,121,27)"/><text x="97.3966%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.78%)</title><rect x="97.3411%" y="277" width="0.7782%" height="15" fill="rgb(247,70,47)"/><text x="97.5911%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.78%)</title><rect x="97.3411%" y="261" width="0.7782%" height="15" fill="rgb(228,85,35)"/><text x="97.5911%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.78%)</title><rect x="97.3411%" y="245" width="0.7782%" height="15" fill="rgb(209,50,18)"/><text x="97.5911%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.78%)</title><rect x="97.3411%" y="229" width="0.7782%" height="15" fill="rgb(250,19,35)"/><text x="97.5911%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (12 samples, 0.78%)</title><rect x="97.3411%" y="213" width="0.7782%" height="15" fill="rgb(253,107,29)"/><text x="97.5911%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.52%)</title><rect x="97.6005%" y="197" width="0.5188%" height="15" fill="rgb(252,179,29)"/><text x="97.8505%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.52%)</title><rect x="97.6005%" y="181" width="0.5188%" height="15" fill="rgb(238,194,6)"/><text x="97.8505%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.52%)</title><rect x="97.6005%" y="165" width="0.5188%" height="15" fill="rgb(238,164,29)"/><text x="97.8505%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.52%)</title><rect x="97.6005%" y="149" width="0.5188%" height="15" fill="rgb(224,25,9)"/><text x="97.8505%" y="159.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.32%)</title><rect x="97.7951%" y="133" width="0.3243%" height="15" fill="rgb(244,153,23)"/><text x="98.0451%" y="143.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.32%)</title><rect x="97.7951%" y="117" width="0.3243%" height="15" fill="rgb(212,203,14)"/><text x="98.0451%" y="127.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.32%)</title><rect x="97.7951%" y="101" width="0.3243%" height="15" fill="rgb(220,164,20)"/><text x="98.0451%" y="111.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.32%)</title><rect x="97.7951%" y="85" width="0.3243%" height="15" fill="rgb(222,203,48)"/><text x="98.0451%" y="95.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.32%)</title><rect x="97.7951%" y="69" width="0.3243%" height="15" fill="rgb(215,159,22)"/><text x="98.0451%" y="79.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.32%)</title><rect x="97.7951%" y="53" width="0.3243%" height="15" fill="rgb(216,183,47)"/><text x="98.0451%" y="63.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="901" width="1.4267%" height="15" fill="rgb(229,195,25)"/><text x="97.1372%" y="911.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="885" width="1.4267%" height="15" fill="rgb(224,132,51)"/><text x="97.1372%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.43%)</title><rect x="96.8872%" y="869" width="1.4267%" height="15" fill="rgb(240,63,7)"/><text x="97.1372%" y="879.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="853" width="1.4267%" height="15" fill="rgb(249,182,41)"/><text x="97.1372%" y="863.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="837" width="1.4267%" height="15" fill="rgb(243,47,26)"/><text x="97.1372%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.43%)</title><rect x="96.8872%" y="821" width="1.4267%" height="15" fill="rgb(233,48,2)"/><text x="97.1372%" y="831.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="805" width="1.4267%" height="15" fill="rgb(244,165,34)"/><text x="97.1372%" y="815.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="789" width="1.4267%" height="15" fill="rgb(207,89,7)"/><text x="97.1372%" y="799.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="773" width="1.4267%" height="15" fill="rgb(244,117,36)"/><text x="97.1372%" y="783.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="757" width="1.4267%" height="15" fill="rgb(226,144,34)"/><text x="97.1372%" y="767.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="741" width="1.4267%" height="15" fill="rgb(213,23,19)"/><text x="97.1372%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.43%)</title><rect x="96.8872%" y="725" width="1.4267%" height="15" fill="rgb(217,75,12)"/><text x="97.1372%" y="735.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="709" width="1.4267%" height="15" fill="rgb(224,159,17)"/><text x="97.1372%" y="719.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="693" width="1.4267%" height="15" fill="rgb(217,118,1)"/><text x="97.1372%" y="703.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="677" width="1.4267%" height="15" fill="rgb(232,180,48)"/><text x="97.1372%" y="687.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="661" width="1.4267%" height="15" fill="rgb(230,27,33)"/><text x="97.1372%" y="671.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="645" width="1.4267%" height="15" fill="rgb(205,31,21)"/><text x="97.1372%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.43%)</title><rect x="96.8872%" y="629" width="1.4267%" height="15" fill="rgb(253,59,4)"/><text x="97.1372%" y="639.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="613" width="1.4267%" height="15" fill="rgb(224,201,9)"/><text x="97.1372%" y="623.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="597" width="1.4267%" height="15" fill="rgb(229,206,30)"/><text x="97.1372%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.43%)</title><rect x="96.8872%" y="581" width="1.4267%" height="15" fill="rgb(212,67,47)"/><text x="97.1372%" y="591.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="565" width="1.4267%" height="15" fill="rgb(211,96,50)"/><text x="97.1372%" y="575.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="549" width="1.4267%" height="15" fill="rgb(252,114,18)"/><text x="97.1372%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="533" width="1.4267%" height="15" fill="rgb(223,58,37)"/><text x="97.1372%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="517" width="1.4267%" height="15" fill="rgb(237,70,4)"/><text x="97.1372%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 1.43%)</title><rect x="96.8872%" y="501" width="1.4267%" height="15" fill="rgb(244,85,46)"/><text x="97.1372%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.19%)</title><rect x="98.1193%" y="485" width="0.1946%" height="15" fill="rgb(223,39,52)"/><text x="98.3693%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.19%)</title><rect x="98.1193%" y="469" width="0.1946%" height="15" fill="rgb(218,200,14)"/><text x="98.3693%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::dealloc_buffer (3 samples, 0.19%)</title><rect x="98.1193%" y="453" width="0.1946%" height="15" fill="rgb(208,171,16)"/><text x="98.3693%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::dealloc (3 samples, 0.19%)</title><rect x="98.1193%" y="437" width="0.1946%" height="15" fill="rgb(234,200,18)"/><text x="98.3693%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.19%)</title><rect x="98.1193%" y="421" width="0.1946%" height="15" fill="rgb(228,45,11)"/><text x="98.3693%" y="431.50"></text></g><g><title>_int_free (3 samples, 0.19%)</title><rect x="98.1193%" y="405" width="0.1946%" height="15" fill="rgb(237,182,11)"/><text x="98.3693%" y="415.50"></text></g><g><title>malloc_consolidate (3 samples, 0.19%)</title><rect x="98.1193%" y="389" width="0.1946%" height="15" fill="rgb(241,175,49)"/><text x="98.3693%" y="399.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.13%)</title><rect x="98.1842%" y="373" width="0.1297%" height="15" fill="rgb(247,38,35)"/><text x="98.4342%" y="383.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (2 samples, 0.13%)</title><rect x="98.5084%" y="741" width="0.1297%" height="15" fill="rgb(228,39,49)"/><text x="98.7584%" y="751.50"></text></g><g><title>nom::bytes::complete::take_while1::_{{closure}}::_{{closure}} (2 samples, 0.13%)</title><rect x="98.5084%" y="725" width="0.1297%" height="15" fill="rgb(226,101,26)"/><text x="98.7584%" y="735.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.13%)</title><rect x="98.7678%" y="725" width="0.1297%" height="15" fill="rgb(206,141,19)"/><text x="99.0178%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.13%)</title><rect x="98.7678%" y="709" width="0.1297%" height="15" fill="rgb(211,200,13)"/><text x="99.0178%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.19%)</title><rect x="98.8975%" y="709" width="0.1946%" height="15" fill="rgb(241,121,6)"/><text x="99.1475%" y="719.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next::_{{closure}} (2 samples, 0.13%)</title><rect x="98.9624%" y="693" width="0.1297%" height="15" fill="rgb(234,221,29)"/><text x="99.2124%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.26%)</title><rect x="99.1569%" y="693" width="0.2594%" height="15" fill="rgb(229,136,5)"/><text x="99.4069%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.13%)</title><rect x="99.2866%" y="677" width="0.1297%" height="15" fill="rgb(238,36,11)"/><text x="99.5366%" y="687.50"></text></g><g><title>cswap::parser::rmv_comments (20 samples, 1.30%)</title><rect x="98.3139%" y="901" width="1.2970%" height="15" fill="rgb(251,55,41)"/><text x="98.5639%" y="911.50"></text></g><g><title>nom::multi::many1::_{{closure}} (20 samples, 1.30%)</title><rect x="98.3139%" y="885" width="1.2970%" height="15" fill="rgb(242,34,40)"/><text x="98.5639%" y="895.50"></text></g><g><title>nom::branch::alt::_{{closure}} (20 samples, 1.30%)</title><rect x="98.3139%" y="869" width="1.2970%" height="15" fill="rgb(215,42,17)"/><text x="98.5639%" y="879.50"></text></g><g><title>&lt; (20 samples, 1.30%)</title><rect x="98.3139%" y="853" width="1.2970%" height="15" fill="rgb(207,44,46)"/><text x="98.5639%" y="863.50"></text></g><g><title>nom::bytes::complete::take_while1::_{{closure}} (20 samples, 1.30%)</title><rect x="98.3139%" y="837" width="1.2970%" height="15" fill="rgb(211,206,28)"/><text x="98.5639%" y="847.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (20 samples, 1.30%)</title><rect x="98.3139%" y="821" width="1.2970%" height="15" fill="rgb(237,167,16)"/><text x="98.5639%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (20 samples, 1.30%)</title><rect x="98.3139%" y="805" width="1.2970%" height="15" fill="rgb(233,66,6)"/><text x="98.5639%" y="815.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (20 samples, 1.30%)</title><rect x="98.3139%" y="789" width="1.2970%" height="15" fill="rgb(246,123,29)"/><text x="98.5639%" y="799.50"></text></g><g><title>core::str::pattern::Searcher::next_match (20 samples, 1.30%)</title><rect x="98.3139%" y="773" width="1.2970%" height="15" fill="rgb(209,62,40)"/><text x="98.5639%" y="783.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (20 samples, 1.30%)</title><rect x="98.3139%" y="757" width="1.2970%" height="15" fill="rgb(218,4,25)"/><text x="98.5639%" y="767.50"></text></g><g><title>&lt;core::str::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.97%)</title><rect x="98.6381%" y="741" width="0.9728%" height="15" fill="rgb(253,91,49)"/><text x="98.8881%" y="751.50"></text></g><g><title>&lt;core::str::Chars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.71%)</title><rect x="98.8975%" y="725" width="0.7134%" height="15" fill="rgb(228,155,29)"/><text x="99.1475%" y="735.50"></text></g><g><title>core::str::next_code_point (8 samples, 0.52%)</title><rect x="99.0921%" y="709" width="0.5188%" height="15" fill="rgb(243,57,37)"/><text x="99.3421%" y="719.50"></text></g><g><title>&lt;core::slice::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.19%)</title><rect x="99.4163%" y="693" width="0.1946%" height="15" fill="rgb(244,167,17)"/><text x="99.6663%" y="703.50"></text></g><g><title>__libc_start_main (44 samples, 2.85%)</title><rect x="96.8872%" y="1093" width="2.8534%" height="15" fill="rgb(207,181,38)"/><text x="97.1372%" y="1103.50">__..</text></g><g><title>main (44 samples, 2.85%)</title><rect x="96.8872%" y="1077" width="2.8534%" height="15" fill="rgb(211,8,23)"/><text x="97.1372%" y="1087.50">ma..</text></g><g><title>std::rt::lang_start (44 samples, 2.85%)</title><rect x="96.8872%" y="1061" width="2.8534%" height="15" fill="rgb(235,11,44)"/><text x="97.1372%" y="1071.50">st..</text></g><g><title>std::rt::lang_start_internal (44 samples, 2.85%)</title><rect x="96.8872%" y="1045" width="2.8534%" height="15" fill="rgb(248,18,52)"/><text x="97.1372%" y="1055.50">st..</text></g><g><title>std::panic::catch_unwind (44 samples, 2.85%)</title><rect x="96.8872%" y="1029" width="2.8534%" height="15" fill="rgb(208,4,7)"/><text x="97.1372%" y="1039.50">st..</text></g><g><title>std::panicking::try (44 samples, 2.85%)</title><rect x="96.8872%" y="1013" width="2.8534%" height="15" fill="rgb(240,17,39)"/><text x="97.1372%" y="1023.50">st..</text></g><g><title>__rust_maybe_catch_panic (44 samples, 2.85%)</title><rect x="96.8872%" y="997" width="2.8534%" height="15" fill="rgb(207,170,3)"/><text x="97.1372%" y="1007.50">__..</text></g><g><title>std::panicking::try::do_call (44 samples, 2.85%)</title><rect x="96.8872%" y="981" width="2.8534%" height="15" fill="rgb(236,100,52)"/><text x="97.1372%" y="991.50">st..</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (44 samples, 2.85%)</title><rect x="96.8872%" y="965" width="2.8534%" height="15" fill="rgb(246,78,51)"/><text x="97.1372%" y="975.50">st..</text></g><g><title>std::rt::lang_start::_{{closure}} (44 samples, 2.85%)</title><rect x="96.8872%" y="949" width="2.8534%" height="15" fill="rgb(211,17,15)"/><text x="97.1372%" y="959.50">st..</text></g><g><title>main::main (44 samples, 2.85%)</title><rect x="96.8872%" y="933" width="2.8534%" height="15" fill="rgb(209,59,46)"/><text x="97.1372%" y="943.50">ma..</text></g><g><title>cswap::perf_exec (44 samples, 2.85%)</title><rect x="96.8872%" y="917" width="2.8534%" height="15" fill="rgb(210,92,25)"/><text x="97.1372%" y="927.50">cs..</text></g><g><title>all (1,542 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(238,174,52)"/><text x="0.2500%" y="1151.50"></text></g><g><title>main (1,542 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(230,73,7)"/><text x="0.2500%" y="1135.50">main</text></g><g><title>_start (49 samples, 3.18%)</title><rect x="96.8223%" y="1109" width="3.1777%" height="15" fill="rgb(243,124,40)"/><text x="97.0723%" y="1119.50">_st..</text></g><g><title>_dl_start (4 samples, 0.26%)</title><rect x="99.7406%" y="1093" width="0.2594%" height="15" fill="rgb(244,170,11)"/><text x="99.9906%" y="1103.50"></text></g></svg></svg>