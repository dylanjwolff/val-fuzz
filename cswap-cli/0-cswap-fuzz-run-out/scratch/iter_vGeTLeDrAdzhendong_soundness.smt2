(declare-const BAV1 Bool)
(declare-const BAV2 Bool)
(declare-const BAV3 Bool)
(declare-const BAV4 Bool)
(declare-const BAV5 Bool)
(declare-const BAV6 Bool)
(declare-const ai Real)
(declare-const BAV7 Bool)
(declare-const BAV8 Bool)
(declare-const BAV9 Bool)
(declare-const BAV10 Bool)
(declare-const BAV11 Bool)
(declare-const GEN1 Real)
(declare-const GEN2 Int)
(declare-const GEN3 Real)
(declare-const GEN4 Int)
(declare-const GEN5 Real)
(declare-const GEN6 Real)
(declare-const GEN7 Real)
(declare-fun a () Real)
(declare-fun b () Real)
(declare-fun c () Real)
(declare-fun d () Real)
(declare-fun h () Real)
(declare-fun e () Real)
(declare-fun f () Real)
(declare-fun o () Real)
(declare-fun g () Real)
(declare-fun p () Real)
(declare-fun i () Real)
(declare-fun j () Real)
(declare-fun k () Real)
(declare-fun l () Real)
(declare-fun m () Real)
(declare-fun n () Real)
(declare-fun ac () Real)
(declare-fun ad () Real)
(declare-fun ae () Real)
(declare-fun af () Real)
(assert (= BAV1 (forall ((ah Real)) (= g GEN1))))
(assert (= BAV2 (forall ((ah Real)) (< (- (/ (* e e) GEN2)) i))))
(assert (= BAV3 (forall ((ah Real)) (<= e (/ h k)))))
(assert (= BAV4 (forall ((ah Real)) (<= ah l))))
(assert (= BAV5 (forall ((ah Real)) (= n (* f ah) o))))
(assert (= BAV6 (forall ((ah Real)) (>= (- ah o) k))))
(assert (= BAV7 (<= (+ (/ (+ GEN3 ac) (- a e)) (- d p)) GEN4 ae GEN5)))
(assert (= BAV8 (<= GEN6 k)))
(assert (= BAV9 (= b GEN7)))
(assert (= BAV10 (= a (* m f af))))
(assert (= BAV11 (distinct c (/ j ad))))
(assert (= BAV7 true))
(check-sat)
(get-model)
