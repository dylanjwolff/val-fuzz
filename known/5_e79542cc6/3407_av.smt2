(set-option :proof true)
(declare-const v0 Bool)
(declare-const v1 Bool)
(declare-const v2 Bool)
(declare-const v3 Bool)
(declare-const v4 Bool)
(declare-const v5 Bool)
(declare-const v6 Bool)
(declare-const v7 Bool)
(declare-const v8 Bool)
(declare-const i0 Int)
(declare-const i1 Int)
(declare-const v9 Bool)
(declare-const i4 Int)
(assert (and v7 v7 v9))
(push 1)
(declare-const i5 Int)
(assert (exists ((q0 Bool)) (and v7 v7 v9)))
(declare-const v10 Bool)
(assert v2)
(declare-const v11 Bool)
(assert (not (exists ((q1 Int) (q2 Bool) (q3 Int)) (=> (= q1 i1) (xor v11 (and v7 v7 v9) (=> v6 v3))))))
(assert (and v9 (and v9 v0 v4 v9 v1 v5) v9 v9 v6))
(declare-const v12 Bool)
(assert (not (exists ((q4 Int)) (not (distinct i0 q4)))))
(pop 1)
(assert (not (and v9 v0 v4 v9 v1 v5)))
(declare-const i6 Int)
(assert v6)
(push 1)
(assert (distinct v1 v5 v9 v8 v7))
(pop 1)
(declare-const i7 Int)
(assert (exists ((q5 Int)) (not (>= (- 39 (- i1) (abs i0) (- i1) 39) q5))))
(assert (xor v9 v2 (and v7 v7 v9)))
(assert (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2))
(declare-const v13 Bool)
(declare-const i8 Int)
(declare-const v14 Bool)
(declare-const v15 Bool)
(assert (not (forall ((q6 Bool) (q7 Int) (q8 Bool)) (=> (= 39 (mod i0 (abs i0))) (distinct q8 (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) q6 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) q6 q6 q6 v9 q6)))))
(assert (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2)))
(assert (not (exists ((q9 Int) (q10 Bool) (q11 Int) (q12 Bool)) (not (= (- (mod i0 (abs i0))) (div (abs i0) (- i6)))))))
(declare-const i9 Int)
(assert (distinct v1 v1 v2 (xor v9 v2 (and v7 v7 v9)) v7 (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) v4 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) v13))
(assert (not (exists ((q13 Int) (q14 Bool)) (not (distinct 39 i4)))))
(declare-const v16 Bool)
(assert (exists ((q15 Bool) (q16 Int) (q17 Bool)) (not (< (div i8 i0) q16))))
(push 1)
(declare-const v17 Bool)
(assert (not (forall ((q18 Bool) (q19 Int) (q20 Bool)) v3)))
(assert (not (distinct (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (and v9 v0 v4 v9 v1 v5) v1 (distinct v1 v1 v2 (xor v9 v2 (and v7 v7 v9)) v7 (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) v4 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) v13) v7 v5 v9 (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) (not (and v9 v0 v4 v9 v1 v5)) (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2))) (xor v9 v2 (and v7 v7 v9)) v6 (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) v14 (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) v14)))
(declare-const v18 Bool)
(assert (not v8))
(assert (not (and v9 v0 v4 v9 v1 v5)))
(assert v2)
(assert (= v14 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) v13))
(pop 1)
(declare-const v19 Bool)
(declare-const i10 Int)
(assert (exists ((q21 Int) (q22 Int)) (not (<= q21 i4))))
(assert (not (forall ((q23 Int)) (and v9 v0 v4 v9 v1 v5))))
(assert v5)
(push 1)
(assert (exists ((q24 Int) (q25 Int) (q26 Bool)) (=> (= v4 (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2)) (not (distinct i1 (mod (- i1) i1))) q26 q26 (<= (mod (- i1) i1) (abs (- i1)))) (>= q25 (abs i0)))))
(assert (=> (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2)) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2)))
(assert (exists ((q27 Int) (q28 Bool) (q29 Bool)) v6))
(push 1)
(assert (and (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2)) v5 v13 v7 v2 (<= (mod (- i1) i1) (abs (- i1))) (=> (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2)) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2))))
(assert (exists ((q30 Int) (q31 Int) (q32 Bool)) (=> (>= q30 (abs (- i1))) (and v1 q32 (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (> (mod (- i1) i1) (mod i0 (abs i0))) q32 q32 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v4 (and v4 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) v5 (xor (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v16 (not (and v9 v0 v4 v9 v1 v5)) (not (distinct i1 (mod (- i1) i1))))) q32))))
(assert (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))))
(declare-const v20 Bool)
(assert (not (exists ((q33 Bool) (q34 Int) (q35 Bool) (q36 Bool)) (=> (xor q36 q35 (and v9 v0 v4 v9 v1 v5) q35 q35 v20 q36) (< (mod (- i1) i1) 607)))))
(assert (not (> (mod (- i1) i1) (mod i0 (abs i0)))))
(pop 1)
(assert (< i8 (- 39 (- i1) (abs i0) (- i1) 39)))
(assert (and v4 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) v5 (xor (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v16 (not (and v9 v0 v4 v9 v1 v5)) (not (distinct i1 (mod (- i1) i1))))))
(assert (not (exists ((q37 Bool) (q38 Int)) (=> (> (div i8 i0) q38) (and v19 q37 q37 v5 (and v4 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) v5 (xor (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v16 (not (and v9 v0 v4 v9 v1 v5)) (not (distinct i1 (mod (- i1) i1))))) (=> (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2)) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2)))))))
(assert (exists ((q39 Int) (q40 Int) (q41 Bool)) v16))
(assert (= (=> (and v7 v7 v9) v5) (xor (xor v9 v2 (and v7 v7 v9)) v1) (< (- i8 597 597 i0) i4) v9 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2)) (xor (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v16 (not (and v9 v0 v4 v9 v1 v5)) (not (distinct i1 (mod (- i1) i1)))) v13 (=> (and v7 v7 v9) v5) (and v9 v0 v4 v9 v1 v5)))
(declare-const v21 Bool)
(assert (distinct (and v7 v7 v9) (and v7 v7 v9) (and v9 v0 v4 v9 v1 v5) v7 (<= (mod (- i1) i1) (abs (- i1))) (and v4 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) v5 (xor (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v16 (not (and v9 v0 v4 v9 v1 v5)) (not (distinct i1 (mod (- i1) i1)))))))
(declare-const v22 Bool)
(assert (=> (xor (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v16 (not (and v9 v0 v4 v9 v1 v5)) (not (distinct i1 (mod (- i1) i1)))) (distinct (- i4) 9)))
(pop 1)
(assert (xor v13 (not (and v9 v0 v4 v9 v1 v5)) (distinct (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (and v9 v0 v4 v9 v1 v5) v1 (distinct v1 v1 v2 (xor v9 v2 (and v7 v7 v9)) v7 (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) v4 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) v13) v7 v5 v9 (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) (not (and v9 v0 v4 v9 v1 v5)) (xor (and v9 v0 v4 v9 v1 v5) (distinct i1 (mod (- i1) i1)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (and v7 v7 v9) v2 v13 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2))) (xor v9 v2 (and v7 v7 v9)) v6 (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) (< i8 (- 39 (- i1) (abs i0) (- i1) 39)) v14 (< (mod i0 (abs i0)) (- (mod i0 (abs i0)))) v14) (xor (xor v9 v2 (and v7 v7 v9)) v1) v14))
(declare-const v23 Bool)
(assert v8)
(assert (and v9 v0 v16 (= (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) (and v7 v7 v9) (or v9 v1 (and v7 v7 v9) (distinct i1 (mod (- i1) i1)) v6 v3 v7 v2) v8 (distinct i1 (mod (- i1) i1)) (not (and v9 v0 v4 v9 v1 v5)) (and v9 v0 v4 v9 v1 v5) v6 v2 (distinct i1 (mod (- i1) i1)) v2) (and v9 v0 v4 v9 v1 v5) v6 (not (and v9 v0 v4 v9 v1 v5))))
(check-sat-using qe2)
