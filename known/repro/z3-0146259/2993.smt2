(set-option :print-success false)
(set-logic QF_S)
; benchmark generated from python API
(set-info :status unknown)
(declare-fun var9 () String)
(declare-fun var6 () String)
(declare-fun var8 () String)
(declare-fun var1 () String)
(declare-fun var5 () String)
(declare-fun var4 () String)
(declare-fun var0 () String)

(push 2)
  (assert
   (= 84 (str.len (str.++ var6 var9))))
  (assert
   (let ((?x11561 (str.len var8)))
   (let (($x9599 (= 100 ?x11561)))
   (let (($x12200 (not $x9599)))
   (not $x12200)))))
(check-sat)
(pop 0)

(push 2)
  (assert
   (let ((?x10081 (str.len var1)))
   (let (($x7641 (= 1 ?x10081)))
   (let (($x3628 (not $x7641)))
   (let ((?x11748 (str.len var5)))
   (let (($x18429 (= 3 ?x11748)))
   (let (($x4456 (not $x18429)))
   (let (($x12272 (not $x4456)))
   (let (($x2896 (and $x12272 $x4456)))
   (let (($x15496 (and $x3628 $x2896)))
   (let (($x12670 (and $x15496 $x3628)))
   (not $x12670))))))))))))
  (assert
   (let ((?x10081 (str.len var1)))
   (let (($x7641 (= 1 ?x10081)))
   (let (($x3628 (not $x7641)))
   (let ((?x11748 (str.len var5)))
   (let (($x18429 (= 3 ?x11748)))
   (let (($x4456 (not $x18429)))
   (let (($x12272 (not $x4456)))
   (let (($x2896 (and $x12272 $x4456)))
   (let (($x17245 (and $x18429 $x7641)))
   (let (($x17405 (and $x17245 $x2896)))
   (let (($x17195 (and $x17405 $x3628)))
   (let (($x11478 (not $x17195)))
   (let (($x14954 (not $x11478)))
   (not $x14954)))))))))))))))
(check-sat)
(pop 0)

(push 2)
  (assert
   (let ((?x11748 (str.len var5)))
   (let (($x18429 (= 3 ?x11748)))
   (let (($x4456 (not $x18429)))
   (let ((?x10081 (str.len var1)))
   (let (($x7641 (= 1 ?x10081)))
   (let (($x3628 (not $x7641)))
   (let (($x1810 (and $x3628 $x4456)))
   (not $x1810)))))))))
  (assert
   (let ((?x2827 (str.len var9)))
   (let (($x10252 (= 7 ?x2827)))
   (let ((?x11748 (str.len var5)))
   (let (($x18429 (= 3 ?x11748)))
   (let (($x4456 (not $x18429)))
   (let ((?x10081 (str.len var1)))
   (let (($x7641 (= 1 ?x10081)))
   (let (($x3628 (not $x7641)))
   (let (($x1810 (and $x3628 $x4456)))
   (let (($x16352 (and $x1810 $x10252)))
   (not $x16352))))))))))))
(check-sat)
(pop 1)

(push 2)
  (assert
   (let ((?x11748 (str.len var5)))
   (let (($x18429 (= 3 ?x11748)))
   (let (($x4456 (not $x18429)))
   (let (($x12272 (not $x4456)))
   (let (($x19284 (not $x12272)))
   (not $x19284)))))))
  (assert
   (let ((?x11748 (str.len var5)))
   (let (($x18429 (= 3 ?x11748)))
   (let (($x4456 (not $x18429)))
   (not $x4456)))))
(check-sat)
(pop 1)

(push 2)
  (assert
   (let ((?x11748 (str.len var5)))
   (let (($x18429 (= 3 ?x11748)))
   (let (($x4456 (not $x18429)))
   (not $x4456)))))
  (assert
   (let ((?x19371 (str.len var6)))
   (let (($x9844 (= 77 ?x19371)))
   (let (($x18200 (not $x9844)))
   (not $x18200)))))
(check-sat)

